<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>安迪陈技术日志，架构、感悟、系统分析、团队管理</title>
  <icon>https://www.gravatar.com/avatar/14b855db257b722c0b32293669bbc4ac</icon>
  <subtitle>自强不息，厚德载物</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.lovesofttech.com/"/>
  <updated>2020-10-10T00:23:23.712Z</updated>
  <id>https://www.lovesofttech.com/</id>
  
  <author>
    <name>安迪陈</name>
    <email>andy@lovesofttech.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vscode 提交 react 代码遇到 pre-commit hook failed 的处理</title>
    <link href="https://www.lovesofttech.com/frontend/preCommitHook.html"/>
    <id>https://www.lovesofttech.com/frontend/preCommitHook.html</id>
    <published>2020-09-28T16:00:00.000Z</published>
    <updated>2020-10-10T00:23:23.712Z</updated>
    
    <content type="html"><![CDATA[<p>Vscode 足够强大，你值得拥有~~</p><a id="more"></a><h1 id="开发工具以及操作"><a href="#开发工具以及操作" class="headerlink" title="开发工具以及操作"></a>开发工具以及操作</h1><ul><li>IDE：<a href="https://code.visualstudio.com" rel="external nofollow noopener noreferrer" target="_blank">Vscode</a></li><li>操作<ul><li>点击右侧代码管理工具，可以看到有修改的文件列表</li><li>在上面输入本次提交的备注，按 Ctrl + Enter 提交<br><img src="/img/frontend/pre-commit-hook-1.png" alt></li></ul></li></ul><h1 id="查看-git-日志"><a href="#查看-git-日志" class="headerlink" title="查看 git 日志"></a>查看 git 日志</h1><ul><li><p>按 Ctrl + Enter 提交之后，如果未通过 pre-commit hook 查检，会弹出一个提示窗口，点击【打开 git 日志】即可查看。</p><blockquote><p>该提示窗口项默认选中【打开 git 日志】，敲回车键等同于鼠标点击。</p></blockquote><p>  <img src="/img/frontend/pre-commit-hook-2.png" alt></p></li><li>也可以按 Ctrl + Shift + `，默认进入终端，点击终端左边的【输出】，然后点击右边的下拉列表，选【Git】，即可查看完整的 git 日志。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frontend/pre-commit-hook-3.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="提交时没通过-pre-commit-hook-检查"><a href="#提交时没通过-pre-commit-hook-检查" class="headerlink" title="提交时没通过 pre-commit hook 检查"></a>提交时没通过 pre-commit hook 检查</h1><p>本次示例的 git 日志，文末有完整版。在日志中，找到有用的信息，本示例有用的是以下两行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">src/components/RightContent/index.less</span><br><span class="line"> 73:3  ×  Expected &quot;color&quot; to come before &quot;background-color&quot; in group &quot;Typography&quot;      order/properties-order</span><br></pre></td></tr></table></figure></p><ul><li>第一行锁定检查未通过的文件：<code>src/components/RightContent/index.less</code>。</li><li>第二行前面的 <code>73:3</code> 提示未通过检测的代码在第 73 行，从第 3 列开始，紧接着后面的提示是检查未通过的具体原因：<code>Expected &quot;color&quot; to come before &quot;background-color&quot; in group &quot;Typography&quot;</code></li></ul><p>本次针对的代码是 css 样式，根据提示，很容易修正。</p><h1 id="修正后再次提交遇到的“坑”"><a href="#修正后再次提交遇到的“坑”" class="headerlink" title="修正后再次提交遇到的“坑”"></a>修正后再次提交遇到的“坑”</h1><p>在一次提交操作之后，会出现两种情况：</p><ol><li>正常情况下，所有修改的文件通过代码检查，顺利提交，【暂存的更改】和【更改】列表都是空的，这个时候只需要执行推送（git push）操作，便会将修改提交到 git server。</li><li>如果有文件没有通过检查，没有通过检查的文件会跟已经通过的文件一起进入【暂存的更改】列表，如果修改了在【暂存的更改】列表中的文件，则该文件会同时在【更改】列表出现。<br> <img src="/img/frontend/pre-commit-hook-5.png" alt></li></ol><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>按照日志提示修正代码之后，再次 Ctrl + Enter（这是执行 git commit），依然会提示跟之前一样的错误信息。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="检查未通过的文件先不提交"><a href="#检查未通过的文件先不提交" class="headerlink" title="检查未通过的文件先不提交"></a>检查未通过的文件先不提交</h3><ul><li>将检测未通过的文件从【暂存的更改】列表中【取消暂存更改】，然后再提交即可。这样操作，【更改】列表中的文件不会提交。<br>  <img src="/img/frontend/pre-commit-hook-4.png" alt></li></ul><p>该操作，只是临时性的，检查没有通过的文件始终是要提交的。下面讲如何一次性提交所有修改的文件。</p><h3 id="应用最新的修改"><a href="#应用最新的修改" class="headerlink" title="应用最新的修改"></a>应用最新的修改</h3><ul><li>修改代码之后，再次提交前，需要将本次修改的、在【更改】列表中的文件添加到【暂存的更改】列表。<ul><li>操作方法：点击文件右侧的加号，作用是暂存更改，这样操作，会将本次修改与之前提交但没有通过检查的修改合并。<strong>重点：否则无论怎么修改，提交时都不会通过检查，因为同一个文件同时出现在【暂存的更改】和【更改】列表的情况下，实际检查的是【暂存的更改】列表中的文件。</strong><br><img src="/img/frontend/pre-commit-hook-6.png" alt></li></ul></li><li>如上操作，即【暂存更改】之后，如果还是有代码未通过检查，需要重复上面的步骤。即：修改代码 -&gt; 【暂存更改】-&gt; 提交，直到检查通过。</li></ul><h2 id="体验"><a href="#体验" class="headerlink" title="体验"></a>体验</h2><p>使用 Vscode 提交代码的这个过程跟使用 <a href="https://www.jetbrains.com/webstorm/" rel="external nofollow noopener noreferrer" target="_blank">WebStorm</a> 的体验不一样。使用 WebStorm 感觉更自然一些，即：提交的代码未通过检查，根据提示修正之后再提交，有问题再改，没问题就正常提交。</p><p>所以，从 WebStorm 转到 Vscode 的童鞋可能一开始很不适应这种变化。</p><h1 id="跳过代码检查"><a href="#跳过代码检查" class="headerlink" title="跳过代码检查"></a>跳过代码检查</h1><p>当然，如果时间比较紧迫，没有时间一一修复代码规范问题，也可以通过以下方式暂时跳过代码检查直接提交。三选一即可。</p><ol><li><p>用脚本提交，commit 脚本添加：<code>--no-verify</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit --no-verify -m &apos;你的提交备注&apos;</span><br></pre></td></tr></table></figure><blockquote><p>这种提交方式，git 日志其实有提示：<code>pre-commit hook failed (add --no-verify to bypass)</code></p></blockquote></li><li>关闭 <code>pre-commit hook</code><ul><li>进入项目根目录，打开子目录 <code>.git\hooks</code>，可以看到有很多 hook，将该目录下的 <code>pre-commit</code> 改名或者直接删除即可达到目的。</li></ul></li><li>将不希望代码检查的文件或文件夹加到忽略列表<ul><li>在 <code>.eslintignore</code> 文件中添加对应的路径，如：<code>/mock/user.ts</code>，也可以添加整个目录，如：<code>/config</code>，甚至是整个源代码目录：<code>/src</code>。</li></ul></li></ol><p>俗话说，出来混迟早要还的，不按照规范写代码，留下的技术债，可能会导致非常严重的后果，很多失败的项目都是由于没有关注和正视技术债。技术债就象从银行贷款，可以不通过评估就直接贷款一样，有好处也有坏处，需要认真对待。</p><h1 id="附：一次未通过检查的完整日志"><a href="#附：一次未通过检查的完整日志" class="headerlink" title="附：一次未通过检查的完整日志"></a>附：一次未通过检查的完整日志</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&gt; git add -A -- .</span><br><span class="line">warning: LF will be replaced by CRLF in src/components/RightContent/index.less.</span><br><span class="line">The file will have its original line endings in your working directory</span><br><span class="line">&gt; git commit --quiet --allow-empty-message --file -</span><br><span class="line">&gt; git ls-files --stage -- C:\workspace\wkb\wkb-oms-ui\src\components\RightContent\index.less</span><br><span class="line">&gt; git cat-file -s 98092c98d269faadade5c09fe6c9036e72c4d8c1</span><br><span class="line">&gt; git show --textconv :src/components/RightContent/index.less</span><br><span class="line">&gt; git ls-files --stage -- C:\workspace\wkb\wkb-oms-ui\src\components\RightContent\index.less</span><br><span class="line">&gt; git cat-file -s 98092c98d269faadade5c09fe6c9036e72c4d8c1</span><br><span class="line">&gt; git show --textconv :src/components/RightContent/index.less</span><br><span class="line"> &gt; running pre-commit hook: npm run precommit</span><br><span class="line"></span><br><span class="line">&gt; ant-design-pro@5.0.0-alpha.0 precommit C:\workspace\wkb\wkb-oms-ui</span><br><span class="line">&gt; lint-staged</span><br><span class="line"></span><br><span class="line">[STARTED] Preparing...</span><br><span class="line">[SUCCESS] Preparing...</span><br><span class="line">[STARTED] Running tasks...</span><br><span class="line">[STARTED] Running tasks for **/*.less</span><br><span class="line">[STARTED] Running tasks for **/*.&#123;js,jsx,ts,tsx&#125;</span><br><span class="line">[STARTED] Running tasks for **/*.&#123;js,jsx,tsx,ts,less,md,json&#125;</span><br><span class="line">[SKIPPED] No staged files match **/*.&#123;js,jsx,ts,tsx&#125;</span><br><span class="line">[STARTED] stylelint --syntax less</span><br><span class="line">[STARTED] prettier --write</span><br><span class="line">[SUCCESS] prettier --write</span><br><span class="line">[SUCCESS] Running tasks for **/*.&#123;js,jsx,tsx,ts,less,md,json&#125;</span><br><span class="line">[FAILED] stylelint --syntax less [FAILED]</span><br><span class="line">[FAILED] stylelint --syntax less [FAILED]</span><br><span class="line">[SUCCESS] Running tasks...</span><br><span class="line">[STARTED] Applying modifications...</span><br><span class="line">[SKIPPED] Skipped because of errors from tasks.</span><br><span class="line">[STARTED] Reverting to original state because of errors...</span><br><span class="line">[SUCCESS] Reverting to original state because of errors...</span><br><span class="line">[STARTED] Cleaning up...</span><br><span class="line">[SUCCESS] Cleaning up...</span><br><span class="line"></span><br><span class="line">× stylelint --syntax less:</span><br><span class="line"></span><br><span class="line">src/components/RightContent/index.less</span><br><span class="line"> 73:3  ×  Expected &quot;color&quot; to come before &quot;background-color&quot; in group &quot;Typography&quot;      order/properties-order</span><br><span class="line"></span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! ant-design-pro@5.0.0-alpha.0 precommit: `lint-staged`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR! </span><br><span class="line">npm ERR! Failed at the ant-design-pro@5.0.0-alpha.0 precommit script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     C:\Users\andy\AppData\Roaming\npm-cache\_logs\2020-09-29T13_37_15_414Z-debug.log</span><br><span class="line"></span><br><span class="line">pre-commit hook failed (add --no-verify to bypass)</span><br><span class="line">&gt; git config --get-all user.name</span><br><span class="line">&gt; git config --get-all user.email</span><br><span class="line">&gt; git ls-files --stage -- C:\workspace\wkb\wkb-oms-ui\src\components\RightContent\index.less</span><br><span class="line">&gt; git cat-file -s 98092c98d269faadade5c09fe6c9036e72c4d8c1</span><br><span class="line">&gt; git show --textconv :src/components/RightContent/index.less</span><br><span class="line">&gt; git status -z -u</span><br><span class="line">&gt; git symbolic-ref --short HEAD</span><br><span class="line">&gt; git rev-parse master</span><br><span class="line">&gt; git rev-parse --symbolic-full-name master@&#123;u&#125;</span><br><span class="line">&gt; git rev-list --left-right master...refs/remotes/origin/master</span><br><span class="line">&gt; git for-each-ref --sort -committerdate --format %(refname) %(objectname)</span><br><span class="line">&gt; git remote --verbose</span><br><span class="line">&gt; git config --get commit.template</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vscode 足够强大，你值得拥有~~&lt;/p&gt;
    
    </summary>
    
      <category term="pre-commit" scheme="https://www.lovesofttech.com/categories/pre-commit/"/>
    
      <category term="react" scheme="https://www.lovesofttech.com/categories/pre-commit/react/"/>
    
    
      <category term="react" scheme="https://www.lovesofttech.com/tags/react/"/>
    
      <category term="pre-commit" scheme="https://www.lovesofttech.com/tags/pre-commit/"/>
    
  </entry>
  
  <entry>
    <title>windows 10 版本查看以及升级到最新版本</title>
    <link href="https://www.lovesofttech.com/windows/win10Update.html"/>
    <id>https://www.lovesofttech.com/windows/win10Update.html</id>
    <published>2020-08-29T16:00:00.000Z</published>
    <updated>2020-09-01T06:56:35.148Z</updated>
    
    <content type="html"><![CDATA[<p>windows 10 如何升级到最新版号？</p><a id="more"></a><h1 id="查看-windows-10-版本号的两种方式"><a href="#查看-windows-10-版本号的两种方式" class="headerlink" title="查看 windows 10 版本号的两种方式"></a>查看 windows 10 版本号的两种方式</h1><ol><li><p>使用快捷键【win键+R键】调出运行窗口，在运行窗口输入框中输入命令：“winver”，点击【确定】，或直接回车，就会弹出 windows 版本信息。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-01.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>点击桌面左下角【开始】，在开始菜单中点击【设置图标】，在弹出的窗口中点击【系统】，在弹出的新窗口中将左边栏往下拉找到【关于】并点击，在右边栏中就可以看到win10版本号。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-03.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-05.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h1 id="windows10-更新到最新版本"><a href="#windows10-更新到最新版本" class="headerlink" title="windows10 更新到最新版本"></a>windows10 更新到最新版本</h1><p>因为 <a href="https://github.com/microsoft/terminal" rel="external nofollow noopener noreferrer" target="_blank">microsoft/terminal</a>，要求 windows 10 最低版本为 1903，所以，为了用上 microsoft 官方出品的 terminal，需要将 windows 10 升级到最新版本。</p><blockquote><p>Note: Windows Terminal requires Windows 10 1903 (build 18362) or later</p></blockquote><ul><li>更新程序下载页面：<a href="https://www.microsoft.com/en-us/software-download/windows10" rel="external nofollow noopener noreferrer" target="_blank">更新程序下载页面</a></li><li>下载更新程序<a href="https://download.microsoft.com/download/8/3/c/83c39dca-2d27-4c24-b98b-0a4d6d921c80/Windows10Upgrade9252.exe" rel="external nofollow noopener noreferrer" target="_blank">Windows10Upgrade9252.exe</a>（5.96M）并运行。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win10-update.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><p>下载完成之后会提示重启，重启之后会自动更新，更新过程大概持续了半个多小时，期间会有多次自动重启。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-06.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>再次查看版本信息，会发现已经升级到最新版本号了。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/windows/win-version-07.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h1 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h1><p><a href="https://support.microsoft.com/zh-cn/help/12373/windows-update-faq" rel="external nofollow noopener noreferrer" target="_blank">Windows 更新：常见问题解答</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;windows 10 如何升级到最新版号？&lt;/p&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="experience" scheme="https://www.lovesofttech.com/categories/windows/experience/"/>
    
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
      <category term="experience" scheme="https://www.lovesofttech.com/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>windows10 多桌面</title>
    <link href="https://www.lovesofttech.com/windows/windows10MultipleDesktop.html"/>
    <id>https://www.lovesofttech.com/windows/windows10MultipleDesktop.html</id>
    <published>2020-08-28T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.122Z</updated>
    
    <content type="html"><![CDATA[<p>在 windows 下的类似 Linux 下多桌面体验</p><a id="more"></a><h1 id="添加新桌面"><a href="#添加新桌面" class="headerlink" title="添加新桌面"></a>添加新桌面</h1><ul><li><code>Win+Tab</code> 组合键打开多桌面界面，点击左上角：“+新建桌面”，会自动命名为“桌面1”、”桌面2”。</li><li>通过快捷键 <code>WIN+Ctrl+D</code> 可以直接创建新的虚拟桌面。</li></ul><h1 id="关闭桌面"><a href="#关闭桌面" class="headerlink" title="关闭桌面"></a>关闭桌面</h1><ul><li>通过在需要删除的虚拟界面中执行 <code>WIN+Ctrl+F4</code> 可以直接关闭该桌面。</li><li>关闭多窗口中的一个，可以在 <code>WIN+Tab</code> 打开的界面点击关闭按钮。</li></ul><h1 id="多个桌面切换"><a href="#多个桌面切换" class="headerlink" title="多个桌面切换"></a>多个桌面切换</h1><ul><li>进入到 <code>win+tab</code> 界面，鼠标点击某一个桌面。</li><li><code>Win+Ctrl+左键</code>：切换到相邻左侧的虚拟桌面。</li><li><code>Win+Ctrl+右键</code>：切换到相邻右侧的虚拟桌面。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 windows 下的类似 Linux 下多桌面体验&lt;/p&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="experience" scheme="https://www.lovesofttech.com/categories/windows/experience/"/>
    
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
      <category term="experience" scheme="https://www.lovesofttech.com/tags/experience/"/>
    
  </entry>
  
  <entry>
    <title>MBR、GPT/GUID 分区格式</title>
    <link href="https://www.lovesofttech.com/windows/diskFormat.html"/>
    <id>https://www.lovesofttech.com/windows/diskFormat.html</id>
    <published>2020-08-26T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.103Z</updated>
    
    <content type="html"><![CDATA[<p>了解一下MBR、GPT/GUID 分区格式</p><a id="more"></a><h1 id="用-U-盘安装-windows-操作系统"><a href="#用-U-盘安装-windows-操作系统" class="headerlink" title="用 U 盘安装 windows 操作系统"></a>用 U 盘安装 windows 操作系统</h1><ol><li>如果是基于 UEFI 启动的系统，建议选择 GUID/GPT 分区，支持大容量硬盘。</li><li>如果是基于 Legacy 启动的系统，只能选 MBR 分区，不支持 2.2TB 以上的硬盘。</li></ol><h1 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h1><ul><li>在MBR分区表中最多4个主分区（或者3个主分区＋1个扩展分区），也就是说扩展分区只能有一个。</li><li>GUID(GPT)最多支持128个主分区，没有扩展分区和逻辑盘。</li><li>MBR 只支持2.2T容量以下的硬盘分区。</li><li>GUID(GPT)支持2.2T容量以上的硬盘分区。</li><li>BIOS启动方式对比：<ul><li>硬盘分区格式为MBR格式，启动模式为 Legacy，即传统引导方式。</li><li>硬盘分区格式为GUID（GPT）格式，启动模式为UEFI。</li></ul></li><li>MBR支持win7版本系统以下的32位和64位。win7 以上的 64 位系统也是支持的，如 win10 64 位。</li><li>GUID(GPT)支持win7版本以上的64位系统（不支持32位系统）,比如win8、win10系统。</li></ul><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>MBR分区表：Master Boot Record，即硬盘主引导记录分区表，只支持容量在 2.2TB 以下的硬盘，超过 2.2TB 的硬盘只能管理 2.2TB，最多只支持4个主分区或三个主分区和一个扩展分区，扩展分区下可以有多个逻辑分区。</li><li>GPT分区表：GPT，全局唯一标识分区表(GUID Partition Table)，与 MBR 最大 4 个分区表项的限制相比，GPT 对分区数量没有限制，但 Windows 最大仅支持 128 个 GPT 分区，GPT 可管理硬盘大小达到了 18EB。只有基于 UEFI 平台的主板才支持 GPT 分区引导启动。</li></ol><h1 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h1><ul><li>在 ThinkPad T400（2009年的老商务本）安装 win10，硬盘分区格式为 GUID，用老毛桃安装 win10，重启后，一直停留在黑屏 + 左上角一个白色光标，光标一直在闪。</li><li>怀疑是老笔记本与操作系统不兼容（有一点不敢相信自己的判断），于是 用 GHOST 恢复成之前的 win7 64 位操作系统镜像，恢复之后重启，也是停留在黑屏 + 左上角一直闪的白色光标。</li></ul><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>在了解了 GUID 与 MBR 分区的区别以及对 Bios 启动的支持之后，将硬盘重新分区为 MBR 格式，再次重装 win10，重启之后就正常了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解一下MBR、GPT/GUID 分区格式&lt;/p&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="MBR" scheme="https://www.lovesofttech.com/categories/windows/MBR/"/>
    
      <category term="GPT" scheme="https://www.lovesofttech.com/categories/windows/MBR/GPT/"/>
    
      <category term="GUID" scheme="https://www.lovesofttech.com/categories/windows/MBR/GPT/GUID/"/>
    
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
      <category term="MBR" scheme="https://www.lovesofttech.com/tags/MBR/"/>
    
      <category term="GPT" scheme="https://www.lovesofttech.com/tags/GPT/"/>
    
      <category term="GUID" scheme="https://www.lovesofttech.com/tags/GUID/"/>
    
  </entry>
  
  <entry>
    <title>记一次用 ghost 还原镜像，调换两台电脑系统盘的操作</title>
    <link href="https://www.lovesofttech.com/windows/ghost.html"/>
    <id>https://www.lovesofttech.com/windows/ghost.html</id>
    <published>2020-08-02T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.105Z</updated>
    
    <content type="html"><![CDATA[<p>看似简单的操作，实际上出现了几点意外，导致本来认为一个下午可以搞定的事情，实际上花了一天时间，各种折腾，还熬夜了，囧~~。<br><a id="more"></a></p><blockquote><p>花在等待 Ghost 制作镜像和还原镜像上的时间比较多，一次操作在半小时到一个小时的样子。</p></blockquote><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><h2 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h2><ul><li>有两台电脑，操作系统均安装到一块固态硬盘上，每台电脑的固态硬盘为唯一启动盘。</li><li>两块固态硬盘都只有一个分区，一块是容量为 250G，记为硬盘 A，对应电脑 A，另外一块容量 500G，记为硬盘 B，对应电脑 B。</li><li>由于两台电脑定位不同，安装的软件不一样，C 盘空间占用情况差距很大。</li></ul><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>调换两块固态硬盘，即将硬盘 A 挂到电脑 B 上，将硬盘 B 挂到电脑 A 上，安装好的操作系统要互换。</p><h2 id="需要达到的效果"><a href="#需要达到的效果" class="headerlink" title="需要达到的效果"></a>需要达到的效果</h2><p>硬盘调换之后，之前安装好的操作系统和相关软件完全不变，从使用角度看，唯一变的只有 C 盘空间。</p><h1 id="我的操作"><a href="#我的操作" class="headerlink" title="我的操作"></a>我的操作</h1><ol><li>将两块硬盘都整个 Ghost 到一个镜像文件（Disk -&gt; To Image）。<ul><li>期间，硬盘 A 在镜像的时候，有提示错误，大概是说有系统文件，需要运行 checkdisk 之类的，我没有继续，启动老毛桃增强版操作系统，将 c 盘的虚拟内存页面文件 pagefile.sys 和睡眠文件 Hiberfil.sys 删除之后再试，不再有错误提示。这两个文件占用了 20G 左右的空间。</li></ul></li><li>将硬盘 A 的镜像文件恢复到硬盘 B （Disk -&gt; From Image）。</li><li><p>将硬盘 B 挂到电脑 A（原来硬盘 A 所在的电脑）上，启动，提示无法找到可启动的操作系统。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">你的电脑/设备需要修复</span><br><span class="line">无法加载应用程序或操作系统，原因是所需文件丢失或包含错误。</span><br><span class="line">文件：\windows\system32\winload.efi</span><br><span class="line">错误代码：0xc000000e</span><br><span class="line"></span><br><span class="line">你需要使用恢复工具...</span><br></pre></td></tr></table></figure><p> <img src="/img/windows/windows-ghost-01.png" alt></p></li><li>我用老毛桃工具，启动恢复，提示恢复成功，但是问题依旧。<ul><li>在这一步，我记得当时是挂了两块可启动硬盘，当时还可以选择恢复哪块硬盘上的操作系统。</li><li>另外，记得有一次硬盘 B 在恢复了硬盘 A 的镜像文件后，为了测试，直接在电脑 B 上启动，能正常启动了的，当时还挂着老毛桃工具 U 盘，但是拿到电脑 A 上，启动时还是报上面的错误。</li></ul></li><li>用 Ghost 软件打开硬盘 B 的镜像文件，把相应目录下的 winload.efi 文件，复制到硬盘 B 的 c 盘同样的目录下覆盖原来的文件，启动，还是一样的错误提示。</li><li>于是我用分区到分区的镜像方式（Partition -&gt; To Partition），将硬盘 A 的 C 盘（唯一的活动分区）镜像到硬盘 B 的 C 盘（也是唯一的活动分区）。还是同样的启动错误。</li><li>将硬盘 B 的整个硬盘镜像恢复回硬盘 B，在原来的电脑（即电脑 B）上启动，竟然还是报这个错误，用启动恢复工具恢复之后，恢复如初。看来整个硬盘恢复后还需要启动恢复操作，于是我想到，在不破坏原来启动分区（为隐藏分区）的情况下操作，于是删除硬盘镜像，制作了硬盘 B 的 C 盘的镜像备用。<ul><li>这次使用恢复工具时，只挂了一块带有操作系统的硬盘，之前恢复后启动报错，不知道是不是因为挂了两块有操作系统的硬盘有关。</li></ul></li></ol><h1 id="成功启动的操作"><a href="#成功启动的操作" class="headerlink" title="成功启动的操作"></a>成功启动的操作</h1><ol><li>我把硬盘 B 的那块固态硬盘所有分区删除，重新分一个区，选 GPT/GUID 格式，其余全部默认。</li><li>通过分区到分区的方式镜像硬盘 A 的 C 盘到硬盘 B 的 C 盘，恢复启动，然后挂到电脑 A 上，提示需要修复，按提示操作之后，修复并重启之后，出现了久违的登录界面，这期间大概要花三分钟的样子吧。</li><li>电脑 B 的恢复，没有删除分区，只是将硬盘 B 的 C 盘镜像恢复到硬盘 A 的 C 盘，然后启动，一次成功，没有经过启动修复过程。</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol><li>电脑 A 在恢复镜像后第一次启动有一个修复过程，可能跟我的操作有关，在镜像之前，我把虚拟内存文件由 C 盘设置到了 D 盘（C 盘残留了 pagefile.sys 和 Hiberfil.sys），设置之后没有重启而是直接关机了，也就是说，这个设置其实还没有生效，需要在下一次启动之后生效。</li><li>启动修复时，挂载了两块有操作系统的硬盘，就是本文提到的硬盘 A 和硬盘 B ，导致修复后启动不成功，不过，这一点不是很确定。</li><li>整个硬盘镜像，恢复时用默认值，导致启动有问题。理论上，应该不会出现这样的问题（曾经这样操作过，直接一步成功，不过已经过去了很多年，Ghost 软件以及操作系统都不一样了），也许是我操作不当，比如在恢复启动的时候，应该只挂载一块硬盘。如果这样能成功的话，应该能节省我非常多的时间，以后如果再作类似的操作，可以再次尝试一下。</li><li>应该做好重装操作系统的准备。这次操作，只制作了老毛桃工具 U 盘，如果期间镜像备份没做好或者有问题，现有硬盘又启动不了，就只能重装操作系统了，但我还没有下载 windows 10 的安装镜像文件。</li><li>远远超出了我的预期时间，本来认为先制作硬盘 B 的整个硬盘镜像到文件 A.gho，然后从硬盘 A 直接整个硬盘 Ghost 到硬盘 B ，最后恢复镜像文件 A.gho 到硬盘 A，操作系统层面的操作就完事儿的。</li><li>一件我们认为简单的事，哪怕做过，也很有可能因为存在某些我们考虑不到的情况而完全背离我们的经验，从而导致超出我们预期的情况发生，所以，要提前做好最坏的打算。</li><li>这件事，对应到软件开发，非常相似。<ul><li>开发人员在评估工作量的时候，往往只是凭借自己的工作经验，即便有意预留出三分一的时间，也经常出现实际工作量要远远大于评估的工作量。</li><li>这很正常，所以，工作量的评估，也是需要不断完善的，是需要分阶段的，不能一下子说死，必须留有余地。好象扯远了~~</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;看似简单的操作，实际上出现了几点意外，导致本来认为一个下午可以搞定的事情，实际上花了一天时间，各种折腾，还熬夜了，囧~~。&lt;br&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="ghost" scheme="https://www.lovesofttech.com/categories/windows/ghost/"/>
    
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
      <category term="ghost" scheme="https://www.lovesofttech.com/tags/ghost/"/>
    
  </entry>
  
  <entry>
    <title>使用 iTunes 在电脑与 iOS 或 iPad 设备之间共享（传输）文件</title>
    <link href="https://www.lovesofttech.com/mac/iPadFileShare.html"/>
    <id>https://www.lovesofttech.com/mac/iPadFileShare.html</id>
    <published>2020-08-01T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.062Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何利用 iTunes 将 windows 10 的文件传到 IPad 上。</p><a id="more"></a><h1 id="上传文件的具体操作步骤"><a href="#上传文件的具体操作步骤" class="headerlink" title="上传文件的具体操作步骤"></a>上传文件的具体操作步骤</h1><ol><li>在 Mac 或 PC 上打开 iTunes。</li><li>使用设备自带的 USB 连接线将您的 iPhone、iPad 或 iPod touch 连接到电脑。</li><li>在 iTunes 中点击设备。</li><li><p>第一次使用，需要登录和授权。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare01.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare02.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>关键的一步，选择设备。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare03.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare04.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>文件共享，以应用为单位，以下，以 1K 播放器为例：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare05.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare06.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/apple/iPodShare07.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍如何利用 iTunes 将 windows 10 的文件传到 IPad 上。&lt;/p&gt;
    
    </summary>
    
      <category term="iPad" scheme="https://www.lovesofttech.com/categories/iPad/"/>
    
      <category term="IOS" scheme="https://www.lovesofttech.com/categories/iPad/IOS/"/>
    
      <category term="iTunes" scheme="https://www.lovesofttech.com/categories/iPad/IOS/iTunes/"/>
    
      <category term="share" scheme="https://www.lovesofttech.com/categories/iPad/IOS/iTunes/share/"/>
    
    
      <category term="iPad" scheme="https://www.lovesofttech.com/tags/iPad/"/>
    
      <category term="IOS" scheme="https://www.lovesofttech.com/tags/IOS/"/>
    
      <category term="iTunes" scheme="https://www.lovesofttech.com/tags/iTunes/"/>
    
      <category term="share" scheme="https://www.lovesofttech.com/tags/share/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误</title>
    <link href="https://www.lovesofttech.com/database/mysqlPasswordPlugin.html"/>
    <id>https://www.lovesofttech.com/database/mysqlPasswordPlugin.html</id>
    <published>2020-07-24T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.924Z</updated>
    
    <content type="html"><![CDATA[<p>线上重启 MySQL 之后，Tomcat 下的网站连接数据库异常，用同样的用户名和密码通过终端登录数据库正常，排除用户名及密码错误。终端登录过之后，Tomcat 下的网站连接数据库恢复正常，如果再次重启 MySQL，在通过终端登录之前，Tomcat 下的网站连接数据库，又会失败。</p><a id="more"></a><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>CentOS 7</li><li>MySQL 8.x</li><li>Tomcat 9.x</li></ul><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>MySQL 重启之后，运行在 Tomcat 下的网站连接数据库失败，重启 Tomcat 提示：<code>java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.</code>，同时还有以下日志：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lastAcquisitionFailureDefaultUser -&gt; java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.</span><br><span class="line">...</span><br><span class="line">20-07-01 16:55:20.580 WARN  SqlExceptionHelper Line129 - SQL Error: 0, SQLState: null</span><br><span class="line">20-07-01 16:55:20.581 ERROR SqlExceptionHelper Line131 - Connections could not be acquired from the underlying database!</span><br></pre></td></tr></table></figure></p><h1 id="原因：用户加密插件"><a href="#原因：用户加密插件" class="headerlink" title="原因：用户加密插件"></a>原因：用户加密插件</h1><h2 id="MySQL-加密的插件方式"><a href="#MySQL-加密的插件方式" class="headerlink" title="MySQL 加密的插件方式"></a>MySQL 加密的插件方式</h2><p>mysql 8.0 修改了加密的插件方式，创建用户时，如果不指定，会默认用 <code>caching_sha2_password</code> 加密方式，在应用程序连接 MySQL 之前，需要先以相同的用户登录一次 MySQL，应用程序才可以正常连接，一旦重启 MySQL，之前的登录缓存会失效，应用程序将不能连接 MySQL。</p><p>如果遇到在非人工操作的情况下服务器重启，那么应用程序将不能连接 MySQL，所以，这是不被允许的。除非在 Tomcat 启动脚本中添加终端登录 MySQL 的操作，但这种方式会增加部署项目的复杂度，本人没有尝试这种方式。</p><p>解决办法比较简单，只需要将 MySQL 用户密码的加密方式改为 <code>mysql_native_password</code> 即可，见下面的操作。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>将 MySQL 用户的 plugin 由 <code>caching_sha2_password</code> 改为 <code>mysql_native_password</code>，比如，我们修改 admin 的 plugin：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &apos;admin&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;new_password&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></p><h1 id="查看用户密码加密插件方式"><a href="#查看用户密码加密插件方式" class="headerlink" title="查看用户密码加密插件方式"></a>查看用户密码加密插件方式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select user,host,plugin from mysql.user; </span><br><span class="line">+------------------+-----------+-----------------------+</span><br><span class="line">| user             | host      | plugin                |</span><br><span class="line">+------------------+-----------+-----------------------+</span><br><span class="line">| admin            | localhost | mysql_native_password |</span><br><span class="line">| mysql.infoschema | localhost | caching_sha2_password |</span><br><span class="line">| mysql.session    | localhost | caching_sha2_password |</span><br><span class="line">| mysql.sys        | localhost | caching_sha2_password |</span><br><span class="line">| root             | localhost | caching_sha2_password |</span><br><span class="line">+------------------+-----------+-----------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;线上重启 MySQL 之后，Tomcat 下的网站连接数据库异常，用同样的用户名和密码通过终端登录数据库正常，排除用户名及密码错误。终端登录过之后，Tomcat 下的网站连接数据库恢复正常，如果再次重启 MySQL，在通过终端登录之前，Tomcat 下的网站连接数据库，又会失败。&lt;/p&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/categories/windows/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/tags/MySQL/"/>
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 配置项 lower_case_table_names，数据库命名规则</title>
    <link href="https://www.lovesofttech.com/database/mysqlLowerCaseTableNames.html"/>
    <id>https://www.lovesofttech.com/database/mysqlLowerCaseTableNames.html</id>
    <published>2020-07-24T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.923Z</updated>
    
    <content type="html"><![CDATA[<p>如果你现在问我，数据库的库名、表名、字段名，是否建议保持跟 Java 一样采用驼峰命名规则，我的答案是：除非是遗留系统，新系统绝对不建议，建议随大流，采用下划线命名法。<br>如果你要问我原因，那么，本文提到的坑就是理由。</p><p>有时候，随大流可能会少吃亏，可能会少走弯路。大流一定有大流的道理（跑题儿了，哈哈…）。</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>如果你的 MySQL 数据库需要同时跑在 windows 和 linux 上（比如在 windows 上开发，部署在 linux 上），或者需要在阿里 RDS 与 linux 自建 MySQL 上运行，那么一定要知道配置参数<code>lower_case_table_names</code>，因为一不小心就会踩到坑。</li><li>数据库命名规则采用下划线命名法，能有效避免因数据库服务器环境差异带来的坑。</li></ul><h1 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h1><p>曾经有一个项目，当时的表名及字段名的命名规范采用的是驼峰命名规则（不建议采用的命名方式），线上用的是阿里云 RDS，上线时做数据导入，表名全部被转为小写了，当时阿里的 RDS 还不支持配置<code>lower_case_table_names</code> 参数，<code>lower_case_table_names</code> 默认为 1，也就是存入数据库时，会自动把所有大写字母转换为小写，查询时不区分大小写。后来由于项目调整，改为用自建 MySQL 5.6，从 RDS 导入之后，由于表名、字段名全是小写，所以需要将 MySQL 配置成大小写不敏感，于是调整了数据库配置，添加了：<code>lower_case_table_names=1</code>，重启之后，项目就可以正常操作数据库了。</p><p>如果到这儿就结束了，那么，这是一个比较顺利（完美）的解决方案。</p><p>可是，再后来，要迁移服务器，新服务器上的 MySQL 是 8.x，而且已经有数据库实例了，同时，默认大小写敏感，这种场景，就不能简单的添加 <code>lower_case_table_names=1</code> 或者修改这个配置，因为 MySQL 8.0 不支持数据库初始化后修改该参数，后面会提到。</p><p>是不是有点像编故事呢？如果说这是一个故事的话，那么，这个故事是真实的。</p><p>言归正传，以下正式介绍 <code>lower_case_table_names</code></p><h1 id="lower-case-table-names-参数说明"><a href="#lower-case-table-names-参数说明" class="headerlink" title="lower_case_table_names 参数说明"></a>lower_case_table_names 参数说明</h1><p><code>lower_case_table_names</code> 是 mysql 一个大小写敏感设置的属性，此参数不可以动态修改。</p><ul><li>8.0 之前的版本，可以通过配置文件修改，修改后重启数据库生效。</li><li>8.0 之后的版本，只允许在初始化时指定，之后就不允许修改了。</li></ul><p>修改配置</p><ul><li>修改文件 <code>my.ini</code> （linux 下是 <code>my.cnf</code>，默认位于 <code>/etc/mysql/</code>），在 <code>[mysqld]</code> 配置节点下添加 <code>lower-case-table-names=value</code>，value 为 0-2 的整数。</li></ul><p>默认值</p><ul><li>unix,linux 下 默认值为 0</li><li>Windows 下默认值是 1</li><li>Mac OS 下默认值是 2</li></ul><p>官方文档</p><ul><li>5.7 官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">Identifier Case Sensitivity</a></li><li>8.0 官方文档：<a href="https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">Identifier Case Sensitivity</a></li></ul><p>参数说明</p><ol><li><p><code>lower_case_table_names=0</code> 表名存储为给定的大小写。比较时：区分大小写。大小写敏感（Unix，Linux默认）。</p><blockquote><p>创建的数据库和表，将原样保存在磁盘上。如 <code>create database TeSt;</code> 将会创建一个 TeSt 的目录，<code>create table AbCCC ...</code> 将会原样生成 <code>AbCCC.frm</code>。SQL语句也会原样解析。</p></blockquote><ul><li>注意：大小写敏感要操作系统支持，Windows 本身大小写不敏感，因此不能设置成大小写敏感，即不能设置为 <code>lower_case_table_names=0</code>。在 win10 下设置为 <code>lower_case_table_names=0</code>，初始化时，会报以下错误（后面还会提到）：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ERROR] [MY-010158] [Server] The server option &apos;lower_case_table_names&apos; is configured to use case sensitive table names but the data directory is on a case-insensitive file system which is an unsupported combination. Please consider either using a case sensitive file system for your data directory or switching to a case-insensitive table name mode.</span><br></pre></td></tr></table></figure></li></ul></li></ol><ol><li><p><code>lower_case_table_names=1</code> 表名存储为小写。比较时：不区分大小写。大小写不敏感（Windows默认）。</p><blockquote><p>创建的库表时，MySQL 将所有的库表名转换成小写存储在磁盘上。SQL 语句同样会将库表名转换成小写。如需要查询以前创建的 <code>Test_table</code>（生成 <code>Test_table.frm</code> 文件），即便执行 <code>select * from Test_table</code>，也会被转换成 <code>select * from test_table</code>，这样就会找不到表而报错。这种情况需要做数据迁移，具体迁移方案后面会提到。</p></blockquote></li><li><p><code>lower_case_table_names=2</code> 表名存储为给定的大小写。比较时：小写。</p><blockquote><p>创建的库表将原样保存在磁盘上。但SQL语句将库表名转换成小写。</p></blockquote></li></ol><p>8.0 以前的版本，修改 <code>lower_case_table_names</code> 导致的常见不良隐患：如果在 <code>lower_case_table_names=0</code> 时，创建了含有大写字母的库表，改为 <code>lower_case_table_names=1</code> 后，则会无法被查到。</p><h3 id="8-0-以前的版本，将默认的-lower-case-tables-name-由-0-设置成-1"><a href="#8-0-以前的版本，将默认的-lower-case-tables-name-由-0-设置成-1" class="headerlink" title="8.0 以前的版本，将默认的 lower_case_tables_name 由 0 设置成 1"></a>8.0 以前的版本，将默认的 lower_case_tables_name 由 0 设置成 1</h3><p>需先将已经存在的库名和表名都转换为小写。</p><ul><li>针对仅表名存在大写字母的情况：<ul><li><code>lower_case_tables_name=0</code> 时，执行 <code>rename table</code> 将表名改成小写。</li><li>设置 <code>lower_case_tables_name=1</code>，重启生效。</li></ul></li><li>针对库名存在大写字母的情况：<ul><li><code>lower_case_tables_name=0</code> 时，使用 <code>mysqldump</code> 导出，并删除老的数据库。</li><li>设置 <code>lower_case_tables_name=1</code>，重启生效。</li><li>创建只有小写字母的数据库实例，导入数据至该实例。</li></ul></li></ul><h1 id="在-win10-上安装-MySQL-报错"><a href="#在-win10-上安装-MySQL-报错" class="headerlink" title="在 win10 上安装 MySQL 报错"></a>在 win10 上安装 MySQL 报错</h1><p>my.ini 的参数 <code>lower_case_tables_name=0</code> 的情况下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\dev\mysql-5.7.23-winx64\mysql-5.7.23-winx64\bin&gt;mysqld --initialize --console</span><br><span class="line">2018-12-09T13:04:02.545614Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2018-12-09T13:04:03.309670Z 0 [ERROR] The server option &apos;lower_case_table_names&apos; is configured to use case sensitive table names but the data directory is on a case-insensitive file system which is an unsupported combination. Please consider either using a case sensitive file system for your data directory or switching to a case-insensitive table name mode.</span><br><span class="line">2018-12-09T13:04:03.314831Z 0 [ERROR] Aborting</span><br></pre></td></tr></table></figure></p><p>大小写敏感要操作系统支持，Windows 本身大小写不敏感，因此不能设置成大小写敏感。</p><p>该问题，可以参考 5.7 官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">Identifier Case Sensitivity</a></p><p>摘录 5.7 的官方文档如下：<br>If you are using MySQL on only one platform, you do not normally have to change the lower_case_table_names variable from its default value. However, you may encounter difficulties if you want to transfer tables between platforms that differ in file system case sensitivity. For example, on Unix, you can have two different tables named my_table and MY_TABLE, but on Windows these two names are considered identical. To avoid data transfer problems arising from lettercase of database or table names, you have two options:</p><ul><li>Use lower_case_table_names=1 on all systems. The main disadvantage with this is that when you use SHOW TABLES or SHOW DATABASES, you do not see the names in their original lettercase.</li><li>Use lower_case_table_names=0 on Unix and lower_case_table_names=2 on Windows. This preserves the lettercase of database and table names. The disadvantage of this is that you must ensure that your statements always refer to your database and table names with the correct lettercase on Windows. If you transfer your statements to Unix, where lettercase is significant, they do not work if the lettercase is incorrect.</li></ul><p><code>my.ini</code> 的参数 <code>lower_case_tables_name</code> 改为 2 或 1，则可正常安装，不过，设置为 2 的时候，用 MySQL Workbench 连接时会提示配置有问题：<code>The server is in a system that does not properly support the selected lower_case_table_names option value. Some problems may occur.</code>，这个问题下面会专门写。</p><p>以下是正常安装的提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\dev\mysql-5.7.23-winx64\mysql-5.7.23-winx64\bin&gt;mysqld --initialize --console</span><br><span class="line">2018-12-09T14:25:32.965759Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2018-12-09T14:25:34.370212Z 0 [Warning] InnoDB: New log files created, LSN=45790</span><br><span class="line">2018-12-09T14:25:34.700644Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2018-12-09T14:25:34.842230Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 4a949feb-fbbe-11e8-beee-002535150600.</span><br><span class="line">2018-12-09T14:25:34.857245Z 0 [Warning] Gtid table is not ready to be used. Table &apos;mysql.gtid_executed&apos; cannot be opened.</span><br><span class="line">2018-12-09T14:25:34.912538Z 1 [Note] A temporary password is generated for root@localhost: kDLL5K&lt;iGsmo</span><br></pre></td></tr></table></figure></p><h1 id="MySQL-Workbench-连接到-MySQL-8-0-21-提示配置有问题"><a href="#MySQL-Workbench-连接到-MySQL-8-0-21-提示配置有问题" class="headerlink" title="MySQL Workbench 连接到 MySQL 8.0.21 提示配置有问题"></a>MySQL Workbench 连接到 MySQL 8.0.21 提示配置有问题</h1><p>windows 环境，<code>lower_case_tables_name=2</code> 的情况下得到的提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Window Title]</span><br><span class="line">MySQL Workbench</span><br><span class="line"></span><br><span class="line">[Main Instruction]</span><br><span class="line">Server Configuration Problems</span><br><span class="line"></span><br><span class="line">[Content]</span><br><span class="line">A server configuration problem was detected.</span><br><span class="line">The server is in a system that does not properly support the selected lower_case_table_names option value. Some problems may occur.</span><br><span class="line">Please consult the MySQL server documentation.</span><br><span class="line"></span><br><span class="line">[ ] Don&apos;t show this message again  [OK]</span><br></pre></td></tr></table></figure></p><p>实践证明，有此提示的情况下，并不影响正常使用，该提示可以忽略。</p><p>要彻底解决这个问题，就是在初始化时，将该参数的值指定为 1，或者不指定，使用默认值即可。</p><h1 id="尝试修改-lower-case-table-names-参数"><a href="#尝试修改-lower-case-table-names-参数" class="headerlink" title="尝试修改 lower_case_table_names 参数"></a>尝试修改 lower_case_table_names 参数</h1><p><code>lower_case_table_names</code> 当前值为 2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lower_case_table_names = 2</span><br></pre></td></tr></table></figure></p><p>改为 1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lower_case_table_names = 1</span><br></pre></td></tr></table></figure></p><p>重启报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;net start mysql</span><br><span class="line">MySQL 服务正在启动 .</span><br><span class="line">MySQL 服务无法启动。</span><br><span class="line"></span><br><span class="line">服务没有报告任何错误。</span><br><span class="line"></span><br><span class="line">请键入 NET HELPMSG 3534 以获得更多的帮助。</span><br></pre></td></tr></table></figure></p><h2 id="用-mysqld-console-命令查看具体的错误"><a href="#用-mysqld-console-命令查看具体的错误" class="headerlink" title="用 mysqld --console 命令查看具体的错误"></a>用 <code>mysqld --console</code> 命令查看具体的错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;mysqld --console</span><br><span class="line">2020-07-25T07:11:31.005253Z 0 [System] [MY-010116] [Server] C:\dev\MySQL\mysql-8.0.21-winx64\bin\mysqld.exe (mysqld 8.0.21) starting as process 6556</span><br><span class="line">2020-07-25T07:11:31.022631Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2020-07-25T07:11:31.467105Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2020-07-25T07:11:31.481285Z 1 [ERROR] [MY-011087] [Server] Different lower_case_table_names settings for server (&apos;1&apos;) and data dictionary (&apos;2&apos;).</span><br><span class="line">2020-07-25T07:11:31.484999Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.</span><br><span class="line">2020-07-25T07:11:31.487849Z 0 [ERROR] [MY-010119] [Server] Aborting</span><br><span class="line">2020-07-25T07:11:31.546111Z 0 [System] [MY-010910] [Server] C:\dev\MySQL\mysql-8.0.21-winx64\bin\mysqld.exe: Shutdown complete (mysqld 8.0.21)  MySQL Community Server - GPL.</span><br></pre></td></tr></table></figure><p>查看<a href="https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">官网 8.0 的文档</a>（5.7.x 无此内容），可以看到：lower_case_table_names can only be configured when initializing the server. Changing the lower_case_table_names setting after the server is initialized is prohibited.</p><p>意思是只能在初始化时指定 <code>lower_case_table_names</code> 参数，初始化之后该参数不允许修改。</p><p>针对大小写配置问题，对照 8.0 和 5.7 的文档，你会发现，5.7 版本支持在初始化之后修改 <code>lower_case_table_names</code> 参数，而且还给出了在不同值下创建的数据库的迁移方案。</p><p>而到了 8.0，只支持初始化时指定该参数，初始化之后，如果修改了该参数，启动就会报错，因为不允许在初始化之后修改这个值了。</p><h2 id="针对大小写配置问题，针对不同版本的官网文档"><a href="#针对大小写配置问题，针对不同版本的官网文档" class="headerlink" title="针对大小写配置问题，针对不同版本的官网文档"></a>针对大小写配置问题，针对不同版本的官网文档</h2><p>以下是目前用得比较多的两个版本的文档：<br>8.0 官网文档链接：<a href="https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html</a><br>5.7 官网文档链接：<a href="https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html" rel="external nofollow noopener noreferrer" target="_blank">https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html</a></p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>知道 MySQL 的规则就好办了，如果不需要数据迁移：</p><ul><li>删除 data 目录下的所有文件，重新初始化并且指定 <code>lower_case_table_names</code> 值。</li><li>卸载 MySQL，然后重装，重装之后，在初始化数据库时指定 <code>lower_case_table_names</code> 值。</li></ul><p>如果需要数据迁移，大致步骤如下：</p><ul><li>先转化数据库名、表表、字段名为想要的大小写，然后导出数据。</li><li>用新的<code>lower_case_table_names</code>值重新初始化数据库。</li><li>创建新实例，导入之前导出的数据。</li></ul><h1 id="指定-lower-case-table-names-的两种方式"><a href="#指定-lower-case-table-names-的两种方式" class="headerlink" title="指定 lower_case_table_names 的两种方式"></a>指定 <code>lower_case_table_names</code> 的两种方式</h1><ol><li><p>初始化时指定，如：<code>mysqld --initialize --console --lower-case-table-names=1</code>，参考：<a href="https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names" rel="external nofollow noopener noreferrer" target="_blank">https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt;mysqld --initialize --console --lower-case-table-names=1</span><br><span class="line">2020-07-25T08:39:17.886931Z 0 [System] [MY-013169] [Server] C:\dev\MySQL\mysql-8.0.21-winx64\bin\mysqld.exe (mysqld 8.0.21) initializing of server in progress as process 17116</span><br><span class="line">2020-07-25T08:39:17.901930Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">2020-07-25T08:39:19.157823Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">2020-07-25T08:39:20.411299Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: g6+fg/+;qouD</span><br></pre></td></tr></table></figure></li><li><p>初始化前，修改文件 <code>my.ini</code> （linux 下是 <code>my.cnf</code>，默认位于 <code>/etc/mysql/</code>），在 <code>[mysqld]</code> 配置节点下添加 <code>lower-case-table-names=1</code>。</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果你现在问我，数据库的库名、表名、字段名，是否建议保持跟 Java 一样采用驼峰命名规则，我的答案是：除非是遗留系统，新系统绝对不建议，建议随大流，采用下划线命名法。&lt;br&gt;如果你要问我原因，那么，本文提到的坑就是理由。&lt;/p&gt;
&lt;p&gt;有时候，随大流可能会少吃亏，可能会少走弯路。大流一定有大流的道理（跑题儿了，哈哈…）。&lt;/p&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/categories/windows/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/tags/MySQL/"/>
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot 2.3.1 通过配置文件初始化 POJO 属性字段</title>
    <link href="https://www.lovesofttech.com/java/spring-config-to-pojo.html"/>
    <id>https://www.lovesofttech.com/java/spring-config-to-pojo.html</id>
    <published>2020-07-16T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.991Z</updated>
    
    <content type="html"><![CDATA[<p>本文在 Spring Boot 2.3.1.RELEASE 下测试通过，请注意版本，也许并不适合将来的版本。</p><a id="more"></a><h1 id="正确的姿势"><a href="#正确的姿势" class="headerlink" title="正确的姿势"></a>正确的姿势</h1><h2 id="POJO"><a href="#POJO" class="headerlink" title="POJO"></a>POJO</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:config-biz.properties"</span>)</span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix =<span class="string">"config"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigBiz</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String env;</span><br><span class="line">    <span class="keyword">private</span> String logDirectoryPath;</span><br><span class="line">    <span class="keyword">private</span> String isSendEmailWhenException;</span><br><span class="line">    <span class="keyword">private</span> String mailFrom;</span><br><span class="line">    <span class="keyword">private</span> String whenExceptionMailTo;</span><br><span class="line">    <span class="keyword">private</span> String batchUpdateRecordsLimit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">config.logDirectoryPath=C:/logs</span><br><span class="line">config.env=local</span><br><span class="line">config.isSendEmailWhenException=N</span><br><span class="line">config.isSetResJsonForApiCallLogWhenSuccess=N</span><br><span class="line">config.mailFrom=1614923608@qq.com</span><br><span class="line">config.whenExceptionMailTo=552087293@qq.com</span><br><span class="line"></span><br><span class="line"># 系统通用配置：批量修改，限制记录数</span><br><span class="line">config.batchUpdateRecordsLimit=500</span><br></pre></td></tr></table></figure><h1 id="备忘"><a href="#备忘" class="headerlink" title="备忘"></a>备忘</h1><ul><li>早期版本 Spring Boot 1.5.X 也可以用这种方式配置。</li><li>POJO 文件中的 @Configuration 可换成 @Component。</li><li>不可读取 yml 格式的文件，只能读取 properties 后缀的文件。</li><li>需要配合 @ConfigurationProperties 注解。<ul><li>不指定前缀，直接是 <code>@ConfigurationProperties</code>，程序可正常运行，但 IDEA 会报红色波浪线，可以不理会，不过，对于有代码洁癖的人来说，这是不可接受的，见下图：<br>  <img src="/img/java/spring-config-to-pojo.png" alt></li><li>如果看着红色波浪线不爽，那就添加一个前缀吧，如：<code>@ConfigurationProperties(prefix =&quot;config&quot;)</code>，这样还可以把不同的配置信息放到一个 <code>.properties</code> 文件里，不同的 POJO 通过前缀来获取自己的属性字段。</li></ul></li></ul><h1 id="踩过的坑"><a href="#踩过的坑" class="headerlink" title="踩过的坑"></a>踩过的坑</h1><p>之前的项目采用 Spring Boot 2.1.6.RELEASE，通过以下注解：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@Data</span><br><span class="line">@Configuration</span><br><span class="line">@PropertySource(&quot;classpath:config-biz.properties&quot;)</span><br></pre></td></tr></table></figure></p><p>再配合属性注解 <code>@Value(&quot;${属性字段名}&quot;)</code>，即可完成配置的初始化，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:config-biz.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigBiz</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;env&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;logDirectoryPath&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String logDirectoryPath;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最近的项目，用了当前最新的 Spring Boot 2.3.1.RELEASE，这种方式已经不行了，程序编译没问题，发生运行时错误，提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder &apos;env&apos; in value &quot;$&#123;env&#125;&quot;</span><br><span class="line">    at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE]</span><br><span class="line">    at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE]</span><br><span class="line">    at org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver.resolveStringValue(PropertyPlaceholderConfigurer.java:230) ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE]</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure></p><ul><li>网上的文章，针对以上错误信息，原因各异，使用的 Spring Boot 版本也是五花八门，针对较新的版本的文章比较少。建议直接查官网文档。</li><li>另外，我还有一个项目用的是 Spring Boot 2.2.2.RELEASE，这个版本当已经有问题了，由于当时项目时间紧，就用了别的方式解决的。</li></ul><h1 id="查看或下载-Spring-Boot-官网文档"><a href="#查看或下载-Spring-Boot-官网文档" class="headerlink" title="查看或下载 Spring Boot 官网文档"></a>查看或下载 Spring Boot 官网文档</h1><p>该网址可选择三种不同的文档方式查看：<a href="https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/" rel="external nofollow noopener noreferrer" target="_blank">https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/</a></p><p>如果想查看其它版本的文档，把链接中的版本号替换成你想要查看的。</p><h2 id="三种类型文档"><a href="#三种类型文档" class="headerlink" title="三种类型文档"></a>三种类型文档</h2><ol><li><a href="https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/html/" rel="external nofollow noopener noreferrer" target="_blank">html/</a>：就是 Spring Boot 官网 <a href="https://spring.io/projects/spring-boot#learn" rel="external nofollow noopener noreferrer" target="_blank">https://spring.io/projects/spring-boot#learn</a> 页面各个版本后面的 <code>Reference Doc</code> 链接地址，带大主题目录，方便选择性的阅读。</li><li><a href="https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/htmlsingle/" rel="external nofollow noopener noreferrer" target="_blank">htmlsingle/</a>：如果想要在线搜索内容，就这个链接了，Ctrl + F，你懂的，比如，本文遇到的问题，直接搜索 <code>@PropertySource</code>。左边也有章节目录。</li><li><a href="https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/pdf/" rel="external nofollow noopener noreferrer" target="_blank">pdf/</a>：可以下载到本地慢慢查看，搜索也比较方便。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文在 Spring Boot 2.3.1.RELEASE 下测试通过，请注意版本，也许并不适合将来的版本。&lt;/p&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="https://www.lovesofttech.com/categories/Spring-Boot/"/>
    
      <category term="POJO" scheme="https://www.lovesofttech.com/categories/Spring-Boot/POJO/"/>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/Spring-Boot/POJO/java/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="Spring Boot" scheme="https://www.lovesofttech.com/tags/Spring-Boot/"/>
    
      <category term="POJO" scheme="https://www.lovesofttech.com/tags/POJO/"/>
    
  </entry>
  
  <entry>
    <title>spring boot 配置静态资源</title>
    <link href="https://www.lovesofttech.com/java/springResourcesStaticLocations.html"/>
    <id>https://www.lovesofttech.com/java/springResourcesStaticLocations.html</id>
    <published>2020-06-13T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.995Z</updated>
    
    <content type="html"><![CDATA[<p>无论项目以 tomcat 的方式部署，还是以 jar 包直接部署，都适用。静态资源的目录可以是服务器上运行 web 服务的用户能访问的任何位置。</p><a id="more"></a><h1 id="需求场景"><a href="#需求场景" class="headerlink" title="需求场景"></a>需求场景</h1><p>满足以下【前提一】中的任意一条，同时又满足【前提二】中任意一条，就需要把静态资源放在一个公共的地方。</p><ul><li>前提一<ul><li>需要做负载均衡</li><li>蓝绿部署</li><li>以 spring boot 生成的 jar 包直接运行</li></ul></li><li>前提二<ul><li>有静态的 html 文件是动态生成的</li><li>某些页面的图片是由用户/管理员上传的</li><li>需要下载的文件是动态生成的</li></ul></li></ul><h2 id="需要达到的效果"><a href="#需要达到的效果" class="headerlink" title="需要达到的效果"></a>需要达到的效果</h2><p>访问配置的静态目录，就象是直接访问 spring boot 项目的 <code>resources/static</code> 目录下的文件一样。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果配置了多个静态目录，则需要保证这些目录下的文件不能重名。</p><h1 id="以下是项目中的实际应用场景"><a href="#以下是项目中的实际应用场景" class="headerlink" title="以下是项目中的实际应用场景"></a>以下是项目中的实际应用场景</h1><ul><li>发布的文章需要动态生成静态 html 文件</li><li>用户上传的头像在用户相关页面显示<blockquote><p>用户头像以用户 id 命名，访问路径固定</p></blockquote></li><li>图文并茂的文章编辑器，需要上传图片。可参考：<a href="/java/springBootIntegrationUEditor.html">springBoot 集成百度富文本框 UEditor，多模块方式</a></li></ul><h2 id="实施方案"><a href="#实施方案" class="headerlink" title="实施方案"></a>实施方案</h2><h3 id="spring-boot-配置"><a href="#spring-boot-配置" class="headerlink" title="spring boot 配置"></a>spring boot 配置</h3><p>在 application.yml 文件配置以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">static.pages: /home/utomcat/apps/resources/staticPages</span><br><span class="line">static.upload.images: /home/utomcat/apps/resources/uploadImages</span><br><span class="line">uEditor.upload.path: /home/utomcat/apps/webLoadBalance/uEditorUploads</span><br><span class="line">uEditor.upload.path.web: /home/utomcat/apps/webLoadBalance</span><br><span class="line">spring.mvc.static-path-pattern: /**</span><br><span class="line">spring.resources.static-locations: classpath:/resources/,classpath:/static/,file:$&#123;uEditor.upload.path&#125;,file:$&#123;uEditor.upload.path.web&#125;,file:$&#123;static.pages&#125;,file:$&#123;static.upload.images&#125;</span><br></pre></td></tr></table></figure></p><h4 id="这样配置的效果"><a href="#这样配置的效果" class="headerlink" title="这样配置的效果"></a>这样配置的效果</h4><ul><li>假设网站为：<code>https://www.lovesofttech.com/</code></li><li>假设 <code>/home/utomcat/apps/resources/staticPages</code> 目录下有一个文件：<code>articleIndex.html</code>，则这样访问：<code>https://www.lovesofttech.com/articleIndex.html</code></li><li>假设 <code>/home/utomcat/apps/resources/staticPages</code> 目录下有一个目录：<code>news</code></li><li>news 下有两个文件：<ul><li>article0.html</li><li>article.html</li></ul></li></ul><p>则上面两个文件这样访问：</p><ul><li><code>https://www.lovesofttech.com/news/article0.html</code></li><li><p><code>https://www.lovesofttech.com/news/article1.html</code></p></li><li><p>假设 <code>/home/utomcat/apps/resources/uploadImages</code> 目录下有一个目录：<code>images</code></p></li><li>images 下有两个文件：<ul><li>image0.jpg</li><li>image1.jpg</li></ul></li></ul><p>则上面两个文件这样访问：</p><ul><li><code>https://www.lovesofttech.com/images/image0.jpg</code></li><li><code>https://www.lovesofttech.com/images/image2.jpg</code> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无论项目以 tomcat 的方式部署，还是以 jar 包直接部署，都适用。静态资源的目录可以是服务器上运行 web 服务的用户能访问的任何位置。&lt;/p&gt;
    
    </summary>
    
      <category term="spring" scheme="https://www.lovesofttech.com/categories/spring/"/>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/spring/java/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="spring" scheme="https://www.lovesofttech.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Java 利用 pdfbox 将 PDF 转换为图片</title>
    <link href="https://www.lovesofttech.com/java/javaPdfToImage.html"/>
    <id>https://www.lovesofttech.com/java/javaPdfToImage.html</id>
    <published>2020-02-29T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.984Z</updated>
    
    <content type="html"><![CDATA[<p>项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。<br>本文介绍用 pdfbox 将 PDF 转为图片。<br><a id="more"></a></p><p>相关文章 </p><ul><li>LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档：<a href="/java/javaLibreOffice.html">Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能</a></li><li>配置 LibreOffice 环境：<a href="/linux/centOS7LibreOffice.html">CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体</a></li></ul><h1 id="将-pdf-转换成图片"><a href="#将-pdf-转换成图片" class="headerlink" title="将 pdf 转换成图片"></a>将 pdf 转换成图片</h1><p>pom.xml 添加依赖：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.pdfbox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pdfbox<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>转换类 PdfToImage ：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.pdmodel.PDDocument;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.ImageType;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.PDFRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PdfToImage</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 经过测试，dpi 为 96,100,105,120,150,200 中，105 显示效果较为清晰，体积稳定，dpi 越高图片体积越大，一般电脑显示分辨率为 96</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_DPI = <span class="number">105</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_IMAGE_FORMAT = <span class="string">".png"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * pdf 转图片，只生成一张图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfPath PDF路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> pdf 页数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">pdfToImageAllToSingleImage</span><span class="params">(String pdfPath, String imageFilePath, <span class="keyword">int</span> pageSize)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage imageResult;</span><br><span class="line">        PDDocument pdDocument = PDDocument.load(<span class="keyword">new</span> File(pdfPath));</span><br><span class="line">        PDFRenderer pdfRenderer = <span class="keyword">new</span> PDFRenderer(pdDocument);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pages = pdDocument.getNumberOfPages();</span><br><span class="line">        <span class="keyword">int</span> len = Math.min(pages, pageSize);</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> imageHeightTotal = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB);</span><br><span class="line">            imageHeightTotal += image.getHeight();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                width = image.getWidth();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        imageResult = <span class="keyword">new</span> BufferedImage(width, imageHeightTotal, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">int</span> shiftHeight = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] singleImgRGB;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB);</span><br><span class="line">            <span class="keyword">int</span> imageHeight = image.getHeight();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 计算偏移高度</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                shiftHeight += pdfRenderer.renderImageWithDPI(i - <span class="number">1</span>, DEFAULT_DPI, ImageType.RGB).getHeight();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            singleImgRGB = image.getRGB(<span class="number">0</span>, <span class="number">0</span>, width, imageHeight, <span class="keyword">null</span>, <span class="number">0</span>, width);</span><br><span class="line">            <span class="comment">// 写入流中</span></span><br><span class="line">            imageResult.setRGB(<span class="number">0</span>, shiftHeight, width, imageHeight, singleImgRGB, <span class="number">0</span>, width);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 写图片</span></span><br><span class="line">        ImageIO.write(imageResult, DEFAULT_IMAGE_FORMAT.replace(<span class="string">"."</span>, <span class="string">""</span>), <span class="keyword">new</span> File(imageFilePath));</span><br><span class="line">        pdDocument.close();</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * pdf 转图片，每页生成一张图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pdfPath PDF路径</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> pdf 页数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">pdfToImageOnePageOnImage</span><span class="params">(String pdfPath, String imageFilePath, <span class="keyword">int</span> pageSize)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        BufferedImage imageResult;</span><br><span class="line">        PDDocument pdDocument = PDDocument.load(<span class="keyword">new</span> File(pdfPath));</span><br><span class="line">        PDFRenderer pdfRenderer = <span class="keyword">new</span> PDFRenderer(pdDocument);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> pages = pdDocument.getNumberOfPages();</span><br><span class="line">        <span class="keyword">int</span> len = Math.min(pages, pageSize);</span><br><span class="line">        <span class="keyword">int</span> width;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> shiftHeight = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] singleImgRGB;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB);</span><br><span class="line">            width = image.getWidth();</span><br><span class="line">            <span class="keyword">int</span> imageHeight = image.getHeight();</span><br><span class="line">            imageResult = <span class="keyword">new</span> BufferedImage(width, imageHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">            singleImgRGB = image.getRGB(<span class="number">0</span>, <span class="number">0</span>, width, imageHeight, <span class="keyword">null</span>, <span class="number">0</span>, width);</span><br><span class="line">            <span class="comment">// 写入流中</span></span><br><span class="line">            imageResult.setRGB(<span class="number">0</span>, shiftHeight, width, imageHeight, singleImgRGB, <span class="number">0</span>, width);</span><br><span class="line">            <span class="comment">// 写图片</span></span><br><span class="line">            ImageIO.write(imageResult, DEFAULT_IMAGE_FORMAT.replace(<span class="string">"."</span>, <span class="string">""</span>), <span class="keyword">new</span> File(imageFilePath + i + DEFAULT_IMAGE_FORMAT));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        pdDocument.close();</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="在线预览"><a href="#在线预览" class="headerlink" title="在线预览"></a>在线预览</h1><p>生成图片之后，在线预览就不用多说了吧~~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。&lt;br&gt;本文介绍用 pdfbox 将 PDF 转为图片。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/java/"/>
    
      <category term="pdfbox" scheme="https://www.lovesofttech.com/categories/java/pdfbox/"/>
    
      <category term="PDF" scheme="https://www.lovesofttech.com/categories/java/pdfbox/PDF/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="PDF" scheme="https://www.lovesofttech.com/tags/PDF/"/>
    
      <category term="pdfbox" scheme="https://www.lovesofttech.com/tags/pdfbox/"/>
    
  </entry>
  
  <entry>
    <title>Maven 项目 jar 包依赖冲突导致运行期错误的排查方法</title>
    <link href="https://www.lovesofttech.com/java/runtimeOmittedForConflict.html"/>
    <id>https://www.lovesofttech.com/java/runtimeOmittedForConflict.html</id>
    <published>2020-02-29T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.990Z</updated>
    
    <content type="html"><![CDATA[<p>Maven 依赖冲突，导致运行期错误：java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;</p><a id="more"></a><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>项目用到了 jodconverter 将 Office 文档转换为 PDF 文档，先在一个 demo 工程测试，完全没问题之后，同样的功能拿到正在开发的项目中，却报错了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">01-Mar-2020 08:30:00.698 严重 [http-nio-80-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [policy] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;] with root cause</span><br><span class="line">java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;</span><br><span class="line">at org.jodconverter.document.JsonDocumentFormatRegistry.create(JsonDocumentFormatRegistry.java:65)</span><br><span class="line">at org.jodconverter.document.JsonDocumentFormatRegistry.create(JsonDocumentFormatRegistry.java:50)</span><br><span class="line">at org.jodconverter.document.DefaultDocumentFormatRegistryInstanceHolder.getInstance(DefaultDocumentFormatRegistryInstanceHolder.java:45)</span><br><span class="line">at org.jodconverter.document.DefaultDocumentFormatRegistry.getInstance(DefaultDocumentFormatRegistry.java:430)</span><br><span class="line">at org.jodconverter.document.DefaultDocumentFormatRegistry.&lt;clinit&gt;(DefaultDocumentFormatRegistry.java:52)</span><br><span class="line">at org.jodconverter.job.AbstractConverter.&lt;init&gt;(AbstractConverter.java:64)</span><br><span class="line">at org.jodconverter.LocalConverter.&lt;init&gt;(LocalConverter.java:107)</span><br><span class="line">at org.jodconverter.LocalConverter.&lt;init&gt;(LocalConverter.java:51)</span><br><span class="line">at org.jodconverter.LocalConverter$Builder.build(LocalConverter.java:212)</span><br><span class="line">at org.jodconverter.LocalConverter.make(LocalConverter.java:87)</span><br><span class="line">at org.jodconverter.JodConverter.convert(JodConverter.java:47)</span><br></pre></td></tr></table></figure></p><p>这明显是典型的依赖版本冲突导致的问题，那如何排查，如何找到“元凶”呢？从错误信息看，jodconverter 用到了 org.apache.commons.io.IOUtils.toString 这个方法，用到的依赖是 <a href="https://commons.apache.org/proper/commons-io/" rel="external nofollow noopener noreferrer" target="_blank">commons-io</a></p><p>jodconverter 的依赖如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/java/runtimeOmittedForConflictNormal.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h1 id="找到版本冲突的依赖库（jar-包）"><a href="#找到版本冲突的依赖库（jar-包）" class="headerlink" title="找到版本冲突的依赖库（jar 包）"></a>找到版本冲突的依赖库（jar 包）</h1><p>现在需要查看项目中是否有直接引用到 commons-io 这个库，另外，还要看一下其它库是否也依赖了 commons-io，如果依赖比较多，这个工作量是比较大的，而且容易看错。<br>下面用指令 <code>mvn dependency:tree -Dverbose -Dincludes=commons-io</code> 查看所有依赖 commons-io 的库（jar 包）。<br>该指令同时还会显示是冲突（conflict）了还是重复（duplicate）引用了，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">commons-io:commons-io:2.2(runtime omitted for conflict withh 2.2)</span><br><span class="line">org.apache.commons:commons-lang3:3.9(runtime omited for duplicate)</span><br></pre></td></tr></table></figure></p><h2 id="查看有冲突的依赖"><a href="#查看有冲突的依赖" class="headerlink" title="查看有冲突的依赖"></a>查看有冲突的依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">C:\study\demo&gt;mvn dependency:tree -Dverbose -Dincludes=commons-io</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --------------------------&lt; com.example:demo &gt;--------------------------</span><br><span class="line">[INFO] Building demo 0.0.1-SNAPSHOT</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- maven-dependency-plugin:2.10:tree (default-cli) @ demo ---</span><br><span class="line">[WARNING] Using Maven 2 dependency tree to get verbose output, which may be inconsistent with actual Maven 3 resolution</span><br><span class="line">[INFO] com.example:demo:jar:0.0.1-SNAPSHOT</span><br><span class="line">[INFO] +- commons-fileupload:commons-fileupload:jar:1.4:compile</span><br><span class="line">[INFO] |  \- commons-io:commons-io:jar:2.2:compile</span><br><span class="line">[INFO] \- org.jodconverter:jodconverter-local:jar:4.2.4:compile</span><br><span class="line">[INFO]    +- org.jodconverter:jodconverter-core:jar:4.2.4:compile</span><br><span class="line">[INFO]    |  \- (commons-io:commons-io:jar:2.6:runtime - omitted for conflict with 2.2)</span><br><span class="line">[INFO]    \- (commons-io:commons-io:jar:2.6:runtime - omitted for conflict with 2.2)</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p><a href="http://maven.apache.org/plugins/maven-dependency-plugin/tree-mojo.html" rel="external nofollow noopener noreferrer" target="_blank">dependency:tree 用法参考</a></p><h2 id="maven-dependency-plugin-3-0-之后并不支持-verbose-参数"><a href="#maven-dependency-plugin-3-0-之后并不支持-verbose-参数" class="headerlink" title="maven-dependency-plugin 3.0 之后并不支持 verbose 参数"></a>maven-dependency-plugin 3.0 之后并不支持 verbose 参数</h2><p>会提示：Verbose not supported since maven-dependency-plugin 3.0，这时并不能查出来版本冲突的地方，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\study\demo&gt;mvn dependency:tree -Dverbose -Dincludes=commons-io</span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --------------------------&lt; com.example:demo &gt;--------------------------</span><br><span class="line">[INFO] Building demo 0.0.1-SNAPSHOT</span><br><span class="line">[INFO] --------------------------------[ jar ]---------------------------------</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- maven-dependency-plugin:3.1.1:tree (default-cli) @ demo ---</span><br><span class="line">[INFO] Verbose not supported since maven-dependency-plugin 3.0</span><br><span class="line">[INFO] com.example:demo:jar:0.0.1-SNAPSHOT</span><br><span class="line">[INFO] \- commons-fileupload:commons-fileupload:jar:1.4:compile</span><br><span class="line">[INFO]    \- commons-io:commons-io:jar:2.2:compile</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>指定 maven-dependency-plugin 版本。<br>如果使用 spring-boot 项目，项目中可能根本就没有指定 maven-dependency-plugin，也不需要指定就能正常运行，spring-boot 本身已经包含了最新的 maven-dependency-plugin 了。<br>但现在需要查看依赖冲突，需要 3.0 以前的版本，所以，按如下显式指定版本即可：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 其它插件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-dependency-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="从-IDEA-看依赖情况"><a href="#从-IDEA-看依赖情况" class="headerlink" title="从 IDEA 看依赖情况"></a>从 IDEA 看依赖情况</h1><p>当然，以下截图只是为了方便查看，已经把不相关的依赖全部注释掉了，真实项目要查看版本冲突，通过这种方式找是“愚蠢”的。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/java/runtimeOmittedForConflict.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h1 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h1><p>将各自依赖的 commons-io 排除，项目统一引用最新版本。<br>依赖由：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jodconverter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jodconverter-local<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>变更为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jodconverter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jodconverter-local<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>再次通过 IDEA 查看依赖情况<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/java/runtimeOmittedForConflictSolution.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>以上解决方案只是一个示例，实际项目中解决冲突需要考虑很多因素，同时，也还有别的方法，比如第一声明优先原则等，这不是本文重点，网上很多这类文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Maven 依赖冲突，导致运行期错误：java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/java/"/>
    
      <category term="Maven" scheme="https://www.lovesofttech.com/categories/java/Maven/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="Maven" scheme="https://www.lovesofttech.com/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能</title>
    <link href="https://www.lovesofttech.com/java/javaLibreOffice.html"/>
    <id>https://www.lovesofttech.com/java/javaLibreOffice.html</id>
    <published>2020-02-22T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.982Z</updated>
    
    <content type="html"><![CDATA[<ul><li>项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。</li><li>本文介绍借助 LibreOffice 将 Office 文当转换成 PDF 文档。</li><li>本文同样适用于 OpenOffice，以下仅以 LibreOffice 为例。</li></ul><a id="more"></a><p>相关文章 </p><ul><li>配置 LibreOffice 环境：<a href="/linux/centOS7LibreOffice.html">CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体</a></li><li>将 PDF 转换为图片：<a href="/java/javaPdfToImage.html">Java 利用 pdfbox 将 PDF 转换为图片</a></li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>为了实现 Office 文档上传并实现在线预览功能，我试了 POI 和收费库 aspose，均不理想。</li><li>但是将 PDF 转换为图片有成熟的方案，于是，问题变成了：如何将 Office 文档转换成 PDF。</li><li>LibreOffice 可将 Office 文当转换成 PDF文件，并且效果非常棒，和通过微软的 Office 直接另存为 PDF 文件的效果几乎一样。针对在线预览的需求，效果是最好的，也许是最好的解决方案。</li><li>不过，前提是需要在服务器上安装 LibreOffice，为了测试，开发环境也需要安装，不过，好的是 LibreOffice 跨平台。<blockquote><p>尝试通过 LibreOffice 将 Office 文档直接转换成图片，可惜只得到第一页的内容，查看帮助，没有找到直接转换为图片的方法。</p></blockquote></li></ul><h1 id="Java-利用-LibreOffice-将-Office-文档转换成-PDF"><a href="#Java-利用-LibreOffice-将-Office-文档转换成-PDF" class="headerlink" title="Java 利用 LibreOffice 将 Office 文档转换成 PDF"></a>Java 利用 LibreOffice 将 Office 文档转换成 PDF</h1><p>有两种转换方式，各有优劣，请自行选择。</p><h2 id="异步转换"><a href="#异步转换" class="headerlink" title="异步转换"></a>异步转换</h2><p>通过调用操作系统命令的方式实现，这个转换是异步的，根据文件的大小需要的时间不确定，如果在上传之后就要立即预览，需要用同步方式。</p><ul><li>优点：实现方式简单，不需要额外配置信息，不需要添加第三方依赖库（当然 LibreOffice 是必须要安装的）。</li><li>缺点：发送指令之后，转换是否成功，是否有异常，无法获知，也就是说，转换是否成功，是不确定的。当然，通过严格的测试，一般还是可以保证转换的可靠性的。</li></ul><h2 id="同步转换"><a href="#同步转换" class="headerlink" title="同步转换"></a>同步转换</h2><p>用到了 JodConverter：<a href="https://github.com/sbraconnier/jodconverter" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sbraconnier/jodconverter</a></p><ul><li>优点：转换是同步的，转换成功与否是确定的。</li><li>缺点：代码运行期需要启动 LibreOffice 服务，需要占用操作系统资源，相对于异步转换方式，需要依赖第三方库，需要额外配置信息。</li></ul><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><h3 id="添加依赖（仅同步方式需要）"><a href="#添加依赖（仅同步方式需要）" class="headerlink" title="添加依赖（仅同步方式需要）"></a>添加依赖（仅同步方式需要）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.jodconverter&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jodconverter-local&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.2.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="在-resources-目录添加-libre-properties-文件（仅同步方式需要）"><a href="#在-resources-目录添加-libre-properties-文件（仅同步方式需要）" class="headerlink" title="在 resources 目录添加 libre.properties 文件（仅同步方式需要）"></a>在 resources 目录添加 libre.properties 文件（仅同步方式需要）</h3><p>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># LibreOffice主目录</span><br><span class="line">libreOfficeHome=C:/dev/LibreOffice6.4</span><br><span class="line"># 开启多个LibreOffice进程，每个端口对应一个进程</span><br><span class="line"># portNumbers=2002,2003</span><br><span class="line">portNumbers=2002</span><br><span class="line"># 任务执行超时为5分钟</span><br><span class="line">taskExecutionTimeoutMinutes=5</span><br><span class="line"># 任务队列超时为1小时</span><br><span class="line">taskQueueTimeoutHours=1</span><br></pre></td></tr></table></figure></p><h3 id="转换类-LibreOfficeUtil"><a href="#转换类-LibreOfficeUtil" class="headerlink" title="转换类 LibreOfficeUtil"></a>转换类 LibreOfficeUtil</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.factory.OfficeManagerInstance;</span><br><span class="line"><span class="keyword">import</span> org.jodconverter.JodConverter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LibreOfficeUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 利用 JodConverter 将 Offfice 文档转换为 PDF（要依赖 LibreOffice），该转换为同步转换，返回时就已经转换完成</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">convertOffice2PDFSyncIsSuccess</span><span class="params">(File sourceFile, File targetFile)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            OfficeManagerInstance.start();</span><br><span class="line">            JodConverter.convert(sourceFile).to(targetFile).execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 利用 LibreOffice 将 Office 文档转换成 PDF，该转换是异步的，返回时，转换可能还在进行中，转换是否有异常也未可知</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> filePath       目标文件地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> targetFilePath 输出文件夹</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 子线程执行完毕的返回值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">convertOffice2PDFAsync</span><span class="params">(String filePath, String fileName, String targetFilePath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String command;</span><br><span class="line">        <span class="keyword">int</span> exitStatus;</span><br><span class="line">        String osName = System.getProperty(<span class="string">"os.name"</span>);</span><br><span class="line">        String outDir = targetFilePath.length() &gt; <span class="number">0</span> ? <span class="string">" --outdir "</span> + targetFilePath : <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (osName.contains(<span class="string">"Windows"</span>)) &#123;</span><br><span class="line">            command = <span class="string">"cmd /c cd /d "</span> + filePath + <span class="string">" &amp;&amp; start soffice --headless --invisible --convert-to pdf ./"</span> + fileName + outDir;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            command = <span class="string">"libreoffice6.3 --headless --invisible --convert-to pdf:writer_pdf_Export "</span> + filePath + fileName + outDir;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        exitStatus = executeOSCommand(command);</span><br><span class="line">        <span class="keyword">return</span> exitStatus;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用操作系统的控制台，执行 command 指令</span></span><br><span class="line"><span class="comment">     * 执行该方法时，并没有等到指令执行完毕才返回，而是执行之后立即返回，返回结果为 0，只能说明正确的调用了操作系统的控制台指令，但执行结果如何，是否有异常，在这里是不能体现的，所以，更好的姿势是用同步转换功能。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">executeOSCommand</span><span class="params">(String command)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Process process;</span><br><span class="line">        process = Runtime.getRuntime().exec(command); <span class="comment">// 转换需要时间，比如一个 3M 左右的文档大概需要 8 秒左右，但实际测试时，并不会等转换结束才执行下一行代码，而是把执行指令发送出去后就立即执行下一行代码了。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> exitStatus = process.waitFor();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (exitStatus == <span class="number">0</span>) &#123;</span><br><span class="line">            exitStatus = process.exitValue();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 销毁子进程</span></span><br><span class="line">        process.destroy();</span><br><span class="line">        <span class="keyword">return</span> exitStatus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="OfficeManagerInstance（仅同步方式需要）"><a href="#OfficeManagerInstance（仅同步方式需要）" class="headerlink" title="OfficeManagerInstance（仅同步方式需要）"></a>OfficeManagerInstance（仅同步方式需要）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.factory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jodconverter.office.LocalOfficeManager;</span><br><span class="line"><span class="keyword">import</span> org.jodconverter.office.OfficeManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.support.PropertiesLoaderUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * github https://github.com/uncleAndyChen</span></span><br><span class="line"><span class="comment"> * email andy@lovesofttech.com</span></span><br><span class="line"><span class="comment"> * homepage https://www.lovesofttech.com/</span></span><br><span class="line"><span class="comment"> * author andyChen</span></span><br><span class="line"><span class="comment"> * since 2020/02/29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OfficeManagerInstance</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> OfficeManager INSTANCE = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        officeManagerStart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Properties properties = PropertiesLoaderUtils.loadAllProperties(<span class="string">"libre.properties"</span>);</span><br><span class="line">            String[] portNumbers = properties.getProperty(<span class="string">"portNumbers"</span>, <span class="string">""</span>).split(<span class="string">","</span>);</span><br><span class="line">            <span class="keyword">int</span>[] ports = <span class="keyword">new</span> <span class="keyword">int</span>[portNumbers.length];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; portNumbers.length; i++) &#123;</span><br><span class="line">                ports[i] = Integer.parseInt(portNumbers[i]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            LocalOfficeManager.Builder builder = LocalOfficeManager.builder().install();</span><br><span class="line">            builder.officeHome(properties.getProperty(<span class="string">"libreOfficeHome"</span>, <span class="string">""</span>));</span><br><span class="line">            builder.portNumbers(ports);</span><br><span class="line">            builder.taskExecutionTimeout(Integer.parseInt(properties.getProperty(<span class="string">"taskExecutionTimeoutMinutes"</span>, <span class="string">""</span>)) * <span class="number">1000</span> * <span class="number">60</span>); <span class="comment">// minute</span></span><br><span class="line">            builder.taskQueueTimeout(Integer.parseInt(properties.getProperty(<span class="string">"taskQueueTimeoutHours"</span>, <span class="string">""</span>)) * <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>); <span class="comment">// hour</span></span><br><span class="line"></span><br><span class="line">            INSTANCE = builder.build();</span><br><span class="line">            officeManagerStart();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">officeManagerStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (INSTANCE.isRunning()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            INSTANCE.start();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/sbraconnier/jodconverter/wiki/Getting-Started" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sbraconnier/jodconverter/wiki/Getting-Started</a><br><a href="https://github.com/sbraconnier/jodconverter/wiki/Configuration" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sbraconnier/jodconverter/wiki/Configuration</a><br><a href="https://github.com/sbraconnier/jodconverter/wiki/Java-Library" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/sbraconnier/jodconverter/wiki/Java-Library</a></p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><p>请移步：<a href="/java/runtimeOmittedForConflict.html">Maven 项目 jar 包依赖冲突导致运行期错误的排查方法</a></p><h1 id="附：libreoffice6-3-转换帮助文档"><a href="#附：libreoffice6-3-转换帮助文档" class="headerlink" title="附：libreoffice6.3 转换帮助文档"></a>附：libreoffice6.3 转换帮助文档</h1><p>libreoffice6.3 转换文档的用法，官方没有详细的在线文档，通过 -h 可以查看到详细的帮助，已经可以满足开发所需。<br>例如将一个文件转换为 pdf ：<code>libreoffice6.3 --headless --invisible --convert-to pdf:writer_pdf_Export ./奇妙的记忆力.pptx</code>，后面可以指定保存 pdf 的目录，不指定就保存到当前目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line">[root@ebs-60027 lib64]#  libreoffice6.3 -h</span><br><span class="line">Usage: soffice [argument...]</span><br><span class="line">       argument - switches, switch parameters and document URIs (filenames).   </span><br><span class="line"></span><br><span class="line">Using without special arguments:                                               </span><br><span class="line">Opens the start center, if it is used without any arguments.                   </span><br><span class="line">   &#123;file&#125;              Tries to open the file (files) in the components        </span><br><span class="line">                       suitable for them.                                      </span><br><span class="line">   &#123;file&#125; &#123;macro:///Library.Module.MacroName&#125;                                  </span><br><span class="line">                       Opens the file and runs specified macros from           </span><br><span class="line">                       the file.                                               </span><br><span class="line"></span><br><span class="line">Getting help and information:                                                  </span><br><span class="line">   --help | -h | -?    Shows this help and quits.                              </span><br><span class="line">   --helpwriter        Opens built-in or online Help on Writer.                </span><br><span class="line">   --helpcalc          Opens built-in or online Help on Calc.                  </span><br><span class="line">   --helpdraw          Opens built-in or online Help on Draw.                  </span><br><span class="line">   --helpimpress       Opens built-in or online Help on Impress.               </span><br><span class="line">   --helpbase          Opens built-in or online Help on Base.                  </span><br><span class="line">   --helpbasic         Opens built-in or online Help on Basic scripting        </span><br><span class="line">                       language.                                               </span><br><span class="line">   --helpmath          Opens built-in or online Help on Math.                  </span><br><span class="line">   --version           Shows the version and quits.                            </span><br><span class="line">   --nstemporarydirectory                                                      </span><br><span class="line">                       (MacOS X sandbox only) Returns path of the temporary    </span><br><span class="line">                       directory for the current user and exits. Overrides     </span><br><span class="line">                       all other arguments.                                    </span><br><span class="line"></span><br><span class="line">General arguments:                                                             </span><br><span class="line">   --quickstart[=no]   Activates[Deactivates] the Quickstarter service.        </span><br><span class="line">   --nolockcheck       Disables check for remote instances using one           </span><br><span class="line">                       installation.                                           </span><br><span class="line">   --infilter=&#123;filter&#125; Force an input filter type if possible. For example:    </span><br><span class="line">                       --infilter=&quot;Calc Office Open XML&quot;                     </span><br><span class="line">                       --infilter=&quot;Text (encoded):UTF8,LF,,,&quot;                </span><br><span class="line">   --pidfile=&#123;file&#125;    Store soffice.bin pid to &#123;file&#125;.                        </span><br><span class="line">   --display &#123;display&#125; Sets the DISPLAY environment variable on UNIX-like      </span><br><span class="line">                       platforms to the value &#123;display&#125; (only supported by a   </span><br><span class="line">                       start script).                                          </span><br><span class="line"></span><br><span class="line">User/programmatic interface control:                                           </span><br><span class="line">   --nologo            Disables the splash screen at program start.            </span><br><span class="line">   --minimized         Starts minimized. The splash screen is not displayed.   </span><br><span class="line">   --nodefault         Starts without displaying anything except the splash    </span><br><span class="line">                       screen (do not display initial window).                 </span><br><span class="line">   --invisible         Starts in invisible mode. Neither the start-up logo nor </span><br><span class="line">                       the initial program window will be visible. Application </span><br><span class="line">                       can be controlled, and documents and dialogs can be     </span><br><span class="line">                       controlled and opened via the API. Using the parameter, </span><br><span class="line">                       the process can only be ended using the taskmanager     </span><br><span class="line">                       (Windows) or the kill command (UNIX-like systems). It   </span><br><span class="line">                       cannot be used in conjunction with --quickstart.        </span><br><span class="line">   --headless          Starts in &quot;headless mode&quot; which allows using the      </span><br><span class="line">                       application without GUI. This special mode can be used  </span><br><span class="line">                       when the application is controlled by external clients  </span><br><span class="line">                       via the API.                                            </span><br><span class="line">   --norestore         Disables restart and file recovery after a system crash.</span><br><span class="line">   --safe-mode         Starts in a safe mode, i.e. starts temporarily with a   </span><br><span class="line">                       fresh user profile and helps to restore a broken        </span><br><span class="line">                       configuration.                                          </span><br><span class="line">   --accept=&#123;connect-string&#125;  Specifies a UNO connect-string to create a UNO   </span><br><span class="line">                       acceptor through which other programs can connect to    </span><br><span class="line">                       access the API. Note that API access allows execution   </span><br><span class="line">                       of arbitrary commands.                                  </span><br><span class="line">                       The syntax of the &#123;connect-string&#125; is:                  </span><br><span class="line">                         connection-type,params;protocol-name,params           </span><br><span class="line">                       e.g.  pipe,name=&#123;some name&#125;;urp                         </span><br><span class="line">                         or  socket,host=localhost,port=54321;urp              </span><br><span class="line">   --unaccept=&#123;connect-string&#125;  Closes an acceptor that was created with       </span><br><span class="line">                       --accept. Use --unaccept=all to close all acceptors.    </span><br><span class="line">   --language=&#123;lang&#125;   Uses specified language, if language is not selected    </span><br><span class="line">                       yet for UI. The lang is a tag of the language in IETF   </span><br><span class="line">                       language tag.                                           </span><br><span class="line"></span><br><span class="line">Developer arguments:                                                           </span><br><span class="line">   --terminate_after_init                                                      </span><br><span class="line">                       Exit after initialization complete (no documents loaded)</span><br><span class="line">   --eventtesting      Exit after loading documents.                           </span><br><span class="line"></span><br><span class="line">New document creation arguments:                                               </span><br><span class="line">The arguments create an empty document of specified kind. Only one of them may </span><br><span class="line">be used in one command line. If filenames are specified after an argument,     </span><br><span class="line">then it tries to open those files in the specified component.                  </span><br><span class="line">   --writer            Creates an empty Writer document.                       </span><br><span class="line">   --calc              Creates an empty Calc document.                         </span><br><span class="line">   --draw              Creates an empty Draw document.                         </span><br><span class="line">   --impress           Creates an empty Impress document.                      </span><br><span class="line">   --base              Creates a new database.                                 </span><br><span class="line">   --global            Creates an empty Writer master (global) document.       </span><br><span class="line">   --math              Creates an empty Math document (formula).               </span><br><span class="line">   --web               Creates an empty HTML document.                         </span><br><span class="line"></span><br><span class="line">File open arguments:                                                           </span><br><span class="line">The arguments define how following filenames are treated. New treatment begins </span><br><span class="line">after the argument and ends at the next argument. The default treatment is to  </span><br><span class="line">open documents for editing, and create new documents from document templates.  </span><br><span class="line">   -n                  Treats following files as templates for creation of new </span><br><span class="line">                       documents.                                              </span><br><span class="line">   -o                  Opens following files for editing, regardless whether   </span><br><span class="line">                       they are templates or not.                              </span><br><span class="line">   --pt &#123;Printername&#125;  Prints following files to the printer &#123;Printername&#125;,    </span><br><span class="line">                       after which those files are closed. The splash screen   </span><br><span class="line">                       does not appear. If used multiple times, only last      </span><br><span class="line">                       &#123;Printername&#125; is effective for all documents of all     </span><br><span class="line">                       --pt runs. Also, --printer-name argument of             </span><br><span class="line">                       --print-to-file switch interferes with &#123;Printername&#125;.   </span><br><span class="line">   -p                  Prints following files to the default printer, after    </span><br><span class="line">                       which those files are closed. The splash screen does    </span><br><span class="line">                       not appear. If the file name contains spaces, then it   </span><br><span class="line">                       must be enclosed in quotation marks.                    </span><br><span class="line">   --view              Opens following files in viewer mode (read-only).       </span><br><span class="line">   --show              Opens and starts the following presentation documents   </span><br><span class="line">                       of each immediately. Files are closed after the showing.</span><br><span class="line">                       Files other than Impress documents are opened in        </span><br><span class="line">                       default mode , regardless of previous mode.             </span><br><span class="line">   --convert-to OutputFileExtension[:OutputFilterName] \                      </span><br><span class="line">     [--outdir output_dir] [--convert-images-to]                               </span><br><span class="line">                       Batch convert files (implies --headless). If --outdir   </span><br><span class="line">                       isn&apos;t specified, then current working directory is used </span><br><span class="line">                       as output_dir. If --convert-images-to is given, its     </span><br><span class="line">                       parameter is taken as the target filter format for *all*</span><br><span class="line">                       images written to the output format. If --convert-to is </span><br><span class="line">                       used more than once, the last value of                  </span><br><span class="line">                       OutputFileExtension[:OutputFilterName] is effective. If </span><br><span class="line">                       --outdir is used more than once, only its last value is </span><br><span class="line">                       effective. For example:                                 </span><br><span class="line">                   --convert-to pdf *.odt                                      </span><br><span class="line">                   --convert-to epub *.doc                                     </span><br><span class="line">                   --convert-to pdf:writer_pdf_Export --outdir /home/user *.doc</span><br><span class="line">                   --convert-to &quot;html:XHTML Writer File:UTF8&quot; \             </span><br><span class="line">                                --convert-images-to &quot;jpg&quot; *.doc              </span><br><span class="line">                   --convert-to &quot;txt:Text (encoded):UTF8&quot; *.doc              </span><br><span class="line">   --print-to-file [--printer-name printer_name] [--outdir output_dir]         </span><br><span class="line">                       Batch print files to file. If --outdir is not specified,</span><br><span class="line">                       then current working directory is used as output_dir.   </span><br><span class="line">                       If --printer-name or --outdir used multiple times, only </span><br><span class="line">                       last value of each is effective. Also, &#123;Printername&#125; of </span><br><span class="line">                       --pt switch interferes with --printer-name.             </span><br><span class="line">   --cat               Dump text content of the following files to console     </span><br><span class="line">                       (implies --headless). Cannot be used with --convert-to. </span><br><span class="line">   --script-cat        Dump text content of any scripts embedded in the files  </span><br><span class="line">                       to console (implies --headless). Cannot be used with    </span><br><span class="line">                       --convert-to.                                           </span><br><span class="line">   -env:&lt;VAR&gt;[=&lt;VALUE&gt;] Set a bootstrap variable. For example: to set          </span><br><span class="line">                       a non-default user profile path:                        </span><br><span class="line">                       -env:UserInstallation=file:///tmp/test                  </span><br><span class="line"></span><br><span class="line">Ignored switches:                                                              </span><br><span class="line">   -psn                Ignored (MacOS X only).                                 </span><br><span class="line">   -Embedding          Ignored (COM+ related; Windows only).                   </span><br><span class="line">   --nofirststartwizard Does nothing, accepted only for backward compatibility.</span><br><span class="line">   --protector &#123;arg1&#125; &#123;arg2&#125;                                                   </span><br><span class="line">                       Used only in unit tests and should have two arguments.</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。&lt;/li&gt;
&lt;li&gt;本文介绍借助 LibreOffice 将 Office 文当转换成 PDF 文档。&lt;/li&gt;
&lt;li&gt;本文同样适用于 OpenOffice，以下仅以 LibreOffice 为例。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/java/"/>
    
      <category term="LibreOffice" scheme="https://www.lovesofttech.com/categories/java/LibreOffice/"/>
    
      <category term="OpenOffice" scheme="https://www.lovesofttech.com/categories/java/LibreOffice/OpenOffice/"/>
    
      <category term="PDF" scheme="https://www.lovesofttech.com/categories/java/LibreOffice/OpenOffice/PDF/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="LibreOffice" scheme="https://www.lovesofttech.com/tags/LibreOffice/"/>
    
      <category term="OpenOffice" scheme="https://www.lovesofttech.com/tags/OpenOffice/"/>
    
      <category term="PDF" scheme="https://www.lovesofttech.com/tags/PDF/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系</title>
    <link href="https://www.lovesofttech.com/java/timeZone.html"/>
    <id>https://www.lovesofttech.com/java/timeZone.html</id>
    <published>2020-02-22T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.997Z</updated>
    
    <content type="html"><![CDATA[<p>windows 下开发测试没有问题，上线后（CentOS 服务器）发现页面上显示的时间比实际时间少了13小时，来看看到底怎么回事儿。<br><a id="more"></a></p><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><ol><li>开发环境：win10 + windows 版 MySQL 8.0.19</li><li>服务器环境：CentOS7 + MySQL 8.0.19</li><li>SpringMvc + Hibernate + JQuery + Bootstrap，前后端分离开发</li><li>服务器上 Nginx 代理 Tomcat</li><li>上线后，类型为 timestamp 的字段的值，在保存前取的系统时间，系统时间正常，保存之后，比系统时间少了13小时。</li></ol><h1 id="排查"><a href="#排查" class="headerlink" title="排查"></a>排查</h1><p>刚开始排查时，只是通过页面来查看时间，后来发现，这样排查是不科学的，通过查看数据库里保存的值与页面上显示的值，才发现从数据库里取出来的值，到页面显示出来，也有可能相差13小时或者14小时，而这些差异，取决于：</p><ol><li>MySQL 时区</li><li>操作系统时区</li><li>数据库连接参数 serverTimezone。</li></ol><h1 id="各种搭配测试结果"><a href="#各种搭配测试结果" class="headerlink" title="各种搭配测试结果"></a>各种搭配测试结果</h1><p>费话不多说，以下是测试情况</p><table><thead><tr><th style="text-align:left">序号</th><th style="text-align:left">MySQL 时区</th><th style="text-align:left">CentOS 时区</th><th style="text-align:left">连接参数 serverTimezone</th><th>保存到数据库的值</th><th>读出来的值</th></tr></thead><tbody><tr><td style="text-align:left">1</td><td style="text-align:left">+8:00</td><td style="text-align:left">Asia/Shanghai</td><td style="text-align:left">America/New_York</td><td>比实际时间少13小时</td><td>比数据库多13小时</td></tr><tr><td style="text-align:left"><strong>2</strong></td><td style="text-align:left"><strong>+8:00</strong></td><td style="text-align:left"><strong>Asia/Shanghai</strong></td><td style="text-align:left"><strong>Asia/Shanghai</strong></td><td><strong>与实际时间一致</strong></td><td><strong>与数据库一致</strong></td></tr><tr><td style="text-align:left"><strong>3</strong></td><td style="text-align:left"><strong>+8:00</strong></td><td style="text-align:left"><strong>Asia/Shanghai</strong></td><td style="text-align:left"><strong>删除该参数</strong></td><td><strong>与实际时间一致</strong></td><td><strong>与数据库一致</strong></td></tr><tr><td style="text-align:left">4</td><td style="text-align:left">+8:00</td><td style="text-align:left">America/New_York</td><td style="text-align:left">America/New_York</td><td>比实际少13小时</td><td>与数据库一致</td></tr><tr><td style="text-align:left">5</td><td style="text-align:left">+8:00</td><td style="text-align:left">America/New_York</td><td style="text-align:left">Asia/Shanghai</td><td>与实际时间一致</td><td>比数据库少13小时</td></tr><tr><td style="text-align:left">6</td><td style="text-align:left">+8:00</td><td style="text-align:left">America/New_York</td><td style="text-align:left">删除该参数</td><td>与实际时间一致</td><td>比数据库少13小时</td></tr><tr><td style="text-align:left">7</td><td style="text-align:left">默认</td><td style="text-align:left">America/New_York</td><td style="text-align:left">America/New_York</td><td>比实际少13小时</td><td>与数据库一致</td></tr><tr><td style="text-align:left">8</td><td style="text-align:left">默认</td><td style="text-align:left">America/New_York</td><td style="text-align:left">Asia/Shanghai</td><td>与实际时间一致</td><td>比数据库少13小时</td></tr><tr><td style="text-align:left">9</td><td style="text-align:left">默认</td><td style="text-align:left">America/New_York</td><td style="text-align:left">删除该参数</td><td>比实际少14小时</td><td>比数据库多1小时</td></tr><tr><td style="text-align:left">10</td><td style="text-align:left">默认</td><td style="text-align:left">Asia/Shanghai</td><td style="text-align:left">America/New_York</td><td>比实际少13小时</td><td>比数据库多13小时</td></tr><tr><td style="text-align:left"><strong>11</strong></td><td style="text-align:left"><strong>默认</strong></td><td style="text-align:left"><strong>Asia/Shanghai</strong></td><td style="text-align:left"><strong>Asia/Shanghai</strong></td><td><strong>与实际时间一致</strong></td><td><strong>与数据库一致</strong></td></tr><tr><td style="text-align:left">12</td><td style="text-align:left">默认</td><td style="text-align:left">Asia/Shanghai</td><td style="text-align:left">删除该参数</td><td>比实际少14小时</td><td>比数据库多14小时</td></tr></tbody></table><p>注：应用程序读取数据库中 timestamp 字段的值，在修改服务器时区之后，要重启 Tomcat 之后才会生效。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>从上表可以看出，要想让 timestamp 字段保存到数据库的值与读出来的值跟北京时间（时区定义的是中国东八区时间）一致，只有序号 2、3、11 这三种配置才可以，更进一步总结：</p><ol><li>MySQL 时区与服务器（这里是CentOS）时区均为中国东八区，MySQL 连接参数要么也是东八区，要么不指定（删除 serverTimezone 参数）。</li><li>服务器（这里是CentOS）时区与数据库连接参数均为中国东八区，MySQL 数据库时区可以保持默认配置。</li></ol><p>从上表还可以看出，timestamp 字段的值：</p><ol><li>服务器（这里是CentOS）时区与连接参数 serverTimezone 时区一致的情况，读出来的值与数据库一致，否则会自动做转换。</li><li>保存到数据库的值与连接参数 serverTimezone 指定的时区有关，如果没有该参数，则与 MySQL 默认时区有关。</li></ol><p>以下，介绍相关知识点。</p><h1 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h1><h2 id="MySQL-时区"><a href="#MySQL-时区" class="headerlink" title="MySQL 时区"></a>MySQL 时区</h2><p>查看时区：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%time_zone%&apos;;</span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone |        |</span><br><span class="line">| time_zone        | SYSTEM |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows in set, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure></p><p>MySQL 的时区默认与系统时区一致。</p><h3 id="配置-MySQL-默认时区"><a href="#配置-MySQL-默认时区" class="headerlink" title="配置 MySQL 默认时区"></a>配置 MySQL 默认时区</h3><p>MySQL使用的time_zone属性是UTC时间即：+00:00，而北京时间比UTC时间早8小时，即：UTC+08:00</p><h4 id="永久修改"><a href="#永久修改" class="headerlink" title="永久修改"></a>永久修改</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br></pre></td></tr></table></figure><p>在 <code>[mysqld]</code> 下面添加一行：<code>default-time_zone = &#39;+8:00&#39;</code></p><p>重启 MySQL 生效：<code>systemctl restart mysqld</code></p><h4 id="临时修改"><a href="#临时修改" class="headerlink" title="临时修改"></a>临时修改</h4><p>mysql&gt; set time_zone = ‘+8:00’;<br>mysql&gt; set global time_zone = ‘+8:00’;</p><ul><li>优点：立即生效，不用重启 MySQL</li><li>缺点：重启 MySQL 后会失效</li></ul><h3 id="配置默认时区后"><a href="#配置默认时区后" class="headerlink" title="配置默认时区后"></a>配置默认时区后</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like &apos;%time_zone%&apos;;</span><br><span class="line">+------------------+--------+</span><br><span class="line">| Variable_name    | Value  |</span><br><span class="line">+------------------+--------+</span><br><span class="line">| system_time_zone | CST    |</span><br><span class="line">| time_zone        | +08:00 |</span><br><span class="line">+------------------+--------+</span><br><span class="line">2 rows in set (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select @@global.time_zone,@@session.time_zone,@@global.system_time_zone;</span><br><span class="line">+--------------------+---------------------+---------------------------+</span><br><span class="line">| @@global.time_zone | @@session.time_zone | @@global.system_time_zone |</span><br><span class="line">+--------------------+---------------------+---------------------------+</span><br><span class="line">| +08:00             | +08:00              | CST                       |</span><br><span class="line">+--------------------+---------------------+---------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="时区概念"><a href="#时区概念" class="headerlink" title="时区概念"></a>时区概念</h2><p>地球总是自西向东自转，东边总比西边先看到太阳，东边的时间也总比西边的早。东边时刻与西边时刻的差值不仅要以时计，而且还要以分和秒来计算。整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。UTC与格林尼治平均时(GMT, Greenwich Mean Time)一样，都与英国伦敦的本地时相同。</p><p>关于时间的几个标准：</p><ol><li>CST：中国标准时间（China Standard Time），这个解释可能是针对 RedHat Linux。</li><li>JST：日本标准时间（Japan Standard Time）。</li><li>UTC：协调世界时，又称世界标准时间，简称UTC，从英文国际时间/法文协调时间”Universal Time/Temps Cordonné”而来。中国大陆、香港、澳门、台湾、蒙古国、新加坡、马来西亚、菲律宾、澳洲西部的时间与UTC的时差均为+8，也就是UTC+8。</li><li>GMT：格林尼治标准时间（旧译格林威治平均时间或格林威治标准时间；英语：Greenwich Mean Time，GMT）是指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。</li></ol><p>我们国家跨越了东五区、东六区、东七区、东八区、东九区五个时区，一般都统一采用东八区计时时间。</p><h3 id="查看-CentOS-服务器时区"><a href="#查看-CentOS-服务器时区" class="headerlink" title="查看 CentOS 服务器时区"></a>查看 CentOS 服务器时区</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[utomcat@ebs-60027 ~]$ date -R</span><br><span class="line">Sun, 23 Feb 2020 21:55:49 +0800</span><br></pre></td></tr></table></figure><p>上面命令 <code>date -R</code> 输出了 <code>+0800</code> 表示东八区，也就是我们国家的时间。相反，如果是 <code>-0800</code> 表示美国旧金山所在的时区，西八区。<br>我们在安装Linux操作系统的时候，如果地区选择了Asia/Shanghai，那么系统的时区就是东八区。</p><h3 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h3><ul><li>通过 timedatectl 可以查看服务器具体的时区</li><li>timedatectl set-timezone <code>timezone</code> 来设置时区<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@ebs-60027 ~]# timedatectl set-timezone Asia/Shanghai</span><br><span class="line">[root@ebs-60027 ~]# timedatectl</span><br><span class="line">      Local time: Sun 2020-02-16 10:23:04 CST</span><br><span class="line">  Universal time: Sun 2020-02-16 02:23:04 UTC</span><br><span class="line">        RTC time: Sun 2020-02-16 02:23:04</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: n/a</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n/a</span><br><span class="line">[root@ebs-60027 ~]# timedatectl set-timezone America/New_York</span><br><span class="line">[root@ebs-60027 ~]# timedatectl</span><br><span class="line">      Local time: Sun 2020-02-16 10:56:48 CST</span><br><span class="line">  Universal time: Sun 2020-02-16 02:56:48 UTC</span><br><span class="line">        RTC time: Sun 2020-02-16 02:56:48</span><br><span class="line">       Time zone: America/New_York (CST, +0800)</span><br><span class="line">     NTP enabled: n/a</span><br><span class="line">NTP synchronized: no</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: n/a</span><br></pre></td></tr></table></figure></li></ul><h2 id="MySQL-timestamp-类型-和-datetime-类型"><a href="#MySQL-timestamp-类型-和-datetime-类型" class="headerlink" title="MySQL timestamp 类型 和 datetime 类型"></a>MySQL timestamp 类型 和 datetime 类型</h2><ul><li>timestamp类型：会自动把时间转成 gmt 时间存储时间，取出时，又会自动转换成服务器的时区。</li><li>datetime类型： 没有时区概念，对于有跨国业务的数据库，存储时统一转换成 gmt 格式存储，取出时指定时区显示。</li></ul><h2 id="关于时区的调优"><a href="#关于时区的调优" class="headerlink" title="关于时区的调优"></a>关于时区的调优</h2><ul><li>对于使用timestamp的场景，MySQL 在访问 timestamp 字段时会做时区转换，当time_zone 设置为 system （默认）时，MySQL 访问每一行的 timestamp 字段时，都会通过 libc 的时区函数，获取 Linux 设置的时区，在这个函数中会持有 mutex，当大量并发 SQL 需要访问 timestamp 字段时，会出现 mutex 竞争。MySQL 访问每一行都会做这个时区转换，转换完后释放 mutex，所有等待这个 mutex 的线程全部唤醒，结果又会只有一个线程会成功持有 mutex，其余又会再次 sleep，这样就会导致 context switch 非常高但 qps 很低，系统吞吐量急剧下降。</li><li>就是当参数设置 time_zone=system 的时候，查询 timestamp 字段，会调用系统的时区做时区转换，有全局锁 _libc_lock_lock 的保护，导致线程并发环境下，系统性能受限。如果 time_zone=’+8:00’则不会调用系统时区，则不会触发系统时区转换，使用 MySQL 自身转换，大大提高了性能。</li></ul><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>有关时间字段，统一用时间戳（int类型）保存可以有效避免时区带来的问题。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.seiang.com/?p=350" rel="external nofollow noopener noreferrer" target="_blank">聊聊Linux和MYSQL的时区问题</a></li><li><a href="https://mp.weixin.qq.com/s/AtyaIP92L6KnZFB9bQA3ug" rel="external nofollow noopener noreferrer" target="_blank">MySQL参数 time_zone 导致线上sys cpu高</a></li><li><a href="https://blog.csdn.net/cug_jiang126com/article/details/51985396" rel="external nofollow noopener noreferrer" target="_blank">故障案例–binlog_format不为row模式下关于时区设置的一个坑</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;windows 下开发测试没有问题，上线后（CentOS 服务器）发现页面上显示的时间比实际时间少了13小时，来看看到底怎么回事儿。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/java/"/>
    
      <category term="CentOS7" scheme="https://www.lovesofttech.com/categories/java/CentOS7/"/>
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/categories/java/CentOS7/MySQL/"/>
    
      <category term="timeZone" scheme="https://www.lovesofttech.com/categories/java/CentOS7/MySQL/timeZone/"/>
    
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/tags/MySQL/"/>
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="CentOS7" scheme="https://www.lovesofttech.com/tags/CentOS7/"/>
    
      <category term="timeZone" scheme="https://www.lovesofttech.com/tags/timeZone/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体</title>
    <link href="https://www.lovesofttech.com/linux/centOS7LibreOffice.html"/>
    <id>https://www.lovesofttech.com/linux/centOS7LibreOffice.html</id>
    <published>2020-02-22T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.024Z</updated>
    
    <content type="html"><![CDATA[<ul><li>项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 的转换功能，本文介绍 LibreOffice 环境的搭建。</li><li>在线预览的实现，请参考：<a href="/java/javaLibreOffice.html">Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能</a></li></ul><a id="more"></a><h1 id="下载并安装-LibreOffice-6-3-4"><a href="#下载并安装-LibreOffice-6-3-4" class="headerlink" title="下载并安装 LibreOffice 6.3.4"></a>下载并安装 LibreOffice 6.3.4</h1><ul><li>官网：<a href="https://www.libreoffice.org/" rel="external nofollow noopener noreferrer" target="_blank">https://www.libreoffice.org/</a></li><li>下载页面：<a href="https://www.libreoffice.org/download/download/" rel="external nofollow noopener noreferrer" target="_blank">https://www.libreoffice.org/download/download/</a><ul><li>选好针对的平台（windows、linux），下载相关版本，这里推荐下载稳定版本：6.3.4</li></ul></li></ul><p>除了下载主安装包外，还需要下载中文包，我下载到的两个文件分别是：</p><ul><li>LibreOffice_6.3.4_Linux_x86-64_rpm.tar.gz</li><li>LibreOffice_6.3.4_Linux_x86-64_rpm_langpack_zh-CN.tar.gz</li></ul><p>分别解压：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf LibreOffice_6.3.4_Linux_x86-64_rpm.tar.gz</span><br><span class="line">tar -xzvf LibreOffice_6.3.4_Linux_x86-64_rpm_langpack_zh-CN.tar.gz</span><br></pre></td></tr></table></figure></p><p>分别进入这两个文件的 RPMS 目录，用命令 <code>yum localinstall *.rpm</code> 执行本地安装，我解压后的两个目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /root/soft/LibreOffice_6.3.4.2_Linux_x86-64_rpm_langpack_zh-CN/RPMS</span><br><span class="line">cd /root/soft/LibreOffice_6.3.4.2_Linux_x86-64_rpm/RPMS</span><br></pre></td></tr></table></figure></p><p>执行 <code>libreoffice6.3 --version</code> 查看版本，提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/libreoffice6.3/program/soffice.bin: error while loading shared libraries: libcairo.so.2: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure></p><p>解决：安装相应的依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cairo cups-libs libSM</span><br></pre></td></tr></table></figure></p><h1 id="安装中文字体"><a href="#安装中文字体" class="headerlink" title="安装中文字体"></a>安装中文字体</h1><p>仅仅安装官方的中文字体包是不够的，很多时候我们要转换的中文 .doc/.docx，.ppt/.pptx 文件，用到的字体都是 windows 系统下面的，所以，需要把 windows 系统下面的中文字体全部都安装到 CentOS7 上。</p><p>在终端执行 sz 命令上传字体时，定位到 windows 的 Fonts 目录，提示无权限。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/general/chineseFontSz.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><ul><li><p>我们可以事先准备好所有中文字体，如下，在<code>设计用于</code>列，倒排序，复制所有简体中文字体到非系统目录，上传的时候方便全部上传。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/general/chineseFonts.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>在 CentOS7 上，以 root 身份安装 fontconfig <code>yum -y install fontconfig</code></p></li><li>创建中文字体目录 <code>mkdir -p /usr/share/fonts/chinese</code></li><li>然后上传刚才准备好的字体文件到 <code>/usr/share/fonts/chinese</code></li><li>安装 ttmkfdir <code>yum -y install ttmkfdir</code>（注：这一步不确定是否必要，todo:下次再配置服务器先跳过这一步）</li></ul><p>安装之后，跳过了网上教程的后续步骤，试着转换了一个 ppt 到 pdf，中文全都正常。</p><p>为了确定这样的中文安装步骤可以正常工作，于是将中文目录的中文字体移到别的目录，再次转换同样的 ppt，结果得到的 pdf 文件的中文字体全部变成方框了，于是再把中文字体移回<code>/usr/share/fonts/chinese</code>，再次转换，中文正常。</p><p>那么，安装中文字体就算成功了。</p><h2 id="用-fc-list-检测"><a href="#用-fc-list-检测" class="headerlink" title="用 fc-list 检测"></a>用 <code>fc-list</code> 检测</h2><p><code>/usr/share/fonts/chinese/</code> 目录下的中文字体都列出来了，再一次证明中文字体安装正确，结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@ebs-60027 lib64]# fc-list</span><br><span class="line">/usr/share/fonts/chinese/stxingka.ttf: STXingkai:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/幼圆.ttf: YouYuan:style=Regular</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSansCondensed-Oblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Oblique,Oblique</span><br><span class="line">/usr/share/fonts/chinese/msyh.ttc: Microsoft YaHei:style=Normal</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSansCondensed-Bold.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold,Bold</span><br><span class="line">/usr/share/fonts/chinese/stxihei.ttf: STXihei:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/simsun.ttc: SimSun,宋体:style=Regular,常规</span><br><span class="line">/usr/share/fonts/chinese/msyhbd.ttc: Microsoft YaHei:style=Έντονα</span><br><span class="line">/usr/share/fonts/chinese/stkaiti.ttf: STKaiti:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/Dengl.ttf: DengXian,DengXian Light:style=Light,Regular</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSans.ttf: DejaVu Sans:style=Book</span><br><span class="line">/usr/share/fonts/chinese/Deng.ttf: DengXian:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/msyh.ttc: Microsoft YaHei UI:style=Normal</span><br><span class="line">/usr/share/fonts/chinese/fzstk.ttf: FZShuTi:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/msyhbd.ttc: Microsoft YaHei UI:style=Έντονα</span><br><span class="line">/usr/share/fonts/chinese/stfangso.ttf: STFangsong:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/Dengb.ttf: DengXian:style=Bold</span><br><span class="line">/usr/share/fonts/chinese/stcaiyun.ttf: STCaiyun:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/simsun.ttc: NSimSun,新宋体:style=Regular,常规</span><br><span class="line">/usr/share/fonts/chinese/msyhl.ttc: Microsoft YaHei UI,Microsoft YaHei UI Light:style=Light,Regular</span><br><span class="line">/usr/share/fonts/chinese/simkai.ttf: KaiTi:style=Regular,Normaali</span><br><span class="line">/usr/share/fonts/chinese/fzytk.ttf: FZYaoTi:style=Regular</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSans-Bold.ttf: DejaVu Sans:style=Bold</span><br><span class="line">/usr/share/fonts/chinese/stsong.ttf: STSong:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/sthupo.ttf: STHupo:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/simli.ttf: LiSu:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/stxinwei.ttf: STXinwei:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/stliti.ttf: STLiti:style=Regular</span><br><span class="line">/usr/share/fonts/chinese/stzhongs.ttf: STZhongsong:style=Regular</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSansCondensed.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed,Book</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSans-ExtraLight.ttf: DejaVu Sans,DejaVu Sans Light:style=ExtraLight</span><br><span class="line">/usr/share/fonts/chinese/simsunb.ttf: SimSun\-ExtB:style=Regular,obyčejné</span><br><span class="line">/usr/share/fonts/chinese/simhei.ttf: SimHei:style=Normal</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSansCondensed-BoldOblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold Oblique,Bold Oblique</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSans-Oblique.ttf: DejaVu Sans:style=Oblique</span><br><span class="line">/usr/share/fonts/chinese/simfang.ttf: FangSong:style=Regular,Normaali</span><br><span class="line">/usr/share/fonts/dejavu/DejaVuSans-BoldOblique.ttf: DejaVu Sans:style=Bold Oblique</span><br><span class="line">/usr/share/fonts/chinese/msyhl.ttc: Microsoft YaHei,Microsoft YaHei Light:style=Light,Regular</span><br></pre></td></tr></table></figure></p><h1 id="windows-开发环境搭建"><a href="#windows-开发环境搭建" class="headerlink" title="windows 开发环境搭建"></a>windows 开发环境搭建</h1><p>到 <a href="https://www.libreoffice.org/download/download/" rel="external nofollow noopener noreferrer" target="_blank">https://www.libreoffice.org/download/download/</a> 下载 .msi 版本直接安装，安装好后，将安装目录下的 program 目录添加到环境变量，在 windows 控制台执行：<code>soffice -version</code>，如果弹出一个新的控制台窗口显示版本信息，或者如下显示，说明安装配置已成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Andy&gt;soffice --version</span><br><span class="line">LibreOffice 6.4.0.3 b0a288ab3d2d4774cb44b62f04d5d28733ac6df8</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 的转换功能，本文介绍 LibreOffice 环境的搭建。&lt;/li&gt;
&lt;li&gt;在线预览的实现，请参考：&lt;a href=&quot;/java/javaLibreOffice.html&quot;&gt;Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="CentOS7" scheme="https://www.lovesofttech.com/categories/CentOS7/"/>
    
      <category term="LibreOffice" scheme="https://www.lovesofttech.com/categories/CentOS7/LibreOffice/"/>
    
    
      <category term="LibreOffice" scheme="https://www.lovesofttech.com/tags/LibreOffice/"/>
    
      <category term="CentOS7" scheme="https://www.lovesofttech.com/tags/CentOS7/"/>
    
  </entry>
  
  <entry>
    <title>基于spring 切面（AOP）实现动态多数据源切换，基于 MyBatis 插件方式实现动态分表查询</title>
    <link href="https://www.lovesofttech.com/mybatis/mybatisPluginShard.html"/>
    <id>https://www.lovesofttech.com/mybatis/mybatisPluginShard.html</id>
    <published>2020-01-04T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.073Z</updated>
    
    <content type="html"><![CDATA[<p>基于spring 切面（AOP）实现动态多数据源切换；基于 MyBatis 插件方式实现动态分表查询。 来源于多个已上线项目实践，本项目有完整的测试示例。<br><a id="more"></a></p><h1 id="mybatis-plugin-shard"><a href="#mybatis-plugin-shard" class="headerlink" title="mybatis-plugin-shard"></a>mybatis-plugin-shard</h1><ul><li>基于spring 切面（AOP）实现动态多数据源切换。</li><li>基于 MyBatis 插件方式实现动态分表策略。</li><li>来源于多个已上线项目实践。</li><li>本项目有完整的测试示例。</li></ul><p>以后会出详细的文档，敬请期待。</p><h1 id="todo"><a href="#todo" class="headerlink" title="todo"></a>todo</h1><ul><li>[x] 将分库分表配置与数据源配置统一放到文件 db-config.xml，并作为配置的切面的参数，在整个分库分表过程都可访问。</li><li>[x] 完善分表逻辑，比起之前将分库分表配置在一个文件中更加优雅，也更加灵活，扩展性越好。</li><li>[x] 完善文档</li></ul><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><ul><li>github: <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/uncleAndyChen/mybatis-plugin-shard</a></li><li>gitee: &nbsp;&nbsp;<a href="https://gitee.com/uncleAndyChen/mybatis-plugin-shard" rel="external nofollow noopener noreferrer" target="_blank">https://gitee.com/uncleAndyChen/mybatis-plugin-shard</a></li></ul><h1 id="配套-MBG-增强插件"><a href="#配套-MBG-增强插件" class="headerlink" title="配套 MBG 增强插件"></a>配套 MBG 增强插件</h1><p>查看 MBG 增强插件请移步：<a href="https://github.com/uncleAndyChen/mybatis-generator" rel="external nofollow noopener noreferrer" target="_blank">mybatis-generator</a></p><ul><li>用该 MBG 增强插件生成的 {xxx}Mapper.xml，会把表名用[`]（不包括中括号）引起来，这样做的目的是分表时，动态给表名添加后缀后替换原始表名时不会“添乱”。</li><li>注意 [`] 并非单引号，是在ESC 键下面、Q 键左上角的数字键 1 的左边那个键对应的“单引号”。</li><li>比如有两张表：biz_trade、biz_trade_order，现在需要动态将 biz_trade 替换成 biz_trade_9，如果表名前后没有[`]，则 biz_trade_order 也会被替换，替换后为：biz_trade_9_order，这显然不是我们希望发生的。</li></ul><h1 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h1><ul><li>分库：简单的分库功能，更确切的讲，是多数据源管理，可根据业务动态切换，基于切面（AOP）。</li><li>分表：对于同一数据源或不同数据源下的相同表结构的表，通过简单配置，实现分表查询功能。<ul><li>适用数据量增加迅速的业务场景。</li><li>底层实现：基于 MyBatis 插件，拦截最终执行的 SQL 语句并且根据分表配置对 SQL 语句中的表名进行修改之后再执行。<ul><li>要求表名必须用 [`]（不包括中括号）引起来。请使用增强插件（<a href="https://github.com/uncleAndyChen/mybatis-generator" rel="external nofollow noopener noreferrer" target="_blank">mybatis-generator</a>）生成 Mapper 和 entity model。</li></ul></li></ul></li></ul><h1 id="分库（多数据源管理）实现方式"><a href="#分库（多数据源管理）实现方式" class="headerlink" title="分库（多数据源管理）实现方式"></a>分库（多数据源管理）实现方式</h1><p>spring 框架获取数据源是在 <code>org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.determineTargetDataSource</code> 方法中定义的：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> DataSource <span class="title">determineTargetDataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Assert.notNull(<span class="keyword">this</span>.resolvedDataSources, <span class="string">"DataSource router not initialized"</span>);</span><br><span class="line">    Object lookupKey = determineCurrentLookupKey();</span><br><span class="line">    DataSource dataSource = <span class="keyword">this</span>.resolvedDataSources.get(lookupKey);</span><br><span class="line">    <span class="keyword">if</span> (dataSource == <span class="keyword">null</span> &amp;&amp; (<span class="keyword">this</span>.lenientFallback || lookupKey == <span class="keyword">null</span>)) &#123;</span><br><span class="line">        dataSource = <span class="keyword">this</span>.resolvedDefaultDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dataSource == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Cannot determine target DataSource for lookup key ["</span> + lookupKey + <span class="string">"]"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dataSource;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li>该方法首先通过 determineCurrentLookupKey() 来获得数据源的 key 值 lookupKey，在本项目中，如果 lookupKey 为 null，那么获取到的 dataSource 肯定也是为 null 的，这时就去取默认数据源。</li><li><p>查看 determineCurrentLookupKey() 的定义：<code>protected abstract Object determineCurrentLookupKey();</code>，是一个抽象方法，如果我们自己来实现这个方法，那么就可以在每次操作数据库之前设置好数据源。本项目重写该方法的类是：ChooseDataSource</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class ChooseDataSource extends AbstractRoutingDataSource &#123;</span><br><span class="line">    @Override</span><br><span class="line">    protected Object determineCurrentLookupKey() &#123;</span><br><span class="line">        return HandleDataSource.getSchemaKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>ChooseDataSource 类继续自 AbstractRoutingDataSource，重写了 determineCurrentLookupKey() 方法，这就是实现拦截器的关键所在，符合拦截器规则的每次请求，拦截器通过设置 lookupKey 来动态设置数据源，从而达到分库（多数据管理）的目的。</p></li><li>ChooseDataSource 定义好了，如何使用呢？请看文件 <code>db-source.xml</code> 中配置的 dataSource：<code>&lt;bean id=&quot;dataSource&quot; class=&quot;common.aspect.ChooseDataSource&quot; primary=&quot;true&quot;&gt;</code></li><li>ChooseDataSource 类中用到的 HandleDataSource() 是为分库分表插件的拦截器准备的，在此就不一一展开了，如果想了解详情，请下载源码 debug 起来，打个断点、跟踪，一切尽收眼底~~</li></ul><h1 id="service-类在拦截器规则之外的数据源"><a href="#service-类在拦截器规则之外的数据源" class="headerlink" title="service 类在拦截器规则之外的数据源"></a>service 类在拦截器规则之外的数据源</h1><ul><li>service 类（如SysDeptService），在拦截器规则之外的情况下，分库分表插件没有工作，会使用默认数据源，如下：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/java/mybatis-shard-default-data-source.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="指定数据源的三种方式"><a href="#指定数据源的三种方式" class="headerlink" title="指定数据源的三种方式"></a>指定数据源的三种方式</h1><ol><li>通过参数 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java" rel="external nofollow noopener noreferrer" target="_blank">ShardRequest.java</a> 指定：优先级最高，也最灵活。<ul><li>优点：可以根据具体业务场景决定要连接哪个数据源，可以在满足某种特定条件下动态设置，运行时决定。</li></ul></li><li>注解。可用在类和方法上，方法注解优先于类注解。优先级第二。<ul><li>优点：在同一个类里可以灵活的连接多个数据源，如果没有这种业务需求，则建议用第三种。</li></ul></li><li>biz service 配置，优先级最低。<ul><li>以上两种方式均没有的情况下，会读取 ShardConfig.shardSchemaInterfaceClassNameList 配置信息，在运行过程中，通过 AOP 拦截 biz.service.impl，从而识别应该使用哪个数据源，达到分库（多数据源管理）的目的。</li><li>优点：可以由专人统一管理，同时生产环境与开发、测试环境可以用不同的配置信息，开发人员与测试人员不用关注分库的细节。</li><li>可参考本项目的配置项：<code>biz\biz-config\src\main\resources\db-source.xml</code> 的 <code>&lt;property name=&quot;shardSchemaInterfaceClassNameList&quot;&gt;</code>。</li></ul></li></ol><h1 id="最佳实践–基于接口编程"><a href="#最佳实践–基于接口编程" class="headerlink" title="最佳实践–基于接口编程"></a>最佳实践–基于接口编程</h1><ul><li>如果以上三种方式都没有找到数据源，或者 service 类在拦截器规则之外，则使用默认数据源，所以，对于非默认数据库的操作，一定要通过以上三种方式之一来指定数据源，并且一定要符合 <code>biz\biz-config\src\main\resources\db-source.xml</code> 定义的拦截规则，该规则一定是基于接口编程的。</li><li>对于默认数据库的操作，可以不基于接口编程。</li><li>是否要基于接口编程，这个需要根据项目的实际情况灵活制定，本项目的 SysDeptService、UserService 没有基于接口编程，这里只是<strong>示例，并不一定是最佳实践（可能不适合你的项目）</strong>。</li><li><strong>真实项目建议统一基于接口编程</strong>，先不说这是大师们推荐的方式，也是很多成功开源项目采用的方式，这里不说长篇大论，这里只说一下实际体会：统一基于接口编程，方便将来扩展，也不用给团队成员解释为什么有的基于接口，而有的没有，解释了可能也有人理解不好，而且，可怕的是，可能有团队成员在该用接口时不用，遇到问题了来问你怎么回事儿。总之，统一好规则，可以避免好多坑。</li></ul><h1 id="分库分表思路"><a href="#分库分表思路" class="headerlink" title="分库分表思路"></a>分库分表思路</h1><ul><li>分库思路：<ul><li>每个库有一个唯一的标志，起名叫 shardKeySchema，每个数据库的 shardKeySchema 与 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml" rel="external nofollow noopener noreferrer" target="_blank">db-source.xml</a> 定义的数据源 dataSource -&gt; targetDataSources -&gt; map -&gt; key 一一对应。</li><li>用户在初始化时根据业务规则分配到某一个库，将该库的 shardKeySchema 保存到用户表。</li></ul></li><li>分表思路：<ul><li>每个用户分配一个用于分表的数字编号 shardKeyTableNumber，同样保存到用户表。</li></ul></li><li>用户表：<ul><li>集中在一个库用于统一登录验证，登录时获取用户 shardKeySchema 和 shardKeyTableNumber 并将用户登录信息缓存于 Session 或非关系型数据库，业界常用的如 redis、memcached。</li></ul></li><li>业务操作请求：<ul><li>在请求数据时，就可以根据 shardKeySchema 动态切换数据源，根据 shardKeyTableNumber 决定查哪张表了（分表操作通过 MyBatis 插件实现）。</li></ul></li></ul><h1 id="分表分库场景"><a href="#分表分库场景" class="headerlink" title="分表分库场景"></a>分表分库场景</h1><ul><li>场景一：<ul><li>SaaS 平台，用户量成千上万，交易表 biz_trade 每天100万级增长，如果只用一个库的一张表，写入和读取压力会非常大，会成为瓶颈，所以需要分库分表。</li><li>请求数据时，需要通过 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java" rel="external nofollow noopener noreferrer" target="_blank">ShardRequest.java</a> 传 shardKeySchema 和 shardKeyTableNumber 参数。</li><li>业务场景之：平均分配<ul><li>每个数据库实例最多分配 10 万用户，超过 10 万的用户，再分配到新库。</li><li>交易记录平均分到 10 张表，这就意味着用于分表的 shardKeyTableNumber，一个数字编号最多同时分配给一万个用户。</li><li>用户请求数据时，将用户的 shardKeyTableNumber 除以 10，将余数作为分表后缀，比如用户的 shardKeyTableNumber=8888，那么，8888%10=8，则用户的交易表是 biz_trade_8。</li><li>同理，如果要平均分配到 100 张表，那么就除以 100 再取余作为分表后缀，8888%100=88，则用户的交易表是 biz_trade_88。</li></ul></li><li>业务场景之：区别对待<ul><li>在平均分配的基础上，由于运营需要，现在有 vip 客户，要保证 vip 客户的用户体验，vip 客户的数据库读写速度要快，那怎么办呢？</li><li>其实只要针对这部分用户再制定一套规则就可以了，因为 shardKeySchema 和 shardKeyTableNumber 都是可以指定的。</li><li>如果用户由一般用户变为了 vip 用户，那么在重新指定 shardKeySchema 和 shardKeyTableNumber 之后，用户原来的数据做相应的迁移即可。</li></ul></li></ul></li><li>场景二：<ul><li>不同于场景一，在某一些业务场景，需要与其它业务系统做对接，在其它系统不能提供 api 的情况下，直接操作数据库无疑是最快也最直接的方式。</li><li>这种情况，不同业务数据保存在不同的数据库，请求数据的时候，对于从哪个数据库请求数据是明确的，那么最直接的方式就是使用注解，或者配置 ShardConfig.shardSchemaInterfaceClassNameList。</li><li>在不需要分表的情况下，用注解和配置 ShardConfig.shardSchemaInterfaceClassNameList 就够了，这种情况下请求数据时，不需要通过 ShardRequest（<a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java" rel="external nofollow noopener noreferrer" target="_blank">ShardRequest.java</a>）传 shardKeySchema 和 shardKeyTableNumber 参数。</li><li>当然，也可以不用注解也不用配置 ShardConfig.shardSchemaInterfaceClassNameList，还是通过 ShardRequest 传递参数也行，怎么灵活怎么来。</li></ul></li><li>场景三：<ul><li>分表是确定的，不是动态分配的，那么 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java" rel="external nofollow noopener noreferrer" target="_blank">ShardRequest.java</a> 只传 shardKeyTable 即可。</li></ul></li></ul><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><ul><li><code>git clone https://github.com/uncleAndyChen/mybatis-plugin-shard.git</code></li><li><p>因为依赖统一管理，添加了一个父模块：dependencies，只有一个 pom.xml 文件，需要先把这个 model 安装到本地仓库，否则会去 maven 配置的仓库下载。打开 cmd 窗口，在项目根目录下操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd dependencies</span><br><span class="line">mvn clean</span><br><span class="line">mvn compile</span><br><span class="line">mvn install</span><br></pre></td></tr></table></figure></li><li><p>强烈建议：maven 远程仓库添加阿里云镜像。</p><ul><li>修改 maven 根目录下 <code>config/settings.xml</code>，在 <code>&lt;mirrors&gt;</code> 下添加：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt; </span><br><span class="line">    &lt;id&gt;alimaven&lt;/id&gt; </span><br><span class="line">    &lt;name&gt;aliyun maven&lt;/name&gt; </span><br><span class="line">    &lt;url&gt;https://maven.aliyun.com/repository/jcenter&lt;/url&gt; </span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; </span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>用你喜欢的 IDE 导入项目，如果你要我推荐一款 IDE，那么我强烈推荐 IntelliJ IDEA，官网：<a href="http://www.jetbrains.com/" rel="external nofollow noopener noreferrer" target="_blank">http://www.jetbrains.com/</a></p></li><li>IDE 安装 Lombok 插件。</li><li>MySQL 数据库，导入 <code>docs/schemas.sql</code></li><li>修改 <code>biz/biz-config/src/main/resources/jdbc.properties</code> 中连接数据库的参数</li><li>启动</li><li>访问：<code>http://localhost:81</code>，可以测试以三种不同方式切换数据源来查询数据。具体细节请看源代码，以后会出详细的文档，敬请期待。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/java/mybatis-shard-api-test.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="数据源配置（部分）"><a href="#数据源配置（部分）" class="headerlink" title="数据源配置（部分）"></a>数据源配置（部分）</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"common.aspect.ChooseDataSource"</span> <span class="attr">primary</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultTargetDataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSourceSystem"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下面的各个 0key 需要配置到 shardTableConfigView 的 schemaKeyList --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"targetDataSources"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span> <span class="attr">key-type</span>=<span class="string">"java.lang.String"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"system"</span> <span class="attr">value-ref</span>=<span class="string">"dataSourceSystem"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"student"</span> <span class="attr">value-ref</span>=<span class="string">"dataSourceStudent"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"finance"</span> <span class="attr">value-ref</span>=<span class="string">"dataSourceFinance"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"biz"</span> <span class="attr">value-ref</span>=<span class="string">"dataSourceBiz"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="配置分表分库配置类"><a href="#配置分表分库配置类" class="headerlink" title="配置分表分库配置类"></a>配置分表分库配置类</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 以下配置，部分表名只是用于配置示例，仅为了更好的展示如何配置。</span></span><br><span class="line"><span class="comment">    本项目没有用到的表名有：edu_class、biz_trade_order、biz_item、biz_item_sku</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"shardConfig"</span> <span class="attr">class</span>=<span class="string">"common.shard.ShardConfig"</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 列表值为 dataSource.targetDataSources 的 keys  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"schemaKeyList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>system<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>student<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>finance<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 基于服务接口分库策略，</span></span><br><span class="line"><span class="comment">        把针对某个 schema 的接口配置在该数据源 key 对应的 list 下，没有就不配置</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shardSchemaInterfaceClassNameList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz.service.facade.IEduStudentService<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分表策略</span></span><br><span class="line"><span class="comment">        直接将 ShardRequest.shardKeyTable（优先级高于后者） 或 ShardRequest.shardKeyTableNumber 作为分表后缀的表。</span></span><br><span class="line"><span class="comment">        需要配合 shardKeyTable 或 shardKeyTableNumber 使用，二选一，shardKeyTable 的优先级高于 shardKeyTableNumber，如 shardKeyTable=3，则下面的 edu_student 最终分表为 edu_student_3</span></span><br><span class="line"><span class="comment">        ShardRequest 参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java</span></span><br><span class="line"><span class="comment">     --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shardTableDirectlyList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>edu_student<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>edu_class<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分表策略</span></span><br><span class="line"><span class="comment">        通过两个数相除取余作为后缀的表，配合 ShardRequest.shardKeyTableNumber 使用</span></span><br><span class="line"><span class="comment">        ShardRequest 参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- key 将作为 shardKeyTableNumber 的除数（取余）， 余数作为分表后缀--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- shardKeyTableNumber 通过 ShardRequest 传递，在请求 api 时传递 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shardTableDivideList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz_trade<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz_trade_order<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz_item<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">value</span>&gt;</span>biz_item_sku<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 打印分表的 sql 语句，默认为 false 即不打印。--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"printShardSqlInfo"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 不需要分表的 sql 语句列表，以下这句为 MyBatis 操作数据库新增记录时，查询新增的主键值的语句 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"notNeedShardSqlList"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span>&gt;</span>SELECT LAST_INSERT_ID()<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="切面配置"><a href="#切面配置" class="headerlink" title="切面配置"></a>切面配置</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 用于切面，实现拦截数据库操作，实现分库分表的类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSourceAspect"</span> <span class="attr">class</span>=<span class="string">"common.aspect.DataSourceAspect"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"shardTableConfigView"</span> <span class="attr">ref</span>=<span class="string">"shardConfig"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 定义切面，用于拦截数据库操作，实现分库分表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span> <span class="attr">proxy-target-class</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">id</span>=<span class="string">"dataSourceAspect"</span> <span class="attr">ref</span>=<span class="string">"dataSourceAspect"</span> <span class="attr">order</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"point"</span> <span class="attr">expression</span>=<span class="string">"(execution(* biz.service.impl.*.*(..)))"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">pointcut-ref</span>=<span class="string">"point"</span> <span class="attr">method</span>=<span class="string">"before"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">pointcut-ref</span>=<span class="string">"point"</span> <span class="attr">method</span>=<span class="string">"afterHandler"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="请求参数-ShardRequest-java-类"><a href="#请求参数-ShardRequest-java-类" class="headerlink" title="请求参数 ShardRequest.java 类"></a>请求参数 ShardRequest.java 类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShardRequest</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分库标志 key，是定义数据源时指定的 key，在执行数据库操作之前，通过该 key 动态切换数据源。</span></span><br><span class="line"><span class="comment">     * 如果只是分库，除了用到个属性，还可利用 ShardTableConfig.shardSchemaInterfaceNameList 实现。</span></span><br><span class="line"><span class="comment">     *      有关这两项配置的详细信息，请参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String shardKeySchema;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分表标志 key，直接用作分表后缀的 key 值，针对直接添加后缀的表</span></span><br><span class="line"><span class="comment">     *      举例：应用该规则的原始表名为 table_name，则对应的分表为：table_name_key</span></span><br><span class="line"><span class="comment">     * 需要配合 ShardTableConfig 使用，与该类位于同一个目录，在 db-source.xml 中配置各属性值</span></span><br><span class="line"><span class="comment">     *     应用该规则的原始表名:ShardTableConfig.shardTableDirectlyList</span></span><br><span class="line"><span class="comment">     *          详细描述，请参见:https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String shardKeyTable;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 动态分表参数编号，整形，一般与用户绑定，针对需要除一个数得到后缀的表</span></span><br><span class="line"><span class="comment">     * 需要配合 ShardTableConfig 使用，与该类位于同一个目录，在 db-source.xml 中配置各属性值</span></span><br><span class="line"><span class="comment">     *     应用该规则的原始表名:ShardTableConfig.shardTableDivideList</span></span><br><span class="line"><span class="comment">     *          详细描述，请参见:https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 场景：SaaS 平台，每个用户分配一个编码值，可以按一定规则平均分配，比如现有有10万个用户，我们打算分10张表，那么，平均分配的话，就意味着每一万个用户有一个分表编号。</span></span><br><span class="line"><span class="comment">     * 极端地，对于 SasS 的超级 VIP 用户，可以分配一个唯一的分表编号，这就意味着这个 VIP 用户独享一套表。</span></span><br><span class="line"><span class="comment">     * 多个用户的数据可能存在于同一个数据库实例，也可能存在于多个数据库实例，可根据业务灵活分配。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> shardKeyTableNumber;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getter and setter</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="分表测试"><a href="#分表测试" class="headerlink" title="分表测试"></a>分表测试</h1><p>运行起来后，点击【搜索商家订单】<br>根据选择的商家ID，后台模拟获取用户的分库分表信息，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注意：这里为了演示，简单的返回用户 bizId 作为分表用的 shardKeyTableNumber，而数据库 key 则假设为 biz</span></span><br><span class="line"><span class="comment"> * 通过用户 bizId 获取用户分表用的 shardKeyTableNumber</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> bizId 用户 ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> shardKeyTableNumber</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UserShardView <span class="title">getShardKeyTableNumberByBizId</span><span class="params">(<span class="keyword">int</span> bizId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 获取 shardKeyTableNumber 的代码</span></span><br><span class="line">    <span class="comment">// 可能是从数据库取</span></span><br><span class="line">    <span class="comment">// 可能是从 Session 取</span></span><br><span class="line">    <span class="comment">// 如果是 JWT 机制，那么请求过来就能唯一确定用户信息</span></span><br><span class="line">    UserShardView userShardView = <span class="keyword">new</span> UserShardView();</span><br><span class="line"></span><br><span class="line">    userShardView.setShardKeySchema(<span class="string">"biz"</span>);</span><br><span class="line">    userShardView.setShardKeyTableNumber(bizId);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> userShardView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>其中视图 UserShardView 代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> biz.model.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserShardView</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> shardKeyTableNumber;</span><br><span class="line">    <span class="keyword">private</span> String shardKeySchema;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在指定 shardKeySchema 和 shardKeyTableNumber 的情况下，数据库以及分表信息已经足够了，再配合分库分表配置（参见:<a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml）" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml）</a><br>在选择【商家ID】为 10682 的情况下，打印的分表前后的 sql 语句如下（在原始语句的基本上删除了影响阅读的空行）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">--------------shard table sql start-------------- </span><br><span class="line">current data source key：biz</span><br><span class="line">before shard table sql：</span><br><span class="line">---&gt;</span><br><span class="line">select</span><br><span class="line">    id, biz_id, tid, buyer_nick, payment, status, pay_time</span><br><span class="line">    from `biz_trade`</span><br><span class="line">     WHERE (  biz_id = ? )</span><br><span class="line">&lt;---</span><br><span class="line">after shard table sql：</span><br><span class="line">---&gt;</span><br><span class="line">select</span><br><span class="line">    id, biz_id, tid, buyer_nick, payment, status, pay_time</span><br><span class="line">    from `biz_trade_2`</span><br><span class="line">     WHERE (  biz_id = ? )</span><br><span class="line">&lt;---</span><br><span class="line">--------------shard table sql end  --------------</span><br></pre></td></tr></table></figure></p><h1 id="重新生成-mapper-和-entity"><a href="#重新生成-mapper-和-entity" class="headerlink" title="重新生成 mapper 和 entity"></a>重新生成 mapper 和 entity</h1><p>请参考 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/tree/master/docs" rel="external nofollow noopener noreferrer" target="_blank">生成 Mapper 操作</a></p><h1 id="有关-xxx-Mapper-xml-文件"><a href="#有关-xxx-Mapper-xml-文件" class="headerlink" title="有关 {xxx}Mapper.xml 文件"></a>有关 {xxx}Mapper.xml 文件</h1><p>我是直接把 MBG 生成的 {xxx}Mapper.xml 文件放到了 biz-service-dal 模块下与 {xxx}Mapper.java 平级的目录下了，包名为：<code>biz.mapper.xml.original</code> 和 <code>biz.mapper.xml.extend</code></p><p>默认情况下，xml 文件不会被打包，所以，运行的时候会出现类似这样的错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Invalid bound statement (not found): biz.service.dal.mapper.original.EduStudentMapper.selectByExample</span><br></pre></td></tr></table></figure></p><p>解决：需要在 pom.xml 里设置为需要将 xml 一起打包，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;resources&gt;</span><br><span class="line">        &lt;resource&gt;</span><br><span class="line">            &lt;directory&gt;src/main/java&lt;/directory&gt;</span><br><span class="line">            &lt;includes&gt;</span><br><span class="line">                &lt;include&gt;**/*.xml&lt;/include&gt;</span><br><span class="line">            &lt;/includes&gt;</span><br><span class="line">            &lt;filtering&gt;false&lt;/filtering&gt;</span><br><span class="line">        &lt;/resource&gt;</span><br><span class="line">    &lt;/resources&gt;</span><br><span class="line">&lt;/build&gt;</span><br></pre></td></tr></table></figure></p><blockquote><p>directory 配置到 xml 的父目录 <code>src/main/java/biz/mapper/xml</code> 不会生效，配置成 <code>src/main/java</code> 就好。</p></blockquote><h1 id="技术清单"><a href="#技术清单" class="headerlink" title="技术清单"></a>技术清单</h1><ul><li>JDK 1.8，理论上支持 1.8 以上的版本，如需升级，比如要改为 JDK 11，将文件 <code>./dependencies/pom.xml</code> 中 <code>&lt;java.version&gt;1.8&lt;/java.version&gt;</code> 改为 <code>&lt;java.version&gt;11&lt;/java.version&gt;</code></li><li>MySQL 5.6.46、MySQL 5.7，用这两个版本作的测试，理论上支持 5.6 及以上版本。</li><li>maven 依赖库<ul><li>maven 依赖版本在 <code>./dependencies/pom.xml</code> 维护，如果要升级某一框架的版本，只需要修改这个文件就行，模块 dependencies 被作为其它模块的 parent，目的就是统一管理版本，同样的依赖库只定义一次版本号。</li><li>以下依赖为当前（2020-01-06）最新版本<ul><li>Spring Boot 2.2.2.RELEASE</li><li>Spring Framework 5.2.2.RELEASE （common-shard 模块直接依赖了 spring framework 下的 spring-aspects）</li><li>MyBatis 3.5.3</li><li>druid 1.1.21</li><li>lombok 1.18.10</li><li>jackson 2.10.1</li></ul></li></ul></li></ul><h1 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h1><p>如果有疑问或建议，欢迎请提 <a href="https://github.com/uncleAndyChen/mybatis-plugin-shard/issues" rel="external nofollow noopener noreferrer" target="_blank">Issue</a>。<br>可能不会立即回复，尤其上班时间，不过我会尽量抽业余时间回复的。</p><h1 id="如果帮到了你"><a href="#如果帮到了你" class="headerlink" title="如果帮到了你"></a>如果帮到了你</h1><p>请 Star 一下，让我有动力继续完善和优化。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于spring 切面（AOP）实现动态多数据源切换；基于 MyBatis 插件方式实现动态分表查询。 来源于多个已上线项目实践，本项目有完整的测试示例。&lt;br&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/categories/MyBatis/"/>
    
      <category term="java" scheme="https://www.lovesofttech.com/categories/MyBatis/java/"/>
    
      <category term="分库" scheme="https://www.lovesofttech.com/categories/MyBatis/java/%E5%88%86%E5%BA%93/"/>
    
      <category term="分表" scheme="https://www.lovesofttech.com/categories/MyBatis/java/%E5%88%86%E5%BA%93/%E5%88%86%E8%A1%A8/"/>
    
      <category term="多数据源" scheme="https://www.lovesofttech.com/categories/MyBatis/java/%E5%88%86%E5%BA%93/%E5%88%86%E8%A1%A8/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
    
      <category term="java" scheme="https://www.lovesofttech.com/tags/java/"/>
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/tags/MyBatis/"/>
    
      <category term="分库" scheme="https://www.lovesofttech.com/tags/%E5%88%86%E5%BA%93/"/>
    
      <category term="分表" scheme="https://www.lovesofttech.com/tags/%E5%88%86%E8%A1%A8/"/>
    
      <category term="多数据源" scheme="https://www.lovesofttech.com/tags/%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>解决 mybatis generator 使用 mysql 驱动 8.x 版本时会生成多个库里的同名表的问题</title>
    <link href="https://www.lovesofttech.com/mybatis/MBGForMySQL8.html"/>
    <id>https://www.lovesofttech.com/mybatis/MBGForMySQL8.html</id>
    <published>2019-12-28T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.068Z</updated>
    
    <content type="html"><![CDATA[<p>如题<br><a id="more"></a></p><h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>例如下面的错误信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 是因为在另外一个库里的同名表 sys_dept 没有 status 和 dept_id 这两个字段。</span><br><span class="line">Column status, specified for override in table sys_dept, does not exist in the table.</span><br><span class="line">Column dept_id, specified as an identity column in table sys_dept, does not exist in the table.</span><br><span class="line"># 是因为在另外一个库里的同名表 sys_menu 没有 menu_id 这个字段</span><br><span class="line">Column menu_id, specified as an identity column in table sys_menu, does not exist in the table.</span><br><span class="line"></span><br><span class="line"># 是因为有两个库存在表：sys_dept 和 sys_menu，所以在生成第二个库的同名表文件时，会提示:was overwritten</span><br><span class="line">Existing file ...\entity\SysDeptExample.java was overwritten</span><br><span class="line">Existing file ...\entity\SysDept.java was overwritten</span><br><span class="line">Existing file ...\mapper\original\SysDeptMapper.java was overwritten</span><br><span class="line">Existing file ...\entity\SysMenuExample.java was overwritten</span><br><span class="line">Existing file ...\entity\SysMenu.java was overwritten</span><br><span class="line">Existing file ...\mapper\original\SysMenuMapper.java was overwritten</span><br></pre></td></tr></table></figure></p><p>值得注意的是，如果表结构不一致，不一定会报错。只有当配置里的字段不一致时才会报错或警告，所以，一定要避免从多个库生成同名表的 mapper。</p><p>针对表的配置，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table tableName=&quot;sys_dept&quot; domainObjectName=&quot;SysDept&quot;&gt;&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;&lt;generatedKey identity=&quot;true&quot; type=&quot;post&quot; column=&quot;dept_id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;columnOverride column=&quot;status&quot; javaType=&quot;java.lang.Integer&quot; jdbcType=&quot;INTEGER&quot; /&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><h1 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h1><h2 id="数据库连接参数"><a href="#数据库连接参数" class="headerlink" title="数据库连接参数"></a>数据库连接参数</h2><p>在生成器的配置文件里的数据库连接地址中添加: <code>nullCatalogMeansCurrent=true</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;jdbcConnection driverClass=&quot;com.mysql.cj.jdbc.Driver&quot;</span><br><span class="line">connectionURL=&quot;jdbc:mysql://localhost:3306/mbg?nullCatalogMeansCurrent=true&quot;</span><br><span class="line">userId=&quot;userName&quot;</span><br><span class="line">password=&quot;userPassword&quot;&gt;</span><br><span class="line">&lt;!--MySQL 8.x 需要指定服务器的时区--&gt;</span><br><span class="line">&lt;property name=&quot;serverTimezone&quot; value=&quot;UTC&quot;/&gt;</span><br><span class="line">&lt;/jdbcConnection&gt;</span><br></pre></td></tr></table></figure></p><ul><li>或者在连接属性里添加：<code>&lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;jdbcConnection driverClass=&quot;com.mysql.cj.jdbc.Driver&quot;</span><br><span class="line">connectionURL=&quot;jdbc:mysql://localhost:3306/mbg&quot;</span><br><span class="line">userId=&quot;userName&quot;</span><br><span class="line">password=&quot;userPassword&quot;&gt;</span><br><span class="line">&lt;!--MySQL 8.x 需要指定服务器的时区--&gt;</span><br><span class="line">&lt;property name=&quot;serverTimezone&quot; value=&quot;UTC&quot;/&gt;</span><br><span class="line">&lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">&lt;/jdbcConnection&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="在-table-配置项添加-catalog-属性"><a href="#在-table-配置项添加-catalog-属性" class="headerlink" title="在 table 配置项添加 catalog 属性"></a>在 table 配置项添加 catalog 属性</h2><p>如：<code>&lt;table catalog=&quot;mbg&quot; tableName=&quot;sys_dept&quot; domainObjectName=&quot;SysDept&quot;&gt;&lt;generatedKey identity=&quot;true&quot; type=&quot;post&quot; column=&quot;id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;columnOverride column=&quot;status&quot; javaType=&quot;java.lang.Integer&quot; jdbcType=&quot;INTEGER&quot; /&gt;&lt;/table&gt;</code></p><h1 id="有关-MyBatis-的使用经验"><a href="#有关-MyBatis-的使用经验" class="headerlink" title="有关 MyBatis 的使用经验"></a>有关 MyBatis 的使用经验</h1><p>请参考：<a href="/mybatis/index.html">MyBatis，文章目录</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如题&lt;br&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/categories/MyBatis/"/>
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/categories/MyBatis/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://www.lovesofttech.com/tags/MySQL/"/>
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis 项目中，有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍</title>
    <link href="https://www.lovesofttech.com/mybatis/mysqlNaming.html"/>
    <id>https://www.lovesofttech.com/mybatis/mysqlNaming.html</id>
    <published>2019-12-27T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.074Z</updated>
    
    <content type="html"><![CDATA[<p>如果有人问我到底哪一种命名法更好，曾经，我的答案是：驼峰命名法，而现在，我的答案是：当然是下划线命名法，这还用问吗？嘻嘻~~~<br><a id="more"></a></p><h1 id="选驼峰命名法的理由"><a href="#选驼峰命名法的理由" class="headerlink" title="选驼峰命名法的理由"></a>选驼峰命名法的理由</h1><ul><li>无论是 Java 还是 C#，业界几乎都采用驼峰命名法，为了保持命名规范的一致性。</li><li>如果 MySQL 采用下划线命名法<ul><li>在一开始采用 MyBatis 这个框架的时候。由于忽略了 MyBatis 针对驼峰命名与下划线命名的一个转换配置 <code>mapUnderscoreToCamelCase</code>，在把自定义 SQL 语句查询结果对应到自定义的 POJO 时，为了与 POJO 属性名对应，有两种方式：<ol><li>POJO 采用驼峰式命名法，自定义的 SQL 语句需要写类似这样的语句 <code>select student_name as studentName</code> ，或者定义 resultMap，类似 <code>&lt;result column=&quot;student_name&quot; jdbcType=&quot;VARCHAR&quot; property=&quot;studentName&quot; /&gt;</code>，这将<strong>带来额外的工作量和维护成本，而且还容易出错</strong>。</li><li>POJO 采用下划线命名法，这样不用写类似 <code>student_name as studentName</code> 的 SQL 语句，也不用额外定义 resultMap，但是，这是重点，<strong>与 Java 的命名规范冲突</strong>。</li></ol></li><li>前面两种解决方案都有缺点，那么再看第三种，就是从根本上统一，那就是 MySQL 也采用驼峰式命名法，至于大小写敏感问题，可以通过配置项 <code>lower_case_table_names</code> 解决。</li></ul></li></ul><p>所以，曾经，我所在项目组在使用 MyBatis 时，MySQL 采用了驼峰式命名法，虽然有效避开了上面提到的两种解决方案的缺点，但是因为这种命名方式有背业界规范，所以一直觉得这并不完美的解决方法。</p><p>好的是，在后来研究 MyBatis 的过程中，无意中发现了完美的解决方案，就是上面提到的关键配置，下面会写。</p><h1 id="选下划线命名法的理由"><a href="#选下划线命名法的理由" class="headerlink" title="选下划线命名法的理由"></a>选下划线命名法的理由</h1><ul><li>对于 MySQL 的命名法，业界更多的是下划线命名法，原因是 MySQL 在不同操作系统上有不同的大小写敏感问题（这里就不展开这个话题了）。</li><li>特意看了一些比较知名的开源项目，MySQL 的命名规范几乎都是下划线命名法。</li><li>参考大公司的规范，如《阿里巴巴Java开发手册》，也是下划线命名法。</li></ul><h1 id="现在的选择：下划线命名法"><a href="#现在的选择：下划线命名法" class="headerlink" title="现在的选择：下划线命名法"></a>现在的选择：下划线命名法</h1><p>在得知 MyBatis 的这个配置项 <code>mapUnderscoreToCamelCase</code> 后，关于 MySQL 命名规范，我在新项目中，就坚定的采用下划线命名法了，甚至有把以前 MySQL 采用驼峰命名的项目重构回下划线命名的冲动~~</p><h1 id="MyBatis-的配置项：mapUnderscoreToCamelCase"><a href="#MyBatis-的配置项：mapUnderscoreToCamelCase" class="headerlink" title="MyBatis 的配置项：mapUnderscoreToCamelCase"></a>MyBatis 的配置项：mapUnderscoreToCamelCase</h1><p>设置启用数据库字段下划线映射到 java POJO 的驼峰式命名属性。该配置项，一般性地，在文件 <code>mybatis-config.xml</code> 中，默认值为 false，将其配置为 true：</p><ul><li>开启驼峰映射，为自定义的SQL语句服务。</li><li>针对自定义 SQL 查询结果，对应的自定义 POJO 保持驼峰命名法，查询数据库的 SQL 语句保留原生下划线，不用写 resultMap。</li><li>即从经典数据库列名 a_column 到经典 Java 属性名 aColumn 的类似映射。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- other config item --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>请注意，MySQL 采用下划线命名法的话，使用 MBG 生成实体的配置项 <code>table</code>，不需要配置 useActualColumnNames，该配置项默认为 false，如果要配置，其 value 需要设置 false，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;</span><br></pre></td></tr></table></figure></p><h1 id="有关-MBG-的使用和详细的配置"><a href="#有关-MBG-的使用和详细的配置" class="headerlink" title="有关 MBG 的使用和详细的配置"></a>有关 MBG 的使用和详细的配置</h1><p>请参考：<a href="https://github.com/uncleAndyChen/mybatis-generator" rel="external nofollow noopener noreferrer" target="_blank">https://github.com/uncleAndyChen/mybatis-generator</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果有人问我到底哪一种命名法更好，曾经，我的答案是：驼峰命名法，而现在，我的答案是：当然是下划线命名法，这还用问吗？嘻嘻~~~&lt;br&gt;
    
    </summary>
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/categories/MyBatis/"/>
    
      <category term="MySQL 命名规范" scheme="https://www.lovesofttech.com/categories/MyBatis/MySQL-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    
    
      <category term="MyBatis" scheme="https://www.lovesofttech.com/tags/MyBatis/"/>
    
      <category term="MySQL 命名规范" scheme="https://www.lovesofttech.com/tags/MySQL-%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
  <entry>
    <title>PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例</title>
    <link href="https://www.lovesofttech.com/database/powerDesignerER.html"/>
    <id>https://www.lovesofttech.com/database/powerDesignerER.html</id>
    <published>2019-11-29T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:12.927Z</updated>
    
    <content type="html"><![CDATA[<p>非常好用的工具，离开不的感觉~~~<br><a id="more"></a></p><p>今天尝试了一下 MySQL Workbench 的 EER 关系图，感觉还是不如 PowerDesigner 强大和顺手，于是果断安装最新版的 PowerDesigner 并把平常工作中用得最多的反向引擎的使用整理出来。</p><p>如果要问 PowerDesigner 的安装，以及如何可以长期科学地使用最新版本，请移步：<a href="https://download.csdn.net/download/runandrun/10108092" rel="external nofollow noopener noreferrer" target="_blank">https://download.csdn.net/download/runandrun/10108092</a> （虽然是17年底的文件，但是应用到现在的版本，依然好使，可以放心下载）</p><p>官方最新版下载地址：<a href="https://www.powerdesigner.biz/EN/powerdesigner-resources/trial-download.html" rel="external nofollow noopener noreferrer" target="_blank">https://www.powerdesigner.biz/EN/powerdesigner-resources/trial-download.html</a></p><h1 id="建立-ODBC-链接"><a href="#建立-ODBC-链接" class="headerlink" title="建立 ODBC 链接"></a>建立 ODBC 链接</h1><p>以 win10 为例，打开我的电脑，在地址栏粘贴以下路径后回车<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Administrative Tools</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-1.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="创建新数据源，默认是没有-MySQL-的"><a href="#创建新数据源，默认是没有-MySQL-的" class="headerlink" title="创建新数据源，默认是没有 MySQL 的"></a>创建新数据源，默认是没有 MySQL 的</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-2.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="ODBC-MySQL-驱动下载"><a href="#ODBC-MySQL-驱动下载" class="headerlink" title="ODBC MySQL 驱动下载"></a>ODBC MySQL 驱动下载</h1><p>下载地址：<a href="https://dev.mysql.com/downloads/connector/odbc/" rel="external nofollow noopener noreferrer" target="_blank">https://dev.mysql.com/downloads/connector/odbc/</a></p><h1 id="ODBC-配置"><a href="#ODBC-配置" class="headerlink" title="ODBC 配置"></a>ODBC 配置</h1><p>下载并安装之后，创建新数据源，就有 MySQL 可选了，如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-3.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>点击【完成】之后，会弹出配置数据源的窗口，如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-4.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h1 id="PowerDesigner-连接数据库"><a href="#PowerDesigner-连接数据库" class="headerlink" title="PowerDesigner 连接数据库"></a>PowerDesigner 连接数据库</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-5.png" alt="连接数据库" title>                </div>                <div class="image-caption">连接数据库</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-6.png" alt="选择刚才配置的 ODBC 数据源" title>                </div>                <div class="image-caption">选择刚才配置的 ODBC 数据源</div>            </figure><h1 id="PowerDesigner-使用反向引擎，逆向生成数据库物理模型"><a href="#PowerDesigner-使用反向引擎，逆向生成数据库物理模型" class="headerlink" title="PowerDesigner 使用反向引擎，逆向生成数据库物理模型"></a>PowerDesigner 使用反向引擎，逆向生成数据库物理模型</h1><ol><li>新建 model，选 Physical Data Model<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-7.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>反向引擎：通过数据库更新模型<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-7-1.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>使用已连接的数据源<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-8.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>红框处的列表其实是数据库列表，选择需要反向的数据库<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-9.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>选择数据库之后，会列出该库下的所有表<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-10.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>根据需要，选择好表、视频、存储过程之后，点击【ok】，开始反向更新，如果表比较多，需要多等一会儿<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-11.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h1 id="反向之后，就可以方便的编辑字段信息了"><a href="#反向之后，就可以方便的编辑字段信息了" class="headerlink" title="反向之后，就可以方便的编辑字段信息了"></a>反向之后，就可以方便的编辑字段信息了</h1><ul><li>PowerDesigner 不仅可作为数据库模型设计工具，良好的 PowerDesigner 文档，还可以是非常棒的数据库文档。</li><li><p>可以把 name 项写成中文（需要设置 code 不要自动同步 name 的修改），而 Comment 项写需要进一步备注的内容，可以写得非常详细。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-12.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>不过，只有备注可以带入到生成的创建数据库脚本里面，name 项不可以，所以，一般维护好 Comment 就可以了，name 的修改一般就让它默认同步到 code。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-15.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="PowerDesigner-设置-code-自动同步-name"><a href="#PowerDesigner-设置-code-自动同步-name" class="headerlink" title="PowerDesigner 设置 code 自动同步 name"></a>PowerDesigner 设置 code 自动同步 name</h1><ul><li>设置项：右键 -&gt; <code>Model Options ... -&gt; Naming Convention -&gt; Synchronize code</code></li><li>如果要把 name 项写成中文，那么，一般会设置 code 不要自动同步 name 的修改，将 Synchronize code 选项取消勾选即可。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-er-14.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="PowerDesigner-主窗口同时显示-name-和-code-的设置"><a href="#PowerDesigner-主窗口同时显示-name-和-code-的设置" class="headerlink" title="PowerDesigner 主窗口同时显示 name 和 code 的设置"></a>PowerDesigner 主窗口同时显示 name 和 code 的设置</h1><ul><li>把 name 项写成中文，主窗口同时显示 name 和 code，查阅数据库设计时非常直观。</li><li>设置：<code>Display Preferences... -&gt; Table -&gt; Advanced... -&gt; Columns -&gt; List columns</code> 点右侧的放大镜，在弹出窗口，将 code 选中，建议移到最上面或 Display Name 的下面，这个看自己的喜好调整顺序就好。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/pd/pd-display-code-and-name.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h1 id="PowerDesigner-相关文章"><a href="#PowerDesigner-相关文章" class="headerlink" title="PowerDesigner 相关文章"></a>PowerDesigner 相关文章</h1><ul><li><a href="/database/powerDesignerStyle.html">PowerDesigner 样式设置，以及样式参考值</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;非常好用的工具，离开不的感觉~~~&lt;br&gt;
    
    </summary>
    
      <category term="PowerDesigner" scheme="https://www.lovesofttech.com/categories/PowerDesigner/"/>
    
    
      <category term="PowerDesigner" scheme="https://www.lovesofttech.com/tags/PowerDesigner/"/>
    
  </entry>
  
  <entry>
    <title>windows 控制台 cmd/PowerShell 中文显示乱码，解决方法</title>
    <link href="https://www.lovesofttech.com/windows/win10CmdCharacter.html"/>
    <id>https://www.lovesofttech.com/windows/win10CmdCharacter.html</id>
    <published>2019-11-12T16:00:00.000Z</published>
    <updated>2020-09-01T02:53:13.106Z</updated>
    
    <content type="html"><![CDATA[<p>cmd 控制台默认编码，一般是简体中文默认的GBK，如果出现中文乱码，一般改为UTF-8可解决。<br><a id="more"></a></p><h1 id="打开-cmd-控制台窗口"><a href="#打开-cmd-控制台窗口" class="headerlink" title="打开 cmd 控制台窗口"></a>打开 cmd 控制台窗口</h1><p>win（窗口键，在Ctrl与Alt之间）+R，输入 cmd，回车，这样操作会打开 cmd 控制台窗口。</p><h1 id="检查当前的编码"><a href="#检查当前的编码" class="headerlink" title="检查当前的编码"></a>检查当前的编码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\AndyChen&gt;chcp</span><br><span class="line">Active code page: 936</span><br></pre></td></tr></table></figure><p>显示当家的编码格式为 936。</p><h1 id="常用的编码及对应的码值-10进制"><a href="#常用的编码及对应的码值-10进制" class="headerlink" title="常用的编码及对应的码值(10进制)"></a>常用的编码及对应的码值(10进制)</h1><table><thead><tr><th style="text-align:left">十进制码值</th><th style="text-align:left">对应编码名称</th></tr></thead><tbody><tr><td style="text-align:left">950</td><td style="text-align:left">繁体中文</td></tr><tr><td style="text-align:left">65001</td><td style="text-align:left">Unicode (UTF-8)</td></tr><tr><td style="text-align:left">936</td><td style="text-align:left">简体中文默认的GBK</td></tr><tr><td style="text-align:left">437</td><td style="text-align:left">MS-DOS 美国英语</td></tr></tbody></table><h1 id="测试中文显示"><a href="#测试中文显示" class="headerlink" title="测试中文显示"></a>测试中文显示</h1><p>将以下代码保存为一个批处理文件，如 test.bat，或者 test.cmd，双击运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">echo test chinese character view  测试中文字符显示</span><br><span class="line">pause</span><br></pre></td></tr></table></figure></p><p>我的测试如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test chinese character view  娴嬭瘯涓枃瀛楃鏄剧ず</span><br><span class="line">Press any key to continue . . .</span><br></pre></td></tr></table></figure></p><p>当为936时，中文显示乱码。</p><h1 id="修改控制台CMD编码格式为UTF-8"><a href="#修改控制台CMD编码格式为UTF-8" class="headerlink" title="修改控制台CMD编码格式为UTF-8"></a>修改控制台CMD编码格式为UTF-8</h1><h2 id="临时修改为-UTF-8"><a href="#临时修改为-UTF-8" class="headerlink" title="临时修改为 UTF-8"></a>临时修改为 UTF-8</h2><p>执行 <code>chcp 65001</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\AndyChen&gt;chcp 65001</span><br><span class="line">Active code page: 65001</span><br></pre></td></tr></table></figure></p><p>这种方式在关闭 cmd 之后会自动失效，下次再打开，还是会变回默认的 936。</p><h2 id="永久修改方法一"><a href="#永久修改方法一" class="headerlink" title="永久修改方法一"></a>永久修改方法一</h2><ol><li>win+R 或者点击开始菜单，找到运行，在运行输入框里面输入<code>regedit</code>，回车，会打开注册码编辑窗口，在地址栏输入：<code>Computer\HKEY_CURRENT_USER\Console\%SystemRoot%_System32_cmd.exe</code>，回车。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/general/cmd-chinese-character-01.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>双击 <code>CodePage</code> 然后先择十进制，改为65001。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/general/cmd-chinese-character.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>同理，可以修改 PowerShell 的默认编码，位置：<code>Computer\HKEY_CURRENT_USER\Console\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe</code>，如果没有 <code>CodePage</code>，则在该项下新建一个 DWORD（32位值），命名为<code>CodePage</code>，值设为<code>65001</code> </li></ol><p>重启 cmd/PowerShell 后生效。</p><h2 id="永久修改方法二"><a href="#永久修改方法二" class="headerlink" title="永久修改方法二"></a>永久修改方法二</h2><p>创建文本文件 characterSet.reg，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Console\%SystemRoot%_SysWOW64_WindowsPowerShell_v1.0_powershell.exe]</span><br><span class="line">&quot;CodePage&quot;=dword:0000fde9</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Console\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe]</span><br><span class="line">&quot;CodePage&quot;=dword:0000fde9</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Console\%SystemRoot%_System32_cmd.exe]</span><br><span class="line">&quot;CodePage&quot;=dword:0000fde9</span><br></pre></td></tr></table></figure></p><p>双击运行。</p><h1 id="再次测试中文显示"><a href="#再次测试中文显示" class="headerlink" title="再次测试中文显示"></a>再次测试中文显示</h1><p>运行之前的测试脚本，显示如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">test chinese character view  测试中文字符显示</span><br><span class="line">Press any key to continue . . .</span><br></pre></td></tr></table></figure></p><p>能够正常显示，说明设置成功。</p><h1 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h1><p>在某一个文件夹/目录下，按住 Shift 点鼠标右建，可以打开 PowerShell。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/general/cmd-chinese-character-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h1 id="附：所有编码对照表"><a href="#附：所有编码对照表" class="headerlink" title="附：所有编码对照表"></a>附：所有编码对照表</h1><table><thead><tr><th style="text-align:left">十进制码值</th><th style="text-align:left">对应编码名称</th></tr></thead><tbody><tr><td style="text-align:left">代码页</td><td style="text-align:left">国家(地区)或语言</td></tr><tr><td style="text-align:left">437</td><td style="text-align:left">美国</td></tr><tr><td style="text-align:left">708</td><td style="text-align:left">阿拉伯文(ASMO 708)</td></tr><tr><td style="text-align:left">720</td><td style="text-align:left">阿拉伯文(DOS)</td></tr><tr><td style="text-align:left">850</td><td style="text-align:left">多语言(拉丁文 I)</td></tr><tr><td style="text-align:left">852</td><td style="text-align:left">中欧(DOS) - 斯拉夫语(拉丁文 II)</td></tr><tr><td style="text-align:left">855</td><td style="text-align:left">西里尔文(俄语)</td></tr><tr><td style="text-align:left">857</td><td style="text-align:left">土耳其语</td></tr><tr><td style="text-align:left">860</td><td style="text-align:left">葡萄牙语</td></tr><tr><td style="text-align:left">861</td><td style="text-align:left">冰岛语</td></tr><tr><td style="text-align:left">862</td><td style="text-align:left">希伯来文(DOS)</td></tr><tr><td style="text-align:left">863</td><td style="text-align:left">加拿大 - 法语</td></tr><tr><td style="text-align:left">865</td><td style="text-align:left">日耳曼语</td></tr><tr><td style="text-align:left">866</td><td style="text-align:left">俄语 - 西里尔文(DOS)</td></tr><tr><td style="text-align:left">869</td><td style="text-align:left">现代希腊语</td></tr><tr><td style="text-align:left">874</td><td style="text-align:left">泰文(Windows)</td></tr><tr><td style="text-align:left">932</td><td style="text-align:left">日文(Shift-JIS)</td></tr><tr><td style="text-align:left">936</td><td style="text-align:left">中国 - 简体中文(GB2312)</td></tr><tr><td style="text-align:left">949</td><td style="text-align:left">韩文</td></tr><tr><td style="text-align:left">950</td><td style="text-align:left">繁体中文(Big5)</td></tr><tr><td style="text-align:left">1200</td><td style="text-align:left">Unicode</td></tr><tr><td style="text-align:left">1201</td><td style="text-align:left">Unicode (Big-Endian)</td></tr><tr><td style="text-align:left">1250</td><td style="text-align:left">中欧(Windows)</td></tr><tr><td style="text-align:left">1251</td><td style="text-align:left">西里尔文(Windows)</td></tr><tr><td style="text-align:left">1252</td><td style="text-align:left">西欧(Windows)</td></tr><tr><td style="text-align:left">1253</td><td style="text-align:left">希腊文(Windows)</td></tr><tr><td style="text-align:left">1254</td><td style="text-align:left">土耳其文(Windows)</td></tr><tr><td style="text-align:left">1255</td><td style="text-align:left">希伯来文(Windows)</td></tr><tr><td style="text-align:left">1256</td><td style="text-align:left">阿拉伯文(Windows)</td></tr><tr><td style="text-align:left">1257</td><td style="text-align:left">波罗的海文(Windows)</td></tr><tr><td style="text-align:left">1258</td><td style="text-align:left">越南文(Windows)</td></tr><tr><td style="text-align:left">20866</td><td style="text-align:left">西里尔文(KOI8-R)</td></tr><tr><td style="text-align:left">21866</td><td style="text-align:left">西里尔文(KOI8-U)</td></tr><tr><td style="text-align:left">28592</td><td style="text-align:left">中欧(ISO)</td></tr><tr><td style="text-align:left">28593</td><td style="text-align:left">拉丁文 3 (ISO)</td></tr><tr><td style="text-align:left">28594</td><td style="text-align:left">波罗的海文(ISO)</td></tr><tr><td style="text-align:left">28595</td><td style="text-align:left">西里尔文(ISO)</td></tr><tr><td style="text-align:left">28596</td><td style="text-align:left">阿拉伯文(ISO)</td></tr><tr><td style="text-align:left">28597</td><td style="text-align:left">希腊文(ISO)</td></tr><tr><td style="text-align:left">28598</td><td style="text-align:left">希伯来文(ISO-Visual)</td></tr><tr><td style="text-align:left">38598</td><td style="text-align:left">希伯来文(ISO-Logical)</td></tr><tr><td style="text-align:left">50000</td><td style="text-align:left">用户定义的</td></tr><tr><td style="text-align:left">50001</td><td style="text-align:left">自动选择</td></tr><tr><td style="text-align:left">50220</td><td style="text-align:left">日文(JIS)</td></tr><tr><td style="text-align:left">50221</td><td style="text-align:left">日文(JIS-允许一个字节的片假名)</td></tr><tr><td style="text-align:left">50222</td><td style="text-align:left">日文(JIS-允许一个字节的片假名 - SO/SI)</td></tr><tr><td style="text-align:left">50225</td><td style="text-align:left">韩文(ISO)</td></tr><tr><td style="text-align:left">50932</td><td style="text-align:left">日文(自动选择)</td></tr><tr><td style="text-align:left">50949</td><td style="text-align:left">韩文(自动选择)</td></tr><tr><td style="text-align:left">51932</td><td style="text-align:left">日文(EUC)</td></tr><tr><td style="text-align:left">51949</td><td style="text-align:left">韩文(EUC)</td></tr><tr><td style="text-align:left">52936</td><td style="text-align:left">简体中文(HZ)</td></tr><tr><td style="text-align:left">65000</td><td style="text-align:left">Unicode (UTF-7)</td></tr><tr><td style="text-align:left"><strong>65001</strong></td><td style="text-align:left"><strong>Unicode (UTF-8)</strong></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;cmd 控制台默认编码，一般是简体中文默认的GBK，如果出现中文乱码，一般改为UTF-8可解决。&lt;br&gt;
    
    </summary>
    
      <category term="windows" scheme="https://www.lovesofttech.com/categories/windows/"/>
    
      <category term="cmd" scheme="https://www.lovesofttech.com/categories/windows/cmd/"/>
    
      <category term="PowerShell" scheme="https://www.lovesofttech.com/categories/windows/cmd/PowerShell/"/>
    
    
      <category term="windows" scheme="https://www.lovesofttech.com/tags/windows/"/>
    
      <category term="cmd" scheme="https://www.lovesofttech.com/tags/cmd/"/>
    
      <category term="PowerShell" scheme="https://www.lovesofttech.com/tags/PowerShell/"/>
    
  </entry>
  
</feed>
