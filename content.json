{"meta":{"title":"安迪陈技术日志，架构、感悟、系统分析、团队管理","subtitle":"自强不息，厚德载物","description":"java spring spring-boot spring-mvc myBatis MBG jenkins IDEA JMeter JIRA CentOS secureCRT 安迪陈技术日志 安迪陈 团队管理 技术管理 网站架构 技术架构 系统分析 技术人生 技术点滴 技术感悟","author":"安迪陈","url":"https://www.lovesofttech.com"},"pages":[{"title":"","date":"2020-09-01T02:53:13.125Z","updated":"2020-09-01T02:53:13.125Z","comments":false,"path":"categories/index.html","permalink":"https://www.lovesofttech.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-09-01T02:53:13.126Z","updated":"2020-09-01T02:53:13.126Z","comments":false,"path":"tags/index.html","permalink":"https://www.lovesofttech.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"windows 10 版本查看以及升级到最新版本","slug":"windows/win10Update","date":"2020-08-29T16:00:00.000Z","updated":"2020-09-01T06:56:35.148Z","comments":true,"path":"windows/win10Update.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Update.html","excerpt":"windows 10 如何升级到最新版号？","text":"windows 10 如何升级到最新版号？ 查看 windows 10 版本号的两种方式 使用快捷键【win键+R键】调出运行窗口，在运行窗口输入框中输入命令：“winver”，点击【确定】，或直接回车，就会弹出 windows 版本信息。 点击桌面左下角【开始】，在开始菜单中点击【设置图标】，在弹出的窗口中点击【系统】，在弹出的新窗口中将左边栏往下拉找到【关于】并点击，在右边栏中就可以看到win10版本号。 windows10 更新到最新版本因为 microsoft/terminal，要求 windows 10 最低版本为 1903，所以，为了用上 microsoft 官方出品的 terminal，需要将 windows 10 升级到最新版本。 Note: Windows Terminal requires Windows 10 1903 (build 18362) or later 更新程序下载页面：更新程序下载页面 下载更新程序Windows10Upgrade9252.exe（5.96M）并运行。 下载完成之后会提示重启，重启之后会自动更新，更新过程大概持续了半个多小时，期间会有多次自动重启。 再次查看版本信息，会发现已经升级到最新版本号了。 官方文档Windows 更新：常见问题解答","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"experience","slug":"windows/experience","permalink":"https://www.lovesofttech.com/categories/windows/experience/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"windows10 多桌面","slug":"windows/windows10MultipleDesktop","date":"2020-08-28T16:00:00.000Z","updated":"2020-09-01T02:53:13.122Z","comments":true,"path":"windows/windows10MultipleDesktop.html","link":"","permalink":"https://www.lovesofttech.com/windows/windows10MultipleDesktop.html","excerpt":"在 windows 下的类似 Linux 下多桌面体验","text":"在 windows 下的类似 Linux 下多桌面体验 添加新桌面 Win+Tab 组合键打开多桌面界面，点击左上角：“+新建桌面”，会自动命名为“桌面1”、”桌面2”。 通过快捷键 WIN+Ctrl+D 可以直接创建新的虚拟桌面。 关闭桌面 通过在需要删除的虚拟界面中执行 WIN+Ctrl+F4 可以直接关闭该桌面。 关闭多窗口中的一个，可以在 WIN+Tab 打开的界面点击关闭按钮。 多个桌面切换 进入到 win+tab 界面，鼠标点击某一个桌面。 Win+Ctrl+左键：切换到相邻左侧的虚拟桌面。 Win+Ctrl+右键：切换到相邻右侧的虚拟桌面。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"experience","slug":"windows/experience","permalink":"https://www.lovesofttech.com/categories/windows/experience/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"MBR、GPT/GUID 分区格式","slug":"windows/diskFormat","date":"2020-08-26T16:00:00.000Z","updated":"2020-09-01T02:53:13.103Z","comments":true,"path":"windows/diskFormat.html","link":"","permalink":"https://www.lovesofttech.com/windows/diskFormat.html","excerpt":"了解一下MBR、GPT/GUID 分区格式","text":"了解一下MBR、GPT/GUID 分区格式 用 U 盘安装 windows 操作系统 如果是基于 UEFI 启动的系统，建议选择 GUID/GPT 分区，支持大容量硬盘。 如果是基于 Legacy 启动的系统，只能选 MBR 分区，不支持 2.2TB 以上的硬盘。 区别 在MBR分区表中最多4个主分区（或者3个主分区＋1个扩展分区），也就是说扩展分区只能有一个。 GUID(GPT)最多支持128个主分区，没有扩展分区和逻辑盘。 MBR 只支持2.2T容量以下的硬盘分区。 GUID(GPT)支持2.2T容量以上的硬盘分区。 BIOS启动方式对比： 硬盘分区格式为MBR格式，启动模式为 Legacy，即传统引导方式。 硬盘分区格式为GUID（GPT）格式，启动模式为UEFI。 MBR支持win7版本系统以下的32位和64位。win7 以上的 64 位系统也是支持的，如 win10 64 位。 GUID(GPT)支持win7版本以上的64位系统（不支持32位系统）,比如win8、win10系统。 总结 MBR分区表：Master Boot Record，即硬盘主引导记录分区表，只支持容量在 2.2TB 以下的硬盘，超过 2.2TB 的硬盘只能管理 2.2TB，最多只支持4个主分区或三个主分区和一个扩展分区，扩展分区下可以有多个逻辑分区。 GPT分区表：GPT，全局唯一标识分区表(GUID Partition Table)，与 MBR 最大 4 个分区表项的限制相比，GPT 对分区数量没有限制，但 Windows 最大仅支持 128 个 GPT 分区，GPT 可管理硬盘大小达到了 18EB。只有基于 UEFI 平台的主板才支持 GPT 分区引导启动。 坑 在 ThinkPad T400（2009年的老商务本）安装 win10，硬盘分区格式为 GUID，用老毛桃安装 win10，重启后，一直停留在黑屏 + 左上角一个白色光标，光标一直在闪。 怀疑是老笔记本与操作系统不兼容（有一点不敢相信自己的判断），于是 用 GHOST 恢复成之前的 win7 64 位操作系统镜像，恢复之后重启，也是停留在黑屏 + 左上角一直闪的白色光标。 解决在了解了 GUID 与 MBR 分区的区别以及对 Bios 启动的支持之后，将硬盘重新分区为 MBR 格式，再次重装 win10，重启之后就正常了。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"MBR","slug":"windows/MBR","permalink":"https://www.lovesofttech.com/categories/windows/MBR/"},{"name":"GPT","slug":"windows/MBR/GPT","permalink":"https://www.lovesofttech.com/categories/windows/MBR/GPT/"},{"name":"GUID","slug":"windows/MBR/GPT/GUID","permalink":"https://www.lovesofttech.com/categories/windows/MBR/GPT/GUID/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"MBR","slug":"MBR","permalink":"https://www.lovesofttech.com/tags/MBR/"},{"name":"GPT","slug":"GPT","permalink":"https://www.lovesofttech.com/tags/GPT/"},{"name":"GUID","slug":"GUID","permalink":"https://www.lovesofttech.com/tags/GUID/"}]},{"title":"记一次用 ghost 还原镜像，调换两台电脑系统盘的操作","slug":"windows/ghost","date":"2020-08-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.105Z","comments":true,"path":"windows/ghost.html","link":"","permalink":"https://www.lovesofttech.com/windows/ghost.html","excerpt":"看似简单的操作，实际上出现了几点意外，导致本来认为一个下午可以搞定的事情，实际上花了一天时间，各种折腾，还熬夜了，囧~~。","text":"看似简单的操作，实际上出现了几点意外，导致本来认为一个下午可以搞定的事情，实际上花了一天时间，各种折腾，还熬夜了，囧~~。 花在等待 Ghost 制作镜像和还原镜像上的时间比较多，一次操作在半小时到一个小时的样子。 背景现状 有两台电脑，操作系统均安装到一块固态硬盘上，每台电脑的固态硬盘为唯一启动盘。 两块固态硬盘都只有一个分区，一块是容量为 250G，记为硬盘 A，对应电脑 A，另外一块容量 500G，记为硬盘 B，对应电脑 B。 由于两台电脑定位不同，安装的软件不一样，C 盘空间占用情况差距很大。 需求调换两块固态硬盘，即将硬盘 A 挂到电脑 B 上，将硬盘 B 挂到电脑 A 上，安装好的操作系统要互换。 需要达到的效果硬盘调换之后，之前安装好的操作系统和相关软件完全不变，从使用角度看，唯一变的只有 C 盘空间。 我的操作 将两块硬盘都整个 Ghost 到一个镜像文件（Disk -&gt; To Image）。 期间，硬盘 A 在镜像的时候，有提示错误，大概是说有系统文件，需要运行 checkdisk 之类的，我没有继续，启动老毛桃增强版操作系统，将 c 盘的虚拟内存页面文件 pagefile.sys 和睡眠文件 Hiberfil.sys 删除之后再试，不再有错误提示。这两个文件占用了 20G 左右的空间。 将硬盘 A 的镜像文件恢复到硬盘 B （Disk -&gt; From Image）。 将硬盘 B 挂到电脑 A（原来硬盘 A 所在的电脑）上，启动，提示无法找到可启动的操作系统。 123456你的电脑/设备需要修复无法加载应用程序或操作系统，原因是所需文件丢失或包含错误。文件：\\windows\\system32\\winload.efi错误代码：0xc000000e你需要使用恢复工具... 我用老毛桃工具，启动恢复，提示恢复成功，但是问题依旧。 在这一步，我记得当时是挂了两块可启动硬盘，当时还可以选择恢复哪块硬盘上的操作系统。 另外，记得有一次硬盘 B 在恢复了硬盘 A 的镜像文件后，为了测试，直接在电脑 B 上启动，能正常启动了的，当时还挂着老毛桃工具 U 盘，但是拿到电脑 A 上，启动时还是报上面的错误。 用 Ghost 软件打开硬盘 B 的镜像文件，把相应目录下的 winload.efi 文件，复制到硬盘 B 的 c 盘同样的目录下覆盖原来的文件，启动，还是一样的错误提示。 于是我用分区到分区的镜像方式（Partition -&gt; To Partition），将硬盘 A 的 C 盘（唯一的活动分区）镜像到硬盘 B 的 C 盘（也是唯一的活动分区）。还是同样的启动错误。 将硬盘 B 的整个硬盘镜像恢复回硬盘 B，在原来的电脑（即电脑 B）上启动，竟然还是报这个错误，用启动恢复工具恢复之后，恢复如初。看来整个硬盘恢复后还需要启动恢复操作，于是我想到，在不破坏原来启动分区（为隐藏分区）的情况下操作，于是删除硬盘镜像，制作了硬盘 B 的 C 盘的镜像备用。 这次使用恢复工具时，只挂了一块带有操作系统的硬盘，之前恢复后启动报错，不知道是不是因为挂了两块有操作系统的硬盘有关。 成功启动的操作 我把硬盘 B 的那块固态硬盘所有分区删除，重新分一个区，选 GPT/GUID 格式，其余全部默认。 通过分区到分区的方式镜像硬盘 A 的 C 盘到硬盘 B 的 C 盘，恢复启动，然后挂到电脑 A 上，提示需要修复，按提示操作之后，修复并重启之后，出现了久违的登录界面，这期间大概要花三分钟的样子吧。 电脑 B 的恢复，没有删除分区，只是将硬盘 B 的 C 盘镜像恢复到硬盘 A 的 C 盘，然后启动，一次成功，没有经过启动修复过程。 总结 电脑 A 在恢复镜像后第一次启动有一个修复过程，可能跟我的操作有关，在镜像之前，我把虚拟内存文件由 C 盘设置到了 D 盘（C 盘残留了 pagefile.sys 和 Hiberfil.sys），设置之后没有重启而是直接关机了，也就是说，这个设置其实还没有生效，需要在下一次启动之后生效。 启动修复时，挂载了两块有操作系统的硬盘，就是本文提到的硬盘 A 和硬盘 B ，导致修复后启动不成功，不过，这一点不是很确定。 整个硬盘镜像，恢复时用默认值，导致启动有问题。理论上，应该不会出现这样的问题（曾经这样操作过，直接一步成功，不过已经过去了很多年，Ghost 软件以及操作系统都不一样了），也许是我操作不当，比如在恢复启动的时候，应该只挂载一块硬盘。如果这样能成功的话，应该能节省我非常多的时间，以后如果再作类似的操作，可以再次尝试一下。 应该做好重装操作系统的准备。这次操作，只制作了老毛桃工具 U 盘，如果期间镜像备份没做好或者有问题，现有硬盘又启动不了，就只能重装操作系统了，但我还没有下载 windows 10 的安装镜像文件。 远远超出了我的预期时间，本来认为先制作硬盘 B 的整个硬盘镜像到文件 A.gho，然后从硬盘 A 直接整个硬盘 Ghost 到硬盘 B ，最后恢复镜像文件 A.gho 到硬盘 A，操作系统层面的操作就完事儿的。 一件我们认为简单的事，哪怕做过，也很有可能因为存在某些我们考虑不到的情况而完全背离我们的经验，从而导致超出我们预期的情况发生，所以，要提前做好最坏的打算。 这件事，对应到软件开发，非常相似。 开发人员在评估工作量的时候，往往只是凭借自己的工作经验，即便有意预留出三分一的时间，也经常出现实际工作量要远远大于评估的工作量。 这很正常，所以，工作量的评估，也是需要不断完善的，是需要分阶段的，不能一下子说死，必须留有余地。好象扯远了~~","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"ghost","slug":"windows/ghost","permalink":"https://www.lovesofttech.com/categories/windows/ghost/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"ghost","slug":"ghost","permalink":"https://www.lovesofttech.com/tags/ghost/"}]},{"title":"使用 iTunes 在电脑与 iOS 或 iPad 设备之间共享（传输）文件","slug":"mac/iPadFileShare","date":"2020-08-01T16:00:00.000Z","updated":"2020-09-01T02:53:13.062Z","comments":true,"path":"mac/iPadFileShare.html","link":"","permalink":"https://www.lovesofttech.com/mac/iPadFileShare.html","excerpt":"本文介绍如何利用 iTunes 将 windows 10 的文件传到 IPad 上。","text":"本文介绍如何利用 iTunes 将 windows 10 的文件传到 IPad 上。 上传文件的具体操作步骤 在 Mac 或 PC 上打开 iTunes。 使用设备自带的 USB 连接线将您的 iPhone、iPad 或 iPod touch 连接到电脑。 在 iTunes 中点击设备。 第一次使用，需要登录和授权。 关键的一步，选择设备。 文件共享，以应用为单位，以下，以 1K 播放器为例：","categories":[{"name":"iPad","slug":"iPad","permalink":"https://www.lovesofttech.com/categories/iPad/"},{"name":"IOS","slug":"iPad/IOS","permalink":"https://www.lovesofttech.com/categories/iPad/IOS/"},{"name":"iTunes","slug":"iPad/IOS/iTunes","permalink":"https://www.lovesofttech.com/categories/iPad/IOS/iTunes/"},{"name":"share","slug":"iPad/IOS/iTunes/share","permalink":"https://www.lovesofttech.com/categories/iPad/IOS/iTunes/share/"}],"tags":[{"name":"iPad","slug":"iPad","permalink":"https://www.lovesofttech.com/tags/iPad/"},{"name":"IOS","slug":"IOS","permalink":"https://www.lovesofttech.com/tags/IOS/"},{"name":"iTunes","slug":"iTunes","permalink":"https://www.lovesofttech.com/tags/iTunes/"},{"name":"share","slug":"share","permalink":"https://www.lovesofttech.com/tags/share/"}]},{"title":"MySQL 配置项 lower_case_table_names，数据库命名规则","slug":"database/mysqlLowerCaseTableNames","date":"2020-07-24T16:00:00.000Z","updated":"2020-09-01T02:53:12.923Z","comments":true,"path":"database/mysqlLowerCaseTableNames.html","link":"","permalink":"https://www.lovesofttech.com/database/mysqlLowerCaseTableNames.html","excerpt":"如果你现在问我，数据库的库名、表名、字段名，是否建议保持跟 Java 一样采用驼峰命名规则，我的答案是：除非是遗留系统，新系统绝对不建议，建议随大流，采用下划线命名法。如果你要问我原因，那么，本文提到的坑就是理由。 有时候，随大流可能会少吃亏，可能会少走弯路。大流一定有大流的道理（跑题儿了，哈哈…）。","text":"如果你现在问我，数据库的库名、表名、字段名，是否建议保持跟 Java 一样采用驼峰命名规则，我的答案是：除非是遗留系统，新系统绝对不建议，建议随大流，采用下划线命名法。如果你要问我原因，那么，本文提到的坑就是理由。 有时候，随大流可能会少吃亏，可能会少走弯路。大流一定有大流的道理（跑题儿了，哈哈…）。 前言 如果你的 MySQL 数据库需要同时跑在 windows 和 linux 上（比如在 windows 上开发，部署在 linux 上），或者需要在阿里 RDS 与 linux 自建 MySQL 上运行，那么一定要知道配置参数lower_case_table_names，因为一不小心就会踩到坑。 数据库命名规则采用下划线命名法，能有效避免因数据库服务器环境差异带来的坑。 踩坑曾经有一个项目，当时的表名及字段名的命名规范采用的是驼峰命名规则（不建议采用的命名方式），线上用的是阿里云 RDS，上线时做数据导入，表名全部被转为小写了，当时阿里的 RDS 还不支持配置lower_case_table_names 参数，lower_case_table_names 默认为 1，也就是存入数据库时，会自动把所有大写字母转换为小写，查询时不区分大小写。后来由于项目调整，改为用自建 MySQL 5.6，从 RDS 导入之后，由于表名、字段名全是小写，所以需要将 MySQL 配置成大小写不敏感，于是调整了数据库配置，添加了：lower_case_table_names=1，重启之后，项目就可以正常操作数据库了。 如果到这儿就结束了，那么，这是一个比较顺利（完美）的解决方案。 可是，再后来，要迁移服务器，新服务器上的 MySQL 是 8.x，而且已经有数据库实例了，同时，默认大小写敏感，这种场景，就不能简单的添加 lower_case_table_names=1 或者修改这个配置，因为 MySQL 8.0 不支持数据库初始化后修改该参数，后面会提到。 是不是有点像编故事呢？如果说这是一个故事的话，那么，这个故事是真实的。 言归正传，以下正式介绍 lower_case_table_names lower_case_table_names 参数说明lower_case_table_names 是 mysql 一个大小写敏感设置的属性，此参数不可以动态修改。 8.0 之前的版本，可以通过配置文件修改，修改后重启数据库生效。 8.0 之后的版本，只允许在初始化时指定，之后就不允许修改了。 修改配置 修改文件 my.ini （linux 下是 my.cnf，默认位于 /etc/mysql/），在 [mysqld] 配置节点下添加 lower-case-table-names=value，value 为 0-2 的整数。 默认值 unix,linux 下 默认值为 0 Windows 下默认值是 1 Mac OS 下默认值是 2 官方文档 5.7 官方文档：Identifier Case Sensitivity 8.0 官方文档：Identifier Case Sensitivity 参数说明 lower_case_table_names=0 表名存储为给定的大小写。比较时：区分大小写。大小写敏感（Unix，Linux默认）。 创建的数据库和表，将原样保存在磁盘上。如 create database TeSt; 将会创建一个 TeSt 的目录，create table AbCCC ... 将会原样生成 AbCCC.frm。SQL语句也会原样解析。 注意：大小写敏感要操作系统支持，Windows 本身大小写不敏感，因此不能设置成大小写敏感，即不能设置为 lower_case_table_names=0。在 win10 下设置为 lower_case_table_names=0，初始化时，会报以下错误（后面还会提到）：1[ERROR] [MY-010158] [Server] The server option &apos;lower_case_table_names&apos; is configured to use case sensitive table names but the data directory is on a case-insensitive file system which is an unsupported combination. Please consider either using a case sensitive file system for your data directory or switching to a case-insensitive table name mode. lower_case_table_names=1 表名存储为小写。比较时：不区分大小写。大小写不敏感（Windows默认）。 创建的库表时，MySQL 将所有的库表名转换成小写存储在磁盘上。SQL 语句同样会将库表名转换成小写。如需要查询以前创建的 Test_table（生成 Test_table.frm 文件），即便执行 select * from Test_table，也会被转换成 select * from test_table，这样就会找不到表而报错。这种情况需要做数据迁移，具体迁移方案后面会提到。 lower_case_table_names=2 表名存储为给定的大小写。比较时：小写。 创建的库表将原样保存在磁盘上。但SQL语句将库表名转换成小写。 8.0 以前的版本，修改 lower_case_table_names 导致的常见不良隐患：如果在 lower_case_table_names=0 时，创建了含有大写字母的库表，改为 lower_case_table_names=1 后，则会无法被查到。 8.0 以前的版本，将默认的 lower_case_tables_name 由 0 设置成 1需先将已经存在的库名和表名都转换为小写。 针对仅表名存在大写字母的情况： lower_case_tables_name=0 时，执行 rename table 将表名改成小写。 设置 lower_case_tables_name=1，重启生效。 针对库名存在大写字母的情况： lower_case_tables_name=0 时，使用 mysqldump 导出，并删除老的数据库。 设置 lower_case_tables_name=1，重启生效。 创建只有小写字母的数据库实例，导入数据至该实例。 在 win10 上安装 MySQL 报错my.ini 的参数 lower_case_tables_name=0 的情况下1234C:\\dev\\mysql-5.7.23-winx64\\mysql-5.7.23-winx64\\bin&gt;mysqld --initialize --console2018-12-09T13:04:02.545614Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2018-12-09T13:04:03.309670Z 0 [ERROR] The server option &apos;lower_case_table_names&apos; is configured to use case sensitive table names but the data directory is on a case-insensitive file system which is an unsupported combination. Please consider either using a case sensitive file system for your data directory or switching to a case-insensitive table name mode.2018-12-09T13:04:03.314831Z 0 [ERROR] Aborting 大小写敏感要操作系统支持，Windows 本身大小写不敏感，因此不能设置成大小写敏感。 该问题，可以参考 5.7 官方文档：Identifier Case Sensitivity 摘录 5.7 的官方文档如下：If you are using MySQL on only one platform, you do not normally have to change the lower_case_table_names variable from its default value. However, you may encounter difficulties if you want to transfer tables between platforms that differ in file system case sensitivity. For example, on Unix, you can have two different tables named my_table and MY_TABLE, but on Windows these two names are considered identical. To avoid data transfer problems arising from lettercase of database or table names, you have two options: Use lower_case_table_names=1 on all systems. The main disadvantage with this is that when you use SHOW TABLES or SHOW DATABASES, you do not see the names in their original lettercase. Use lower_case_table_names=0 on Unix and lower_case_table_names=2 on Windows. This preserves the lettercase of database and table names. The disadvantage of this is that you must ensure that your statements always refer to your database and table names with the correct lettercase on Windows. If you transfer your statements to Unix, where lettercase is significant, they do not work if the lettercase is incorrect. my.ini 的参数 lower_case_tables_name 改为 2 或 1，则可正常安装，不过，设置为 2 的时候，用 MySQL Workbench 连接时会提示配置有问题：The server is in a system that does not properly support the selected lower_case_table_names option value. Some problems may occur.，这个问题下面会专门写。 以下是正常安装的提示：1234567C:\\dev\\mysql-5.7.23-winx64\\mysql-5.7.23-winx64\\bin&gt;mysqld --initialize --console2018-12-09T14:25:32.965759Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).2018-12-09T14:25:34.370212Z 0 [Warning] InnoDB: New log files created, LSN=457902018-12-09T14:25:34.700644Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.2018-12-09T14:25:34.842230Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 4a949feb-fbbe-11e8-beee-002535150600.2018-12-09T14:25:34.857245Z 0 [Warning] Gtid table is not ready to be used. Table &apos;mysql.gtid_executed&apos; cannot be opened.2018-12-09T14:25:34.912538Z 1 [Note] A temporary password is generated for root@localhost: kDLL5K&lt;iGsmo MySQL Workbench 连接到 MySQL 8.0.21 提示配置有问题windows 环境，lower_case_tables_name=2 的情况下得到的提示：123456789101112[Window Title]MySQL Workbench[Main Instruction]Server Configuration Problems[Content]A server configuration problem was detected.The server is in a system that does not properly support the selected lower_case_table_names option value. Some problems may occur.Please consult the MySQL server documentation.[ ] Don&apos;t show this message again [OK] 实践证明，有此提示的情况下，并不影响正常使用，该提示可以忽略。 要彻底解决这个问题，就是在初始化时，将该参数的值指定为 1，或者不指定，使用默认值即可。 尝试修改 lower_case_table_names 参数lower_case_table_names 当前值为 2：1lower_case_table_names = 2 改为 11lower_case_table_names = 1 重启报错：1234567C:\\Windows\\system32&gt;net start mysqlMySQL 服务正在启动 .MySQL 服务无法启动。服务没有报告任何错误。请键入 NET HELPMSG 3534 以获得更多的帮助。 用 mysqld --console 命令查看具体的错误12345678C:\\Windows\\system32&gt;mysqld --console2020-07-25T07:11:31.005253Z 0 [System] [MY-010116] [Server] C:\\dev\\MySQL\\mysql-8.0.21-winx64\\bin\\mysqld.exe (mysqld 8.0.21) starting as process 65562020-07-25T07:11:31.022631Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.2020-07-25T07:11:31.467105Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.2020-07-25T07:11:31.481285Z 1 [ERROR] [MY-011087] [Server] Different lower_case_table_names settings for server (&apos;1&apos;) and data dictionary (&apos;2&apos;).2020-07-25T07:11:31.484999Z 0 [ERROR] [MY-010020] [Server] Data Dictionary initialization failed.2020-07-25T07:11:31.487849Z 0 [ERROR] [MY-010119] [Server] Aborting2020-07-25T07:11:31.546111Z 0 [System] [MY-010910] [Server] C:\\dev\\MySQL\\mysql-8.0.21-winx64\\bin\\mysqld.exe: Shutdown complete (mysqld 8.0.21) MySQL Community Server - GPL. 查看官网 8.0 的文档（5.7.x 无此内容），可以看到：lower_case_table_names can only be configured when initializing the server. Changing the lower_case_table_names setting after the server is initialized is prohibited. 意思是只能在初始化时指定 lower_case_table_names 参数，初始化之后该参数不允许修改。 针对大小写配置问题，对照 8.0 和 5.7 的文档，你会发现，5.7 版本支持在初始化之后修改 lower_case_table_names 参数，而且还给出了在不同值下创建的数据库的迁移方案。 而到了 8.0，只支持初始化时指定该参数，初始化之后，如果修改了该参数，启动就会报错，因为不允许在初始化之后修改这个值了。 针对大小写配置问题，针对不同版本的官网文档以下是目前用得比较多的两个版本的文档：8.0 官网文档链接：https://dev.mysql.com/doc/refman/8.0/en/identifier-case-sensitivity.html5.7 官网文档链接：https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html 解决知道 MySQL 的规则就好办了，如果不需要数据迁移： 删除 data 目录下的所有文件，重新初始化并且指定 lower_case_table_names 值。 卸载 MySQL，然后重装，重装之后，在初始化数据库时指定 lower_case_table_names 值。 如果需要数据迁移，大致步骤如下： 先转化数据库名、表表、字段名为想要的大小写，然后导出数据。 用新的lower_case_table_names值重新初始化数据库。 创建新实例，导入之前导出的数据。 指定 lower_case_table_names 的两种方式 初始化时指定，如：mysqld --initialize --console --lower-case-table-names=1，参考：https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names 12345C:\\Windows\\system32&gt;mysqld --initialize --console --lower-case-table-names=12020-07-25T08:39:17.886931Z 0 [System] [MY-013169] [Server] C:\\dev\\MySQL\\mysql-8.0.21-winx64\\bin\\mysqld.exe (mysqld 8.0.21) initializing of server in progress as process 171162020-07-25T08:39:17.901930Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.2020-07-25T08:39:19.157823Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.2020-07-25T08:39:20.411299Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: g6+fg/+;qouD 初始化前，修改文件 my.ini （linux 下是 my.cnf，默认位于 /etc/mysql/），在 [mysqld] 配置节点下添加 lower-case-table-names=1。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"MySQL","slug":"windows/MySQL","permalink":"https://www.lovesofttech.com/categories/windows/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"}]},{"title":"MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误","slug":"database/mysqlPasswordPlugin","date":"2020-07-24T16:00:00.000Z","updated":"2020-09-01T02:53:12.924Z","comments":true,"path":"database/mysqlPasswordPlugin.html","link":"","permalink":"https://www.lovesofttech.com/database/mysqlPasswordPlugin.html","excerpt":"线上重启 MySQL 之后，Tomcat 下的网站连接数据库异常，用同样的用户名和密码通过终端登录数据库正常，排除用户名及密码错误。终端登录过之后，Tomcat 下的网站连接数据库恢复正常，如果再次重启 MySQL，在通过终端登录之前，Tomcat 下的网站连接数据库，又会失败。","text":"线上重启 MySQL 之后，Tomcat 下的网站连接数据库异常，用同样的用户名和密码通过终端登录数据库正常，排除用户名及密码错误。终端登录过之后，Tomcat 下的网站连接数据库恢复正常，如果再次重启 MySQL，在通过终端登录之前，Tomcat 下的网站连接数据库，又会失败。 环境 CentOS 7 MySQL 8.x Tomcat 9.x 现象MySQL 重启之后，运行在 Tomcat 下的网站连接数据库失败，重启 Tomcat 提示：java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.，同时还有以下日志：1234lastAcquisitionFailureDefaultUser -&gt; java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up....20-07-01 16:55:20.580 WARN SqlExceptionHelper Line129 - SQL Error: 0, SQLState: null20-07-01 16:55:20.581 ERROR SqlExceptionHelper Line131 - Connections could not be acquired from the underlying database! 原因：用户加密插件MySQL 加密的插件方式mysql 8.0 修改了加密的插件方式，创建用户时，如果不指定，会默认用 caching_sha2_password 加密方式，在应用程序连接 MySQL 之前，需要先以相同的用户登录一次 MySQL，应用程序才可以正常连接，一旦重启 MySQL，之前的登录缓存会失效，应用程序将不能连接 MySQL。 如果遇到在非人工操作的情况下服务器重启，那么应用程序将不能连接 MySQL，所以，这是不被允许的。除非在 Tomcat 启动脚本中添加终端登录 MySQL 的操作，但这种方式会增加部署项目的复杂度，本人没有尝试这种方式。 解决办法比较简单，只需要将 MySQL 用户密码的加密方式改为 mysql_native_password 即可，见下面的操作。 解决将 MySQL 用户的 plugin 由 caching_sha2_password 改为 mysql_native_password，比如，我们修改 admin 的 plugin：12ALTER USER &apos;admin&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;new_password&apos;;FLUSH PRIVILEGES; 查看用户密码加密插件方式1234567891011mysql&gt; select user,host,plugin from mysql.user; +------------------+-----------+-----------------------+| user | host | plugin |+------------------+-----------+-----------------------+| admin | localhost | mysql_native_password || mysql.infoschema | localhost | caching_sha2_password || mysql.session | localhost | caching_sha2_password || mysql.sys | localhost | caching_sha2_password || root | localhost | caching_sha2_password |+------------------+-----------+-----------------------+5 rows in set (0.00 sec)","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"MySQL","slug":"windows/MySQL","permalink":"https://www.lovesofttech.com/categories/windows/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"}]},{"title":"Spring Boot 2.3.1 通过配置文件初始化 POJO 属性字段","slug":"java/spring-config-to-pojo","date":"2020-07-16T16:00:00.000Z","updated":"2020-09-01T02:53:12.991Z","comments":true,"path":"java/spring-config-to-pojo.html","link":"","permalink":"https://www.lovesofttech.com/java/spring-config-to-pojo.html","excerpt":"本文在 Spring Boot 2.3.1.RELEASE 下测试通过，请注意版本，也许并不适合将来的版本。","text":"本文在 Spring Boot 2.3.1.RELEASE 下测试通过，请注意版本，也许并不适合将来的版本。 正确的姿势POJO123456789101112@Data@Configuration@PropertySource(\"classpath:config-biz.properties\")@ConfigurationProperties(prefix =\"config\")public class ConfigBiz &#123; private String env; private String logDirectoryPath; private String isSendEmailWhenException; private String mailFrom; private String whenExceptionMailTo; private String batchUpdateRecordsLimit;&#125; 配置文件123456789config.logDirectoryPath=C:/logsconfig.env=localconfig.isSendEmailWhenException=Nconfig.isSetResJsonForApiCallLogWhenSuccess=Nconfig.mailFrom=1614923608@qq.comconfig.whenExceptionMailTo=552087293@qq.com# 系统通用配置：批量修改，限制记录数config.batchUpdateRecordsLimit=500 备忘 早期版本 Spring Boot 1.5.X 也可以用这种方式配置。 POJO 文件中的 @Configuration 可换成 @Component。 不可读取 yml 格式的文件，只能读取 properties 后缀的文件。 需要配合 @ConfigurationProperties 注解。 不指定前缀，直接是 @ConfigurationProperties，程序可正常运行，但 IDEA 会报红色波浪线，可以不理会，不过，对于有代码洁癖的人来说，这是不可接受的，见下图： 如果看着红色波浪线不爽，那就添加一个前缀吧，如：@ConfigurationProperties(prefix =&quot;config&quot;)，这样还可以把不同的配置信息放到一个 .properties 文件里，不同的 POJO 通过前缀来获取自己的属性字段。 踩过的坑之前的项目采用 Spring Boot 2.1.6.RELEASE，通过以下注解：123@Data@Configuration@PropertySource(&quot;classpath:config-biz.properties&quot;) 再配合属性注解 @Value(&quot;${属性字段名}&quot;)，即可完成配置的初始化，如下： 123456789101112@Data@Configuration@PropertySource(\"classpath:config-biz.properties\")public class ConfigBiz &#123; @Value(\"$&#123;env&#125;\") private String env; @Value(\"$&#123;logDirectoryPath&#125;\") private String logDirectoryPath; // ...&#125; 最近的项目，用了当前最新的 Spring Boot 2.3.1.RELEASE，这种方式已经不行了，程序编译没问题，发生运行时错误，提示：12345Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder &apos;env&apos; in value &quot;$&#123;env&#125;&quot; at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:178) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE] at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:124) ~[spring-core-5.2.7.RELEASE.jar:5.2.7.RELEASE] at org.springframework.beans.factory.config.PropertyPlaceholderConfigurer$PlaceholderResolvingStringValueResolver.resolveStringValue(PropertyPlaceholderConfigurer.java:230) ~[spring-beans-5.2.7.RELEASE.jar:5.2.7.RELEASE] ... 网上的文章，针对以上错误信息，原因各异，使用的 Spring Boot 版本也是五花八门，针对较新的版本的文章比较少。建议直接查官网文档。 另外，我还有一个项目用的是 Spring Boot 2.2.2.RELEASE，这个版本当已经有问题了，由于当时项目时间紧，就用了别的方式解决的。 查看或下载 Spring Boot 官网文档该网址可选择三种不同的文档方式查看：https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/ 如果想查看其它版本的文档，把链接中的版本号替换成你想要查看的。 三种类型文档 html/：就是 Spring Boot 官网 https://spring.io/projects/spring-boot#learn 页面各个版本后面的 Reference Doc 链接地址，带大主题目录，方便选择性的阅读。 htmlsingle/：如果想要在线搜索内容，就这个链接了，Ctrl + F，你懂的，比如，本文遇到的问题，直接搜索 @PropertySource。左边也有章节目录。 pdf/：可以下载到本地慢慢查看，搜索也比较方便。","categories":[{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://www.lovesofttech.com/categories/Spring-Boot/"},{"name":"POJO","slug":"Spring-Boot/POJO","permalink":"https://www.lovesofttech.com/categories/Spring-Boot/POJO/"},{"name":"java","slug":"Spring-Boot/POJO/java","permalink":"https://www.lovesofttech.com/categories/Spring-Boot/POJO/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"Spring Boot","slug":"Spring-Boot","permalink":"https://www.lovesofttech.com/tags/Spring-Boot/"},{"name":"POJO","slug":"POJO","permalink":"https://www.lovesofttech.com/tags/POJO/"}]},{"title":"spring boot 配置静态资源","slug":"java/springResourcesStaticLocations","date":"2020-06-13T16:00:00.000Z","updated":"2020-09-01T02:53:12.995Z","comments":true,"path":"java/springResourcesStaticLocations.html","link":"","permalink":"https://www.lovesofttech.com/java/springResourcesStaticLocations.html","excerpt":"无论项目以 tomcat 的方式部署，还是以 jar 包直接部署，都适用。静态资源的目录可以是服务器上运行 web 服务的用户能访问的任何位置。","text":"无论项目以 tomcat 的方式部署，还是以 jar 包直接部署，都适用。静态资源的目录可以是服务器上运行 web 服务的用户能访问的任何位置。 需求场景满足以下【前提一】中的任意一条，同时又满足【前提二】中任意一条，就需要把静态资源放在一个公共的地方。 前提一 需要做负载均衡 蓝绿部署 以 spring boot 生成的 jar 包直接运行 前提二 有静态的 html 文件是动态生成的 某些页面的图片是由用户/管理员上传的 需要下载的文件是动态生成的 需要达到的效果访问配置的静态目录，就象是直接访问 spring boot 项目的 resources/static 目录下的文件一样。 注意事项如果配置了多个静态目录，则需要保证这些目录下的文件不能重名。 以下是项目中的实际应用场景 发布的文章需要动态生成静态 html 文件 用户上传的头像在用户相关页面显示 用户头像以用户 id 命名，访问路径固定 图文并茂的文章编辑器，需要上传图片。可参考：springBoot 集成百度富文本框 UEditor，多模块方式 实施方案spring boot 配置在 application.yml 文件配置以下内容：123456static.pages: /home/utomcat/apps/resources/staticPagesstatic.upload.images: /home/utomcat/apps/resources/uploadImagesuEditor.upload.path: /home/utomcat/apps/webLoadBalance/uEditorUploadsuEditor.upload.path.web: /home/utomcat/apps/webLoadBalancespring.mvc.static-path-pattern: /**spring.resources.static-locations: classpath:/resources/,classpath:/static/,file:$&#123;uEditor.upload.path&#125;,file:$&#123;uEditor.upload.path.web&#125;,file:$&#123;static.pages&#125;,file:$&#123;static.upload.images&#125; 这样配置的效果 假设网站为：https://www.lovesofttech.com/ 假设 /home/utomcat/apps/resources/staticPages 目录下有一个文件：articleIndex.html，则这样访问：https://www.lovesofttech.com/articleIndex.html 假设 /home/utomcat/apps/resources/staticPages 目录下有一个目录：news news 下有两个文件： article0.html article.html 则上面两个文件这样访问： https://www.lovesofttech.com/news/article0.html https://www.lovesofttech.com/news/article1.html 假设 /home/utomcat/apps/resources/uploadImages 目录下有一个目录：images images 下有两个文件： image0.jpg image1.jpg 则上面两个文件这样访问： https://www.lovesofttech.com/images/image0.jpg https://www.lovesofttech.com/images/image2.jpg","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"Java 利用 pdfbox 将 PDF 转换为图片","slug":"java/javaPdfToImage","date":"2020-02-29T16:00:00.000Z","updated":"2020-09-01T02:53:12.984Z","comments":true,"path":"java/javaPdfToImage.html","link":"","permalink":"https://www.lovesofttech.com/java/javaPdfToImage.html","excerpt":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。本文介绍用 pdfbox 将 PDF 转为图片。","text":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。本文介绍用 pdfbox 将 PDF 转为图片。 相关文章 LibreOffice/OpenOffice 将 Office 文档转换为 PDF 文档：Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 配置 LibreOffice 环境：CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 将 pdf 转换成图片pom.xml 添加依赖：12345&lt;dependency&gt; &lt;groupId&gt;org.apache.pdfbox&lt;/groupId&gt; &lt;artifactId&gt;pdfbox&lt;/artifactId&gt; &lt;version&gt;2.0.18&lt;/version&gt;&lt;/dependency&gt; 转换类 PdfToImage ：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596package com.example.demo;import org.apache.pdfbox.pdmodel.PDDocument;import org.apache.pdfbox.rendering.ImageType;import org.apache.pdfbox.rendering.PDFRenderer;import javax.imageio.ImageIO;import java.awt.image.BufferedImage;import java.io.File;public class PdfToImage &#123; // 经过测试，dpi 为 96,100,105,120,150,200 中，105 显示效果较为清晰，体积稳定，dpi 越高图片体积越大，一般电脑显示分辨率为 96 public static final float DEFAULT_DPI = 105; public static final String DEFAULT_IMAGE_FORMAT = \".png\"; /** * pdf 转图片，只生成一张图片 * @param pdfPath PDF路径 * @return pdf 页数 */ public static int pdfToImageAllToSingleImage(String pdfPath, String imageFilePath, int pageSize) throws Exception &#123; BufferedImage imageResult; PDDocument pdDocument = PDDocument.load(new File(pdfPath)); PDFRenderer pdfRenderer = new PDFRenderer(pdDocument); int pages = pdDocument.getNumberOfPages(); int len = Math.min(pages, pageSize); int width = 0; int imageHeightTotal = 0; for (int i = 0; i &lt; len; i++) &#123; BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB); imageHeightTotal += image.getHeight(); if (i == 0) &#123; width = image.getWidth(); &#125; &#125; imageResult = new BufferedImage(width, imageHeightTotal, BufferedImage.TYPE_INT_RGB); int shiftHeight = 0; int[] singleImgRGB; for (int i = 0; i &lt; len; i++) &#123; BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB); int imageHeight = image.getHeight(); // 计算偏移高度 if (i &gt; 0) &#123; shiftHeight += pdfRenderer.renderImageWithDPI(i - 1, DEFAULT_DPI, ImageType.RGB).getHeight(); &#125; singleImgRGB = image.getRGB(0, 0, width, imageHeight, null, 0, width); // 写入流中 imageResult.setRGB(0, shiftHeight, width, imageHeight, singleImgRGB, 0, width); &#125; // 写图片 ImageIO.write(imageResult, DEFAULT_IMAGE_FORMAT.replace(\".\", \"\"), new File(imageFilePath)); pdDocument.close(); return pages; &#125; /** * pdf 转图片，每页生成一张图片 * @param pdfPath PDF路径 * @return pdf 页数 */ public static int pdfToImageOnePageOnImage(String pdfPath, String imageFilePath, int pageSize) throws Exception &#123; BufferedImage imageResult; PDDocument pdDocument = PDDocument.load(new File(pdfPath)); PDFRenderer pdfRenderer = new PDFRenderer(pdDocument); int pages = pdDocument.getNumberOfPages(); int len = Math.min(pages, pageSize); int width; int shiftHeight = 0; int[] singleImgRGB; for (int i = 0; i &lt; len; i++) &#123; BufferedImage image = pdfRenderer.renderImageWithDPI(i, DEFAULT_DPI, ImageType.RGB); width = image.getWidth(); int imageHeight = image.getHeight(); imageResult = new BufferedImage(width, imageHeight, BufferedImage.TYPE_INT_RGB); singleImgRGB = image.getRGB(0, 0, width, imageHeight, null, 0, width); // 写入流中 imageResult.setRGB(0, shiftHeight, width, imageHeight, singleImgRGB, 0, width); // 写图片 ImageIO.write(imageResult, DEFAULT_IMAGE_FORMAT.replace(\".\", \"\"), new File(imageFilePath + i + DEFAULT_IMAGE_FORMAT)); &#125; pdDocument.close(); return pages; &#125;&#125; 在线预览生成图片之后，在线预览就不用多说了吧~~","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"pdfbox","slug":"java/pdfbox","permalink":"https://www.lovesofttech.com/categories/java/pdfbox/"},{"name":"PDF","slug":"java/pdfbox/PDF","permalink":"https://www.lovesofttech.com/categories/java/pdfbox/PDF/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"PDF","slug":"PDF","permalink":"https://www.lovesofttech.com/tags/PDF/"},{"name":"pdfbox","slug":"pdfbox","permalink":"https://www.lovesofttech.com/tags/pdfbox/"}]},{"title":"Maven 项目 jar 包依赖冲突导致运行期错误的排查方法","slug":"java/runtimeOmittedForConflict","date":"2020-02-29T16:00:00.000Z","updated":"2020-09-01T02:53:12.990Z","comments":true,"path":"java/runtimeOmittedForConflict.html","link":"","permalink":"https://www.lovesofttech.com/java/runtimeOmittedForConflict.html","excerpt":"Maven 依赖冲突，导致运行期错误：java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;","text":"Maven 依赖冲突，导致运行期错误：java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String; 现象项目用到了 jodconverter 将 Office 文档转换为 PDF 文档，先在一个 demo 工程测试，完全没问题之后，同样的功能拿到正在开发的项目中，却报错了：1234567891011121301-Mar-2020 08:30:00.698 严重 [http-nio-80-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [policy] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String;] with root cause java.lang.NoSuchMethodError: org.apache.commons.io.IOUtils.toString(Ljava/io/InputStream;Ljava/nio/charset/Charset;)Ljava/lang/String; at org.jodconverter.document.JsonDocumentFormatRegistry.create(JsonDocumentFormatRegistry.java:65) at org.jodconverter.document.JsonDocumentFormatRegistry.create(JsonDocumentFormatRegistry.java:50) at org.jodconverter.document.DefaultDocumentFormatRegistryInstanceHolder.getInstance(DefaultDocumentFormatRegistryInstanceHolder.java:45) at org.jodconverter.document.DefaultDocumentFormatRegistry.getInstance(DefaultDocumentFormatRegistry.java:430) at org.jodconverter.document.DefaultDocumentFormatRegistry.&lt;clinit&gt;(DefaultDocumentFormatRegistry.java:52) at org.jodconverter.job.AbstractConverter.&lt;init&gt;(AbstractConverter.java:64) at org.jodconverter.LocalConverter.&lt;init&gt;(LocalConverter.java:107) at org.jodconverter.LocalConverter.&lt;init&gt;(LocalConverter.java:51) at org.jodconverter.LocalConverter$Builder.build(LocalConverter.java:212) at org.jodconverter.LocalConverter.make(LocalConverter.java:87) at org.jodconverter.JodConverter.convert(JodConverter.java:47) 这明显是典型的依赖版本冲突导致的问题，那如何排查，如何找到“元凶”呢？从错误信息看，jodconverter 用到了 org.apache.commons.io.IOUtils.toString 这个方法，用到的依赖是 commons-io jodconverter 的依赖如下： 找到版本冲突的依赖库（jar 包）现在需要查看项目中是否有直接引用到 commons-io 这个库，另外，还要看一下其它库是否也依赖了 commons-io，如果依赖比较多，这个工作量是比较大的，而且容易看错。下面用指令 mvn dependency:tree -Dverbose -Dincludes=commons-io 查看所有依赖 commons-io 的库（jar 包）。该指令同时还会显示是冲突（conflict）了还是重复（duplicate）引用了，如：12commons-io:commons-io:2.2(runtime omitted for conflict withh 2.2)org.apache.commons:commons-lang3:3.9(runtime omited for duplicate) 查看有冲突的依赖12345678910111213141516171819C:\\study\\demo&gt;mvn dependency:tree -Dverbose -Dincludes=commons-io[INFO] Scanning for projects...[INFO][INFO] --------------------------&lt; com.example:demo &gt;--------------------------[INFO] Building demo 0.0.1-SNAPSHOT[INFO] --------------------------------[ jar ]---------------------------------[INFO][INFO] --- maven-dependency-plugin:2.10:tree (default-cli) @ demo ---[WARNING] Using Maven 2 dependency tree to get verbose output, which may be inconsistent with actual Maven 3 resolution[INFO] com.example:demo:jar:0.0.1-SNAPSHOT[INFO] +- commons-fileupload:commons-fileupload:jar:1.4:compile[INFO] | \\- commons-io:commons-io:jar:2.2:compile[INFO] \\- org.jodconverter:jodconverter-local:jar:4.2.4:compile[INFO] +- org.jodconverter:jodconverter-core:jar:4.2.4:compile[INFO] | \\- (commons-io:commons-io:jar:2.6:runtime - omitted for conflict with 2.2)[INFO] \\- (commons-io:commons-io:jar:2.6:runtime - omitted for conflict with 2.2)[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------ dependency:tree 用法参考 maven-dependency-plugin 3.0 之后并不支持 verbose 参数会提示：Verbose not supported since maven-dependency-plugin 3.0，这时并不能查出来版本冲突的地方，如下：123456789101112131415C:\\study\\demo&gt;mvn dependency:tree -Dverbose -Dincludes=commons-io[INFO] Scanning for projects...[INFO][INFO] --------------------------&lt; com.example:demo &gt;--------------------------[INFO] Building demo 0.0.1-SNAPSHOT[INFO] --------------------------------[ jar ]---------------------------------[INFO][INFO] --- maven-dependency-plugin:3.1.1:tree (default-cli) @ demo ---[INFO] Verbose not supported since maven-dependency-plugin 3.0[INFO] com.example:demo:jar:0.0.1-SNAPSHOT[INFO] \\- commons-fileupload:commons-fileupload:jar:1.4:compile[INFO] \\- commons-io:commons-io:jar:2.2:compile[INFO] ------------------------------------------------------------------------[INFO] BUILD SUCCESS[INFO] ------------------------------------------------------------------------ 解决指定 maven-dependency-plugin 版本。如果使用 spring-boot 项目，项目中可能根本就没有指定 maven-dependency-plugin，也不需要指定就能正常运行，spring-boot 本身已经包含了最新的 maven-dependency-plugin 了。但现在需要查看依赖冲突，需要 3.0 以前的版本，所以，按如下显式指定版本即可：12345678910&lt;build&gt; &lt;plugins&gt; &lt;!-- 其它插件 --&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt; &lt;version&gt;2.10&lt;/version&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 从 IDEA 看依赖情况当然，以下截图只是为了方便查看，已经把不相关的依赖全部注释掉了，真实项目要查看版本冲突，通过这种方式找是“愚蠢”的。 解决冲突将各自依赖的 commons-io 排除，项目统一引用最新版本。依赖由：12345678910&lt;dependency&gt; &lt;groupId&gt;commons-fileupload&lt;/groupId&gt; &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt; &lt;version&gt;1.4&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.jodconverter&lt;/groupId&gt; &lt;artifactId&gt;jodconverter-local&lt;/artifactId&gt; &lt;version&gt;4.2.4&lt;/version&gt;&lt;/dependency&gt; 变更为：123456789101112131415161718192021222324252627&lt;dependency&gt; &lt;groupId&gt;commons-fileupload&lt;/groupId&gt; &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt; &lt;version&gt;1.4&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;commons-io&lt;/groupId&gt; &lt;artifactId&gt;commons-io&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.jodconverter&lt;/groupId&gt; &lt;artifactId&gt;jodconverter-local&lt;/artifactId&gt; &lt;version&gt;4.2.4&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;commons-io&lt;/groupId&gt; &lt;artifactId&gt;commons-io&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;commons-io&lt;/groupId&gt; &lt;artifactId&gt;commons-io&lt;/artifactId&gt; &lt;version&gt;2.6&lt;/version&gt;&lt;/dependency&gt; 再次通过 IDEA 查看依赖情况 说明以上解决方案只是一个示例，实际项目中解决冲突需要考虑很多因素，同时，也还有别的方法，比如第一声明优先原则等，这不是本文重点，网上很多这类文章。","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"Maven","slug":"java/Maven","permalink":"https://www.lovesofttech.com/categories/java/Maven/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"Maven","slug":"Maven","permalink":"https://www.lovesofttech.com/tags/Maven/"}]},{"title":"Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能","slug":"java/javaLibreOffice","date":"2020-02-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.982Z","comments":true,"path":"java/javaLibreOffice.html","link":"","permalink":"https://www.lovesofttech.com/java/javaLibreOffice.html","excerpt":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。 本文介绍借助 LibreOffice 将 Office 文当转换成 PDF 文档。 本文同样适用于 OpenOffice，以下仅以 LibreOffice 为例。","text":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 将 Office 文档转换为 PDF 文档，然后再用 pdfbox 将 PDF 转为图片。 本文介绍借助 LibreOffice 将 Office 文当转换成 PDF 文档。 本文同样适用于 OpenOffice，以下仅以 LibreOffice 为例。 相关文章 配置 LibreOffice 环境：CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 将 PDF 转换为图片：Java 利用 pdfbox 将 PDF 转换为图片 前言 为了实现 Office 文档上传并实现在线预览功能，我试了 POI 和收费库 aspose，均不理想。 但是将 PDF 转换为图片有成熟的方案，于是，问题变成了：如何将 Office 文档转换成 PDF。 LibreOffice 可将 Office 文当转换成 PDF文件，并且效果非常棒，和通过微软的 Office 直接另存为 PDF 文件的效果几乎一样。针对在线预览的需求，效果是最好的，也许是最好的解决方案。 不过，前提是需要在服务器上安装 LibreOffice，为了测试，开发环境也需要安装，不过，好的是 LibreOffice 跨平台。 尝试通过 LibreOffice 将 Office 文档直接转换成图片，可惜只得到第一页的内容，查看帮助，没有找到直接转换为图片的方法。 Java 利用 LibreOffice 将 Office 文档转换成 PDF有两种转换方式，各有优劣，请自行选择。 异步转换通过调用操作系统命令的方式实现，这个转换是异步的，根据文件的大小需要的时间不确定，如果在上传之后就要立即预览，需要用同步方式。 优点：实现方式简单，不需要额外配置信息，不需要添加第三方依赖库（当然 LibreOffice 是必须要安装的）。 缺点：发送指令之后，转换是否成功，是否有异常，无法获知，也就是说，转换是否成功，是不确定的。当然，通过严格的测试，一般还是可以保证转换的可靠性的。 同步转换用到了 JodConverter：https://github.com/sbraconnier/jodconverter 优点：转换是同步的，转换成功与否是确定的。 缺点：代码运行期需要启动 LibreOffice 服务，需要占用操作系统资源，相对于异步转换方式，需要依赖第三方库，需要额外配置信息。 完整代码添加依赖（仅同步方式需要）12345&lt;dependency&gt; &lt;groupId&gt;org.jodconverter&lt;/groupId&gt; &lt;artifactId&gt;jodconverter-local&lt;/artifactId&gt; &lt;version&gt;4.2.4&lt;/version&gt;&lt;/dependency&gt; 在 resources 目录添加 libre.properties 文件（仅同步方式需要）内容如下：123456789# LibreOffice主目录libreOfficeHome=C:/dev/LibreOffice6.4# 开启多个LibreOffice进程，每个端口对应一个进程# portNumbers=2002,2003portNumbers=2002# 任务执行超时为5分钟taskExecutionTimeoutMinutes=5# 任务队列超时为1小时taskQueueTimeoutHours=1 转换类 LibreOfficeUtil12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364package com.example.demo;import com.example.factory.OfficeManagerInstance;import org.jodconverter.JodConverter;import java.io.File;public class LibreOfficeUtil &#123; /** * 利用 JodConverter 将 Offfice 文档转换为 PDF（要依赖 LibreOffice），该转换为同步转换，返回时就已经转换完成 */ public static boolean convertOffice2PDFSyncIsSuccess(File sourceFile, File targetFile) &#123; try &#123; OfficeManagerInstance.start(); JodConverter.convert(sourceFile).to(targetFile).execute(); &#125; catch (Exception e) &#123; e.printStackTrace(); return false; &#125; return true; &#125; /** * 利用 LibreOffice 将 Office 文档转换成 PDF，该转换是异步的，返回时，转换可能还在进行中，转换是否有异常也未可知 * @param filePath 目标文件地址 * @param targetFilePath 输出文件夹 * @return 子线程执行完毕的返回值 */ public static int convertOffice2PDFAsync(String filePath, String fileName, String targetFilePath) throws Exception &#123; String command; int exitStatus; String osName = System.getProperty(\"os.name\"); String outDir = targetFilePath.length() &gt; 0 ? \" --outdir \" + targetFilePath : \"\"; if (osName.contains(\"Windows\")) &#123; command = \"cmd /c cd /d \" + filePath + \" &amp;&amp; start soffice --headless --invisible --convert-to pdf ./\" + fileName + outDir; &#125; else &#123; command = \"libreoffice6.3 --headless --invisible --convert-to pdf:writer_pdf_Export \" + filePath + fileName + outDir; &#125; exitStatus = executeOSCommand(command); return exitStatus; &#125; /** * 调用操作系统的控制台，执行 command 指令 * 执行该方法时，并没有等到指令执行完毕才返回，而是执行之后立即返回，返回结果为 0，只能说明正确的调用了操作系统的控制台指令，但执行结果如何，是否有异常，在这里是不能体现的，所以，更好的姿势是用同步转换功能。 */ private static int executeOSCommand(String command) throws Exception &#123; Process process; process = Runtime.getRuntime().exec(command); // 转换需要时间，比如一个 3M 左右的文档大概需要 8 秒左右，但实际测试时，并不会等转换结束才执行下一行代码，而是把执行指令发送出去后就立即执行下一行代码了。 int exitStatus = process.waitFor(); if (exitStatus == 0) &#123; exitStatus = process.exitValue(); &#125; // 销毁子进程 process.destroy(); return exitStatus; &#125;&#125; OfficeManagerInstance（仅同步方式需要）1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162package com.example.factory;import org.jodconverter.office.LocalOfficeManager;import org.jodconverter.office.OfficeManager;import org.springframework.core.io.support.PropertiesLoaderUtils;import org.springframework.stereotype.Component;import javax.annotation.PostConstruct;import java.io.IOException;import java.util.Properties;/** * github https://github.com/uncleAndyChen * email andy@lovesofttech.com * homepage https://www.lovesofttech.com/ * author andyChen * since 2020/02/29 */@Componentpublic class OfficeManagerInstance &#123; private static OfficeManager INSTANCE = null; public static synchronized void start() &#123; officeManagerStart(); &#125; @PostConstruct private void init() &#123; try &#123; Properties properties = PropertiesLoaderUtils.loadAllProperties(\"libre.properties\"); String[] portNumbers = properties.getProperty(\"portNumbers\", \"\").split(\",\"); int[] ports = new int[portNumbers.length]; for (int i = 0; i &lt; portNumbers.length; i++) &#123; ports[i] = Integer.parseInt(portNumbers[i]); &#125; LocalOfficeManager.Builder builder = LocalOfficeManager.builder().install(); builder.officeHome(properties.getProperty(\"libreOfficeHome\", \"\")); builder.portNumbers(ports); builder.taskExecutionTimeout(Integer.parseInt(properties.getProperty(\"taskExecutionTimeoutMinutes\", \"\")) * 1000 * 60); // minute builder.taskQueueTimeout(Integer.parseInt(properties.getProperty(\"taskQueueTimeoutHours\", \"\")) * 1000 * 60 * 60); // hour INSTANCE = builder.build(); officeManagerStart(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125; private static void officeManagerStart() &#123; if (INSTANCE.isRunning()) &#123; return; &#125; try &#123; INSTANCE.start(); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 参考https://github.com/sbraconnier/jodconverter/wiki/Getting-Startedhttps://github.com/sbraconnier/jodconverter/wiki/Configurationhttps://github.com/sbraconnier/jodconverter/wiki/Java-Library 遇到的坑请移步：Maven 项目 jar 包依赖冲突导致运行期错误的排查方法 附：libreoffice6.3 转换帮助文档libreoffice6.3 转换文档的用法，官方没有详细的在线文档，通过 -h 可以查看到详细的帮助，已经可以满足开发所需。例如将一个文件转换为 pdf ：libreoffice6.3 --headless --invisible --convert-to pdf:writer_pdf_Export ./奇妙的记忆力.pptx，后面可以指定保存 pdf 的目录，不指定就保存到当前目录。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153[root@ebs-60027 lib64]# libreoffice6.3 -hUsage: soffice [argument...] argument - switches, switch parameters and document URIs (filenames). Using without special arguments: Opens the start center, if it is used without any arguments. &#123;file&#125; Tries to open the file (files) in the components suitable for them. &#123;file&#125; &#123;macro:///Library.Module.MacroName&#125; Opens the file and runs specified macros from the file. Getting help and information: --help | -h | -? Shows this help and quits. --helpwriter Opens built-in or online Help on Writer. --helpcalc Opens built-in or online Help on Calc. --helpdraw Opens built-in or online Help on Draw. --helpimpress Opens built-in or online Help on Impress. --helpbase Opens built-in or online Help on Base. --helpbasic Opens built-in or online Help on Basic scripting language. --helpmath Opens built-in or online Help on Math. --version Shows the version and quits. --nstemporarydirectory (MacOS X sandbox only) Returns path of the temporary directory for the current user and exits. Overrides all other arguments. General arguments: --quickstart[=no] Activates[Deactivates] the Quickstarter service. --nolockcheck Disables check for remote instances using one installation. --infilter=&#123;filter&#125; Force an input filter type if possible. For example: --infilter=&quot;Calc Office Open XML&quot; --infilter=&quot;Text (encoded):UTF8,LF,,,&quot; --pidfile=&#123;file&#125; Store soffice.bin pid to &#123;file&#125;. --display &#123;display&#125; Sets the DISPLAY environment variable on UNIX-like platforms to the value &#123;display&#125; (only supported by a start script). User/programmatic interface control: --nologo Disables the splash screen at program start. --minimized Starts minimized. The splash screen is not displayed. --nodefault Starts without displaying anything except the splash screen (do not display initial window). --invisible Starts in invisible mode. Neither the start-up logo nor the initial program window will be visible. Application can be controlled, and documents and dialogs can be controlled and opened via the API. Using the parameter, the process can only be ended using the taskmanager (Windows) or the kill command (UNIX-like systems). It cannot be used in conjunction with --quickstart. --headless Starts in &quot;headless mode&quot; which allows using the application without GUI. This special mode can be used when the application is controlled by external clients via the API. --norestore Disables restart and file recovery after a system crash. --safe-mode Starts in a safe mode, i.e. starts temporarily with a fresh user profile and helps to restore a broken configuration. --accept=&#123;connect-string&#125; Specifies a UNO connect-string to create a UNO acceptor through which other programs can connect to access the API. Note that API access allows execution of arbitrary commands. The syntax of the &#123;connect-string&#125; is: connection-type,params;protocol-name,params e.g. pipe,name=&#123;some name&#125;;urp or socket,host=localhost,port=54321;urp --unaccept=&#123;connect-string&#125; Closes an acceptor that was created with --accept. Use --unaccept=all to close all acceptors. --language=&#123;lang&#125; Uses specified language, if language is not selected yet for UI. The lang is a tag of the language in IETF language tag. Developer arguments: --terminate_after_init Exit after initialization complete (no documents loaded) --eventtesting Exit after loading documents. New document creation arguments: The arguments create an empty document of specified kind. Only one of them may be used in one command line. If filenames are specified after an argument, then it tries to open those files in the specified component. --writer Creates an empty Writer document. --calc Creates an empty Calc document. --draw Creates an empty Draw document. --impress Creates an empty Impress document. --base Creates a new database. --global Creates an empty Writer master (global) document. --math Creates an empty Math document (formula). --web Creates an empty HTML document. File open arguments: The arguments define how following filenames are treated. New treatment begins after the argument and ends at the next argument. The default treatment is to open documents for editing, and create new documents from document templates. -n Treats following files as templates for creation of new documents. -o Opens following files for editing, regardless whether they are templates or not. --pt &#123;Printername&#125; Prints following files to the printer &#123;Printername&#125;, after which those files are closed. The splash screen does not appear. If used multiple times, only last &#123;Printername&#125; is effective for all documents of all --pt runs. Also, --printer-name argument of --print-to-file switch interferes with &#123;Printername&#125;. -p Prints following files to the default printer, after which those files are closed. The splash screen does not appear. If the file name contains spaces, then it must be enclosed in quotation marks. --view Opens following files in viewer mode (read-only). --show Opens and starts the following presentation documents of each immediately. Files are closed after the showing. Files other than Impress documents are opened in default mode , regardless of previous mode. --convert-to OutputFileExtension[:OutputFilterName] \\ [--outdir output_dir] [--convert-images-to] Batch convert files (implies --headless). If --outdir isn&apos;t specified, then current working directory is used as output_dir. If --convert-images-to is given, its parameter is taken as the target filter format for *all* images written to the output format. If --convert-to is used more than once, the last value of OutputFileExtension[:OutputFilterName] is effective. If --outdir is used more than once, only its last value is effective. For example: --convert-to pdf *.odt --convert-to epub *.doc --convert-to pdf:writer_pdf_Export --outdir /home/user *.doc --convert-to &quot;html:XHTML Writer File:UTF8&quot; \\ --convert-images-to &quot;jpg&quot; *.doc --convert-to &quot;txt:Text (encoded):UTF8&quot; *.doc --print-to-file [--printer-name printer_name] [--outdir output_dir] Batch print files to file. If --outdir is not specified, then current working directory is used as output_dir. If --printer-name or --outdir used multiple times, only last value of each is effective. Also, &#123;Printername&#125; of --pt switch interferes with --printer-name. --cat Dump text content of the following files to console (implies --headless). Cannot be used with --convert-to. --script-cat Dump text content of any scripts embedded in the files to console (implies --headless). Cannot be used with --convert-to. -env:&lt;VAR&gt;[=&lt;VALUE&gt;] Set a bootstrap variable. For example: to set a non-default user profile path: -env:UserInstallation=file:///tmp/test Ignored switches: -psn Ignored (MacOS X only). -Embedding Ignored (COM+ related; Windows only). --nofirststartwizard Does nothing, accepted only for backward compatibility. --protector &#123;arg1&#125; &#123;arg2&#125; Used only in unit tests and should have two arguments.","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"LibreOffice","slug":"java/LibreOffice","permalink":"https://www.lovesofttech.com/categories/java/LibreOffice/"},{"name":"OpenOffice","slug":"java/LibreOffice/OpenOffice","permalink":"https://www.lovesofttech.com/categories/java/LibreOffice/OpenOffice/"},{"name":"PDF","slug":"java/LibreOffice/OpenOffice/PDF","permalink":"https://www.lovesofttech.com/categories/java/LibreOffice/OpenOffice/PDF/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"LibreOffice","slug":"LibreOffice","permalink":"https://www.lovesofttech.com/tags/LibreOffice/"},{"name":"OpenOffice","slug":"OpenOffice","permalink":"https://www.lovesofttech.com/tags/OpenOffice/"},{"name":"PDF","slug":"PDF","permalink":"https://www.lovesofttech.com/tags/PDF/"}]},{"title":"CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系","slug":"java/timeZone","date":"2020-02-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.997Z","comments":true,"path":"java/timeZone.html","link":"","permalink":"https://www.lovesofttech.com/java/timeZone.html","excerpt":"windows 下开发测试没有问题，上线后（CentOS 服务器）发现页面上显示的时间比实际时间少了13小时，来看看到底怎么回事儿。","text":"windows 下开发测试没有问题，上线后（CentOS 服务器）发现页面上显示的时间比实际时间少了13小时，来看看到底怎么回事儿。 现象 开发环境：win10 + windows 版 MySQL 8.0.19 服务器环境：CentOS7 + MySQL 8.0.19 SpringMvc + Hibernate + JQuery + Bootstrap，前后端分离开发 服务器上 Nginx 代理 Tomcat 上线后，类型为 timestamp 的字段的值，在保存前取的系统时间，系统时间正常，保存之后，比系统时间少了13小时。 排查刚开始排查时，只是通过页面来查看时间，后来发现，这样排查是不科学的，通过查看数据库里保存的值与页面上显示的值，才发现从数据库里取出来的值，到页面显示出来，也有可能相差13小时或者14小时，而这些差异，取决于： MySQL 时区 操作系统时区 数据库连接参数 serverTimezone。 各种搭配测试结果费话不多说，以下是测试情况 序号 MySQL 时区 CentOS 时区 连接参数 serverTimezone 保存到数据库的值 读出来的值 1 +8:00 Asia/Shanghai America/New_York 比实际时间少13小时 比数据库多13小时 2 +8:00 Asia/Shanghai Asia/Shanghai 与实际时间一致 与数据库一致 3 +8:00 Asia/Shanghai 删除该参数 与实际时间一致 与数据库一致 4 +8:00 America/New_York America/New_York 比实际少13小时 与数据库一致 5 +8:00 America/New_York Asia/Shanghai 与实际时间一致 比数据库少13小时 6 +8:00 America/New_York 删除该参数 与实际时间一致 比数据库少13小时 7 默认 America/New_York America/New_York 比实际少13小时 与数据库一致 8 默认 America/New_York Asia/Shanghai 与实际时间一致 比数据库少13小时 9 默认 America/New_York 删除该参数 比实际少14小时 比数据库多1小时 10 默认 Asia/Shanghai America/New_York 比实际少13小时 比数据库多13小时 11 默认 Asia/Shanghai Asia/Shanghai 与实际时间一致 与数据库一致 12 默认 Asia/Shanghai 删除该参数 比实际少14小时 比数据库多14小时 注：应用程序读取数据库中 timestamp 字段的值，在修改服务器时区之后，要重启 Tomcat 之后才会生效。 总结从上表可以看出，要想让 timestamp 字段保存到数据库的值与读出来的值跟北京时间（时区定义的是中国东八区时间）一致，只有序号 2、3、11 这三种配置才可以，更进一步总结： MySQL 时区与服务器（这里是CentOS）时区均为中国东八区，MySQL 连接参数要么也是东八区，要么不指定（删除 serverTimezone 参数）。 服务器（这里是CentOS）时区与数据库连接参数均为中国东八区，MySQL 数据库时区可以保持默认配置。 从上表还可以看出，timestamp 字段的值： 服务器（这里是CentOS）时区与连接参数 serverTimezone 时区一致的情况，读出来的值与数据库一致，否则会自动做转换。 保存到数据库的值与连接参数 serverTimezone 指定的时区有关，如果没有该参数，则与 MySQL 默认时区有关。 以下，介绍相关知识点。 相关知识点MySQL 时区查看时区：12345678mysql&gt; show variables like &apos;%time_zone%&apos;;+------------------+--------+| Variable_name | Value |+------------------+--------+| system_time_zone | || time_zone | SYSTEM |+------------------+--------+2 rows in set, 1 warning (0.00 sec) MySQL 的时区默认与系统时区一致。 配置 MySQL 默认时区MySQL使用的time_zone属性是UTC时间即：+00:00，而北京时间比UTC时间早8小时，即：UTC+08:00 永久修改1vi /etc/my.cnf 在 [mysqld] 下面添加一行：default-time_zone = &#39;+8:00&#39; 重启 MySQL 生效：systemctl restart mysqld 临时修改mysql&gt; set time_zone = ‘+8:00’;mysql&gt; set global time_zone = ‘+8:00’; 优点：立即生效，不用重启 MySQL 缺点：重启 MySQL 后会失效 配置默认时区后12345678910111213141516mysql&gt; show variables like &apos;%time_zone%&apos;;+------------------+--------+| Variable_name | Value |+------------------+--------+| system_time_zone | CST || time_zone | +08:00 |+------------------+--------+2 rows in set (0.03 sec)mysql&gt; select @@global.time_zone,@@session.time_zone,@@global.system_time_zone;+--------------------+---------------------+---------------------------+| @@global.time_zone | @@session.time_zone | @@global.system_time_zone |+--------------------+---------------------+---------------------------+| +08:00 | +08:00 | CST |+--------------------+---------------------+---------------------------+1 row in set (0.00 sec) 时区概念地球总是自西向东自转，东边总比西边先看到太阳，东边的时间也总比西边的早。东边时刻与西边时刻的差值不仅要以时计，而且还要以分和秒来计算。整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。UTC与格林尼治平均时(GMT, Greenwich Mean Time)一样，都与英国伦敦的本地时相同。 关于时间的几个标准： CST：中国标准时间（China Standard Time），这个解释可能是针对 RedHat Linux。 JST：日本标准时间（Japan Standard Time）。 UTC：协调世界时，又称世界标准时间，简称UTC，从英文国际时间/法文协调时间”Universal Time/Temps Cordonné”而来。中国大陆、香港、澳门、台湾、蒙古国、新加坡、马来西亚、菲律宾、澳洲西部的时间与UTC的时差均为+8，也就是UTC+8。 GMT：格林尼治标准时间（旧译格林威治平均时间或格林威治标准时间；英语：Greenwich Mean Time，GMT）是指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。 我们国家跨越了东五区、东六区、东七区、东八区、东九区五个时区，一般都统一采用东八区计时时间。 查看 CentOS 服务器时区12[utomcat@ebs-60027 ~]$ date -RSun, 23 Feb 2020 21:55:49 +0800 上面命令 date -R 输出了 +0800 表示东八区，也就是我们国家的时间。相反，如果是 -0800 表示美国旧金山所在的时区，西八区。我们在安装Linux操作系统的时候，如果地区选择了Asia/Shanghai，那么系统的时区就是东八区。 timedatectl 通过 timedatectl 可以查看服务器具体的时区 timedatectl set-timezone timezone 来设置时区1234567891011121314151617181920[root@ebs-60027 ~]# timedatectl set-timezone Asia/Shanghai[root@ebs-60027 ~]# timedatectl Local time: Sun 2020-02-16 10:23:04 CST Universal time: Sun 2020-02-16 02:23:04 UTC RTC time: Sun 2020-02-16 02:23:04 Time zone: Asia/Shanghai (CST, +0800) NTP enabled: n/aNTP synchronized: no RTC in local TZ: no DST active: n/a[root@ebs-60027 ~]# timedatectl set-timezone America/New_York[root@ebs-60027 ~]# timedatectl Local time: Sun 2020-02-16 10:56:48 CST Universal time: Sun 2020-02-16 02:56:48 UTC RTC time: Sun 2020-02-16 02:56:48 Time zone: America/New_York (CST, +0800) NTP enabled: n/aNTP synchronized: no RTC in local TZ: no DST active: n/a MySQL timestamp 类型 和 datetime 类型 timestamp类型：会自动把时间转成 gmt 时间存储时间，取出时，又会自动转换成服务器的时区。 datetime类型： 没有时区概念，对于有跨国业务的数据库，存储时统一转换成 gmt 格式存储，取出时指定时区显示。 关于时区的调优 对于使用timestamp的场景，MySQL 在访问 timestamp 字段时会做时区转换，当time_zone 设置为 system （默认）时，MySQL 访问每一行的 timestamp 字段时，都会通过 libc 的时区函数，获取 Linux 设置的时区，在这个函数中会持有 mutex，当大量并发 SQL 需要访问 timestamp 字段时，会出现 mutex 竞争。MySQL 访问每一行都会做这个时区转换，转换完后释放 mutex，所有等待这个 mutex 的线程全部唤醒，结果又会只有一个线程会成功持有 mutex，其余又会再次 sleep，这样就会导致 context switch 非常高但 qps 很低，系统吞吐量急剧下降。 就是当参数设置 time_zone=system 的时候，查询 timestamp 字段，会调用系统的时区做时区转换，有全局锁 _libc_lock_lock 的保护，导致线程并发环境下，系统性能受限。如果 time_zone=’+8:00’则不会调用系统时区，则不会触发系统时区转换，使用 MySQL 自身转换，大大提高了性能。 结论有关时间字段，统一用时间戳（int类型）保存可以有效避免时区带来的问题。 参考 聊聊Linux和MYSQL的时区问题 MySQL参数 time_zone 导致线上sys cpu高 故障案例–binlog_format不为row模式下关于时区设置的一个坑","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"CentOS7","slug":"java/CentOS7","permalink":"https://www.lovesofttech.com/categories/java/CentOS7/"},{"name":"MySQL","slug":"java/CentOS7/MySQL","permalink":"https://www.lovesofttech.com/categories/java/CentOS7/MySQL/"},{"name":"timeZone","slug":"java/CentOS7/MySQL/timeZone","permalink":"https://www.lovesofttech.com/categories/java/CentOS7/MySQL/timeZone/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"CentOS7","slug":"CentOS7","permalink":"https://www.lovesofttech.com/tags/CentOS7/"},{"name":"timeZone","slug":"timeZone","permalink":"https://www.lovesofttech.com/tags/timeZone/"}]},{"title":"CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体","slug":"linux/centOS7LibreOffice","date":"2020-02-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.024Z","comments":true,"path":"linux/centOS7LibreOffice.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7LibreOffice.html","excerpt":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 的转换功能，本文介绍 LibreOffice 环境的搭建。 在线预览的实现，请参考：Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能","text":"项目中需要将 Office 文档上传并实现在线预览，用到了 LibreOffice 的转换功能，本文介绍 LibreOffice 环境的搭建。 在线预览的实现，请参考：Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 下载并安装 LibreOffice 6.3.4 官网：https://www.libreoffice.org/ 下载页面：https://www.libreoffice.org/download/download/ 选好针对的平台（windows、linux），下载相关版本，这里推荐下载稳定版本：6.3.4 除了下载主安装包外，还需要下载中文包，我下载到的两个文件分别是： LibreOffice_6.3.4_Linux_x86-64_rpm.tar.gz LibreOffice_6.3.4_Linux_x86-64_rpm_langpack_zh-CN.tar.gz 分别解压：12tar -xzvf LibreOffice_6.3.4_Linux_x86-64_rpm.tar.gztar -xzvf LibreOffice_6.3.4_Linux_x86-64_rpm_langpack_zh-CN.tar.gz 分别进入这两个文件的 RPMS 目录，用命令 yum localinstall *.rpm 执行本地安装，我解压后的两个目录：12cd /root/soft/LibreOffice_6.3.4.2_Linux_x86-64_rpm_langpack_zh-CN/RPMScd /root/soft/LibreOffice_6.3.4.2_Linux_x86-64_rpm/RPMS 执行 libreoffice6.3 --version 查看版本，提示：1/opt/libreoffice6.3/program/soffice.bin: error while loading shared libraries: libcairo.so.2: cannot open shared object file: No such file or directory 解决：安装相应的依赖1yum -y install cairo cups-libs libSM 安装中文字体仅仅安装官方的中文字体包是不够的，很多时候我们要转换的中文 .doc/.docx，.ppt/.pptx 文件，用到的字体都是 windows 系统下面的，所以，需要把 windows 系统下面的中文字体全部都安装到 CentOS7 上。 在终端执行 sz 命令上传字体时，定位到 windows 的 Fonts 目录，提示无权限。 我们可以事先准备好所有中文字体，如下，在设计用于列，倒排序，复制所有简体中文字体到非系统目录，上传的时候方便全部上传。 在 CentOS7 上，以 root 身份安装 fontconfig yum -y install fontconfig 创建中文字体目录 mkdir -p /usr/share/fonts/chinese 然后上传刚才准备好的字体文件到 /usr/share/fonts/chinese 安装 ttmkfdir yum -y install ttmkfdir（注：这一步不确定是否必要，todo:下次再配置服务器先跳过这一步） 安装之后，跳过了网上教程的后续步骤，试着转换了一个 ppt 到 pdf，中文全都正常。 为了确定这样的中文安装步骤可以正常工作，于是将中文目录的中文字体移到别的目录，再次转换同样的 ppt，结果得到的 pdf 文件的中文字体全部变成方框了，于是再把中文字体移回/usr/share/fonts/chinese，再次转换，中文正常。 那么，安装中文字体就算成功了。 用 fc-list 检测/usr/share/fonts/chinese/ 目录下的中文字体都列出来了，再一次证明中文字体安装正确，结果如下：123456789101112131415161718192021222324252627282930313233343536373839[root@ebs-60027 lib64]# fc-list/usr/share/fonts/chinese/stxingka.ttf: STXingkai:style=Regular/usr/share/fonts/chinese/幼圆.ttf: YouYuan:style=Regular/usr/share/fonts/dejavu/DejaVuSansCondensed-Oblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Oblique,Oblique/usr/share/fonts/chinese/msyh.ttc: Microsoft YaHei:style=Normal/usr/share/fonts/dejavu/DejaVuSansCondensed-Bold.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold,Bold/usr/share/fonts/chinese/stxihei.ttf: STXihei:style=Regular/usr/share/fonts/chinese/simsun.ttc: SimSun,宋体:style=Regular,常规/usr/share/fonts/chinese/msyhbd.ttc: Microsoft YaHei:style=Έντονα/usr/share/fonts/chinese/stkaiti.ttf: STKaiti:style=Regular/usr/share/fonts/chinese/Dengl.ttf: DengXian,DengXian Light:style=Light,Regular/usr/share/fonts/dejavu/DejaVuSans.ttf: DejaVu Sans:style=Book/usr/share/fonts/chinese/Deng.ttf: DengXian:style=Regular/usr/share/fonts/chinese/msyh.ttc: Microsoft YaHei UI:style=Normal/usr/share/fonts/chinese/fzstk.ttf: FZShuTi:style=Regular/usr/share/fonts/chinese/msyhbd.ttc: Microsoft YaHei UI:style=Έντονα/usr/share/fonts/chinese/stfangso.ttf: STFangsong:style=Regular/usr/share/fonts/chinese/Dengb.ttf: DengXian:style=Bold/usr/share/fonts/chinese/stcaiyun.ttf: STCaiyun:style=Regular/usr/share/fonts/chinese/simsun.ttc: NSimSun,新宋体:style=Regular,常规/usr/share/fonts/chinese/msyhl.ttc: Microsoft YaHei UI,Microsoft YaHei UI Light:style=Light,Regular/usr/share/fonts/chinese/simkai.ttf: KaiTi:style=Regular,Normaali/usr/share/fonts/chinese/fzytk.ttf: FZYaoTi:style=Regular/usr/share/fonts/dejavu/DejaVuSans-Bold.ttf: DejaVu Sans:style=Bold/usr/share/fonts/chinese/stsong.ttf: STSong:style=Regular/usr/share/fonts/chinese/sthupo.ttf: STHupo:style=Regular/usr/share/fonts/chinese/simli.ttf: LiSu:style=Regular/usr/share/fonts/chinese/stxinwei.ttf: STXinwei:style=Regular/usr/share/fonts/chinese/stliti.ttf: STLiti:style=Regular/usr/share/fonts/chinese/stzhongs.ttf: STZhongsong:style=Regular/usr/share/fonts/dejavu/DejaVuSansCondensed.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed,Book/usr/share/fonts/dejavu/DejaVuSans-ExtraLight.ttf: DejaVu Sans,DejaVu Sans Light:style=ExtraLight/usr/share/fonts/chinese/simsunb.ttf: SimSun\\-ExtB:style=Regular,obyčejné/usr/share/fonts/chinese/simhei.ttf: SimHei:style=Normal/usr/share/fonts/dejavu/DejaVuSansCondensed-BoldOblique.ttf: DejaVu Sans,DejaVu Sans Condensed:style=Condensed Bold Oblique,Bold Oblique/usr/share/fonts/dejavu/DejaVuSans-Oblique.ttf: DejaVu Sans:style=Oblique/usr/share/fonts/chinese/simfang.ttf: FangSong:style=Regular,Normaali/usr/share/fonts/dejavu/DejaVuSans-BoldOblique.ttf: DejaVu Sans:style=Bold Oblique/usr/share/fonts/chinese/msyhl.ttc: Microsoft YaHei,Microsoft YaHei Light:style=Light,Regular windows 开发环境搭建到 https://www.libreoffice.org/download/download/ 下载 .msi 版本直接安装，安装好后，将安装目录下的 program 目录添加到环境变量，在 windows 控制台执行：soffice -version，如果弹出一个新的控制台窗口显示版本信息，或者如下显示，说明安装配置已成功。12C:\\Users\\Andy&gt;soffice --versionLibreOffice 6.4.0.3 b0a288ab3d2d4774cb44b62f04d5d28733ac6df8","categories":[{"name":"CentOS7","slug":"CentOS7","permalink":"https://www.lovesofttech.com/categories/CentOS7/"},{"name":"LibreOffice","slug":"CentOS7/LibreOffice","permalink":"https://www.lovesofttech.com/categories/CentOS7/LibreOffice/"}],"tags":[{"name":"LibreOffice","slug":"LibreOffice","permalink":"https://www.lovesofttech.com/tags/LibreOffice/"},{"name":"CentOS7","slug":"CentOS7","permalink":"https://www.lovesofttech.com/tags/CentOS7/"}]},{"title":"基于spring 切面（AOP）实现动态多数据源切换，基于 MyBatis 插件方式实现动态分表查询","slug":"mybatis/mybatisPluginShard","date":"2020-01-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.073Z","comments":true,"path":"mybatis/mybatisPluginShard.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/mybatisPluginShard.html","excerpt":"基于spring 切面（AOP）实现动态多数据源切换；基于 MyBatis 插件方式实现动态分表查询。 来源于多个已上线项目实践，本项目有完整的测试示例。","text":"基于spring 切面（AOP）实现动态多数据源切换；基于 MyBatis 插件方式实现动态分表查询。 来源于多个已上线项目实践，本项目有完整的测试示例。 mybatis-plugin-shard 基于spring 切面（AOP）实现动态多数据源切换。 基于 MyBatis 插件方式实现动态分表策略。 来源于多个已上线项目实践。 本项目有完整的测试示例。 以后会出详细的文档，敬请期待。 todo [x] 将分库分表配置与数据源配置统一放到文件 db-config.xml，并作为配置的切面的参数，在整个分库分表过程都可访问。 [x] 完善分表逻辑，比起之前将分库分表配置在一个文件中更加优雅，也更加灵活，扩展性越好。 [x] 完善文档 项目地址 github: https://github.com/uncleAndyChen/mybatis-plugin-shard gitee: &nbsp;&nbsp;https://gitee.com/uncleAndyChen/mybatis-plugin-shard 配套 MBG 增强插件查看 MBG 增强插件请移步：mybatis-generator 用该 MBG 增强插件生成的 {xxx}Mapper.xml，会把表名用[`]（不包括中括号）引起来，这样做的目的是分表时，动态给表名添加后缀后替换原始表名时不会“添乱”。 注意 [`] 并非单引号，是在ESC 键下面、Q 键左上角的数字键 1 的左边那个键对应的“单引号”。 比如有两张表：biz_trade、biz_trade_order，现在需要动态将 biz_trade 替换成 biz_trade_9，如果表名前后没有[`]，则 biz_trade_order 也会被替换，替换后为：biz_trade_9_order，这显然不是我们希望发生的。 功能概述 分库：简单的分库功能，更确切的讲，是多数据源管理，可根据业务动态切换，基于切面（AOP）。 分表：对于同一数据源或不同数据源下的相同表结构的表，通过简单配置，实现分表查询功能。 适用数据量增加迅速的业务场景。 底层实现：基于 MyBatis 插件，拦截最终执行的 SQL 语句并且根据分表配置对 SQL 语句中的表名进行修改之后再执行。 要求表名必须用 [`]（不包括中括号）引起来。请使用增强插件（mybatis-generator）生成 Mapper 和 entity model。 分库（多数据源管理）实现方式spring 框架获取数据源是在 org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource.determineTargetDataSource 方法中定义的：123456789101112protected DataSource determineTargetDataSource() &#123; Assert.notNull(this.resolvedDataSources, \"DataSource router not initialized\"); Object lookupKey = determineCurrentLookupKey(); DataSource dataSource = this.resolvedDataSources.get(lookupKey); if (dataSource == null &amp;&amp; (this.lenientFallback || lookupKey == null)) &#123; dataSource = this.resolvedDefaultDataSource; &#125; if (dataSource == null) &#123; throw new IllegalStateException(\"Cannot determine target DataSource for lookup key [\" + lookupKey + \"]\"); &#125; return dataSource;&#125; 该方法首先通过 determineCurrentLookupKey() 来获得数据源的 key 值 lookupKey，在本项目中，如果 lookupKey 为 null，那么获取到的 dataSource 肯定也是为 null 的，这时就去取默认数据源。 查看 determineCurrentLookupKey() 的定义：protected abstract Object determineCurrentLookupKey();，是一个抽象方法，如果我们自己来实现这个方法，那么就可以在每次操作数据库之前设置好数据源。本项目重写该方法的类是：ChooseDataSource 123456public class ChooseDataSource extends AbstractRoutingDataSource &#123; @Override protected Object determineCurrentLookupKey() &#123; return HandleDataSource.getSchemaKey(); &#125;&#125; ChooseDataSource 类继续自 AbstractRoutingDataSource，重写了 determineCurrentLookupKey() 方法，这就是实现拦截器的关键所在，符合拦截器规则的每次请求，拦截器通过设置 lookupKey 来动态设置数据源，从而达到分库（多数据管理）的目的。 ChooseDataSource 定义好了，如何使用呢？请看文件 db-source.xml 中配置的 dataSource：&lt;bean id=&quot;dataSource&quot; class=&quot;common.aspect.ChooseDataSource&quot; primary=&quot;true&quot;&gt; ChooseDataSource 类中用到的 HandleDataSource() 是为分库分表插件的拦截器准备的，在此就不一一展开了，如果想了解详情，请下载源码 debug 起来，打个断点、跟踪，一切尽收眼底~~ service 类在拦截器规则之外的数据源 service 类（如SysDeptService），在拦截器规则之外的情况下，分库分表插件没有工作，会使用默认数据源，如下： 指定数据源的三种方式 通过参数 ShardRequest.java 指定：优先级最高，也最灵活。 优点：可以根据具体业务场景决定要连接哪个数据源，可以在满足某种特定条件下动态设置，运行时决定。 注解。可用在类和方法上，方法注解优先于类注解。优先级第二。 优点：在同一个类里可以灵活的连接多个数据源，如果没有这种业务需求，则建议用第三种。 biz service 配置，优先级最低。 以上两种方式均没有的情况下，会读取 ShardConfig.shardSchemaInterfaceClassNameList 配置信息，在运行过程中，通过 AOP 拦截 biz.service.impl，从而识别应该使用哪个数据源，达到分库（多数据源管理）的目的。 优点：可以由专人统一管理，同时生产环境与开发、测试环境可以用不同的配置信息，开发人员与测试人员不用关注分库的细节。 可参考本项目的配置项：biz\\biz-config\\src\\main\\resources\\db-source.xml 的 &lt;property name=&quot;shardSchemaInterfaceClassNameList&quot;&gt;。 最佳实践–基于接口编程 如果以上三种方式都没有找到数据源，或者 service 类在拦截器规则之外，则使用默认数据源，所以，对于非默认数据库的操作，一定要通过以上三种方式之一来指定数据源，并且一定要符合 biz\\biz-config\\src\\main\\resources\\db-source.xml 定义的拦截规则，该规则一定是基于接口编程的。 对于默认数据库的操作，可以不基于接口编程。 是否要基于接口编程，这个需要根据项目的实际情况灵活制定，本项目的 SysDeptService、UserService 没有基于接口编程，这里只是示例，并不一定是最佳实践（可能不适合你的项目）。 真实项目建议统一基于接口编程，先不说这是大师们推荐的方式，也是很多成功开源项目采用的方式，这里不说长篇大论，这里只说一下实际体会：统一基于接口编程，方便将来扩展，也不用给团队成员解释为什么有的基于接口，而有的没有，解释了可能也有人理解不好，而且，可怕的是，可能有团队成员在该用接口时不用，遇到问题了来问你怎么回事儿。总之，统一好规则，可以避免好多坑。 分库分表思路 分库思路： 每个库有一个唯一的标志，起名叫 shardKeySchema，每个数据库的 shardKeySchema 与 db-source.xml 定义的数据源 dataSource -&gt; targetDataSources -&gt; map -&gt; key 一一对应。 用户在初始化时根据业务规则分配到某一个库，将该库的 shardKeySchema 保存到用户表。 分表思路： 每个用户分配一个用于分表的数字编号 shardKeyTableNumber，同样保存到用户表。 用户表： 集中在一个库用于统一登录验证，登录时获取用户 shardKeySchema 和 shardKeyTableNumber 并将用户登录信息缓存于 Session 或非关系型数据库，业界常用的如 redis、memcached。 业务操作请求： 在请求数据时，就可以根据 shardKeySchema 动态切换数据源，根据 shardKeyTableNumber 决定查哪张表了（分表操作通过 MyBatis 插件实现）。 分表分库场景 场景一： SaaS 平台，用户量成千上万，交易表 biz_trade 每天100万级增长，如果只用一个库的一张表，写入和读取压力会非常大，会成为瓶颈，所以需要分库分表。 请求数据时，需要通过 ShardRequest.java 传 shardKeySchema 和 shardKeyTableNumber 参数。 业务场景之：平均分配 每个数据库实例最多分配 10 万用户，超过 10 万的用户，再分配到新库。 交易记录平均分到 10 张表，这就意味着用于分表的 shardKeyTableNumber，一个数字编号最多同时分配给一万个用户。 用户请求数据时，将用户的 shardKeyTableNumber 除以 10，将余数作为分表后缀，比如用户的 shardKeyTableNumber=8888，那么，8888%10=8，则用户的交易表是 biz_trade_8。 同理，如果要平均分配到 100 张表，那么就除以 100 再取余作为分表后缀，8888%100=88，则用户的交易表是 biz_trade_88。 业务场景之：区别对待 在平均分配的基础上，由于运营需要，现在有 vip 客户，要保证 vip 客户的用户体验，vip 客户的数据库读写速度要快，那怎么办呢？ 其实只要针对这部分用户再制定一套规则就可以了，因为 shardKeySchema 和 shardKeyTableNumber 都是可以指定的。 如果用户由一般用户变为了 vip 用户，那么在重新指定 shardKeySchema 和 shardKeyTableNumber 之后，用户原来的数据做相应的迁移即可。 场景二： 不同于场景一，在某一些业务场景，需要与其它业务系统做对接，在其它系统不能提供 api 的情况下，直接操作数据库无疑是最快也最直接的方式。 这种情况，不同业务数据保存在不同的数据库，请求数据的时候，对于从哪个数据库请求数据是明确的，那么最直接的方式就是使用注解，或者配置 ShardConfig.shardSchemaInterfaceClassNameList。 在不需要分表的情况下，用注解和配置 ShardConfig.shardSchemaInterfaceClassNameList 就够了，这种情况下请求数据时，不需要通过 ShardRequest（ShardRequest.java）传 shardKeySchema 和 shardKeyTableNumber 参数。 当然，也可以不用注解也不用配置 ShardConfig.shardSchemaInterfaceClassNameList，还是通过 ShardRequest 传递参数也行，怎么灵活怎么来。 场景三： 分表是确定的，不是动态分配的，那么 ShardRequest.java 只传 shardKeyTable 即可。 运行 git clone https://github.com/uncleAndyChen/mybatis-plugin-shard.git 因为依赖统一管理，添加了一个父模块：dependencies，只有一个 pom.xml 文件，需要先把这个 model 安装到本地仓库，否则会去 maven 配置的仓库下载。打开 cmd 窗口，在项目根目录下操作： 1234cd dependenciesmvn cleanmvn compilemvn install 强烈建议：maven 远程仓库添加阿里云镜像。 修改 maven 根目录下 config/settings.xml，在 &lt;mirrors&gt; 下添加：123456&lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/jcenter&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; 用你喜欢的 IDE 导入项目，如果你要我推荐一款 IDE，那么我强烈推荐 IntelliJ IDEA，官网：http://www.jetbrains.com/ IDE 安装 Lombok 插件。 MySQL 数据库，导入 docs/schemas.sql 修改 biz/biz-config/src/main/resources/jdbc.properties 中连接数据库的参数 启动 访问：http://localhost:81，可以测试以三种不同方式切换数据源来查询数据。具体细节请看源代码，以后会出详细的文档，敬请期待。 数据源配置（部分）123456789101112&lt;bean id=\"dataSource\" class=\"common.aspect.ChooseDataSource\" primary=\"true\"&gt; &lt;property name=\"defaultTargetDataSource\" ref=\"dataSourceSystem\"/&gt; &lt;!-- 下面的各个 0key 需要配置到 shardTableConfigView 的 schemaKeyList --&gt; &lt;property name=\"targetDataSources\"&gt; &lt;map key-type=\"java.lang.String\"&gt; &lt;entry key=\"system\" value-ref=\"dataSourceSystem\"/&gt; &lt;entry key=\"student\" value-ref=\"dataSourceStudent\"/&gt; &lt;entry key=\"finance\" value-ref=\"dataSourceFinance\"/&gt; &lt;entry key=\"biz\" value-ref=\"dataSourceBiz\"/&gt; &lt;/map&gt; &lt;/property&gt;&lt;/bean&gt; 配置分表分库配置类12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;!-- 以下配置，部分表名只是用于配置示例，仅为了更好的展示如何配置。 本项目没有用到的表名有：edu_class、biz_trade_order、biz_item、biz_item_sku--&gt;&lt;bean id=\"shardConfig\" class=\"common.shard.ShardConfig\" &gt; &lt;!-- 列表值为 dataSource.targetDataSources 的 keys --&gt; &lt;property name=\"schemaKeyList\"&gt; &lt;list&gt; &lt;value&gt;system&lt;/value&gt; &lt;value&gt;student&lt;/value&gt; &lt;value&gt;finance&lt;/value&gt; &lt;value&gt;biz&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;!-- 基于服务接口分库策略， 把针对某个 schema 的接口配置在该数据源 key 对应的 list 下，没有就不配置 --&gt; &lt;property name=\"shardSchemaInterfaceClassNameList\"&gt; &lt;map&gt; &lt;entry key=\"student\"&gt; &lt;list&gt; &lt;value&gt;biz.service.facade.IEduStudentService&lt;/value&gt; &lt;/list&gt; &lt;/entry&gt; &lt;/map&gt; &lt;/property&gt; &lt;!-- 分表策略 直接将 ShardRequest.shardKeyTable（优先级高于后者） 或 ShardRequest.shardKeyTableNumber 作为分表后缀的表。 需要配合 shardKeyTable 或 shardKeyTableNumber 使用，二选一，shardKeyTable 的优先级高于 shardKeyTableNumber，如 shardKeyTable=3，则下面的 edu_student 最终分表为 edu_student_3 ShardRequest 参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java --&gt; &lt;property name=\"shardTableDirectlyList\"&gt; &lt;list&gt; &lt;value&gt;edu_student&lt;/value&gt; &lt;value&gt;edu_class&lt;/value&gt; &lt;/list&gt; &lt;/property&gt; &lt;!-- 分表策略 通过两个数相除取余作为后缀的表，配合 ShardRequest.shardKeyTableNumber 使用 ShardRequest 参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/common/common-shard/src/main/java/common/shard/ShardRequest.java --&gt; &lt;!-- key 将作为 shardKeyTableNumber 的除数（取余）， 余数作为分表后缀--&gt; &lt;!-- shardKeyTableNumber 通过 ShardRequest 传递，在请求 api 时传递 --&gt; &lt;property name=\"shardTableDivideList\"&gt; &lt;map&gt; &lt;entry key=\"10\"&gt; &lt;list&gt; &lt;value&gt;biz_trade&lt;/value&gt; &lt;value&gt;biz_trade_order&lt;/value&gt; &lt;/list&gt; &lt;/entry&gt; &lt;entry key=\"5\"&gt; &lt;list&gt; &lt;value&gt;biz_item&lt;/value&gt; &lt;value&gt;biz_item_sku&lt;/value&gt; &lt;/list&gt; &lt;/entry&gt; &lt;/map&gt; &lt;/property&gt; &lt;!-- 打印分表的 sql 语句，默认为 false 即不打印。--&gt; &lt;property name=\"printShardSqlInfo\" value=\"true\" /&gt; &lt;!-- 不需要分表的 sql 语句列表，以下这句为 MyBatis 操作数据库新增记录时，查询新增的主键值的语句 --&gt; &lt;property name=\"notNeedShardSqlList\"&gt; &lt;list&gt; &lt;value&gt;SELECT LAST_INSERT_ID()&lt;/value&gt; &lt;/list&gt; &lt;/property&gt;&lt;/bean&gt; 切面配置12345678910111213&lt;!-- 用于切面，实现拦截数据库操作，实现分库分表的类 --&gt;&lt;bean id=\"dataSourceAspect\" class=\"common.aspect.DataSourceAspect\"&gt; &lt;property name=\"shardTableConfigView\" ref=\"shardConfig\" /&gt;&lt;/bean&gt;&lt;!-- 定义切面，用于拦截数据库操作，实现分库分表 --&gt;&lt;aop:config proxy-target-class=\"true\"&gt; &lt;aop:aspect id=\"dataSourceAspect\" ref=\"dataSourceAspect\" order=\"1\"&gt; &lt;aop:pointcut id=\"point\" expression=\"(execution(* biz.service.impl.*.*(..)))\"/&gt; &lt;aop:before pointcut-ref=\"point\" method=\"before\"/&gt; &lt;aop:after pointcut-ref=\"point\" method=\"afterHandler\"/&gt; &lt;/aop:aspect&gt;&lt;/aop:config&gt; 请求参数 ShardRequest.java 类1234567891011121314151617181920212223242526272829303132public class ShardRequest &#123; /** * 分库标志 key，是定义数据源时指定的 key，在执行数据库操作之前，通过该 key 动态切换数据源。 * 如果只是分库，除了用到个属性，还可利用 ShardTableConfig.shardSchemaInterfaceNameList 实现。 * 有关这两项配置的详细信息，请参见：https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml */ private String shardKeySchema; /** * 分表标志 key，直接用作分表后缀的 key 值，针对直接添加后缀的表 * 举例：应用该规则的原始表名为 table_name，则对应的分表为：table_name_key * 需要配合 ShardTableConfig 使用，与该类位于同一个目录，在 db-source.xml 中配置各属性值 * 应用该规则的原始表名:ShardTableConfig.shardTableDirectlyList * 详细描述，请参见:https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml */ private String shardKeyTable; /** * 动态分表参数编号，整形，一般与用户绑定，针对需要除一个数得到后缀的表 * 需要配合 ShardTableConfig 使用，与该类位于同一个目录，在 db-source.xml 中配置各属性值 * 应用该规则的原始表名:ShardTableConfig.shardTableDivideList * 详细描述，请参见:https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml * * 场景：SaaS 平台，每个用户分配一个编码值，可以按一定规则平均分配，比如现有有10万个用户，我们打算分10张表，那么，平均分配的话，就意味着每一万个用户有一个分表编号。 * 极端地，对于 SasS 的超级 VIP 用户，可以分配一个唯一的分表编号，这就意味着这个 VIP 用户独享一套表。 * 多个用户的数据可能存在于同一个数据库实例，也可能存在于多个数据库实例，可根据业务灵活分配。 */ private int shardKeyTableNumber; // getter and setter // ...&#125; 分表测试运行起来后，点击【搜索商家订单】根据选择的商家ID，后台模拟获取用户的分库分表信息，如下：123456789101112131415161718/** * 注意：这里为了演示，简单的返回用户 bizId 作为分表用的 shardKeyTableNumber，而数据库 key 则假设为 biz * 通过用户 bizId 获取用户分表用的 shardKeyTableNumber * @param bizId 用户 ID * @return shardKeyTableNumber */public static UserShardView getShardKeyTableNumberByBizId(int bizId) &#123; // 获取 shardKeyTableNumber 的代码 // 可能是从数据库取 // 可能是从 Session 取 // 如果是 JWT 机制，那么请求过来就能唯一确定用户信息 UserShardView userShardView = new UserShardView(); userShardView.setShardKeySchema(\"biz\"); userShardView.setShardKeyTableNumber(bizId); return userShardView;&#125; 其中视图 UserShardView 代码如下：123456789package biz.model.view;import lombok.Data;@Datapublic class UserShardView &#123; private int shardKeyTableNumber; private String shardKeySchema;&#125; 在指定 shardKeySchema 和 shardKeyTableNumber 的情况下，数据库以及分表信息已经足够了，再配合分库分表配置（参见:https://github.com/uncleAndyChen/mybatis-plugin-shard/blob/master/biz/biz-config/src/main/resources/db-source.xml）在选择【商家ID】为 10682 的情况下，打印的分表前后的 sql 语句如下（在原始语句的基本上删除了影响阅读的空行）：1234567891011121314151617--------------shard table sql start-------------- current data source key：bizbefore shard table sql：---&gt;select id, biz_id, tid, buyer_nick, payment, status, pay_time from `biz_trade` WHERE ( biz_id = ? )&lt;---after shard table sql：---&gt;select id, biz_id, tid, buyer_nick, payment, status, pay_time from `biz_trade_2` WHERE ( biz_id = ? )&lt;-----------------shard table sql end -------------- 重新生成 mapper 和 entity请参考 生成 Mapper 操作 有关 {xxx}Mapper.xml 文件我是直接把 MBG 生成的 {xxx}Mapper.xml 文件放到了 biz-service-dal 模块下与 {xxx}Mapper.java 平级的目录下了，包名为：biz.mapper.xml.original 和 biz.mapper.xml.extend 默认情况下，xml 文件不会被打包，所以，运行的时候会出现类似这样的错误：1Invalid bound statement (not found): biz.service.dal.mapper.original.EduStudentMapper.selectByExample 解决：需要在 pom.xml 里设置为需要将 xml 一起打包，如下：1234567891011&lt;build&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/java&lt;/directory&gt; &lt;includes&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;/includes&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt;&lt;/build&gt; directory 配置到 xml 的父目录 src/main/java/biz/mapper/xml 不会生效，配置成 src/main/java 就好。 技术清单 JDK 1.8，理论上支持 1.8 以上的版本，如需升级，比如要改为 JDK 11，将文件 ./dependencies/pom.xml 中 &lt;java.version&gt;1.8&lt;/java.version&gt; 改为 &lt;java.version&gt;11&lt;/java.version&gt; MySQL 5.6.46、MySQL 5.7，用这两个版本作的测试，理论上支持 5.6 及以上版本。 maven 依赖库 maven 依赖版本在 ./dependencies/pom.xml 维护，如果要升级某一框架的版本，只需要修改这个文件就行，模块 dependencies 被作为其它模块的 parent，目的就是统一管理版本，同样的依赖库只定义一次版本号。 以下依赖为当前（2020-01-06）最新版本 Spring Boot 2.2.2.RELEASE Spring Framework 5.2.2.RELEASE （common-shard 模块直接依赖了 spring framework 下的 spring-aspects） MyBatis 3.5.3 druid 1.1.21 lombok 1.18.10 jackson 2.10.1 支持如果有疑问或建议，欢迎请提 Issue。可能不会立即回复，尤其上班时间，不过我会尽量抽业余时间回复的。 如果帮到了你请 Star 一下，让我有动力继续完善和优化。","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"},{"name":"分库","slug":"MyBatis/java/分库","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/分库/"},{"name":"分表","slug":"MyBatis/java/分库/分表","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/分库/分表/"},{"name":"多数据源","slug":"MyBatis/java/分库/分表/多数据源","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/分库/分表/多数据源/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"},{"name":"分库","slug":"分库","permalink":"https://www.lovesofttech.com/tags/分库/"},{"name":"分表","slug":"分表","permalink":"https://www.lovesofttech.com/tags/分表/"},{"name":"多数据源","slug":"多数据源","permalink":"https://www.lovesofttech.com/tags/多数据源/"}]},{"title":"解决 mybatis generator 使用 mysql 驱动 8.x 版本时会生成多个库里的同名表的问题","slug":"mybatis/MBGForMySQL8","date":"2019-12-28T16:00:00.000Z","updated":"2020-09-01T02:53:13.068Z","comments":true,"path":"mybatis/MBGForMySQL8.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/MBGForMySQL8.html","excerpt":"如题","text":"如题 现象例如下面的错误信息：12345678910111213# 是因为在另外一个库里的同名表 sys_dept 没有 status 和 dept_id 这两个字段。Column status, specified for override in table sys_dept, does not exist in the table.Column dept_id, specified as an identity column in table sys_dept, does not exist in the table.# 是因为在另外一个库里的同名表 sys_menu 没有 menu_id 这个字段Column menu_id, specified as an identity column in table sys_menu, does not exist in the table.# 是因为有两个库存在表：sys_dept 和 sys_menu，所以在生成第二个库的同名表文件时，会提示:was overwrittenExisting file ...\\entity\\SysDeptExample.java was overwrittenExisting file ...\\entity\\SysDept.java was overwrittenExisting file ...\\mapper\\original\\SysDeptMapper.java was overwrittenExisting file ...\\entity\\SysMenuExample.java was overwrittenExisting file ...\\entity\\SysMenu.java was overwrittenExisting file ...\\mapper\\original\\SysMenuMapper.java was overwritten 值得注意的是，如果表结构不一致，不一定会报错。只有当配置里的字段不一致时才会报错或警告，所以，一定要避免从多个库生成同名表的 mapper。 针对表的配置，如：1&lt;table tableName=&quot;sys_dept&quot; domainObjectName=&quot;SysDept&quot;&gt;&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;&lt;generatedKey identity=&quot;true&quot; type=&quot;post&quot; column=&quot;dept_id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;columnOverride column=&quot;status&quot; javaType=&quot;java.lang.Integer&quot; jdbcType=&quot;INTEGER&quot; /&gt;&lt;/table&gt; 解决办法数据库连接参数在生成器的配置文件里的数据库连接地址中添加: nullCatalogMeansCurrent=true1234567&lt;jdbcConnection driverClass=&quot;com.mysql.cj.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/mbg?nullCatalogMeansCurrent=true&quot; userId=&quot;userName&quot; password=&quot;userPassword&quot;&gt; &lt;!--MySQL 8.x 需要指定服务器的时区--&gt; &lt;property name=&quot;serverTimezone&quot; value=&quot;UTC&quot;/&gt;&lt;/jdbcConnection&gt; 或者在连接属性里添加：&lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;12345678&lt;jdbcConnection driverClass=&quot;com.mysql.cj.jdbc.Driver&quot; connectionURL=&quot;jdbc:mysql://localhost:3306/mbg&quot; userId=&quot;userName&quot; password=&quot;userPassword&quot;&gt; &lt;!--MySQL 8.x 需要指定服务器的时区--&gt; &lt;property name=&quot;serverTimezone&quot; value=&quot;UTC&quot;/&gt; &lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;&lt;/jdbcConnection&gt; 在 table 配置项添加 catalog 属性如：&lt;table catalog=&quot;mbg&quot; tableName=&quot;sys_dept&quot; domainObjectName=&quot;SysDept&quot;&gt;&lt;generatedKey identity=&quot;true&quot; type=&quot;post&quot; column=&quot;id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;columnOverride column=&quot;status&quot; javaType=&quot;java.lang.Integer&quot; jdbcType=&quot;INTEGER&quot; /&gt;&lt;/table&gt; 有关 MyBatis 的使用经验请参考：MyBatis，文章目录","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"MySQL","slug":"MyBatis/MySQL","permalink":"https://www.lovesofttech.com/categories/MyBatis/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"MyBatis 项目中，有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍","slug":"mybatis/mysqlNaming","date":"2019-12-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.074Z","comments":true,"path":"mybatis/mysqlNaming.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/mysqlNaming.html","excerpt":"如果有人问我到底哪一种命名法更好，曾经，我的答案是：驼峰命名法，而现在，我的答案是：当然是下划线命名法，这还用问吗？嘻嘻~~~","text":"如果有人问我到底哪一种命名法更好，曾经，我的答案是：驼峰命名法，而现在，我的答案是：当然是下划线命名法，这还用问吗？嘻嘻~~~ 选驼峰命名法的理由 无论是 Java 还是 C#，业界几乎都采用驼峰命名法，为了保持命名规范的一致性。 如果 MySQL 采用下划线命名法 在一开始采用 MyBatis 这个框架的时候。由于忽略了 MyBatis 针对驼峰命名与下划线命名的一个转换配置 mapUnderscoreToCamelCase，在把自定义 SQL 语句查询结果对应到自定义的 POJO 时，为了与 POJO 属性名对应，有两种方式： POJO 采用驼峰式命名法，自定义的 SQL 语句需要写类似这样的语句 select student_name as studentName ，或者定义 resultMap，类似 &lt;result column=&quot;student_name&quot; jdbcType=&quot;VARCHAR&quot; property=&quot;studentName&quot; /&gt;，这将带来额外的工作量和维护成本，而且还容易出错。 POJO 采用下划线命名法，这样不用写类似 student_name as studentName 的 SQL 语句，也不用额外定义 resultMap，但是，这是重点，与 Java 的命名规范冲突。 前面两种解决方案都有缺点，那么再看第三种，就是从根本上统一，那就是 MySQL 也采用驼峰式命名法，至于大小写敏感问题，可以通过配置项 lower_case_table_names 解决。 所以，曾经，我所在项目组在使用 MyBatis 时，MySQL 采用了驼峰式命名法，虽然有效避开了上面提到的两种解决方案的缺点，但是因为这种命名方式有背业界规范，所以一直觉得这并不完美的解决方法。 好的是，在后来研究 MyBatis 的过程中，无意中发现了完美的解决方案，就是上面提到的关键配置，下面会写。 选下划线命名法的理由 对于 MySQL 的命名法，业界更多的是下划线命名法，原因是 MySQL 在不同操作系统上有不同的大小写敏感问题（这里就不展开这个话题了）。 特意看了一些比较知名的开源项目，MySQL 的命名规范几乎都是下划线命名法。 参考大公司的规范，如《阿里巴巴Java开发手册》，也是下划线命名法。 现在的选择：下划线命名法在得知 MyBatis 的这个配置项 mapUnderscoreToCamelCase 后，关于 MySQL 命名规范，我在新项目中，就坚定的采用下划线命名法了，甚至有把以前 MySQL 采用驼峰命名的项目重构回下划线命名的冲动~~ MyBatis 的配置项：mapUnderscoreToCamelCase设置启用数据库字段下划线映射到 java POJO 的驼峰式命名属性。该配置项，一般性地，在文件 mybatis-config.xml 中，默认值为 false，将其配置为 true： 开启驼峰映射，为自定义的SQL语句服务。 针对自定义 SQL 查询结果，对应的自定义 POJO 保持驼峰命名法，查询数据库的 SQL 语句保留原生下划线，不用写 resultMap。 即从经典数据库列名 a_column 到经典 Java 属性名 aColumn 的类似映射。123456&lt;configuration&gt; &lt;settings&gt; &lt;setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/&gt; &lt;!-- other config item --&gt; &lt;/settings&gt;&lt;/configuration&gt; 请注意，MySQL 采用下划线命名法的话，使用 MBG 生成实体的配置项 table，不需要配置 useActualColumnNames，该配置项默认为 false，如果要配置，其 value 需要设置 false，如下：1&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt; 有关 MBG 的使用和详细的配置请参考：https://github.com/uncleAndyChen/mybatis-generator","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"MySQL 命名规范","slug":"MyBatis/MySQL-命名规范","permalink":"https://www.lovesofttech.com/categories/MyBatis/MySQL-命名规范/"}],"tags":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"},{"name":"MySQL 命名规范","slug":"MySQL-命名规范","permalink":"https://www.lovesofttech.com/tags/MySQL-命名规范/"}]},{"title":"PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例","slug":"database/powerDesignerER","date":"2019-11-29T16:00:00.000Z","updated":"2020-09-01T02:53:12.927Z","comments":true,"path":"database/powerDesignerER.html","link":"","permalink":"https://www.lovesofttech.com/database/powerDesignerER.html","excerpt":"非常好用的工具，离开不的感觉~~~","text":"非常好用的工具，离开不的感觉~~~ 今天尝试了一下 MySQL Workbench 的 EER 关系图，感觉还是不如 PowerDesigner 强大和顺手，于是果断安装最新版的 PowerDesigner 并把平常工作中用得最多的反向引擎的使用整理出来。 如果要问 PowerDesigner 的安装，以及如何可以长期科学地使用最新版本，请移步：https://download.csdn.net/download/runandrun/10108092 （虽然是17年底的文件，但是应用到现在的版本，依然好使，可以放心下载） 官方最新版下载地址：https://www.powerdesigner.biz/EN/powerdesigner-resources/trial-download.html 建立 ODBC 链接以 win10 为例，打开我的电脑，在地址栏粘贴以下路径后回车1C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Administrative Tools 创建新数据源，默认是没有 MySQL 的 ODBC MySQL 驱动下载下载地址：https://dev.mysql.com/downloads/connector/odbc/ ODBC 配置下载并安装之后，创建新数据源，就有 MySQL 可选了，如下： 点击【完成】之后，会弹出配置数据源的窗口，如下： PowerDesigner 连接数据库 连接数据库 选择刚才配置的 ODBC 数据源 PowerDesigner 使用反向引擎，逆向生成数据库物理模型 新建 model，选 Physical Data Model 反向引擎：通过数据库更新模型 使用已连接的数据源 红框处的列表其实是数据库列表，选择需要反向的数据库 选择数据库之后，会列出该库下的所有表 根据需要，选择好表、视频、存储过程之后，点击【ok】，开始反向更新，如果表比较多，需要多等一会儿 反向之后，就可以方便的编辑字段信息了 PowerDesigner 不仅可作为数据库模型设计工具，良好的 PowerDesigner 文档，还可以是非常棒的数据库文档。 可以把 name 项写成中文（需要设置 code 不要自动同步 name 的修改），而 Comment 项写需要进一步备注的内容，可以写得非常详细。 不过，只有备注可以带入到生成的创建数据库脚本里面，name 项不可以，所以，一般维护好 Comment 就可以了，name 的修改一般就让它默认同步到 code。 PowerDesigner 设置 code 自动同步 name 设置项：右键 -&gt; Model Options ... -&gt; Naming Convention -&gt; Synchronize code 如果要把 name 项写成中文，那么，一般会设置 code 不要自动同步 name 的修改，将 Synchronize code 选项取消勾选即可。 PowerDesigner 主窗口同时显示 name 和 code 的设置 把 name 项写成中文，主窗口同时显示 name 和 code，查阅数据库设计时非常直观。 设置：Display Preferences... -&gt; Table -&gt; Advanced... -&gt; Columns -&gt; List columns 点右侧的放大镜，在弹出窗口，将 code 选中，建议移到最上面或 Display Name 的下面，这个看自己的喜好调整顺序就好。 PowerDesigner 相关文章 PowerDesigner 样式设置，以及样式参考值","categories":[{"name":"PowerDesigner","slug":"PowerDesigner","permalink":"https://www.lovesofttech.com/categories/PowerDesigner/"}],"tags":[{"name":"PowerDesigner","slug":"PowerDesigner","permalink":"https://www.lovesofttech.com/tags/PowerDesigner/"}]},{"title":"windows 控制台 cmd/PowerShell 中文显示乱码，解决方法","slug":"windows/win10CmdCharacter","date":"2019-11-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.106Z","comments":true,"path":"windows/win10CmdCharacter.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10CmdCharacter.html","excerpt":"cmd 控制台默认编码，一般是简体中文默认的GBK，如果出现中文乱码，一般改为UTF-8可解决。","text":"cmd 控制台默认编码，一般是简体中文默认的GBK，如果出现中文乱码，一般改为UTF-8可解决。 打开 cmd 控制台窗口win（窗口键，在Ctrl与Alt之间）+R，输入 cmd，回车，这样操作会打开 cmd 控制台窗口。 检查当前的编码12C:\\Users\\AndyChen&gt;chcpActive code page: 936 显示当家的编码格式为 936。 常用的编码及对应的码值(10进制) 十进制码值 对应编码名称 950 繁体中文 65001 Unicode (UTF-8) 936 简体中文默认的GBK 437 MS-DOS 美国英语 测试中文显示将以下代码保存为一个批处理文件，如 test.bat，或者 test.cmd，双击运行123@echo offecho test chinese character view 测试中文字符显示pause 我的测试如下：12test chinese character view 娴嬭瘯涓枃瀛楃鏄剧ずPress any key to continue . . . 当为936时，中文显示乱码。 修改控制台CMD编码格式为UTF-8临时修改为 UTF-8执行 chcp 6500112C:\\Users\\AndyChen&gt;chcp 65001Active code page: 65001 这种方式在关闭 cmd 之后会自动失效，下次再打开，还是会变回默认的 936。 永久修改方法一 win+R 或者点击开始菜单，找到运行，在运行输入框里面输入regedit，回车，会打开注册码编辑窗口，在地址栏输入：Computer\\HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_cmd.exe，回车。 双击 CodePage 然后先择十进制，改为65001。 同理，可以修改 PowerShell 的默认编码，位置：Computer\\HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe，如果没有 CodePage，则在该项下新建一个 DWORD（32位值），命名为CodePage，值设为65001 重启 cmd/PowerShell 后生效。 永久修改方法二创建文本文件 characterSet.reg，内容如下：12345678910Windows Registry Editor Version 5.00[HKEY_CURRENT_USER\\Console\\%SystemRoot%_SysWOW64_WindowsPowerShell_v1.0_powershell.exe]&quot;CodePage&quot;=dword:0000fde9[HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_powershell.exe]&quot;CodePage&quot;=dword:0000fde9[HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_cmd.exe]&quot;CodePage&quot;=dword:0000fde9 双击运行。 再次测试中文显示运行之前的测试脚本，显示如下：12test chinese character view 测试中文字符显示Press any key to continue . . . 能够正常显示，说明设置成功。 小技巧在某一个文件夹/目录下，按住 Shift 点鼠标右建，可以打开 PowerShell。 附：所有编码对照表 十进制码值 对应编码名称 代码页 国家(地区)或语言 437 美国 708 阿拉伯文(ASMO 708) 720 阿拉伯文(DOS) 850 多语言(拉丁文 I) 852 中欧(DOS) - 斯拉夫语(拉丁文 II) 855 西里尔文(俄语) 857 土耳其语 860 葡萄牙语 861 冰岛语 862 希伯来文(DOS) 863 加拿大 - 法语 865 日耳曼语 866 俄语 - 西里尔文(DOS) 869 现代希腊语 874 泰文(Windows) 932 日文(Shift-JIS) 936 中国 - 简体中文(GB2312) 949 韩文 950 繁体中文(Big5) 1200 Unicode 1201 Unicode (Big-Endian) 1250 中欧(Windows) 1251 西里尔文(Windows) 1252 西欧(Windows) 1253 希腊文(Windows) 1254 土耳其文(Windows) 1255 希伯来文(Windows) 1256 阿拉伯文(Windows) 1257 波罗的海文(Windows) 1258 越南文(Windows) 20866 西里尔文(KOI8-R) 21866 西里尔文(KOI8-U) 28592 中欧(ISO) 28593 拉丁文 3 (ISO) 28594 波罗的海文(ISO) 28595 西里尔文(ISO) 28596 阿拉伯文(ISO) 28597 希腊文(ISO) 28598 希伯来文(ISO-Visual) 38598 希伯来文(ISO-Logical) 50000 用户定义的 50001 自动选择 50220 日文(JIS) 50221 日文(JIS-允许一个字节的片假名) 50222 日文(JIS-允许一个字节的片假名 - SO/SI) 50225 韩文(ISO) 50932 日文(自动选择) 50949 韩文(自动选择) 51932 日文(EUC) 51949 韩文(EUC) 52936 简体中文(HZ) 65000 Unicode (UTF-7) 65001 Unicode (UTF-8)","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"cmd","slug":"windows/cmd","permalink":"https://www.lovesofttech.com/categories/windows/cmd/"},{"name":"PowerShell","slug":"windows/cmd/PowerShell","permalink":"https://www.lovesofttech.com/categories/windows/cmd/PowerShell/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"cmd","slug":"cmd","permalink":"https://www.lovesofttech.com/tags/cmd/"},{"name":"PowerShell","slug":"PowerShell","permalink":"https://www.lovesofttech.com/tags/PowerShell/"}]},{"title":"本博客的文章分类列表，点击某一类别会进入相关文章列表","slug":"articleClassify","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.903Z","comments":true,"path":"articleClassify.html","link":"","permalink":"https://www.lovesofttech.com/articleClassify.html","excerpt":"本文列的是文章分类，点击进入某一分类文章之后，会看到该分类下的所有文章列表。","text":"本文列的是文章分类，点击进入某一分类文章之后，会看到该分类下的所有文章列表。 友情提示：如果要在新窗口中打开以下链接，请按住 Ctrl 键再点相关链接。 Java开发，文章目录 MyBatis，文章目录 日常开发中有关 MySQL 的一些经验总结 数据库文章汇总目录 React 技术栈（全家桶）学习心得分享，文章目录 前端相关，文章目录 CentOS/linux，文章目录 Linux + Nginx + MySQL + PHP 文章目录 git 文章目录 windows 环境下的日常工作，文章目录 技术之外的话题，文章目录 日常经验汇总，文章目录 工作感言/经验，文章目录 苹果系统（MacOS），文章目录 python，文章目录 软件测试，文章目录 c++ 文章目录 redis 目录","categories":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/categories/index/"}],"tags":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/tags/index/"}]},{"title":"本博客的所有文章列表","slug":"articles","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.904Z","comments":true,"path":"articles.html","link":"","permalink":"https://www.lovesofttech.com/articles.html","excerpt":"所有文章均列于此，方便检索。","text":"所有文章均列于此，方便检索。 友情提示：如果要在新窗口中打开以下链接，请按住 Ctrl 键再点相关链接。 关于 关于我 关于本博客 工作感言/经验，文章目录 软件工程师个人品质、团队精神，你都做到了哪些？ 在工作中，如何能更好的与他人协作 从【技术岗位】招聘的用人方视角，看求职这件事–想要有效且高效求职，就应该了解一下 给刚入职场同学的建议 如何在更少的时间内完成更多的工作 火炉原则 高效能人士的七个习惯–定义 工作中的一些小经验 团队在开发中应该遵循的一些规则，以及部分经验总结 提问的智慧 聊聊工程师的影响力 React 技术栈（全家桶）学习心得分享，文章目录 Ant Design Pro v4 从后端下载 excel，后端返回的是文件流 react 技术栈学习，相关知识储备 React 技术栈学习，js 知识点 React 技术栈学习，redux 知识点 React 项目调试技巧 像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码 redux 官方示例 todomvc 中的 todoList 过滤事件解析 redux 官方示例 todomvc 两个警告修复 React+Redux工程目录结构，最佳实践 react 项目，在生产环境去掉 propTypes 检查代码，打包时自动去除 WebStorm + React 项目，配置 ESLint ESLint 配置文件 .eslintrc 示例及说明 react开发，日常经验汇总 结合例子代码学习 《React进阶之路》第九章示例 bbs-redux-reselect 解读 《深入浅出React和Redux》一书的部分章节例子代码演练及相关知识点 Java开发，文章目录工作规范 java/js 代码规约 java 开发，适用于团队的代码规范及某些约定 spring boot spring boot 配置静态资源 关于 Spring Boot，以及学习 Spring Boot 的一个 Demo spring boot 阿里云发送邮件，使用 qq 邮箱的 SMTP 服务，端口由 25 换成 465 spring boot 支持通过 ajax 跨域请求的设置 spring boot1.5以上版本@ConfigurationProperties取消location注解后的替代方案 springBoot 集成百度富文本框 UEditor，多模块方式 spring 官方例子-&gt;宠物医院，数据库改成 MySQL，数据库连接池改成 druid Spring cron 表达式 spring boot，404，502 错误转向定制页面 tomcat 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优 其他 MySQL 配置项 lower_case_table_names，数据库命名规则 MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 Java 利用 pdfbox 将 PDF 转换为图片 Maven 项目 jar 包依赖冲突导致运行期错误的排查方法 CRM 项目，api 部分的开发规则，仅供参考 BigDecimal 运算与比较 Java 基本类型与对象类型 windows java 开发环境配置，以及一些常用网址收藏s java 字符串的替换 replace、replaceAll、replaceFirst 的区别 Java 特定版本的帮助文档下载方法 Json-lib 将 Json 转换成 Java Bean 时报警 … does not exist. SKIPPED，解决办法 java 开发中的一些小经验 lombok 以及 IDEA lombok 插件 git 文章目录 在两个 git server 之间同步项目的代码 CentOS 7.5 安装配置 git CentOS 7.5 借助 Gitolite 管理 Git 项目 CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码 git 在工作中的基本用法 Git 用户名邮箱的全局配置和单仓库配置 github pages 绑定自己的域名 修改 github 项目的程序语言 git 回车换行在 windows 与 unix 下不一致的解决方案 使用 git 在码云上进行项目协作开发 本地仓库代码，定时同步更新至远程仓库 git 仓库从一个用户下迁移到另外一个用户下，包含提交历史 CentOS/linux，文章目录安装CentOS U 盘安装 CentOS7.5 Jenkins CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布 CentOS 7.5 安装配置 jenkins CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 JIRA 在 CentOS7 上安装 JIRA 手记 secureCRT secureCRT 显示不换行且完全显示 SecureCRT 连接 CentOS，用 sz 与 rz 命令，下载、上传文件 解决 SecureCRT 超时自动断开 java 应用环境配置 在 CentOS 上安装配置 Java 运行环境 CentOS 7.5 安装配置 Maven CentOS 7，tomcat 监控脚本 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 Tomcat 配置调优 CentOS7 安装中文字体 Arial 端口、内存占用、进程内存占用 linux 内存占用情况查询 CentOS6 查看端口占用、杀死进程，防火墙端口开启/关闭 查看 linux 进程内存占用情况 定时任务 CentOS 7.5 利用 crontab 定时执行任务 CentOS 7.5 查看 crontab 的日志 开机启动 CentOS下开机启动查看管理命令:chkconfig 用法 CentOS 系统下设置自己安装的程序开机自动启动 shell CentOS 常用命令 linux shell 脚本 其他 CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 CentOS7，一键远程部署 spring boot 项目和 react 项目 CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本 CentOS 7 安装配置 Node CentOS 7 修改网卡参数 CentOS 7.2 安装配置 Samba 服务器 CentOS 7 安装设置 vsftpd 及多用户登录 Linux下使用 curl 命令发送 GET 请求时多个参数但只能接收到一个参数 CentOS 下 RPM 软件包的安装及卸载 如何查看已安装的 CentOS 版本信息 linux 下 zip/unzip 命令详解 CentOS 6.3安装设置 vsftpd 及多用户登录 linux 工作中的一些小经验 MyBatis，文章目录 基于spring 切面（AOP）实现动态多数据源切换，基于 MyBatis 插件方式实现动态分表查询 MyBatis 项目中，有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍 解决 mybatis generator 使用 mysql 驱动 8.x 版本时会生成多个库里的同名表的问题 MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MBG 生成的 mapper 支持写入记录后返回主键值的配置 MyBatis 开发中，善用通过 MBG 生成的 *Example 类 MyBatis 普通知识点记录 日常开发中有关 MySQL 的一些经验总结 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验 PowerDesigner PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例 PowerDesigner 样式设置，以及样式参考值 MongoDB CentOS7 下 安装配置 MongoDB redis redis5.0.5 在 CentOS7 上的安装和使用 前端相关，文章目录 Ant Design Pro v4 开发备忘，TypeScript 版本 CentOS 7.5 安装配置 Node ES6 循环之 iterator 和 yield JS 开发链接 Nodejs React Native 已死？被Airbnb抛弃之后，Udacity也弃用了 Airbnb 宣布放弃使用 React Native，回归使用原生技术 Udacity也弃用React Native了！ JS 笔记 前端开发–好记性不如“烂文档” windows 环境下的日常工作，文章目录php 开发环境配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php windows 共享 win10 共享遇到的两个问题 windows 10 访问 CentOS 7 的 SMB 共享文件 windows 用户凭据管理 windows 10，Word 2016 打开共享文件时，提示：在试图打开文件时遇到错误 C# + Entity Framework 开发 EF6 写入数据，调用 SaveChanges() 时异常：Validation failed for one or more entities office 安装与卸载 office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活 卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016） 作为码农的 windows 操作经验 windows10 版本查看以及升级到最新版本 windows10 多桌面 MBR、GPT/GUID 分区格式 记一次用 ghost 还原镜像，调换两台电脑系统盘的操作 windows 控制台 cmd/PowerShell 中文显示乱码，解决方法 批处理文件遍历所有子目录批量移除文件名和目录名中特殊字符 在 win10 下修改 hosts 文件 删除 Windows 服务 windwos 查看端口占用、查找进程、杀死进程的命令 使用 tree 命令导出 windows 的【文件夹/文件】目录树 windows 远程桌面的坑 U盘刻录后如何恢复原来容量大小，以及 FAT32 转化为 NTFS 在 windows 下，工作中的一些小经验 Linux + Nginx + MySQL + PHP 文章目录 Nginx 配置 https 后，http 强制跳转到 https，主域名跳转至带 www 的二级域名 CentOS7 安装 Nginx 并设置开机自启动 CentOS7 以源码方式安装 php7 nginx 配置相关 Nginx 反向代理、负载均衡 php 内存分配占用超限，解决办法 php5.4 php-fpm 重启、关闭 discuzX3.4 网站迁移，备忘录 discuzX3.4 数据库由阿里云自建 MySQL 转移至 RDS，填坑日志 php 开发–好记性不如“烂文档” python，文章目录 在 CentOS7 安装最新版 Python（v3.7.1），并与系统自带 Python2.7.5 共存，不影响 yum 正常使用 Java 和 Python 中的整数除法，取余，舍入 c++ 文章目录 windows10 64位+vs2017+CMake 编译 opencv-4.0.1 和 opencv_contrib-4.0.1 软件测试，文章目录 testLink 1.9.17 安装配置，环境：CentOS 7.5 + PHP 7.2.7 + nginx 1.14.0 测试 &amp; 开发 软件测试方法，等价类划分法 日常经验汇总，文章目录hexo 博客改动日志 CentOS 7.5 通过源码自动发布 hexo 博客 Hexo + gitee 免费个人博客搭建 hexo 使用经验汇总 本博客已于2019年3月7日开启统计功能 hexo 标签、分类，大小写问题导致404错误，原因分析和解决 Hexo 个人博客使用 github pages 和 coding.net 静态网站，同时兼顾国内外访问以及 google 和 baidu 爬虫 IDE IntelliJ IDEA，使用心得汇总 sts（Spring Tool Suite）/Eclipse 使用 svn svn递归添加目录、子目录和文件 svn 在 CentOS6 安装以及项目管理 JIRA JIRA 精选插件 日常经验 日常经验–好记性不如烂文档 其他 i5 7200u，核显（集成显卡） Intel HD 620，win7 64 位系统安装折腾记录 软件产品版本号制定规则 Byte KB MB GB的转换关系 MarkDown 使用经验 正则表达式全部符号解释 阿里云，建站产品比较 github 访问加速 苹果系统（MacOS），文章目录 使用 iTunes 在电脑与 iOS 或 iPad 设备之间共享（传输）文件 MacOS 端口占用情况，其中 netstat 命令与 CentOS 略有出入 MacOS 编译安装 nginx 指定版本 i系列7代cpu，核显（集成显卡） Intel HD 630，MacOS 修改驱动指南 苹果系统（MacOS），日常经验 技术之外的话题，文章目录 分享正能量——《肖申克的救赎》 foobar2000，一款 Windows 平台下的高级音频播放器，免费","categories":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/categories/index/"}],"tags":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/tags/index/"}]},{"title":"数据库文章汇总目录","slug":"database","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.913Z","comments":true,"path":"database.html","link":"","permalink":"https://www.lovesofttech.com/database.html","excerpt":"以 MySQL 和 MyBatis 为主。","text":"以 MySQL 和 MyBatis 为主。 日常开发中有关 MySQL 的一些经验总结 MySQL 配置项 lower_case_table_names，数据库命名规则 MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验 MyBatis 在实际工作中的使用经验 MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MBG 生成的 mapper 支持写入记录后返回主键值的配置 MyBatis 开发中，善用通过 MBG 生成的 *Example 类 MyBatis 普通知识点记录 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 redis redis5.0.5 在 CentOS7 上的安装和使用 MongoDB CentOS7 下 安装配置 MongoDB","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"git 文章目录","slug":"git","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.956Z","comments":true,"path":"git.html","link":"","permalink":"https://www.lovesofttech.com/git.html","excerpt":"git 使用经验、基于 git 的项目管理经验","text":"git 使用经验、基于 git 的项目管理经验 在两个 git server 之间同步项目的代码 CentOS 7.5 安装配置 git CentOS 7.5 借助 Gitolite 管理 Git 项目 CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码 git 在工作中的基本用法 Git 用户名邮箱的全局配置和单仓库配置 github pages 绑定自己的域名 修改 github 项目的程序语言 git 回车换行在 windows 与 unix 下不一致的解决方案 使用 git 在码云上进行项目协作开发 本地仓库代码，定时同步更新至远程仓库 git 仓库从一个用户下迁移到另外一个用户下，包含提交历史","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"Java开发，文章目录","slug":"java","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.969Z","comments":true,"path":"java.html","link":"","permalink":"https://www.lovesofttech.com/java.html","excerpt":"代码规范，以及基于 spring、tomcat 的开发与运维经验。","text":"代码规范，以及基于 spring、tomcat 的开发与运维经验。 工作规范 java/js 代码规约 java 开发，适用于团队的代码规范及某些约定 spring boot spring boot 配置静态资源 关于 Spring Boot，以及学习 Spring Boot 的一个 Demo spring boot 阿里云发送邮件，使用 qq 邮箱的 SMTP 服务，端口由 25 换成 465 spring boot 支持通过 ajax 跨域请求的设置 spring boot1.5以上版本@ConfigurationProperties取消location注解后的替代方案 springBoot 集成百度富文本框 UEditor，多模块方式 spring 官方例子-&gt;宠物医院，数据库改成 MySQL，数据库连接池改成 druid Spring cron 表达式 spring boot，404，502 错误转向定制页面 tomcat 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 其他 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 Java 利用 pdfbox 将 PDF 转换为图片 Maven 项目 jar 包依赖冲突导致运行期错误的排查方法 CRM 项目，api 部分的开发规则，仅供参考 BigDecimal 运算与比较 Java 基本类型与对象类型 windows java 开发环境配置，以及一些常用网址收藏 java 字符串的替换 replace、replaceAll、replaceFirst 的区别 Java 特定版本的帮助文档下载方法 Json-lib 将 Json 转换成 Java Bean 时报警 … does not exist. SKIPPED，解决办法 java 开发中的一些小经验 lombok 以及 IDEA lombok 插件","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"CentOS/linux，文章目录","slug":"linux","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.013Z","comments":true,"path":"linux.html","link":"","permalink":"https://www.lovesofttech.com/linux.html","excerpt":"这里所列文章内容均来自实际工作，都是实际操作之后整理出来的，大多数文章基于 CentOS7.X。","text":"这里所列文章内容均来自实际工作，都是实际操作之后整理出来的，大多数文章基于 CentOS7.X。 安装CentOS U 盘安装 CentOS7.5 Jenkins CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布 CentOS 7.5 安装配置 jenkins CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 JIRA 在 CentOS7 上安装 JIRA 手记 secureCRT secureCRT 显示不换行且完全显示 SecureCRT 连接 CentOS，用 sz 与 rz 命令，下载、上传文件 解决 SecureCRT 超时自动断开 java 应用环境配置 在 CentOS 上安装配置 Java 运行环境 CentOS 7.5 安装配置 Maven CentOS 7，tomcat 监控脚本 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 Tomcat 配置调优 CentOS7 安装中文字体 Arial 端口、内存占用、进程内存占用 linux 内存占用情况查询 CentOS6 查看端口占用、杀死进程，防火墙端口开启/关闭 查看 linux 进程内存占用情况 定时任务 CentOS 7.5 利用 crontab 定时执行任务 CentOS 7.5 查看 crontab 的日志 开机启动 CentOS下开机启动查看管理命令:chkconfig 用法 CentOS 系统下设置自己安装的程序开机自动启动 shell CentOS 常用命令 linux shell 脚本 其他 CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 CentOS7，一键远程部署 spring boot 项目和 react 项目 CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本 CentOS 7 安装配置 Node CentOS 7 修改网卡参数 CentOS 7.2 安装配置 Samba 服务器 CentOS 7 安装设置 vsftpd 及多用户登录 Linux下使用 curl 命令发送 GET 请求时多个参数但只能接收到一个参数 CentOS 下 RPM 软件包的安装及卸载 如何查看已安装的 CentOS 版本信息 linux 下 zip/unzip 命令详解 CentOS 6.3安装设置 vsftpd 及多用户登录 linux 工作中的一些小经验","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"React 技术栈（全家桶）学习心得分享，文章目录","slug":"react","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.077Z","comments":true,"path":"react.html","link":"","permalink":"https://www.lovesofttech.com/react.html","excerpt":"react 技术栈学习，有文章有代码（github），花了很多时间整理，如果觉得不错，请在 github 或 gitee 的开源项目上给个小星星儿（star）。","text":"react 技术栈学习，有文章有代码（github），花了很多时间整理，如果觉得不错，请在 github 或 gitee 的开源项目上给个小星星儿（star）。 相关文章 友情提示：如果要在新窗口中打开以下链接，请按住 Ctrl 键再点相关链接。 Ant Design Pro v4 从后端下载 excel，后端返回的是文件流 Ant Design Pro v4 开发备忘，TypeScript 版本 react 技术栈学习，相关知识储备 React 技术栈学习，js 知识点 React 技术栈学习，redux 知识点 React 项目调试技巧 像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码 redux 官方示例 todomvc 中的 todoList 过滤事件解析 redux 官方示例 todomvc 两个警告修复 React+Redux工程目录结构，最佳实践 react 项目，在生产环境去掉 propTypes 检查代码，打包时自动去除 WebStorm + React 项目，配置 ESLint ESLint 配置文件 .eslintrc 示例及说明 react开发，日常经验汇总 结合例子代码学习 《React进阶之路》第九章示例 bbs-redux-reselect 解读 《深入浅出React和Redux》一书的部分章节例子代码演练及相关知识点 个人学习心得项目地址 托管在 github 上的项目链接：https://github.com/uncleAndyChen/react-full-stack-learning 托管在 gitee 上的项目链接 ：https://gitee.com/uncleAndyChen/react-full-stack-learning 前言 本项目分享个人学习 react 全家桶技术栈的一些经验心得。 学习过程会结合相关示例代码，在实践中学习更有成效。 欢迎补充，可通过 fork + pull request 的方式，参与到该项目。 项目依赖及版本 用 Create React App 初始化项目 1npx create-react-app react-and-redux-demo 相关依赖均使用当前最新版（截止 2018-11-06 的最新版）。 react v16.6.0 redux v4.0.1 react-redux v5.1.0 分支说明用 Create React App 初始化项目，所有练习代码都会体现到 master 分支。针对某一个知识点，完成练习之后，记录相关知识点，提交 master，然后从 master 创建一个分支。 获取（切换至）某分支以分支 branchName 为例，切换到该分支并拉取最新代码12git checkout branchNamegit pull 如何参与项目，如何提交 PR？以下是两大平台的帮助文档。 github.com -&gt; Creating a pull request from a fork gitee.com -&gt; Fork + Pull 模式 加群一起学习（QQ 群号：683414457，进群密码：react stack）","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"技术之外的话题，文章目录","slug":"dailyLives","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.908Z","comments":true,"path":"dailyLives.html","link":"","permalink":"https://www.lovesofttech.com/dailyLives.html","excerpt":"本目录下的文章与技术无关，但与生活、个人品质有关。","text":"本目录下的文章与技术无关，但与生活、个人品质有关。 分享正能量——《肖申克的救赎》 foobar2000，一款 Windows 平台下的高级音频播放器，免费","categories":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/categories/dailyLives/"}],"tags":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/tags/dailyLives/"}]},{"title":"Linux + Nginx + MySQL + PHP 文章目录","slug":"lnmp","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.050Z","comments":true,"path":"lnmp.html","link":"","permalink":"https://www.lovesofttech.com/lnmp.html","excerpt":"Linux + Nginx + MySQL + PHP，还有两篇discuzX3.4迁移经验。","text":"Linux + Nginx + MySQL + PHP，还有两篇discuzX3.4迁移经验。 CentOS7 环境 Nginx 配置 https 后，http 强制跳转到 https，主域名跳转至带 www 的二级域名 CentOS7 安装 Nginx 并设置开机自启动 CentOS7 以源码方式安装 php7 nginx 配置相关 Nginx 反向代理、负载均衡 php 内存分配占用超限，解决办法 php5.4 php-fpm 重启、关闭 discuzX3.4 网站迁移，备忘录 discuzX3.4 数据库由阿里云自建 MySQL 转移至 RDS，填坑日志 windows 环境，php 开发配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php PHP 开发日常经验 php 开发–好记性不如“烂文档” MySQL 相关文章 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验","categories":[{"name":"LNMP","slug":"LNMP","permalink":"https://www.lovesofttech.com/categories/LNMP/"}],"tags":[{"name":"LNMP","slug":"LNMP","permalink":"https://www.lovesofttech.com/tags/LNMP/"}]},{"title":"windows 环境下的日常工作，文章目录","slug":"windows","date":"2019-11-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.101Z","comments":true,"path":"windows.html","link":"","permalink":"https://www.lovesofttech.com/windows.html","excerpt":"在 windows 下的部分工作经验。说明：还有一些文章分布在其他分类下。","text":"在 windows 下的部分工作经验。说明：还有一些文章分布在其他分类下。 windows 下，php 开发环境配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php windows 共享 win10 共享遇到的两个问题 windows 10 访问 CentOS 7 的 SMB 共享文件 windows 用户凭据管理 windows 10，Word 2016 打开共享文件时，提示：在试图打开文件时遇到错误 C# + Entity Framework 开发 EF6 写入数据，调用 SaveChanges() 时异常：Validation failed for one or more entities office 安装与卸载 office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活 卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016） 作为码农的 windows 操作经验 windows10 版本查看以及升级到最新版本 windows10 多桌面 MBR、GPT/GUID 分区格式 记一次用 ghost 还原镜像，调换两台电脑系统盘的操作 windows 控制台 cmd/PowerShell 中文显示乱码，解决方法 批处理文件遍历所有子目录批量移除文件名和目录名中特殊字符 在 win10 下修改 hosts 文件 删除 Windows 服务 windwos 查看端口占用、查找进程、杀死进程的命令 使用 tree 命令导出 windows 的【文件夹/文件】目录树 windows 远程桌面的坑 U盘刻录后如何恢复原来容量大小，以及 FAT32 转化为 NTFS 在 windows 下，工作中的一些小经验","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"}]},{"title":"Nginx 配置 https 后，http 强制跳转到 https，主域名跳转至带 www 的二级域名","slug":"lnmp/https-www-rewrite","date":"2019-10-23T16:00:00.000Z","updated":"2020-09-01T02:53:13.057Z","comments":true,"path":"lnmp/https-www-rewrite.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/https-www-rewrite.html","excerpt":"为了随主流，即大多数人的习惯，访问时网站时，域名随时保持带 www 的二级域名 www.lovesofttech.com。 另外，网站的统计也是基于二级域名 www.lovesofttech.com 的，同时为了搜索引擎优化，访问 lovesofttech.com 时需要跳转到 www.lovesofttech.com。 网站开通了 ssl 证书，需要将 http 强制跳转至 https。","text":"为了随主流，即大多数人的习惯，访问时网站时，域名随时保持带 www 的二级域名 www.lovesofttech.com。 另外，网站的统计也是基于二级域名 www.lovesofttech.com 的，同时为了搜索引擎优化，访问 lovesofttech.com 时需要跳转到 www.lovesofttech.com。 网站开通了 ssl 证书，需要将 http 强制跳转至 https。 完整配置内容script12345678910111213141516171819202122232425262728293031323334353637383940# 针对 http 协议，将 @ 记录，即不带 www 的主域名 http://lovesofttech.com 跳转至带 www 的二级域名 http://www.lovesofttech.com，域名后面的路径以及参数保持不变# 如果配置了 htts 协议的跳转，这个server配置可以不要。server &#123; listen 80; server_name lovesofttech.com; rewrite ^(.*)$ https://www.$server_name$1 permanent;&#125;# 如果配置了上面的 http 协议的主域名 http://lovesofttech.com 跳转至二级域名 https://www.lovesofttech.com，则下面这个server的配置可以把主域名 lovesofttech.com 去掉server &#123; listen 80; server_name www.lovesofttech.com lovesofttech.com; rewrite ^(.*)$ https://$host$1 permanent;&#125;# 以下 server 配置 ssl 协议，注意端口不再是80而是443 server &#123; listen 443; server_name www.lovesofttech.com lovesofttech.com; charset utf-8; access_log logs/lovesofttech.access.log; error_log logs/lovesofttech.error.log; ssl on; ssl_certificate /usr/local/nginx/cert/2944536_www.lovesofttech.com.pem; ssl_certificate_key /usr/local/nginx/cert/2944536_www.lovesofttech.com.key; ssl_session_timeout 5m; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_prefer_server_ciphers on; # 针对 https 协议，将 @ 记录，即不带 www 的主域名 https://lovesofttech.com 跳转至带 www 的二级域名 https://www.lovesofttech.com，域名后面的路径以及参数保持不变 if ($host != 'www.lovesofttech.com') &#123; rewrite ^/(.*)$ https://www.lovesofttech.com/$1 permanent; &#125; location / &#123; root /home/utomcat/gitCode/lovesoft/uncleAndyChen/public; index index.html; &#125;&#125; 后记带路径时不会重定向之前的主域名 http://lovesofttech.com 跳转至带 www 的二级域名 https://www.lovesofttech.com，是在阿里云的域名解析里做的，是一个域名重定向的配置。 域名重定向配置 可以设置301重定向，也可以设置成302重定向 这样配置带来的问题是，只有主页 http://lovesofttech.com 才会重定向到 https://www.lovesofttech.com，带路径的文章如 https://lovesofttech.com/about/ 就不会重定向，而且显示无法访问。 在百度里搜索：site:lovesofttech.com，得到的结果，不带 www 的主域名且带路径的文章链接，如 https://lovesofttech.com/about/ ，均无法访问。 解决修改主域名解析配置为 A 记录，记录值直接指向服务器IP。 域名重定向配置 这样配置之后，https://lovesofttech.com/about/ 这样的链接已经可以正常访问了，但是不利于网站统计和搜索引擎优化（时髦词叫 SEO），所以，还需要通过 Nginx 配置来重定向。 没有开通 ssl 证书的重定向配置script12345server &#123; listen 80; server_name lovesofttech.com; rewrite ^(.*)$ https://www.$server_name$1 permanent;&#125; 开通了 ssl 证书的重定向配置修改监听 443 端口的 server 配置，在 location 配置前面加上：script123if ($host != 'www.lovesofttech.com') &#123; rewrite ^/(.*)$ https://www.lovesofttech.com/$1 permanent;&#125; 具体可参考上面的完整配置内容。","categories":[{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/categories/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"关于本博客","slug":"about","date":"2019-09-12T16:00:00.000Z","updated":"2020-09-01T02:53:12.902Z","comments":true,"path":"about.html","link":"","permalink":"https://www.lovesofttech.com/about.html","excerpt":"主要记录与技术有关的经验心得，绝大多数来源于实践，具备高度可还原性。 偶尔也会记录一下技术人生的一点感想以及团队管理的一些心得。","text":"主要记录与技术有关的经验心得，绝大多数来源于实践，具备高度可还原性。 偶尔也会记录一下技术人生的一点感想以及团队管理的一些心得。 文章风格本博客的原创文章绝大多数来源于工作中的总结和记录，所以会有以下这些特点： 我会记录遇到的某个技术点的一系列问题，并把出错信息完整的列出来，把一步一步解决问题的过程写出来，这样： 大家在遇到同样（类似）问题时可以用问题关键字在 google、百度搜索到我的文章。 进入我的博客后，利用右上角的搜索功能，利用技术关键词可以快速搜索到相关文章。 但是，这样一来，在查看文章寻求问题解决方案时，可能不能立即看到最想要看的内容，也许还会觉得文章啰嗦，所以，我一般会把问题和解决方案分开写，通过文章目录（左侧）可以方便的进行定位。 现在新写的文章，我会尽量把预期读者最关心的内容写在最前面，然后才开始记录具体的问题以及解决过程。 另外，随着文章数量的增加，随着我对技术理解的提升，我对文章的内容、文章的组织结构也都会不断改进。 我时常会发现以前的文章组织得并不好，写得也并不怎么样，如果正好我需要查阅，我会尽量对原文按现在的理解重新组织和完善。 原创与转载本博客以原创为主，有极少量转载，转载文章会在文章最前面给出原文链接，如果有参考，也会把参考过的文章专门列出。 关于评论对于技术博客，不能写评论，始终觉得不完整。 最开始用的友言，没用多久就被告之要关闭。 然后转而用畅言，最开始体验还不错，没广告，但也没过多久，不但有了广告，而且还挺多的，于是乎我就关闭了评论。 关于畅言评论的广告，也是可以理解的，毕竟需要发展就需要有创收，不过，对于我的博客而言，畅言的广告有点喧宾夺主了。 由于时间关系，直到 2019 年的中秋假期，才又开始关注并着手配置评论插件。 我想要的评论功能，首要原则就是没有广告，其次是要支持中文，最后，认证授权方是技术人员大多数人都会有账号的第三方，这几点， gitalk 都可以满足，挺不错的，感谢作者。 关于我请点击移步","categories":[{"name":"about","slug":"about","permalink":"https://www.lovesofttech.com/categories/about/"}],"tags":[{"name":"about","slug":"about","permalink":"https://www.lovesofttech.com/tags/about/"}]},{"title":"在两个 git server 之间同步项目的代码","slug":"git/syncBetweenTwoGitServer","date":"2019-09-05T16:00:00.000Z","updated":"2020-09-01T02:53:12.968Z","comments":true,"path":"git/syncBetweenTwoGitServer.html","link":"","permalink":"https://www.lovesofttech.com/git/syncBetweenTwoGitServer.html","excerpt":"如果是在 gitee.com 和 github.com 上同步代码，假设默认仓库放到 github.com，只需要 git remote add 仓库别名 gitee.com上的仓库地址，然后在代码有提交时，执行 git push 仓库别名 即可达到目的，仓库别名 自己起一个好记的就行，比如 gitee。 现在假设在办公室只能用局域网的 git server，到了周末，放不下工作，想在家继续 coding，那么到了下周一，如何将代码同步到办公室的 git server 呢？","text":"如果是在 gitee.com 和 github.com 上同步代码，假设默认仓库放到 github.com，只需要 git remote add 仓库别名 gitee.com上的仓库地址，然后在代码有提交时，执行 git push 仓库别名 即可达到目的，仓库别名 自己起一个好记的就行，比如 gitee。 现在假设在办公室只能用局域网的 git server，到了周末，放不下工作，想在家继续 coding，那么到了下周一，如何将代码同步到办公室的 git server 呢？ 模拟这个场景 假设在家里能访问 coding.net，但不能访问 gitee.com（模拟办公室的局域网环境）。 而在办公室，即可访问 coding.net 也可访问 gitee.com。 正在进行的项目为：remoteT 在办公室, 周五下班前 同时在 gitee.com 和 coding.net 上创建同名仓库（项目）：remoteT，然后将 gitee.com 上的仓库 remoteT clone 到本地。 1git clone https://gitee.com/uncleAndyChen/remoteT.git 添加文件 readme.md，写一行文本：1. from gitee。 推送 123git add .git commit -m&apos;from gitee&apos;git push 添加 coding.net 上的仓库 remoteT ，作为远程仓库来管理，添加后将本地代码推送，使用 Git Bash 或者 cmd，在项目根目录下执行如下指令： 12git remote add coding https://e.coding.net/andychen/remoteT.gitgit push coding 至此，两个 git server 上的仓库 remoteT 的代码就完全一样了。 远程仓库的配置信息保存到 .git 目录下的 config 文件中了，如下：12345678910111213141516[core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true[remote &quot;origin&quot;] url = https://gitee.com/uncleAndyChen/remoteT.git fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master[remote &quot;coding&quot;] url = https://e.coding.net/andychen/remoteT.git fetch = +refs/heads/*:refs/remotes/coding/* 如果要修改远程仓库的别名，把 [remote &quot;coding&quot;] 和 fetch = +refs/heads/*:refs/remotes/coding/* 中的 coding 改为想的名字即可。 周末，在家里 获取 coding.net 上的仓库 remoteT 1git clone https://e.coding.net/andychen/remoteT.git 修改 readme.md 文件，追加一行文本 2. from coding.net，修改好之后推送。 到了下周一，回到办公室 获取在 coding.net 上的仓库 remoteT 的修改，获取时需要指定分支：git pull coding master，这里的 coding 只是远程仓库的别名，创建的时候起的名字（通过命令 git remote add coding https://e.coding.net/andychen/remoteT.git 创建）。 1234567$ git pull coding masterFrom https://e.coding.net/andychen/remoteT * branch master -&gt; FETCH_HEADUpdating 8c02788..ab9d5a4Fast-forward readme.md | 3 ++- 1 file changed, 2 insertions(+), 1 deletion(-) 把在 coding.net 上的仓库 remoteT 的修改再 push 到 gitee.com 上的仓库 remoteT，执行 git push 就行，因为 gitee.com 上的仓库 remoteT 是默认仓库。 12345678$ git pushEnumerating objects: 5, done.Counting objects: 100% (5/5), done.Writing objects: 100% (3/3), 285 bytes | 95.00 KiB/s, done.Total 3 (delta 0), reused 0 (delta 0)remote: Powered By Gitee.comTo https://gitee.com/uncleAndyChen/remoteT.git 8c02788..ab9d5a4 master -&gt; master 至此，周末在家里通过 coding.net 上的仓库 remoteT 写的代码就完全同步到 gitee.com 上的仓库 remoteT 了。文件 readme.md 的内容变成了：121. from gitee2. from coding.net 获取远程仓库 coding（通过命令 git remote add coding https://e.coding.net/andychen/remoteT.git 创建）的代码时，需要指定分支，否则：You asked to pull from the remote ‘coding’, but did not specify a branch. Because this is not the default configured remote for your current branch, you must specify a branch on the command line.12345678910$ git pull codingremote: Enumerating objects: 5, done.remote: Counting objects: 100% (5/5), done.remote: Total 3 (delta 0), reused 0 (delta 0)Unpacking objects: 100% (3/3), done.From https://e.coding.net/andychen/remoteT 8c02788..ab9d5a4 master -&gt; coding/masterYou asked to pull from the remote &apos;coding&apos;, but did not specifya branch. Because this is not the default configured remotefor your current branch, you must specify a branch on the command line. 注意事项在实际推送的时候，如果提示：Updates were rejected because the remote contains work that you do … This is usually caused by another repository pushing 通常意味着离上次 git pull 之后，已经有了新的 push，要先 git pull，再 git push。123456789[utomcat@localhost mis-api]$ git push giteeTo gitee.com:uncleAndyChen/mis-api.git ! [rejected] master -&gt; master (fetch first)error: failed to push some refs to &apos;git@gitee.com:uncleAndyChen/mis-api.git&apos;hint: Updates were rejected because the remote contains work that you dohint: not have locally. This is usually caused by another repository pushinghint: to the same ref. You may want to first integrate the remote changeshint: (e.g., &apos;git pull ...&apos;) before pushing again.hint: See the &apos;Note about fast-forwards&apos; in &apos;git push --help&apos; for details.","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"},{"name":"同步代码","slug":"git/同步代码","permalink":"https://www.lovesofttech.com/categories/git/同步代码/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"同步代码","slug":"同步代码","permalink":"https://www.lovesofttech.com/tags/同步代码/"}]},{"title":"CentOS7，一键远程部署 spring boot 项目和 react 项目","slug":"linux/CentOS7RemoteDeploy","date":"2019-09-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.016Z","comments":true,"path":"linux/CentOS7RemoteDeploy.html","link":"","permalink":"https://www.lovesofttech.com/linux/CentOS7RemoteDeploy.html","excerpt":"两种场景： 服务器不能上外网。 服务器可以上外网。","text":"两种场景： 服务器不能上外网。 服务器可以上外网。 场景一，服务器不能上外网需求 需要在一台不能上外网的 CentOS7 服务器 A 上部署前后端分离的项目，采用 spring boot + react，需要在有代码更新之后，可以一键部署最新版本。 服务器 A 限制上外网，是基于业务和安全方面的考虑。 那么问题来了，这台服务器不能上外网，意味着不能下载依赖，无论是 spring boot 项目还是 react 项目，都需要下载依赖才能编译的。 前置知识 CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本 方案，用 shell 脚本搞定一切 需要一台可以上外网的 CentOS7 服务器（可以是虚拟机）B，这台服务器可以访问服务器 A。 当需要部署新版时，执行服务器 B 上的部署脚本，执行一次即可，相当于一键部署，可极大的节约部署时间成本。 以下是具体步骤： 项目代码托管可以采用 gitee.com、github.com、coding.net 等，也可以自己搭建，可参考：CentOS 7.5 借助 Gitolite 管理 Git 项目。 在服务器 B 上配置无密码获取代码，如果是自己搭建 git server，这可以通过前置知识介绍的，用 SSH 公钥建立信任关系达到，如果用第三方比如 gitee.com，也是可以利用公钥或私钥来达到目的。 服务器 B 上的 shell 部署脚本，功能是： 获取最新代码。 编译。 通过前置知识介绍的 scp 无密传输文件的方式，将编译好的文件上传到服务器 A 的固定目录，如：~/upload。 针对 spring boot 项目，需要上传 boot 项目的 jar/war 包。 针对前端项目，则把编译好的文件（我用的是 Ant Design Pro，编译文件存放在 dist 目录）打包再上传，假如打包后的文件名是：UI.tar.gz。 通过前置知识介绍的 ssh 执行远程服务器上脚本的方式，执行服务器 A 上的部署脚本。 服务器 A 上的部署脚本功能如下： 针对 spring boot 项目，这里以 tomcat 运行的方式为例： 停止 tomcat。如果该 tomcat 部署的是后台任务，停止 tomcat 之前先停止后台任务，延时 10 来秒（可自己定义）之后再停止 tomcat。 删除 app 目录下的所有文件，解压新的 war 包到 app 目录，恢复配置文件至 app 目录/WEB-INF/classes/。配置文件是单独存放的。 启动 tomcat。 针对前端 react 项目，因为是静态网页文件，所以可以简单粗暴的作如下两步操作： 删除 app 目录下的所有文件。 解压新版本 tar 包 UI.tar.gz（从服务器 B 上传）至 app 目录下。 由于前端是静态网页，使用 nginx 部署，不需要重启，客户端重新访问的时候会自动更新。 场景二，服务器可以上外网当然，可以上外网也可以采用方案一的方式，只不过，可以把方案一中的服务器 A 和服务器 B 合二为一。 这里介绍另外一种方式，借助强大的 jenkins 来实现，参考：CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"scp","slug":"CentOS/scp","permalink":"https://www.lovesofttech.com/categories/CentOS/scp/"},{"name":"ssh","slug":"CentOS/scp/ssh","permalink":"https://www.lovesofttech.com/categories/CentOS/scp/ssh/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"scp","slug":"scp","permalink":"https://www.lovesofttech.com/tags/scp/"},{"name":"ssh","slug":"ssh","permalink":"https://www.lovesofttech.com/tags/ssh/"}]},{"title":"CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本","slug":"linux/centOS7ScpAndRemoteSsh","date":"2019-09-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.028Z","comments":true,"path":"linux/centOS7ScpAndRemoteSsh.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7ScpAndRemoteSsh.html","excerpt":"如题","text":"如题 安装 scp如果提示：-bash: scp: command not found, 执行下面的命令安装：1yum install -y openssh-clients 免密码配置 通常用scp命令通过ssh获取对方linux主机文件的时候都需要输入密码确认，不过通过建立信任关系，可以实现不输入密码。 建立的信任关系可在两台服务器的任何用户之间，下面的示例，两台服务器的用户都是 root，实际操作时，把 root 换成你的真实用户名即可。 假设： 传输文件的服务器 S（source） 的IP：192.168.1.100 接收文件的服务器 T（target） 的IP：192.168.1.101 目标：从服务器 S 免密码传文件至服务器 T 操作步骤 如果 T 的 ~/.ssh/ 目录不存在，就手动创建，mkdir -p ~/.ssh。 在服务器 S 上执行命令 ssh-keygen -t rsa 来生成密钥，一路回车就行了。 12345678910111213141516171819202122[root@localhost ~]# ssh-keygen -t rsaGenerating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Created directory &apos;/root/.ssh&apos;.Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:SHA256:7EM99i0eL03+glViCN0cn+9ELeM8J2sLyvDW26SaB/g root@localhost.localdomainThe key&apos;s randomart image is:+---[RSA 2048]----+| . o.. || . . o.o|| . .o.+|| . . .oo+o|| S.+ .=o+|| o...o .oB || +. o=*= .|| =E+=X+. || .*o+o+o.|+----[SHA256]-----+ 将服务器 S /root/.ssh/ 目录中的 id_rsa.pub 文件内容复制到服务器 T /root/.ssh/ 目录下的 authorized_keys 文件中，注意是文件内容： 如果 T 的 /root/.ssh/ 目录下没有 authorized_keys 文件，就上传并改名为 authorized_keys：scp .ssh/id_rsa.pub root@192.168.1.101:~/.ssh/authorized_keys 如果 T 的 ~/.ssh/ 目录已经存在 authorized_keys 文件，用 cat &gt;&gt; 命令将公钥文件 id_rsa.pub 的内容添加进去，文件 authorized_keys 是可以包含多个 SSH 验证信息的。 在服务器 S 上执行 scp ~/.ssh/id_rsa.pub root@192.168.1.101:~/.ssh/s.pub 在服务器 T 上执行 cat ~/.ssh/s.pub &gt;&gt; ~/.ssh/authorized_keys 以后从服务器 S 通过 scp 传文件到服务器 T 就不需要密码了。 注意这种方式传文件，如果目标服务器的目标文件夹下存在同名文件，会在没有任何提示的情况下被覆盖掉。 上传下载 上传本地文件到服务器：scp /path/filename username@servername:/path/ 上传整个目录到服务器：scp -r local_dir username@servername:remote_dir 从服务器上下载文件：scp username@servername:/path/filename /var/www/local_dir 从服务器下载整个目录：scp -r username@servername:/var/www/remote_dir/ /var/www/local_dir 执行远程服务器上的 shell 脚本语法ssh + 建立好信任关系的用户名@远程服务器IP地址 + “第一个 shell 指令; 另一个 shell 指令”，如：ssh utomcat@IP &quot;cd ~/tomcat/dev/job ; ls -l --color=auto&quot; 如果指令不止一个，必须要加双引号，否则，除了第一个指令，其余指令将会在本地执行。 两个指令之间用分号隔开。 示例一：查看远程服务器文件列表远程服务器上的 ~/tomcat/dev/job 为 tomcat 目录：1234567891011121314151617[utomcat@localhost logs]$ ssh utomcat@192.168.1.101 &quot;cd ~/tomcat/dev/job ; ls -l --color=auto&quot;total 128drwxr-x---. 3 utomcat gtomcat 4096 Aug 17 23:43 bin-rw-r-----. 1 utomcat gtomcat 18982 Aug 17 23:43 BUILDING.txtdrwxr-x---. 3 utomcat gtomcat 18 Aug 17 23:43 C:drwx------. 3 utomcat gtomcat 254 Aug 17 23:44 conf-rw-r-----. 1 utomcat gtomcat 5407 Aug 17 23:43 CONTRIBUTING.mddrwxr-x---. 2 utomcat gtomcat 4096 Aug 17 23:43 lib-rw-r-----. 1 utomcat gtomcat 57092 Aug 17 23:43 LICENSEdrwxr-x---. 2 utomcat gtomcat 4096 Sep 3 09:30 logs-rw-r-----. 1 utomcat gtomcat 2333 Aug 17 23:43 NOTICE-rw-r-----. 1 utomcat gtomcat 3255 Aug 17 23:43 README.md-rw-r-----. 1 utomcat gtomcat 6852 Aug 17 23:43 RELEASE-NOTES-rw-r-----. 1 utomcat gtomcat 16262 Aug 17 23:43 RUNNING.txtdrwxr-x---. 2 utomcat gtomcat 30 Aug 17 23:43 tempdrwxr-x---. 7 utomcat gtomcat 81 Aug 17 23:43 webappsdrwxr-x---. 3 utomcat gtomcat 22 Sep 2 09:57 work 示例二：执行远程服务器上的 shell 脚本文件并同步监听 tomcat 日志 远程服务器上的脚本文件 reBuildAndRestartTomcatAndTailLog.sh 作用是获取 java 项目最新代码并重新编译，编译完成之后重启 tomcat 并监听 tomcat 日志变化。 先在远程服务器终端执行 tail -f ~/tomcat/logs/catalina.out 监听 tomcat 日志，观察 tomcat 是否会被重启。 然后，在本地服务器的终端执行：ssh utomcat@192.168.1.101 &quot;~/shell/reBuildAndRestartTomcatAndTailLog.sh&quot;。 执行结果，远程服务器的日志文件 catalina.out 已经开始有变化了，从变化看，tomcat 正在重启，同时，本地终端也同步显示了此日志的变化情况，如下图：","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"scp","slug":"CentOS/scp","permalink":"https://www.lovesofttech.com/categories/CentOS/scp/"},{"name":"ssh","slug":"CentOS/scp/ssh","permalink":"https://www.lovesofttech.com/categories/CentOS/scp/ssh/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"scp","slug":"scp","permalink":"https://www.lovesofttech.com/tags/scp/"},{"name":"ssh","slug":"ssh","permalink":"https://www.lovesofttech.com/tags/ssh/"}]},{"title":"Ant Design Pro v4 从后端下载 excel，后端返回的是文件流","slug":"react/antDesignProDownloadExcel","date":"2019-08-29T16:00:00.000Z","updated":"2020-09-01T02:53:13.080Z","comments":true,"path":"react/antDesignProDownloadExcel.html","link":"","permalink":"https://www.lovesofttech.com/react/antDesignProDownloadExcel.html","excerpt":"前后端分离，后端返回文件流，在前端通过请求 api 的方式下载 excel 文件。","text":"前后端分离，后端返回文件流，在前端通过请求 api 的方式下载 excel 文件。 前端代码 适用于 v4，应该也适用于 v2.3.1，在 v4 版本下测试通过，如果用的是 v2.3.0，请看最后面的修改方式。 另外，刚用 TypeScript，因为还不是很熟，有些地方还不符合 TypeScript 的编码规范，先将就看~~123456789101112131415161718192021222324252627282930313233export function excelDownload(url, options) &#123; let tokenSessionStorage: string | null = sessionStorage.getItem('token'); let excelFileName : string | null = options.body.excelFileName; options = &#123; credentials: 'include', ...options &#125;; options.body = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.body), &#125;); options.headers = &#123; Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8', Authorization: tokenSessionStorage, ...options.headers, &#125;; fetch(url, options) .then(response =&gt; response.blob()) .then(blobData =&gt; &#123; download(blobData, excelFileName); &#125;);&#125;function download(blobData: Blob, forDownLoadFileName: string | null): any &#123; const aLink = document.createElement('a'); document.body.appendChild(aLink); aLink.style.display = 'none'; aLink.href = window.URL.createObjectURL(blobData); aLink.setAttribute('download', forDownLoadFileName); aLink.click(); document.body.removeChild(aLink);&#125; 遇到的坑前端提交请求的参数体，用的是 options.data，参照了登录的 api 请求方法，在文件 src\\services\\login.ts 中定义。123456export async function fakeAccountLogin(params: LoginParamsType) &#123; return request(&apos;/api/auth/login&apos;, &#123; method: &apos;POST&apos;, data: params, &#125;);&#125; 我的方法是：123456export async function exportToExcelCollectionDetail(params) &#123; return excelDownload(&apos;/api/exportToExcel/collectionDetail&apos;, &#123; method: &apos;POST&apos;, data: params, &#125;);&#125; 调用前将 data 转换成 json 数据：1234options.data = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.data),&#125;); 在后端，只有 method 有值，jsonStringParameter 被“吞”掉了，就象没有传这个参数一样，所以，得到的值是 null。 各种查资料，后来在 fetch 的 github 项目看到，Post JSON，请求的参数用的是 body，代码如下：12345678910fetch('/users', &#123; method: 'POST', headers: &#123; 'Content-Type': 'application/json' &#125;, body: JSON.stringify(&#123; name: 'Hubot', login: 'hubot', &#125;)&#125;) 于是，将 options.data 改为 options.body：1234options.body = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.body),&#125;); 记得调用方也要改：123456export async function exportToExcelCollectionDetail(params) &#123; return excelDownload('/api/exportToExcel/collectionDetail', &#123; method: 'POST', body: params, &#125;);&#125; 竟然就可以了！ 在查询数据，以及登录功能，都用的是关键字 data，能正常传递参数，不过，调用的是 umi-request 封装过的 fetch，umi-request 对参数的定义是：12345678910111213141516export interface RequestOptionsInit extends RequestInit &#123; charset?: 'utf8' | 'gbk'; requestType?: 'json' | 'form'; data?: any; params?: object; responseType?: ResponseType; useCache?: boolean; ttl?: number; timeout?: number; errorHandler?: (error: ResponseError) =&gt; void; prefix?: string; suffix?: string; throwErrIfParseFail?: boolean; parseResponse?: boolean; cancelToken?: CancelToken;&#125; 后端导出 excel 文件的代码片断1234567891011121314151617181920212223// 设置response头信息response.reset();response.setContentType(\"application/x-download;charset=UTF-8\");try &#123; response.setHeader(\"Content-Disposition\", \"attachment;filename=\" + URLEncoder.encode(excelFileName, \"UTF-8\") + \".xls\"); //创建一个WorkBook,对应一个Excel文件 HSSFWorkbook wb = new HSSFWorkbook(); //在Workbook中，创建一个sheet，对应Excel中的工作薄（sheet） HSSFSheet sheet = wb.createSheet(excelFileName); HSSFCellStyle headerStyle = getStyleHeader(wb); // 填充工作表 // some code //将文件输出 OutputStream outputStream = response.getOutputStream(); wb.write(outputStream); outputStream.flush(); outputStream.close(); wb.close();&#125; catch (Exception e) &#123; e.printStackTrace();&#125; ant design pro v2.3.0 版本，导出 excel修改 src\\utils\\request.js，在以下代码的 return 之前：123456 return ( fetch(url, newOptions) .then(checkStatus) //.then(response =&gt; cachedSave(response, hashcode)) .then(response =&gt; &#123;// codes 添加以下代码：123456789if (url.includes('exportToExcel')) &#123; const &#123; excelFileName &#125; = options.body; return fetch(url, newOptions) .then(response =&gt; response.blob()) .then(blobData =&gt; &#123; download(blobData, excelFileName); &#125;);&#125; 前提是，下载 excel 的 api 路径都要添加 exportToExcel。其中，download 方法在 v2 与 v4 通用，请参照 v4 的代码。对 newOptions 的处理，在 if (!(newOptions.body instanceof FormData)) { 下添加：1234567891011newOptions.headers = &#123; Authorization: token, Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8', ...newOptions.headers,&#125;;newOptions.body = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(newOptions.body),&#125;);","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"Ant Design Pro","slug":"react/Ant-Design-Pro","permalink":"https://www.lovesofttech.com/categories/react/Ant-Design-Pro/"},{"name":"excel 文件流下载","slug":"react/Ant-Design-Pro/excel-文件流下载","permalink":"https://www.lovesofttech.com/categories/react/Ant-Design-Pro/excel-文件流下载/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"Ant Design Pro","slug":"Ant-Design-Pro","permalink":"https://www.lovesofttech.com/tags/Ant-Design-Pro/"},{"name":"excel 文件流下载","slug":"excel-文件流下载","permalink":"https://www.lovesofttech.com/tags/excel-文件流下载/"}]},{"title":"Hexo 个人博客使用 github pages 和 coding.net 静态网站，同时兼顾国内外访问以及 google 和 baidu 爬虫","slug":"general/hexoBlogSEO","date":"2019-08-27T16:00:00.000Z","updated":"2020-09-01T02:53:12.948Z","comments":true,"path":"general/hexoBlogSEO.html","link":"","permalink":"https://www.lovesofttech.com/general/hexoBlogSEO.html","excerpt":"之前在百度上搜索不到自己博客的内容，原来是百度爬虫被 github 屏蔽了。 本文介绍让百度爬虫爬取自己博客的方法，同时兼顾国内外访问，兼顾 google 和 baidu 爬虫收录网站。","text":"之前在百度上搜索不到自己博客的内容，原来是百度爬虫被 github 屏蔽了。 本文介绍让百度爬虫爬取自己博客的方法，同时兼顾国内外访问，兼顾 google 和 baidu 爬虫收录网站。 正文 github pages 百度不能爬取，因为 github 屏蔽了百度爬虫。 在继续使用 github pages 的前提下，通过使用 coding.net 的静态网站（之前也叫 pages）让百度爬取。 这需要配合域名解析实现，实现之后，百度爬取时实际上访问的是 coding.net 的静态网站。 不过，coding.net 的静态网站不够稳定，后来我还是把解析线路的默认指向了 github.com。访问网站时慢点儿，但稳定，总比直接不能访问要强。 操作步骤 将 hexo blog 编译好的版本提交到 github.com 的同时，也提交到 coding.net，coding.net 可以设置有代码更新自动部署，github.com 是自动的，不需要设置。 coding.net 绑定自定义域名。 在绑定之前，需要添加域名 CNAME 记录，指向 coding.net 的静态网站域名，比如我的是：y5561p.coding-pages.com。 停止之前设置的 github.com 的解析。 过大概10分钟，再绑定，绑定时开启强制 HTTPS 访问，强制 HTTPS 访问需要申请证书，如果显示申请失败就再申请就是了。 待证书状态为【正常】之后，再将之前停止的 CNAME 启用，即启用解析到 github.com 的 CNAME。 域名解析注意事项，这里以阿里云的域名为例。 解析到 github.com 的 CNAME，解析线路选择【境外】 解析到 coding.net 的，解析线路选择【默认】 设置搜索引擎解析。 谷歌和必应的解析项，指到 github.com。 百度的解析项，指到 coding.net。 域名解析 域名设置部分，因为顶级域名（lovesofttech.com）设置了 MX 记录，所以顶级域名（lovesofttech.com）不能再设置 CNAME 了（会冲突），所以，我设置了各大运营商（电信、联通等）的线路，不清楚是否管用。 如此折腾的好处 如此设置之后，百度就可以正常爬取博客内容了。 只有在境外访问才会解析到 github.com。 兼顾了国内外访问，同时兼顾了 google 和 baidu 爬虫，可谓一举多得。至少在国内访问的速度比之前快了非常多，有飞一般的感觉（可惜并不稳定，慢的时候就是直接不能访问）。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"Ant Design Pro v4 开发备忘，TypeScript 版本","slug":"react/antDesignProTs","date":"2019-08-25T16:00:00.000Z","updated":"2020-09-01T02:53:13.081Z","comments":true,"path":"react/antDesignProTs.html","link":"","permalink":"https://www.lovesofttech.com/react/antDesignProTs.html","excerpt":"v4 相对之前的版本，改动比较大。请参考：Ant Design Pro v4 is Here","text":"v4 相对之前的版本，改动比较大。请参考：Ant Design Pro v4 is Here Ant Design Pro 相关文档 github 地址 中文文档 区块中文文档 下载区块在 windows 10 下 npm run fetch:blocks，总是非常慢，还经常卡住不动，而且即使显示执行成功，实际上有好多文件没有下载完，导致启动（npm start）时会报错，我遇到的错误提示：12345678 ERROR Failed to compile with 1 errors 21:35:10This relative module was not found:* ../list/search in ./src/pages/.umi/router.js ERROR CODE ERR_WEBPACK_MODULE_NOT_FOUND# ... 原因就是有文件没有下载下来。修复这个错，找到下面三行，并注释掉两行，如下：123//path: &apos;/list/search&apos;,name: &apos;search-list&apos;,//component: &apos;./list/search&apos;, 如此修改之后，可以运行起来了，但还是有好些页面找不到。1234umi development 404 pageThere&apos;s not a page yet at /dashboard/analysis.Create a React.js component in your pages directory at src/pages/dashboard/analysis.js and configure the route in config file then this page will automatically refresh to show the new page component you created. 最佳实践来了 在 CentOS 7 下执行同样的操作，发现非常顺利。 下载好后，把文件复制到 windows 下再做开发和研究。 CentOS 7 下操作步骤如果还没安装 yarn，先安装，下面以 root 身份登录安装的： yarn site: https://yarnpkg.com/en/docs/install#centos-stable 12curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repoyum install -y yarn 安装好后，依次执行以下指令。 由于网络原因，如果遇到失败，重复操作失败的步骤，或者删除整个文件夹，重头再来一遍，如果一遍不行，那就两遍… 123456yarn create uminpm inpm run fetch:blocksrm -rf node_modules/ # 删掉下载的依赖包tar -czvf adp.tar.gz adp/ # 打包文件夹sz adp.tar.gz # 下载到本地 与后端 api 交互第一步，设置代理找到 config/config.ts 文件的以下内容123456789/*proxy: &#123; &apos;/server/api/&apos;: &#123; target: &apos;https://preview.pro.ant.design/&apos;, changeOrigin: true, pathRewrite: &#123; &apos;^/server&apos;: &apos;&apos; &#125;, &#125;,&#125;,*/ 改为1234567proxy: &#123; '/api/': &#123; target: 'http://localhost:89', changeOrigin: true, // pathRewrite: &#123; '^/server': '' &#125;, &#125;,&#125;, 其中 http://localhost:89 为后端 api 地址，/api/ 为请求 api 的前缀，可根据自己的项目情况灵活修改。 第二步，前端修改参考官方文档：和服务端进行交互 前端请求流程在 Ant Design Pro 中，一个完整的前端 UI 交互到服务端处理流程是这样的： UI 组件交互操作； 调用 model 的 effect； 调用统一管理的 service 请求函数； 使用封装的 request.ts 发送请求； 获取服务端返回； 然后调用 reducer 改变 state； 更新 model。 以登录为例 修改文件 package.json 的启动参数： &quot;start&quot;: &quot;set port=96 &amp;&amp; umi dev&quot;,，执行 npm start 之后，登录页面的地址为：http://localhost:96/user/login，对应的页面文件：src\\pages\\user\\login\\index.tsx 登录用到的 model 文件:src\\models\\login.ts 登录触发的函数是：handleSubmit，提交登录请求 dispatch 代码为： 1234567dispatch(&#123; type: 'login/login', payload: &#123; ...values, type, &#125;,&#125;); 其中第一个 login 为 module src\\models\\login.ts 的 namespace。 第二个 login 为 src\\models\\login.ts 定义的 effect 下的具体的方法。 123*login(&#123; payload &#125;, &#123; call, put &#125;) &#123; const response = yield call(fakeAccountLogin, payload); // ... fakeAccountLogin 为调用的 api，也就是统一管理的 service 请求函数。在文件：src\\services\\login.ts中定义，代码如下： 123456export async function fakeAccountLogin(params: LoginParamsType) &#123; return request('/api/auth/login', &#123; method: 'POST', data: params, &#125;);&#125; 其中 /api/auth/login 为后端 api 真正的地址，访问的时候会自动拼接成：http://localhost:89/api/auth/login 登录的时候，在后端打一个断点，就可以看到请求参数了，不过，参数格式以及提交方式还需要根据自己的后端项目做相应修改，下面会以 spring boot 项目为例进行讲解。 第三步，前后端参数进行匹配后端是 spring boot 项目，提供 restful api，Controller 定义如下：1234567/** * 登录授权 */@RequestMapping(\"/api/auth/login\")public ApiResponse login(@RequestBody AuthorizationUserRequest authorizationUserRequest) &#123; return SysUserService.userLogin(authorizationUserRequest);&#125; 其中，AuthorizationUserRequest 为接收前台传过去的参数的 POJO，定义如下：12345678@Datapublic class AuthorizationUserRequest &#123; @NotBlank private String username; @NotBlank private String password; private String type; // 前端需要&#125; POJO 的成员名与前台提交的参数名和类型一一对应即可。 前端对请求参数做统一加工（封装）参考：https://github.com/umijs/umi-request/blob/master/README_zh-CN.md 对请求参数做处理，适配后端 api 对参数的需要 重要：src\\services\\login.ts 文件中，将 import request from &#39;umi-request&#39;; 改为 import request from &#39;@/utils/request&#39;;。 以下代码，添加到 src\\utils\\request.ts文件中，export default request; 之前。12345678910111213// request拦截器, 改变 options.request.interceptors.request.use((url, options) =&gt; &#123; options.data = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.data), &#125;); return ( &#123; options: &#123; ...options &#125;, &#125; );&#125;); 如此修改之后，后端报错：1234567error: &quot;Unsupported Media Type&quot;message: &quot;Content type &apos;text/plain;charset=UTF-8&apos; not supported&quot;path: &quot;/api/auth/login&quot;status: 415timestamp: &quot;2019-08-28T17:11:55.511+0800&quot;trace: &quot;org.springframework.web.HttpMediaTypeNotSupportedException: Content type &apos;text/plain;charset=UTF-8&apos; not supported... 解决，增加对 headers 参数的修改。增加：12Accept: &apos;application/json&apos;,&apos;Content-Type&apos;: &apos;application/json; charset=utf-8&apos;, 增加请求头参数123456789101112131415161718request.interceptors.request.use((url, options) =&gt; &#123; options.data = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.data), &#125;); options.headers = &#123; Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8', ...options.headers, &#125;; return ( &#123; options: &#123; ...options &#125;, &#125; );&#125;); 对 token 进行判断，把 token 添加到请求头 headers如果 token 没有值，同时不是登录页面，则直接跳转到登录页面。1234567891011121314151617181920212223242526272829303132// request拦截器, 改变 options.// eslint-disable-next-line @typescript-eslint/ban-ts-ignore// @ts-ignorerequest.interceptors.request.use((url, options) =&gt; &#123; let tokenSessionStorage: string | null = sessionStorage.getItem('token'); if ((tokenSessionStorage === null || tokenSessionStorage.length === 0) &amp;&amp; url !== '/api/auth/login') &#123; window.location.href = '/user/login'; return; &#125; if (tokenSessionStorage === null) &#123; tokenSessionStorage = ''; &#125; options.data = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.data), &#125;); options.headers = &#123; Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8', Authorization: tokenSessionStorage, ...options.headers, &#125;; // eslint-disable-next-line consistent-return return &#123; options: &#123; ...options &#125;, &#125;;&#125;); 前端对调用 api 返回的结果做统一处理经过测试，官方文档中介绍的 response 拦截器，其中的 response 并不是后端返回来的数据，代码如下：12345// response拦截器, 处理responserequest.interceptors.response.use((response, options) =&gt; &#123; response.headers.append('interceptors', 'yes yo'); return response;&#125;); 不过，官方文档中介绍的中间件 request.use，得到的 res（response） 是后端返回的数据，代码如下（根据自己的业务有修改）：123456789101112// 中间件，对请求前、响应后做处理request.use(async (ctx, next) =&gt; &#123; await next(); const &#123; res &#125; = ctx; let &#123; token &#125; = res; if (token !== undefined &amp;&amp; token !== null &amp;&amp; token.length &gt; 0) &#123; token = `Bearer $&#123;token&#125;`; sessionStorage.setItem('token', token); &#125;&#125;); 把 request 拦截器的逻辑写到 request.use 中间件，让中间件把请求前和响应后的处理逻辑都做了 请求前： 修改请求参数 options 以适配后端 api。 添加 headers 参数以适配后端 api。 非登录页面，需要有 token，如果没有直接跳转到登录页面。 非登录页面，需要把 token 添加到请求头，后端 api 需要鉴权。 响应后，把后端返回的最新 token 写到 sessionStorage。 后端 api 在每次请求后，如果不是 excel 文件下载这类请求，都会把更新后的 token 返回调用端。 当然，也可以全局性的对返回结果进行判断，如 api 返回错误，要如何提示以及如何处理等。1234567891011121314151617181920212223242526272829303132333435363738// 中间件，对请求前、响应后做处理request.use(async (ctx, next) =&gt; &#123; const &#123; req &#125; = ctx; const &#123; url, options &#125; = req; let tokenSessionStorage: string | null = sessionStorage.getItem('token'); // eslint-disable-next-line max-len if ((tokenSessionStorage === null || tokenSessionStorage.length === 0) &amp;&amp; url !== '/api/auth/login') &#123; window.location.href = '/user/login'; return; &#125; if (tokenSessionStorage === null) &#123; tokenSessionStorage = ''; &#125; options.data = JSON.stringify(&#123; method: url, jsonStringParameter: JSON.stringify(options.data), &#125;); options.headers = &#123; Accept: 'application/json', 'Content-Type': 'application/json; charset=utf-8', Authorization: tokenSessionStorage, ...options.headers, &#125;; await next(); const &#123; res &#125; = ctx; let &#123; token &#125; = res; if (token !== undefined &amp;&amp; token !== null &amp;&amp; token.length &gt; 0) &#123; token = `Bearer $&#123;token&#125;`; sessionStorage.setItem('token', token); &#125;&#125;); 登录验证针对后端返回的数据，做相应调整即可。后端返回数据类似：12345678910111213&#123; \"code\": 1, \"message\": \"\", \"errMessage\": \"\", \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTU2NzA3NDQ0NCwiaWF0IjoxNTY3MDQ1NjQ0fQ.Q9LnO-ibBYuBibuo_C7hIIklsK4k1gC-NE6G5yS6AjVJHCZikiSjmCPmcLaBZVUP_TtL5Q2zuw4w69-0IyR7-A\", \"responseBody\": &#123; \"type\": \"account\", \"status\": \"ok\", \"currentAuthority\": [ \"admin\" ] &#125;&#125; 先定义后端返回的代码：12345export const responseCode = &#123; success: 1, notLogin: -90, mustUpdateDefaultPassword: -67,&#125;; src\\models\\login.ts 文件修改两处： 修改登录状态的代码 1234yield put(&#123; type: &apos;changeLoginStatus&apos;, payload: response, &#125;); 改为 1234yield put(&#123; type: &apos;changeLoginStatus&apos;, payload: response.responseBody,&#125;); if (response.status === &#39;ok&#39;) { 改为 if (response.code === responseCode.success) { 至此，一个完整的登录过程就介绍完了。后续就可以专注于业务逻辑开发了。","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"Ant Design Pro","slug":"react/Ant-Design-Pro","permalink":"https://www.lovesofttech.com/categories/react/Ant-Design-Pro/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"Ant Design Pro","slug":"Ant-Design-Pro","permalink":"https://www.lovesofttech.com/tags/Ant-Design-Pro/"}]},{"title":"github 访问加速","slug":"general/githubHosts","date":"2019-08-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.947Z","comments":true,"path":"general/githubHosts.html","link":"","permalink":"https://www.lovesofttech.com/general/githubHosts.html","excerpt":"国内访问 Github 非常慢，clone github 上的项目，有时在10k以下，如果项目代码量比较多，很容易失败，而且重试多次都不行。 本文介绍通过修改 hosts 文件的方式，绕过国内 DNS 解析，直接访问GitHub的CDN节点，从而达到加速的目的。","text":"国内访问 Github 非常慢，clone github 上的项目，有时在10k以下，如果项目代码量比较多，很容易失败，而且重试多次都不行。 本文介绍通过修改 hosts 文件的方式，绕过国内 DNS 解析，直接访问GitHub的CDN节点，从而达到加速的目的。 打开 IPAddress.com，查询以下三个域名的DNS解析地址 123github.comassets-cdn.github.comgithub.global.ssl.fastly.net 也可以直接访问以下三个链接查询： https://github.com.ipaddress.com/ http://assets-cdn.github.com.ipaddress.com/ http://github.global.ssl.fastly.net.ipaddress.com/ 记录下查询到的IP地址。 修改系统hosts文件，路径：C:\\Windows\\System32\\drivers\\etc\\hosts，添加三行记录并保存。 注意：需要管理员权限，请以管理员身份打开 cmd.exe 操作。 123192.30.253.112 github.com185.199.109.153 assets-cdn.github.com151.101.185.194 github.global.ssl.fastly.net 由于 hosts 文件为系统文件，默认只读且不让修改，修改它需要技巧，请参考：在 win10 下修改 hosts 文件","categories":[{"name":"github","slug":"github","permalink":"https://www.lovesofttech.com/categories/github/"},{"name":"github访问速度","slug":"github/github访问速度","permalink":"https://www.lovesofttech.com/categories/github/github访问速度/"}],"tags":[{"name":"github","slug":"github","permalink":"https://www.lovesofttech.com/tags/github/"},{"name":"github访问速度","slug":"github访问速度","permalink":"https://www.lovesofttech.com/tags/github访问速度/"}]},{"title":"前端开发--好记性不如“烂文档”","slug":"frontend/experience","date":"2019-08-21T16:00:00.000Z","updated":"2020-09-01T02:53:12.934Z","comments":true,"path":"frontend/experience.html","link":"","permalink":"https://www.lovesofttech.com/frontend/experience.html","excerpt":"前端相关知识点，都是在开发的过程中遇到了才记录一下。","text":"前端相关知识点，都是在开发的过程中遇到了才记录一下。 ant design 页面，加载时会自动调用 button 的 onclick 事件以下写法，相当于直接调用了 js 方法：this.jsTest()，所以页面加载时会就调用一次。12345&lt;Button onClick=&#123;this.jsTest()&#125; style=&#123;&#123; marginTop: 16, marginRight: 16 &#125;&#125; htmlType=\"button\"&gt; 这是在一个 form 表单里的 button，当输入数据时，也会触发该方法的调用，这可能与 antd 表单某种机制有关，比如对表单数据的有效性进行校验（未验证）。 改为下面的方式，正常了，也就是不要写括号：1234567&lt;Buttonstyle=&#123;&#123; marginLeft: 16 &#125;&#125;htmlType=&quot;button&quot;onClick=&#123;this.jsTest&#125;&gt;js test&lt;/Button&gt; 如果要传参数，需要这样：123456&lt;Buttonstyle=&#123;&#123; marginLeft: 16 &#125;&#125;htmlType=&quot;button&quot;//onClick=&#123;this.jsTest&#125;onClick=&#123;() =&gt; &#123;this.jsTest(false)&#125;&#125;&gt; 参考：https://blog.csdn.net/qq_25252769/article/details/81412224 页面点击事件的正确写法1234&lt;Divider type=\"vertical\" /&gt;&lt;a title=\"提交学生信息，提交之后基本信息将不可再修改\" onClick=&#123;() =&gt; this.handleModify(item)&#125;&gt;提交&lt;/a&gt; ant design pro 登录页 现象：配置登录按钮的 htmlType=&quot;submit&quot; 时，ant design 数据有效性校验未通过也刷新页面了。 解决：将 form 的 onsubmit 去掉，把提交方法放到 button 的 onclick 即可。 ant design 表单数据校验12345678910111213141516171819202122232425isSubmitCheckPass = e =&gt; &#123; const &#123; form &#125; = this.props; //e.preventDefault(); form.validateFieldsAndScroll((err, values) =&gt; &#123; if (values.stuName.trim().length === 0) &#123; //message.warning(&apos;请输入学生姓名&apos;); return false; &#125; if (values.idNumber.trim().length === 0) &#123; return false; &#125; if (values.phone.trim().length === 0) &#123; return false; &#125; if (values.majorCombination.length === 0) &#123; return false; &#125; return true; &#125;); &#125;; 以上方法，在调用时，会执行两次，第一次会校验数据，第二次，直接跳过，所以，实际调用的结果其实是直接跳过的最后一次，达不到校验的目的。 其实 antd 已经帮我们实现了数据校验了，只需要这样即可达到提交之前先校验数据，校验通过之后再提示本次提交的确认信息：123456789101112131415handleEnrollConfirm = e =&gt; &#123; const &#123; form &#125; = this.props; form.validateFieldsAndScroll((err, values) =&gt; &#123; if (!err) &#123; Modal.confirm(&#123; title: &apos;提交报到&apos;, content: &apos;提交之后，学生信息将不能再修改。确认要提交吗？&apos;, okText: &apos;确认&apos;, cancelText: &apos;取消&apos;, onOk: () =&gt; this.handleEnroll(e), &#125;); &#125; &#125;); &#125;; 网页表单重置1234567&lt;Button type=\"primary\" style=&#123;&#123; marginTop: 16 &#125;&#125; htmlType=\"reset\"&gt; 重置所有信息&lt;/Button&gt; 点击之后没生效，添加处理事件，直接调用 this.props.form.resetFields(), 修改 state123456handleRecord = e =&gt; &#123; this.setState(&#123; registerType: bizTypeEnum.record, ...this.state, &#125;);&#125;; 这样写，没有意义，不会修改 state 的任何值，应该是：123456handleRecord = e =&gt; &#123; this.setState(&#123; ...this.state, registerType: bizTypeEnum.record, &#125;);&#125;; js 正则表达式 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980/* 合法uri */export function validateURL(textval) &#123; const urlregex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&amp;'\\*\\+,;=.]+$/ return urlregex.test(textval)&#125;/* 小写字母 */export function validateLowerCase(str) &#123; const reg = /^[a-z]+$/ return reg.test(str)&#125;/* 大写字母 */export function validateUpperCase(str) &#123; const reg = /^[A-Z]+$/ return reg.test(str)&#125;/* 大小写字母 */export function validateAlphabets(str) &#123; const reg = /^[A-Za-z]+$/ return reg.test(str)&#125;/* 市场售价 */export function validatePrice(str) &#123; const reg = /(^[1-9]\\d*(\\.\\d&#123;1,2&#125;)?$)|(^0(\\.\\d&#123;1,2&#125;)?$)/ return reg.test(str)&#125;/* 库存预警值 匹配非负整数（正整数 + 0） */export function validatestockWarn(str) &#123; const reg = /^(0|[1-9][0-9]*)$/ return reg.test(str)&#125;/* 比价网站 只验证京东和苏宁网站 */export function validateCompareWebsite(str) &#123; const reg = /^((https\\:\\/\\/[0-9a-zA-Z\\_]+\\.|http\\:\\/\\/[0-9a-zA-Z\\_]+\\.|https\\:\\/\\/|http\\:\\/\\/)|([0-9a-zA-Z\\_]+\\.)&#123;0,1&#125;)(jd|suning)\\.(com$|com\\/[\\S]*)/i return reg.test(str)&#125;/* 固定电话 */export function validateTelephone(str) &#123; const reg = /^(\\(\\d&#123;3,4&#125;\\)|\\d&#123;3,4&#125;-|\\s)?\\d&#123;7,14&#125;$/ return reg.test(str)&#125;/* 手机号码 */export function validatePhoneNumber(str) &#123; const reg = /^[1][3,4,5,6,7,8,9][0-9]&#123;9&#125;$/ return reg.test(str)&#125;/* 手机号码和固定电话 */export function validatePhTelNumber(str) &#123; const reg = /^((0\\d&#123;2,3&#125;-\\d&#123;7,8&#125;)|(1[3456789]\\d&#123;9&#125;))$/ return reg.test(str)&#125;/* 电子邮箱 */export function validateEmail(str) &#123; const reg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/ return reg.test(str)&#125;/* 邮编 */export function validateZipCode(str) &#123; const reg = /^[1-9][0-9]&#123;5&#125;$/ return reg.test(str)&#125;/* 身份证 */export function validateIDCard(str) &#123; const reg = /(^\\d&#123;15&#125;$)|(^\\d&#123;18&#125;$)|(^\\d&#123;17&#125;(\\d|X|x)$)/ return reg.test(str)&#125;/* 银行卡号 15位或者16位或者19位 */export function validateBank(str) &#123; const reg = /^([1-9]&#123;1&#125;)(\\d&#123;14&#125;|\\d&#123;18&#125;|\\d&#123;15&#125;)$/ return reg.test(str)&#125;/* 纳税人识别码 */export function validateTaxpayer(str) &#123; const reg = /^([1-9]&#123;1&#125;)(\\d&#123;14&#125;|\\d&#123;18&#125;|\\d&#123;15&#125;)$/ return reg.test(str)&#125;/* 匹配全空格 */export function validateAllBlank(str) &#123; const reg = /^\\s+$/gi return reg.test(str)&#125; js 同名函数写 Java 久了，会不小心把语法应用到 js，比如在 js 里写了多个同名函数，结果，没有按照参数个数调用“正确”的版本。js 里同名函数，后面的会覆盖掉前面的，所以，只会调用最后面那个，这一点容易忘掉。 彻底解决 WebStorm 中加载 node_modules 卡死问题 彻底解决webstorm中加载node_modules卡死问题 要查看 ajax 错误在F12下，选 Console-&gt;All jquery 获取表单全部数据只设置 id 不行，只设置 name 可以，说明仅依赖 name 属性。多个 form 下可以有同名 name 的 input 存在。12var form = $(&quot;#formIndex&quot; + cDetailID);var formData = form.serializeArray(); js 有改动，访问过的电脑还是缓存的旧版本，在后面添加一个版本号1&lt;script src=&quot;../static/js/apg.common.js&quot; th:src=&quot;@&#123;/js/apg.common.js&#125; + &apos;?v=201802100714&apos;&quot;&gt;&lt;/script&gt; HttpClient get和post请求的示例代码以及防乱码处理reference12345HttpGet httpget = new HttpGet(uri);//设置请求的报文头部的编码httpget.setHeader(new BasicHeader(&quot;Content-Type&quot;, &quot;application/x-www-form-urlencoded; charset=utf-8&quot;));//设置期望服务端返回的编码httpget.setHeader(new BasicHeader(&quot;Accept&quot;, &quot;text/plain;charset=utf-8&quot;)); HTTP请求中的form data和request payload的区别参考：https://www.cnblogs.com/xuzhudong/p/8487119.html typeScript 页面，文件名后缀新建 Page 文件时，WebStorm 的菜单如下： 这时默认创建的是 ts 文件，应该选下面那个。 我没注意到，输入文件名后直接回车，添加的是 ts 文件，结果 WebStorm 报了很多错，而且代码也不能正常格式化，由于前端项目只是个人爱好断断续续的玩过，所以，一时间竟丈二和尚摸不着头脑，云里雾里的各种尝试，最后与正常的文件仔细比较才发现最大的不同是文件名后缀，慨叹：如果能有一个经验丰富的人在旁边指导一二，是一件多么幸福的事情呀~~ 后缀名为 ts 时报错情况： 后缀改为 tsx，并格式化代码后： ESLint: Prefer default export. (import/prefer-default-export)在一个文件里只定义了一个变量，这样写：export default cont TAB_LIST = [&#39;a&#39;, &#39;b&#39;]，会有这个提示，改成这样：12cont TAB_LIST = [&apos;a&apos;, &apos;b&apos;]export default TAB_LIST 才是正解","categories":[{"name":"frontend","slug":"frontend","permalink":"https://www.lovesofttech.com/categories/frontend/"}],"tags":[{"name":"frontend","slug":"frontend","permalink":"https://www.lovesofttech.com/tags/frontend/"}]},{"title":"CentOS7 安装中文字体 Arial","slug":"linux/centOS7InstallFont","date":"2019-08-15T16:00:00.000Z","updated":"2020-09-01T02:53:13.022Z","comments":true,"path":"linux/centOS7InstallFont.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7InstallFont.html","excerpt":"现象：在用 POI 志出 excel 的代码里，用到了 font，设置的字体是 Arial，在 windows 下测试没问题，但发布到 CentOS7，导出时报错。 解决：在 CentOS 服务器上安装字体即可。","text":"现象：在用 POI 志出 excel 的代码里，用到了 font，设置的字体是 Arial，在 windows 下测试没问题，但发布到 CentOS7，导出时报错。 解决：在 CentOS 服务器上安装字体即可。 报错信息1234567891011121314java.lang.InternalError: java.lang.reflect.InvocationTargetException at sun.font.FontManagerFactory$1.run(FontManagerFactory.java:86) ~[?:?] at java.security.AccessController.doPrivileged(Native Method) ~[?:?] at sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74) ~[?:?] at java.awt.Font.getFont2D(Font.java:497) ~[?:?] at java.awt.Font.canDisplayUpTo(Font.java:2246) ~[?:?] at java.awt.font.TextLayout.singleFont(TextLayout.java:469) ~[?:?] at java.awt.font.TextLayout.&lt;init&gt;(TextLayout.java:530) ~[?:?] at org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(SheetUtil.java:273) ~[poi-4.1.0.jar:4.1.0] at org.apache.poi.ss.util.SheetUtil.getColumnWidth(SheetUtil.java:248) ~[poi-4.1.0.jar:4.1.0] at org.apache.poi.ss.util.SheetUtil.getColumnWidth(SheetUtil.java:233) ~[poi-4.1.0.jar:4.1.0] at org.apache.poi.hssf.usermodel.HSSFSheet.autoSizeColumn(HSSFSheet.java:2215) ~[poi-4.1.0.jar:4.1.0] at org.apache.poi.hssf.usermodel.HSSFSheet.autoSizeColumn(HSSFSheet.java:2197) ~[poi-4.1.0.jar:4.1.0] at mis.api.common.excel.ExcelExportUtils.fillSheet(ExcelExportUtils.java:200) ~[mis-api-common-excel-1.0.0.jar:?] 报错的代码是：sheet.autoSizeColumn(i); 设置字体的方法是：12345678910111213141516171819202122232425private static HSSFCellStyle getStyleHeader(HSSFWorkbook wb) &#123; HSSFCellStyle style = wb.createCellStyle(); HSSFFont font = wb.createFont(); font.setFontName(HSSFFont.FONT_ARIAL); //将字体颜色设为白色 font.setColor(IndexedColors.WHITE.index); font.setFontHeight((short)220); font.setBold(true); style.setFont(font); style.setAlignment(HorizontalAlignment.CENTER); style.setVerticalAlignment(VerticalAlignment.CENTER); //style.setWrapText(true);//设置自动换行 // 背景色 style.setFillPattern(FillPatternType.SOLID_FOREGROUND); style.setFillForegroundColor(IndexedColors.GREY_80_PERCENT.index); //style.setFillBackgroundColor(IndexedColors.YELLOW.index); // 设置边框 setStyleBorder(style); return style;&#125; 解决 需要先安装 fontconfig 1yum -y install fontconfig 接着操作： 1234mkdir -p /usr/share/fonts/arialcd /usr/share/fonts/arial # 上传字体文件，字体文件在 C:\\Windows\\Fonts\\Arial 目录下，将所有文件上传至 /usr/share/fonts/arialchmod -R 755 /usr/share/fonts/arial # 能省吗？配置新服务器时留意。 为刚加入的字体设置缓存使之有效 1234cd /usr/share/font/arialmkfontscalemkfontdirfc-cache -fv 重启 tomcat，再导出，就 ok 了。 不重启，不知道是否也可以。配置新服务器时留意。 后记曾尝试在一台不能上外网的服务器上离线安装相关依赖，但最终失败。 把相关依赖都下载了之后，最终的安装顺序如下：1234rpm -ivh fontpackages-filesystem-1.44-8.el7.noarch.rpmrpm -ivh dejavu-fonts-common-2.33-6.el7.noarch.rpmrpm -ivh dejavu-sans-fonts-2.33-6.el7.noarch.rpmrpm -ivh fontconfig-2.13.0-4.3.el7.x86_64.rpm 在执行 mkfontscale 命令时，提示无此命令123[root@localhost ~]# mkfontscalemkfontscale: error while loading shared libraries: libfontenc.so.1: cannot open shared object file: No such file or directory[root@localhost ~]# 用以下命令查找，发现找不到。1find / -name mkfontscale 于是在 yum 安装成功的电脑上把文件 copy 到相应位置，执行时，又报依赖问题，所以，离线安装失败。12[root@localhost ~]# mkfontscalemkfontscale: error while loading shared libraries: libfontenc.so.1: cannot open shared object file: No such file or directory 离线安装包下载rpm 包下载网站 -&gt; rpmfind","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"font","slug":"CentOS/font","permalink":"https://www.lovesofttech.com/categories/CentOS/font/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"font","slug":"font","permalink":"https://www.lovesofttech.com/tags/font/"}]},{"title":"批处理文件遍历所有子目录批量移除文件名和目录名中特殊字符","slug":"windows/batchRenameFile","date":"2019-07-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.102Z","comments":true,"path":"windows/batchRenameFile.html","link":"","permalink":"https://www.lovesofttech.com/windows/batchRenameFile.html","excerpt":"从网上下载到的某些资源（感谢那些无私奉献学习资源的人），文件名或目录名有一些特殊字符，如何批量移除呢？本文介绍利用批处理脚本，遍历指定目录以及指定目录下的所有子目录批量移除文件名和目录名中特殊字符的方法。方便快捷绿色省心~~","text":"从网上下载到的某些资源（感谢那些无私奉献学习资源的人），文件名或目录名有一些特殊字符，如何批量移除呢？本文介绍利用批处理脚本，遍历指定目录以及指定目录下的所有子目录批量移除文件名和目录名中特殊字符的方法。方便快捷绿色省心~~ 遍历当前目录以及所有子目录批量处理批处理脚本内容创建一个后缀为 .bat 或 .cmd 的批处理文件，内容如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253@echo offsetlocal enabledelayedexpansionchcp 65001:: 如果要指定绝对路径，用以下两行，注释 set path=. 所在行。也就是用以下两行代替 set path=. 这一行。:: set path=&quot;C:\\temp\\test&quot;:: cd &quot;/d %path%&quot;set path=.:: echo.&amp;set /p path=please input path::: 删除需要删除的广告字符，记得替换成你自己需要删除的。:: 并且需要把广告字符中的空格去掉，因为在删除广告信息之前会把文件名中的空格清除掉。set adv=【我是特殊字符】:: echo.&amp;set /p adv=please input to be delete characters:call:renameFilesfor /f &quot;delims=&quot; %%i in (&apos;dir /ad/b/s &quot;%path%&quot;&apos;) do ( cd %%i call:renameFiles)echo.echo 处理完毕echo.pause:: 子过程一般放在最后，主程序最后要加上exit或跳转语句，避免错误的进入子过程。:: 如果没有 exit，子程序还会被执行（而不是调用）一次，这样在执行 echo %1 时，因为没有参数，会提示：ECHO is off.exit:renameFiles echo 正在处理的目录：【%cd%】 ... :: 先删除空格 for /f &quot;delims=&quot; %%i in (&apos;dir /b *.*&apos;) do ( set &quot;foo=%%~nxi&quot; set foo=!foo: =! ren &quot;%%~fi&quot; &quot;!foo!&quot; ) for /f &quot;delims=&quot; %%i in (&apos;dir /b *%adv%*&apos;) do ( :: echo %%i set var=%%i set var=!var:%adv%=! echo rename &quot;%%i&quot; to &quot;!var!&quot; ren &quot;%%i&quot; &quot;!var!&quot; ) echo.goto:eof 批处理脚本说明 该批处理脚本会把脚本中变量 path 定义的路径下、以及该路径下的所有子目录（含子目录下的子目录）下的文件名和目录名中的 adv 定义的字符删除，还一个干净的文件名和目录名。 如果子目录下的子目录名也包含特殊字符，第一次处理时会提示：The system cannot find the path specified.，这是因为目录名被改了，之前读入内存的目录名不存在了，这没有关系，重复执行该脚本，直到不再出现这个提示为止即表示所有目录名和文件名都已经改完了。 path=. 表示当前目录，需要把此批处理文件复制到需要处理的顶层文件夹下再双击执行。 如果设置 path 为绝对路径，则脚本文件放哪个位置都行。 也可以每次输入需要处理的绝对路径和需要移除的特殊字符，见下面 path 和 adv 变量的下一行注释代码。 仅处理当前目录下的文件名和目录名创建一个后缀为 .bat 或 .cmd 的批处理文件，内容如下：12345678910111213141516171819202122232425@echo off:: 仅处理当前目录下的所有文件，所以，需要把该文件 copy 至需要改名的文件夹下，双击执行setlocal enabledelayedexpansionchcp 65001:: 先删除空格for /f &quot;delims=&quot; %%i in (&apos;dir /b *.*&apos;) do ( set &quot;foo=%%~nxi&quot; set foo=!foo: =! ren &quot;%%~fi&quot; &quot;!foo!&quot;):: 删除需要删除的广告字符，记得替换成你自己需要删除的。:: 并且需要把广告字符中的空格去掉，因为在删除广告信息之前会把文件名中的空格清除掉。set adv=【我是特殊字符】for /f &quot;delims=&quot; %%i in (&apos;dir /b *%adv%*&apos;) do ( ::echo %%i set var=%%i set var=!var:%adv%=! echo rename &quot;%%i&quot; to &quot;!var!&quot; ren &quot;%%i&quot; &quot;!var!&quot;)pause 处理过程，以下介绍均为只处理当前目录特殊字符不带空格如：test【我是特殊字符】.txt这类文件用以下脚本即可正常处理，批处理脚本如下：1234567891011121314@echo offsetlocal enabledelayedexpansionchcp 65001set adv=【我是特殊字符】for /f &quot;delims=&quot; %%i in (&apos;dir /b *%adv%*&apos;) do ( ::echo %%i set var=%%i set var=!var:%adv%=! echo rename &quot;%%i&quot; to &quot;!var!&quot; ren &quot;%%i&quot; &quot;!var!&quot;)pause 特殊字符包含空格但是，如果需要删除的特殊字符部分有空格，如：1. test - [加微信 xxxx 有妹子].txt，下面的批处理脚本不能达到去除特殊字符的目的。1234567891011121314@echo offsetlocal enabledelayedexpansionchcp 65001set adv=&quot;- [加微信 xxxx 有妹子]&quot;for /f &quot;delims=&quot; %%i in (&apos;dir /b *%adv%*&apos;) do ( ::echo %%i set var=%%i set var=!var:%adv%=! echo rename &quot;%%i&quot; to &quot;!var!&quot; ren &quot;%%i&quot; &quot;!var!&quot;)pause 执行的时候会提示：12rename &quot;1. test - [加微信 xxxx 有妹子].txt&quot; to &quot;1. test - [加微信 xxxx 有妹子].txt&quot;Press any key to continue . . . 解决在删除特殊字符前，先将空格删除，然后，处理方式就与删除不带空格的特殊字符相同了。123456789101112131415161718192021222324@echo offchcp 65001setlocal enabledelayedexpansion:: 先删除空格for /f &quot;delims=&quot; %%i in (&apos;dir /b *.*&apos;) do ( set &quot;foo=%%~nxi&quot; set foo=!foo: =! ren &quot;%%~fi&quot; &quot;!foo!&quot;):: 删除需要删除的广告字符，记得替换成你自己需要删除的。:: 并且需要把广告字符中的空格去掉，因为在删除广告信息之前会把文件名中的空格清除掉。set adv=-[加微信xxxx有妹子]for /f &quot;delims=&quot; %%i in (&apos;dir /b *%adv%*&apos;) do ( ::echo %%i set var=%%i set var=!var:%adv%=! echo rename &quot;%%i&quot; to &quot;!var!&quot; ren &quot;%%i&quot; &quot;!var!&quot;)pause 执行结果：12rename &quot;1.test-[加微信xxxx有妹子].txt&quot; to &quot;1.test.txt&quot;Press any key to continue . . . 批量删除文件名中的空格 会处理当前目录以及所有子目录和子目录下的所有文件，如子目录也带空格，则需要多执行几次，因为子目录会先被修改。 正确的姿势是，在循环里判断是否为文件夹，如果是，则先处理文件夹下的文件，最后处理文件夹名，这一点请读者自行研究。123456789@echo off&amp;setlocal enabledelayedexpansionfor /f &quot;delims=&quot; %%i in (&apos;dir /s/b *.*&apos;) do ( set &quot;foo=%%~nxi&quot; set foo=!foo: =! ren &quot;%%~fi&quot; &quot;!foo!&quot;)pause 百度 PC 端下载文件完成后，文件名后缀没有被及时修改（其实是下载完成了的），用秕处理脚本删除这些后缀但并不总是这样，后来的版本没有这个问题，估计官方修复这个 bug 了。批量修改脚本如下：1234@ECHO OFFFOR /F &quot;delims=&quot; %%I IN (&apos;DIR /A-D /B *.baiduyun.p.downloading.*&apos;) DO REN &quot;%%~I&quot; &quot;%%~nI&quot;FOR /F &quot;delims=&quot; %%I IN (&apos;DIR /A-D /B *.baiduyun.p&apos;) DO REN &quot;%%~I&quot; &quot;%%~nI&quot;FOR /F &quot;delims=&quot; %%I IN (&apos;DIR /A-D /B *.baiduyun&apos;) DO REN &quot;%%~I&quot; &quot;%%~nI&quot; bat批处理的注释语句 :: 注释内容（第一个冒号后也可以跟任何一个非字母数字的字符） rem 注释内容（不能出现重定向符号和管道符号） echo 注释内容（不能出现重定向符号和管道符号） if not exist nul 注释内容（不能出现重定向符号和管道符号） :注释内容（注释文本不能与已有标签重名） %注释内容%（可以用作行间注释，不能出现重定向符号和管道符号） goto 标签 注释内容（可以用作说明goto的条件和执行内容） :标签 注释内容（可以用作标签下方段的执行内容） 后记，对变量赋值含中文时找不到文件现象批处理文件变量赋值语句set adv=【我是特殊字符】，给变量赋值含有中文时，如果 cmd/PowerShell 的编码为非 UTF-8，则不会正常执行。 解决方法一通过动态赋值的方式，可以正常执行，具体代码如下：1echo.&amp;set /p adv=please input to be delete characters: 解决办法二修改 cmd/PowerShell 的默认编码为 UTF-8。 直接修改注册表一劳永逸，具体可参考：windows 控制台 cmd/PowerShell 中文显示乱码，解决方法 在脚本最前面指定，更具通用性，本文介绍的脚本已经添加另一种方式，简单粗暴但是非常实用，就是在脚本前面添加 chcp 65001，每次执行批量删除文件名中的特殊字符之前，先设置编码格式。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"experience","slug":"windows/experience","permalink":"https://www.lovesofttech.com/categories/windows/experience/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"java 开发中的一些小经验","slug":"java/experience","date":"2019-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.979Z","comments":true,"path":"java/experience.html","link":"","permalink":"https://www.lovesofttech.com/java/experience.html","excerpt":"java 开发中的小经验，零散的知识点。","text":"java 开发中的小经验，零散的知识点。 IDEA 提示: Unchecked call to ‘XXXX’ as a member of raw type ‘XXXX’ more… (Ctrl+F1)1Unchecked call to &apos;ApiResponse(T)&apos; as a member of raw type &apos;mis.api.common.model.response.ApiResponse&apos; 警告信息 警告的全部信息 加上类型好可，尖括号里添加上泛型对应的类名 不过，尖括号里的类名可以省略 复制警告信息 复制警告信息 SpringBoot 查询时间数据，数据库和返回数据比实际存储的相差8小时我遇到的情况：通过 spring security 查询用户时间数据（MySQL 数据库，字段类型为：datetime），返回的数据比实际存储在数据里的多8小时。1UserDetailsService.loadUserByUsername(username); serverTimezone=GMT，改为：serverTimezone=GMT%2b8，其中 %2b 为 + 号 如果还没加参数 serverTimezone，则添加上。 spring boot 项目，@RestController 返回系统时间，比实际时间多8小时如：1234567&#123; &quot;timestamp&quot;: &quot;2019-06-23T14:48:55.093+0000&quot;, # 这里比实际的系统时间少了8小时 &quot;status&quot;: 500, &quot;error&quot;: &quot;Internal Server Error&quot;, &quot;message&quot;: &quot;账号不存在&quot;, // some other code&#125; 原因：spring 转 json 的默认实现 jackson 中会根据时区去转换时间，而 jackson 的默认时区跟国内是相差8小时的。 相差8小时实测： 比数据库多8小时 比通过 spring boot 取到的系统时间时间少8小时 解决设置时区1234567#application.properties文件配置spring.jackson.time-zone=GMT+8 #application.yml文件配置spring: jackson: time-zone: GMT+8 maven 跳过单元测试在使用 mvn package 进行编译、打包时，Maven会执行 src/test/java 中的 JUnit 测试用例，有时为了跳过测试，会使用参数 -DskipTests 和 -Dmaven.test.skip=true，这两个参数的主要区别是： -DskipTests，不执行测试用例，但编译测试用例类生成相应的class文件至target/test-classes下。 -Dmaven.test.skip=true，不执行测试用例，也不编译测试用例类。 install1mvn install -Dmaven.test.skip=true package同理，打包时也可以跳过1mvn clean package -Dmaven.test.skip=true -f directory\\pom.xml Maven 引入本地 jar 包依赖1234567&lt;dependency&gt; &lt;groupId&gt;com.aliyun.mns&lt;/groupId&gt; &lt;artifactId&gt;aliyun-sdk-mns&lt;/artifactId&gt; &lt;version&gt;1.1.8&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/src/main/resources/lib/aliyun-sdk-mns-1.1.8.jar&lt;/systemPath&gt;&lt;/dependency&gt; api 不支持 301 跳转设置了 301 或 302 跳转的域名，不支持 api 调用。 spring boot @PathVariable 传递带小数点的参数spring boot 项目，RequestMapping 路由中，在最后一个斜杠后的部分，小数点后面的部分会被忽略掉。这种处理方式带来的好处：可以做伪静态，将网站的链接都写成 .html，但是实际上，我们的路由可以没有 .html 后缀，这样爬虫在爬网站的时候会当成静态？（没研究是不是这样）带来的坏处：在通过 uri 传递参数的时候，如果有小数点，其后面的部分会被丢掉，导致程序获取到的参数不正确。不过，这种需求是可以解决的。 解决通过 uri 传递参数不受以上规则影响其实很简单，就是在路由配置上，在最后加上一个反斜杠就行了，这样，如果输入 url 访问的时候，没有反斜杠，会被当成不存在，这样一来，url 中的参数信息不会被截取。1234567@RestControllerpublic class TController &#123; @RequestMapping(\"variable/&#123;username&#125;/&#123;password&#125;/\") public String hello(@PathVariable String username, @PathVariable String password) &#123; return \"username:\" + username + \"&lt;br&gt;\" + \"password:\" + password; &#125;&#125; 访问1http://localhost:83/variable/andy/fkd.242j8.fdsja&amp;*f7/ 将会在页面上输出：12userName:andypassWord:fkd.242j8.fdsja&amp;*f7 如果访问1http://localhost:83/variable/andy/fkd.242j8.fdsja&amp;*f7 将会得到错误提示，如果网站配置了 404 页面，则会跳转至 404 页面。123456Whitelabel Error PageThis application has no explicit mapping for /error, so you are seeing this as a fallback.Tue Aug 07 08:40:16 CST 2018There was an unexpected error (type=Not Found, status=404).No message available Application failed to start with classpath这个错误，通常是因为 application.yml 配置有误导致，用排除法解决，就是删除某一顶配置，再启动，如果问题依旧，再删除一项，直到可以正常启动，那么，能正常启动之前删除的配置项，一定是有问题的，修改好了，再恢复之前的配置，如此反复测试，就能找到所有配置有误的地方。 通常，在接手一个旧项目，将期改造，或者用一个开源项目的时候会遇到这种问题。 依赖不能正常下载到项目根目录，执行 mvn compile，看报错信息就能知道原因了。比如我遇到的一次，是 pom.xml 文件在删除 parent 节点的时候，将内部节点 groupId 和 version 一并删除了，就遇到了这个问题。12345678910111213141516[INFO] Scanning for projects...[ERROR] [ERROR] Some problems were encountered while processing the POMs:[FATAL] &apos;groupId&apos; is missing. @ line 4, column 109[FATAL] &apos;version&apos; is missing. @ line 4, column 109 @[ERROR] The build could not read 1 project -&gt; [Help 1][ERROR][ERROR] The project [unknown-group-id]:apg.common.es:[unknown-version] (C:\\workspace\\source\\apg.common\\apg.common.es\\pom.xml) has 2 errors[ERROR] &apos;groupId&apos; is missing. @ line 4, column 109[ERROR] &apos;version&apos; is missing. @ line 4, column 109[ERROR][ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.[ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR][ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectBuildingException An enum switch case label must be the unqualified name of an enumeration constant解决：switch case语句case后的枚举常量不带枚举类型 Generating equals/hashCode …1Warning:(5, 1) java: Generating equals/hashCode implementation but without a call to superclass, even though this class does not extend java.lang.Object. If this is intentional, add &apos;@EqualsAndHashCode(callSuper=false)&apos; to your type. 大致意思是默认子类的equals和hashCode方法，不会包含或者考虑基类的属性。 解决加上注解@EqualsAndHashCode(callSuper=true) ，警告消失。 参考lombok注解@Data使用在继承类上时出现警告 Information:java: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。在方法前加注解1@SuppressWarnings(&quot;unchecked&quot;) spring boot 项目打包成 war 包发布到 tomcat 窗口，启动时，项目未被加载12345&lt;Connector port=\"8089\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" /&gt;&lt;!-- 在 &lt;/Host&gt; 前面加上下面一行 --&gt;&lt;Context path=\"\" docBase=\"/home/utomcat/apps/mis-backend\" debug=\"0\" reloadable=\"false\"/&gt; 单加上上面的，启动时，spring boot 并未被加载，因为我只是改了 pom.xml，加了 &lt;packaging&gt;war&lt;/packaging&gt;，还需要修改启动类。还需要 extends SpringBootServletInitializer 参考 -&gt; spring boot build as war jackson 注解我们在进行数据返回的时候肯定是有些属性不希望前端可以获取到，或者是某些数据为空的时候前端要求不必进行回传，那么这时候我们就可以进行属性的隐藏。 @JsonIgnore：使用在某个属性上，这样在序列化和反序列化的时候都会忽略这个属性，最直接的效果就是返回的JSON属性是没有这个属性的，一般作用于密码这系列的属性。 @JsonInclude：使用在某个属性上，配合它的属性Value=JsonInclude.Include.NON_NULL，表示的是如果这个属性的属性值为空那么在返回前端的时候不可见。 @JsonProperty：使用在某个属性上，这个注解有两个作用，第一是修改返回JSON数据的时候key值为value指定值，第二个作用是配合属性access=JsonProperty.Access.WRITE_ONLY表示属性只可以进行序列化而不能进行反序列化，直观效果就是返回的数据没有该属性。 @JsonIgnoreProperties：作用在类声明处，它和@JsonIgnore注解的区别就是可以对多个属性作用，直接在value属性后面使用大括号逗号隔开即可，它的ignoreUnknow属性为true表示忽略未定义的属性。 日期：我们直接使用日期出来的格式必然不是我们想要的，那么我们可以使用注解：@JsonFormat配合上属性pattern标志事件格式，timezone是时区，local是区域。在这里必须强调的是这是把日期格式化为String，一般应用在后台向前端传递数据，如果是前端的String格式需要解析为日期格式我们可以使用@DateTimeFormat即可。@JsonFormat(timezone=&quot;GMT+8&quot;, pattern=&quot;yyy-MM-dd HH:mm:ss&quot;) 排序：有时候为了规范好看我们也需要让属性按照一定顺序进行排列，这时候我们就使用@JsonPropertyOrder这个注解，它的属性alphabetic默认值是false，我们设置为true即可。 以下二者同时用，JsonIgnore 没有生效，返回的 JSON 还是会包含属性。12@JsonIgnore@JsonProperty(&quot;毕业院校&quot;) 换成：1@JsonProperty(value=&quot;毕业院校&quot;, access=JsonProperty.Access.WRITE_ONLY) 同样，JsonIgnoreProperties 与 JsonProperty 同时使用时，前者不会生效。1234@JsonIgnoreProperties(value = &#123;&quot;nameSpellAcronym&quot;, &quot;sexTxt&quot;&#125;)... @JsonProperty(value=&quot;性别&quot;) private String sexTxt; 关于后端对实体类数据进行格式化输出的方法及使用@JsonSerialize和@JsonFormathttps://www.cnblogs.com/mollie-x/p/10514356.html 关于JSON反序列化与序列化名称问题的一点小经验https://www.cnblogs.com/yrml/p/9122955.html @JsonProperty 这个注解提供了序列化和反序列化过程中该java属性所对应的名称 @JsonAlias 这个注解只只在反序列化时起作用，指定该java属性可以接受的更多名称 Cannot call sendError() after the response has been committed导出 excel 时报错： // 因为在前端请求时，还会有返回，所以，这里如果 close，会导致再次返回时报错：java.lang.IllegalStateException: Cannot call sendError() after the response has been committed12345678910111213141516171819202122232425262728293031323334353637383940414243444546474822:23:50,843 &lt;org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver&gt; WARN [http-nio-89-exec-4]: Failure while trying to resolve exception [org.springframework.web.HttpMediaTypeNotAcceptableException]java.lang.IllegalStateException: Cannot call sendError() after the response has been committed at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472) ~[tomcat-embed-core-9.0.21.jar:9.0.21] at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.21.jar:9.0.21] at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.21.jar:9.0.21] at org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:109) ~[spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-9.0.21.jar:9.0.21] at com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper.sendError(WebStatFilter.java:343) ~[druid-1.1.16.jar:1.1.16] at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMediaTypeNotAcceptable(DefaultHandlerExceptionResolver.java:304) ~[spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:181) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:140) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:79) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1298) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1110) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1056) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:908) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882) [spring-webmvc-5.1.8.RELEASE.jar:5.1.8.RELEASE] at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103) [spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.21.jar:9.0.21] at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124) [druid-1.1.16.jar:1.1.16] at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-9.0.21.jar:9.0.21] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.1.5.RELEASE.jar:5.1.5.RELEASE] at mis.api.common.jwt.JwtAuthorizationTokenFilter.doFilterInternal(JwtAuthorizationTokenFilter.java:63) [classes/:?] at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:109) [spring-web-5.1.8.RELEASE.jar:5.1.8.RELEASE] 从提示错误的字面意思判断“Cannotcall sendError() after the response has been committed”，“当response被提交后不能调用sendError()”。 出现这个错误，应该是多次response导致的，可以这么理解，http server发送response后就关闭了socket，这个时候再次发送response给http client就会出现这个问题。因为 excel 导出，在 return 之前已经 response 处理过流了 invalid source release: 111234Information:java: Errors occurred while compiling module &apos;mis-config-common&apos;Information:javac 1.8.0_161 was used to compile java sourcesInformation:7/25/2019 3:32 PM - Compilation completed with 1 error and 0 warnings in 6 s 247 msError:java: invalid source release: 11 IDEA 的配置路径：Project Structure -&gt; Project -&gt; Project SDK 和 Project language level，把这两项都设置为11就对了。 我重新 import 了项目，而 idea 的这两项配置，默认为1.8，而我在每个项目的 pom.xml 配置指定成11了，所以会报这个错。 ‘packaging’ with value ‘jar’ is invalid. Aggregator projects require ‘pom’ as packaging.项目是多模块方式，如下：12345678910111213141516&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.csist&lt;/groupId&gt; &lt;artifactId&gt;mis-config&lt;/artifactId&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;modules&gt; &lt;module&gt;mis-config-common&lt;/module&gt; &lt;/modules&gt;&lt;/project&gt; 之前没有 &lt;packaging&gt;pom&lt;/packaging&gt; 这一项，加上就好了。没有的话，默认是 jar。 mvn compile 时遇到该错误：编码 GBK 的不可映射字符 (0xBB)解决这个问题的思路： 在maven的编译插件中声明正确的字符集编码编码——编译使用的字符集编码与代码文件使用的字符集编码一致！！这个是由于代码使用的UTF-8，而maven编译的时候使用的GBK的缘故。 可以通过修改项目的pom文件，可以告诉maven这个项目使用UTF-8编码来编译。在项目的pom.xml文件中，&lt;properties&gt; 节点添加下面的配置：12&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; mvn compile 时报错：编码 UTF-8 的不可映射字符 (0xB6)原因是，支持的 jdk 版本只到 1.8，而 windows 环境变量中设置的版本为 11，切换到 1.8 就好了。修改环境变量之后，记得要把 idea 全部项目关闭，再重新打开新的环境变量才会生效。 或者，在 pom.xml 中指定编译版本也可以。推荐这种方式。 程序包com.sun.xml.internal.messaging.saaj.util不存在一个老项目，用到 com.sun.xml.internal.messaging.saaj.util。 解决12345678910111213141516171819&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;source&gt;$&#123;java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;java.version&#125;&lt;/target&gt; &lt;compilerArguments&gt; &lt;bootclasspath&gt;$&#123;java.home&#125;/jre/lib/rt.jar&lt;/bootclasspath&gt; &lt;/compilerArguments&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/build&gt; 其中，java.version 需要定义，java.home 不用。另外，IDEA 需要配置一个相应版本（这里是 1.8）的目录才行。123&lt;properties&gt; &lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt; spring boot 不需要连接数据库配置spring boot 项目，默认需要注册数据库驱动，但是如果项目不需要数据库支持，在不配置数据库连接信息的情况下，就会报这个错。 解决办法，在@SpringBootApplication注解后面排除数据库自动配置：1@SpringBootApplication(exclude=&#123;DataSourceAutoConfiguration.class,HibernateJpaAutoConfiguration.class&#125;) 如果不加括号里的配置，会报错：Cannot determine embedded database driver class for database type NONE Caused by: java.lang.NoClassDefFoundError: javax/servlet/ServletContext上面的错误，是因为我设置了spring-boot编译类型为war，同时设置了tomcat项之后用 IDEA 直接启动 spring-boot，导致内置的tomcat不可用导致的。 12345&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt; &lt;scope&gt;provided&lt;/scope&gt;&lt;/dependency&gt; 其实，把这一项删掉，既不影响在 IDEA 及 Eclipse里调试和运行，也不影响发布到tomcat 容器中运行。 查看thymeleaf默认配置项在项目中添加下面的引用，按住Ctrl加鼠标查看代码1import org.springframework.boot.autoconfigure.thymeleaf.ThymeleafProperties; 关于 POJO 属性的访问范围修饰符一开始有部分 POJO 的属性直接用了 public，这样的好处是赋值与取值的代码相对简单。如果需要通过程序赋值，比如通过 MyBatis 查询数据，输出为某 POJO 类型的列表，或者在调用 api 时传入的 JSON 格式。为了达到程序自动赋值，必须有 setter。这没有问题，只让 IDE 生成 setter 代码就好了，这样还是能让取值代码简洁而“优雅”。这种思想可在 C# 有很好的体现，C# 的 setter 与 getter 就感觉是真的很优雅，C# 不需要定义属性变量，直接定义 getter 与 setter 并且是一个名称，就象在 java 的 POJO 是定义了一个 public 的属性一样。看起来就象是这样： 123456789public class RateErrView &#123; public TopResponse Response &#123; get; set; &#125; public long BizID &#123; get; set; &#125; public string SessionKey &#123; get; set; &#125; public string TID &#123; get; set; &#125; public string OID &#123; get; set; &#125; public string From &#123;get;set;&#125; public string Para &#123;get;set;&#125;&#125; 但是，问题来了，并不是所有团队成员都明白这个原理，经常出现有因队成员忘记加 setter 的，直到发现数据没有被正确赋值才知道，甚至是，之前添加的属性没问题，只是新加的属性没有被正确赋值，这往往发生在经验尚不足的新同事身上。再后来，发现有些地方的代码还依赖于 getter，如果能明确哪些 POJO 需要，哪些不需要，也好说，把需要的加上就行了，但是，这个判断并不是每个团队成员都清楚，而且好多这种依赖是随着系统的演进而发生的。 所以，为了避免以上问题，最好的办法就是，不要用 public 的属性，所有属性都是 private 的，而且必须添加 setter 与 getter 代码，让这个规定成为一个不可以破坏的默认约定，这能让项目负责人减少很多不必要的麻烦。 所以，关于 POJO 属性的访问修饰符，规定如下： 之前用 public 的保留，新加的一律用 private，private 的属性均需要添加 setter 和 getter。 这样能避免某些地方需要 setter 的应用场景不能按预期实现功能，否则可能要到数据异常或者出错时才能发现。 推荐使用 lombok，这样就不需要自己维护 setter 和 getter 了，非常省事儿，配合 IDEA 的 lombok 插件，省心，用上了就离不开了。 关于使用 Map 类型作为参数或者返回值的经验一开始可以给出一个规则，让团队成员根据规则掌握什么情况能用 Map，什么情况不能用 Map，但是，事与愿违，并不是每个团队成员都能时时刻刻记住和领悟这个规定，总是有人违反规定写出一些不合格的代码。考虑到，使用 Map 带来的好处要远远小于使用它带来的坏处，何不干脆规定，所有人都不能用它作为参数和返回值呢？ 线上环境，.properties 配置中文信息时的注意事项 直接通过终端，执行 vi 直接编辑，粘贴中文，再次 vi 或者 cat 看到的是中文信息，那程序读到的将会是乱码。 应该在 idea 里编辑好，可以单独新加一个文件，把线上的内容复制下来，修改带有中文信息的配置，然后上传，覆盖线上的文件。这样操作之后，vi 或者 cat 看到的将会是\\u开头的字符，这样程序读出来的才是正常的。 作为经验教训，建议在配置文件里尽量不要用中文信息。 调用 api 自定义错误信息实践：返回类型继承 RestApiView1234567891011121314151617181920//返回 RestApiView 的子类SyncShopView syncShopView = new SyncShopView();if (syncShopAuthView.getSellerID() == 0L) &#123; syncShopView.setSuccessOrFail(SuccessOrFailEnum.fail); syncShopView.setExceptionCodeEnum(ExceptionCodeEnum.notAssignSellerID); syncShopView.setMessage(\"同步CRM商家信息：无法获取SellerID，请检查参数的正确性和完整性！\"); return syncShopView;&#125;//直接返回 RestApiViewRestApiView restApiView = new RestApiView();SyncRateAuthView syncRateAuthView = JsonHelper.json2Object(requestParametersView.apiParas, SyncRateAuthView.class);if (syncRateAuthView.getSellerID() == 0L) &#123; restApiView.setSuccessOrFail(SuccessOrFailEnum.fail); restApiView.setExceptionCodeEnum(ExceptionCodeEnum.notAssignSellerID); restApiView.setMessage(\"同步Rate商家信息：无法获取SellerID，请检查参数的正确性和完整性！\"); return restApiView;&#125; Diamond types are not supported at this language level1Map&lt;String, Object&gt; paraMapForInit = new HashMap&lt;&gt;(); 解决办法： 中规中矩的把 new HashMap&lt;&gt;() 写成 new HasMap&lt;String, Object&gt;(); 添加 spring-boot 插件。在 pom.xml 添加下面的内容。12345678910111213141516171819202122&lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt; &lt;java.version&gt;1.8&lt;/java.version&gt;&lt;/properties&gt;&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;plugin&gt; &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt; &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt; &lt;configuration&gt; &lt;source&gt;$&#123;java.version&#125;&lt;/source&gt; &lt;target&gt;$&#123;java.version&#125;&lt;/target&gt; &lt;/configuration&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 添加之后，IDEA 给的建议是：123Explicit type argument Integer can be replaced with &lt;&gt; less... (Ctrl+F1) This inspection reports all new expressions with type arguments which can be replaced with diamond type &lt;&gt;Such &lt;&gt; syntax is not supported under Java 1.6 or earlier JVMs. 这个时候，这样定义即可：1Map&lt;String, Object&gt; paraMapForInit = new HashMap&lt;&gt;(); java.lang.String cannot be cast to org.springframework.mail.javamail.JavaMailSender1234567891011121314151617181920212223242526272829303132333435package com.crm.common.application;import org.springframework.beans.BeansException;import org.springframework.context.ApplicationContext;import org.springframework.context.ApplicationContextAware;import org.springframework.context.annotation.Configuration;/** * @author AndyChen * @Description: 解决在静态方法内不能调用非静态Mapper实例的问题 * 用法： * static MapperName mapperName; * if (null == mapperName) &#123; * mapperName = (MapperName)BeanTools.getBean(MapperName.class); * &#125; * @date 2017-01-11 */@Configurationpublic class BeanTools implements ApplicationContextAware &#123; private static ApplicationContext applicationContext; @Override public void setApplicationContext(ApplicationContext applicationContext) throws BeansException &#123; this.applicationContext = applicationContext; &#125; @SuppressWarnings(&#123;\"unchecked\", \"rawtypes\"&#125;) public static Object getBean(Class classname) &#123; try &#123; return applicationContext.getBean(classname); &#125; catch (Exception e) &#123; return \"\"; &#125; &#125;&#125; 一定要加上：&lt;context:component-scan base-package=”com.crm.common.application”/&gt;否则，下面的代码1private static JavaMailSender javaMailSender = (JavaMailSender) BeanTools.getBean(JavaMailSender.class); 会报这样的错：1java.lang.String cannot be cast to org.springframework.mail.javamail.JavaMailSender spring boot 执行 jar 报错1234[utomcat@192 webapps]$ java -jar web.jar no main manifest attribute, in web.jar# 我一种方式，还是不行。java -cp doman.web.Application 之前的打包方式，是在 idea 的 Artifacts 里引入了一个 web 项目，然后 Build Artifacts … 现在，换一种方式123mvn package# 直接运行下面的脚本即可，会自动找到 spring boot 的启动类java -jar web.jar OK 了。 spring 配置报错：cvc-complex-type.2.1: Element ‘mvc:annotation-driven’ must have no character or element information item [children], because the type’s content type is empty.在一个比较老的项目里，配置报错：Element mvc:message-converters is not allowed here，没管，直接运行项目，得到：1Caused by: org.xml.sax.SAXParseException; lineNumber: 81; columnNumber: 29; cvc-complex-type.2.1: Element &apos;mvc:annotation-driven&apos; must have no character or element information item [children], because the type&apos;s content type is empty. 网上一查资料，原来是 Spring 3.1 及以上才支持这种配置方式，这里我用的是 spring 4.3.2，但是 dispatcher-servlet.xml 配置文件里的版本却停留在3.0，如下：12345678910111213&lt;beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd\"&gt; 改成，不加版本号的即可解决问题：1234567891011&lt;beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xmlns:p=\"http://www.springframework.org/schema/p\" xmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"&gt; java 把 gbk 格式的文件，转为 UTF8https://github.com/downgoon/gbk2utf8直接提供了工具，下载先来，一条命令全搞定。java -jar gbk2utf8-0.0.1-SNAPSHOT-all.jar $src-gbk-path $dst-utf8-path而且关键是，如果源目录中既有GBK，又有UTF-8，很多工具最终笼统的对每个文件都 GBK -&gt; UTF-8，会导致原本就是UTF-8，被误做GBK转码，最后出来的反而是乱码的，这个工具首先识别了源文件是否是GBK，只有是GBK的才转，不是GBK的直接跳过。 view, enumeration 是否要全部放到一个 module 管理？以 view 为例。如果放到公共的 view module，这样虽然方便添加和查找，但是如此一来，会增加项目耦合，本来只需要引用一个 module 即可，但是因为这个项目依赖于 view 对应的 module，不得不两个 module 一起引用。建议：如果 view 并不具有公共性，仅与某个 module 相关，则直接放到此 module，这样其它项目依赖此 module 时，仅依赖这一个 module 即可。后续：如果某个 view 变得被多个项目依赖，可以考虑将其提取到公共的、专门的 view module。 Jackson Unrecognized field, not marked as ignorableJackson是一个可以轻松的将Java对象转换成json对象和xml文档，同样也可以将json、xml转换成Java对象的框架。非常方便，同时也很高效。最近在使用时，将前台传递的JSON 串转成Java实体对象时，出现了Unrecognized field, not marked as ignorable 错误。该错误的意思是说，不能够识别的字段没有标示为可忽略。出现该问题的原因就是JSON中包含了目标Java对象没有的属性。 解决方法有如下几种：格式化输入内容，保证传入的JSON串不包含目标对象的没有的属性。@JsonIgnoreProperties(ignoreUnknown = true) 在目标对象的类级别上加上该注解，并配置ignoreUnknown = true，则Jackson在反序列化的时候，会忽略该目标对象不存在的属性。全局DeserializationFeature配置objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES,false); 配置该objectMapper在反序列化时，忽略目标对象没有的属性。凡是使用该objectMapper反序列化时，都会拥有该特性。 Invalid bound statement (not found): express.dal.mapper.original.GwCpInfoMapper.selectByPrimaryKey1234567891011&lt;build&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/java&lt;/directory&gt; &lt;includes&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;/includes&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt;&lt;/build&gt; maven 项目，依赖三方 jar 包，打包项目时自动包含以下配置，仅开发环境可用，打包时并不能打到 war 和 生意人 lib 目录1234567&lt;dependency&gt; &lt;groupId&gt;jd&lt;/groupId&gt; &lt;artifactId&gt;open-api-sdk&lt;/artifactId&gt; &lt;version&gt;2.0&lt;/version&gt; &lt;scope&gt;system&lt;/scope&gt; &lt;systemPath&gt;$&#123;project.basedir&#125;/sdkLib/open-api-sdk-2.0.jar&lt;/systemPath&gt;&lt;/dependency&gt; 最终还是需要 mvn install 到本地仓库1mvn install:install-file -Dfile=open-api-sdk-2.0.jar -DgroupId=jd -DartifactId=open-api-sdk -Dversion=2.0 -Dpackaging=jar 依赖近成这样：12345&lt;dependency&gt; &lt;groupId&gt;jd&lt;/groupId&gt; &lt;artifactId&gt;open-api-sdk&lt;/artifactId&gt; &lt;version&gt;2.0&lt;/version&gt;&lt;/dependency&gt; idea每次编译设置工程的默认jdk版本1.5问题出现这样的原因应该是Maven插件的默认配置有问题。解决方法是在”pom.xml”里加入如下代码：1234&lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;&lt;/properties&gt; 如果 maven 依赖不能下载，试一下，mvn compile，看看会不会报错，因为有可能是 maven 配置文件有错。1234[ERROR] Error executing Maven.[ERROR] 1 problem was encountered while building the effective settings[FATAL] Non-parseable settings C:\\Users\\andy\\.m2\\settings.xml: end tag name &lt;/mirrors&gt; must match start tag name &lt;settings&gt; from line 46 (position: TEXT seen ...&lt;/mirror&gt;\\n --&gt;\\n &lt;/mirrors&gt;... @173:12) @ C:\\Users\\andy\\.m2\\settings.xml, line 173, column 12 maven 配置文件时的 * 会导致 pom.xml 文件里配置的 repository 不生效，解决办法就是，在 setting.xml 的 mirrorOf 配置里排除，如下：123456&lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;*,!spring-milestones&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;&lt;/mirror&gt; tomcat 下，一个应用程序，发布成两个虚拟目录，该应用配置了 druid 防火墙，会冲突123Caused by: javax.management.InstanceAlreadyExistsException: com.alibaba.druid.wall:name=wall-filter,type=WallFilter...Caused by: org.springframework.jmx.export.UnableToRegisterMBeanException: Unable to register MBean [com.alibaba.druid.wall.WallFilter@72ae610b] with key &apos;wall-filter&apos;; nested exception is javax.management.InstanceAlreadyExistsException: com.alibaba.druid.wall:name=wall-filter,type=WallFilter 解决办法：将配置文件中的这些配置的 ID 改得不一样即可：WallConfig、WallFilter、StatFilter、DruidDataSource extend Mapper can&#39;t load: Instantiation of bean failed; nested exception is java.lang.ExceptionInInitializerError12345678910111213141516171819202122232425262728293031323334353622:02:03,660 &lt;org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext&gt; WARN [restartedMain]: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;expressHDalServiceImpl&apos; defined in file [C:\\workspace\\java\\shard-test\\public.biz\\biz.dal\\target\\classes\\biz\\dal\\shard\\service\\impl\\ExpressHDalServiceImpl.class]: Instantiation of bean failed; nested exception is java.lang.ExceptionInInitializerError22:02:03,669 &lt;com.alibaba.druid.pool.DruidDataSource&gt; INFO [restartedMain]: &#123;dataSource-1&#125; closed22:02:03,671 &lt;org.apache.catalina.core.StandardService&gt; INFO [restartedMain]: Stopping service [Tomcat]22:02:03,700 &lt;org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer&gt; INFO [restartedMain]: Error starting ApplicationContext. To display the auto-configuration report re-run your application with &apos;debug&apos; enabled.22:02:03,711 &lt;org.springframework.boot.SpringApplication&gt; ERROR [restartedMain]: Application startup failedorg.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;expressHDalServiceImpl&apos; defined in file [C:\\workspace\\java\\shard-test\\public.biz\\biz.dal\\target\\classes\\biz\\dal\\shard\\service\\impl\\ExpressHDalServiceImpl.class]: Instantiation of bean failed; nested exception is java.lang.ExceptionInInitializerError at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1155) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1099) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) ~[spring-beans-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-4.3.13.RELEASE.jar:4.3.13.RELEASE] at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.9.RELEASE.jar:1.5.9.RELEASE] at boot.alibaba.BootAlibaba.main(BootAlibaba.java:23) [classes/:?] at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_121] at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_121] at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_121] at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_121] at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-1.5.9.RELEASE.jar:1.5.9.RELEASE]Caused by: java.lang.ExceptionInInitializerError at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_121] at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_121] at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_121] at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_121] 这种情况，需要检查 mapper 里的类型是否正确。如下面的：parameterType, type。12&lt;resultMap id=&quot;BaseResultMap&quot; type=&quot;X&quot;&gt; &lt;select id=&quot;selectEcodes&quot; parameterType=&quot;Y&quot; resultMap=&quot;BaseResultMap&quot;&gt; 本次遇到的问题，是在用 IDEA 修改包名进行重构的过程中，把 X 和 Y 的 package 路径给去掉了。导致 spring boot 项目启动报错。这种错，很难一下子定位到，因为在改 package name 之前一直是运行正常的。为了排查这个错，将项目 copy 一份，去掉报错的 mapper 之外的所有 mapper，然后去掉里的配置，即 xml 内容，只保留一份从 用 MGB 生成的代码里 copy 过来的简单的，结果启动正常，然后添加一个原有的，结果报错，再仔细看 xml 内容，才发现是类名之前没有加 package 路径，加上就可以了。 获取 xml 配置文件里定义的 bean 信息12ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;); BaseDAO dao = (BaseDAO) context.getBean(&quot;sqlBaseDAO&quot;, BaseDAOImpl.class); json-lib:json-lib:jar:2.4 依赖，在 IDEA 的依赖项里面，显示红色下划线，当然，引用其中的类是有问题的。现象2.4 版本的依赖引用格式，是在 http://mvnrepository.com/artifact/net.sf.json-lib/json-lib/2.4 找到的，如下：123456&lt;!-- https://mvnrepository.com/artifact/net.sf.json-lib/json-lib --&gt;&lt;dependency&gt; &lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt; &lt;artifactId&gt;json-lib&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt;&lt;/dependency&gt; maven 项目，IDEA。pom.xml 文件里显示正常，但引用 net.sf.json 下定义的类时显示红色，即找不到依赖。刷新 maven 依赖，依赖项 json-lib-2.4 显示红色下红线。进入本地 maven 依赖库的下载目录查看，发现下载的是 json-lib-2.4-jdk15.jar，并非预期中的 json-lib-2.4.jar。 另外，在一个旧的，非 maven 项目里，引用的是 json-lib-2.4.jar，引用 net.sf.json 下定义的类，正常。 解决方案度娘了一下，原来通过 Maven 引用时，需要添加 &lt;classifier&gt;jdk15&lt;/classifier&gt;，这应该是 maven 仓库只有基于 jdk1.5 的版本。完整的引用：123456&lt;dependency&gt; &lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt; &lt;artifactId&gt;json-lib&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt; &lt;classifier&gt;jdk15&lt;/classifier&gt;&lt;/dependency&gt; 利用反射，实现读取 pojo field 与对应值以下代码，假设 pojo 的字段均为普通数据类型，即都可以 toString() 显示正确值。1234567Class reClass = Class.forName(\"domain.pojoClass\");Field fieldList[] = reClass.getDeclaredFields();String result;for (Field field : fieldList) &#123; System.out.println(\"ke=\" + field.getName() + \", value=\" + field.get(outerParameters).toString());&#125; 类似 isLogin 用 int 类型的数据，如果用 bool 类型数据，用 idea 生成的 getter 会跟变量名一致，容易混淆。如：1234567891011public class VerificationRequest &#123; private boolean isLogin; public boolean isLogin() &#123; return isLogin; &#125; public void setLogin(boolean login) &#123; isLogin = login; &#125;&#125; 用 int 则清晰自然：1234567891011public class VerificationRequest &#123; private int isLogin; public int getIsLogin() &#123; return isLogin; &#125; public void setIsLogin(int isLogin) &#123; this.isLogin = isLogin; &#125;&#125; 比较时这样用：123if (verificationCode.getIsLogin() == YesOrNoEnum.yes.getIndex()) &#123; //some code&#125; 附 YesOrNoEnum 代码1234567891011121314151617181920212223242526272829303132333435363738public enum YesOrNoEnum &#123; no(0, \"否\"), yes(1, \"是\"); private int index; private String name; YesOrNoEnum(int index, String name) &#123; this.index = index; this.name = name; &#125; public int getIndex() &#123; return index; &#125; public void setIndex(int index) &#123; this.index = index; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public static YesOrNoEnum getEnumByIndex(int index) &#123; for (YesOrNoEnum result : YesOrNoEnum.values()) &#123; if (index == result.index) &#123; return result; &#125; &#125; return null; &#125;&#125; 运行 mvn spring-boot:run 之后，再次运行，或者运行 spring boot 的入口程序，端口会冲突解决：taskkill /f /t /im java.exe 用 jackson 将数组类型的数据转换成 string 会报错。12308:33:26,505 &lt;apg.biz.dal.mapper.original.MemberMapper.selectByExample&gt; DEBUG [http-nio-83-exec-2]: &lt;== Total: 0com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize instance of `java.lang.String` out of START_ARRAY token at [Source: (String)&quot;&#123;&quot;openid&quot;:&quot;omqgp1i32V3SRMNXDgt_fopdWIHA&quot;,&quot;nickname&quot;:&quot;Andy chen&quot;,&quot;sex&quot;:1,&quot;language&quot;:&quot;zh_CN&quot;,&quot;city&quot;:&quot;成都&quot;,&quot;province&quot;:&quot;四川&quot;,&quot;country&quot;:&quot;中国&quot;,&quot;headimgurl&quot;:&quot;http:\\/\\/thirdwx.qlogo.cn\\/mmopen\\/vi_32\\/8Djic7qt2ic0SU1a7Wdvibr26QHEibBtVbnScE7p2j3MFFqFJHYfrcZNFGl6qIsmPrgiaX8BwLlOicj2PztDPcAhQDmQ\\/132&quot;,&quot;privilege&quot;:[],&quot;unionid&quot;:&quot;obd3QwduPRnX0J5e-zHh8kHWg93A&quot;&#125;&quot;; line: 1, column: 302] (through reference chain: com.github.wxpay.sdk.response.WxGetUserInfoResponse[&quot;privilege&quot;]) 修改 pojo 对应的属性，修改为正确的 List 类型即可。 The server time zone value &#39;�й���׼ʱ��&#39; is unrecognized or represents more than one time zone在项目代码-数据库连接URL后，加上 （注意大小写必须一致）?serverTimezone=UTC JAVA对象通过jackson转成json格式，属性名首字母变成小写的解决方法12@JsonProperty //不加此注解的话，返回的字段属性会变成：wxofficialAccountprivate String WXOfficialAccount; package com.sun.xml.internal.messaging.saaj.util does not exist项目里引用的是 jdk 自带的，位于：C:\\dev\\Java\\jdk1.8.0_161\\jre\\lib\\rt.jar!\\com\\sun\\xml\\internal\\messaging\\saaj\\util\\Base64.class在服务器上通过 maven 编译的时候，提示找不到。解决办法：添加 Maven 依赖12345&lt;dependency&gt; &lt;groupId&gt;com.sun.xml.messaging.saaj&lt;/groupId&gt; &lt;artifactId&gt;saaj-impl&lt;/artifactId&gt; &lt;version&gt;1.4.0&lt;/version&gt;&lt;/dependency&gt; 多模板项目，服务器上进入 web 工程 mvn 编译找不到 model解决：到根目录编译 Spring Boot Application in default package123456Spring Boot Application in default package less… (Ctrl+F1)Inspection info: Checks Spring Boot Application Setup.@SpringBootApplication used in default packageRedundant @ComponentScan declarationRedundant @EnableAutoConfiguration declarationNew in 2018.2 是因为把main 函数直接放在了java 目录之下，当放在java目录下的 package目录； 另外官方给出的解决方案是：@springbootApplication 注解失效的情况下，推荐使用@CompentScan 和@EnableAutoConfiguration进行代替； Not registered via @EnableConfigurationProperties or marked as Spring component12Not registered via @EnableConfigurationProperties or marked as Spring component less... (Ctrl+F1) Inspection info: Verifies @ConfigurationProperties setup. New in 2018.3 解决：添加注解 @Component but snakeyaml was not found on the classpath1Caused by: java.lang.IllegalStateException: Attempted to load applicationConfig: [classpath:/application.yml] but snakeyaml was not found on the classpath 解决：添加如下依赖即可1234&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;&lt;/dependency&gt; Loading class `com.mysql.jdbc.Driver’. This is deprecated12345678910database: host: 192.168.1.88 username: admin password: 123!@#321AbC schemaName: mbg keepPrefix: crm tableNamePrefixCount: 3 keepPrefixTableList: - erpTrade - erpShopConfig 报错信息：1Loading class `com.mysql.jdbc.Driver&apos;. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver&apos;. The driver is automatically registered via the SPI and manual loading of the driver class is generally unnecessary. 将com.mysql.jdbc.Driver改为com.mysql.cj.jdbc.Driver 12345com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value &apos;ÖÐ¹ú±ê×¼Ê±¼ä&apos; is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support. at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 在连接字符串后面加参数serverTimezone=GMT&amp;由于数据库和系统时区差异所造成的，在jdbc连接的url后面加上serverTimezone=GMT即可解决问题，如果需要使用gmt+8时区，需要写成GMT%2B8，否则会被解析为空。再一个解决办法就是使用低版本的MySQL jdbc驱动，5.1.28不会存在时区的问题。 或者在[mysqld]节点在节点下面加上下面这句话1default-time-zone=&apos;+08:00&apos; Cannot obtain primary key information from the database1Cannot obtain primary key information from the database, generated objects may be incomplete https://blog.csdn.net/jpf254/article/details/79571396 pom.xml 的groupId与artifactId，不能有两个相同的否则，在子项目中，依赖会异常只要改其中一项即可 Maven项目下HttpServletRequest 或 HttpServletResponse需引用的依赖包123456&lt;!-- https://mvnrepository.com/artifact/org.glassfish/javax.servlet --&gt;&lt;dependency&gt; &lt;groupId&gt;org.glassfish&lt;/groupId&gt; &lt;artifactId&gt;javax.servlet&lt;/artifactId&gt; &lt;version&gt;3.1.1&lt;/version&gt;&lt;/dependency&gt; 改变自动扫描的包@ComponentScan(basePackages = {&quot;org.test1&quot;,&quot;org.test2&quot;})在启动类中添加了该注解之后，即可扫描org.test2不同包下的注解类了，这里需要注意的是：在修改了自动扫描的包的情况下，默认的自动扫描与启动类同包以及子包下的注解类就不生效了，如果还想要自动扫描与启动类同包以及子包下的注解类的话，就需要手动加上，这里就加上了org.test1 spring boot 以 jar 启动参考官网getting-started-first-application-run 添加插件官网是这样描述的：To create an executable jar, we need to add the spring-boot-maven-plugin to our pom.xml. To do so, insert the following lines just below the dependencies section: 12345678&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 保存 pom.xml 文件之后，执行打包命令：mvn clean package -Dmaven.test.skip=true，如果需要执行单元测试，则直接 mvn package 将 jar 包上传至服务器，同时把生产环境的配置文件（比如 application.yml）修改好之后放到与 jar 文件相同的目录，运行：java -jar my-project-0.0.1.jar，不需要的时候 Ctrl+c 就退出，如果需要一直运行，可设置成开机启动。 注解 @SuppressWarnings({ “rawtypes”, “unchecked” })java.lang.SuppressWarnings是J2SE 5.0中标准的Annotation之一。可以标注在类、字段、方法、参数、构造方法，以及局部变量上。作用：告诉编译器忽略指定的警告，不用在编译完成后出现警告信息。 PropertiesLoaderUtils.loadAllProperties(“common.properties”);通过 PropertiesLoaderUtils.loadAllProperties 加载配置文件，配置文件 common.properties，需要放到启动项目的 resources 目录下，否则项目上线到生产环境，将同名文件放到 /WEB-INF/classes/ 目录下，达不到覆盖的目的。todo: 研究一下读取文件的目录顺序 jackson解析时间12com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.util.Date` from String &quot;2019-06-29 17:25&quot;: not a valid representation (error: Failed to parse Date value &apos;2019-06-29 17:25&apos;: Cannot parse date &quot;2019-06-29 17:25&quot;: while it seems to fit format &apos;yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSZ&apos;, parsing fails (leniency? null)) at [Source: (String)&quot;&#123;&quot;pagingView&quot;:&#123;&quot;pageSize&quot;:10,&quot;currentPage&quot;:1&#125;,&quot;createdAtBegin&quot;:&quot;2019-06-29 17:25&quot;,&quot;createdAtEnd&quot;:&quot;2019-07-06 17:25&quot;&#125;&quot;; line: 1, column: 64] (through reference chain: mis.api.biz.model.request.StudentQueryRequest[&quot;createdAtBegin&quot;]) 将日期转换成时间戳再传递 自定义jackson解析时间格式yyy-MM-dd HH:mm:sshttps://my.oschina.net/xpx/blog/1924695 SpringBoot中后台无法接受前台日期字符串 yyyy-MM-dd HH:mm:sshttps://my.oschina.net/u/3694704/blog/2243415 package org.jetbrains.annotations does not exist1234ERROR] COMPILATION ERROR : [INFO] -------------------------------------------------------------[ERROR] ...SysLogUserOperationService.java:[21,33] package org.jetbrains.annotations does not exist[ERROR] ...SysLogUserOperationService.java:[28,63] cannot find symbol 原因代码里用了 jetbrains.annotations.NotNull 注解，虽然在 IDEA 下直接运行没问题，但到了服务器上就会报上面的错误。 解决要么引入依赖，要么删除NotNull注解。 java.lang.IllegalArgumentException: The maximum column width for an individual cell is 255 characters.该异常发生在用 POI 库导出 excel 的过程中，根据内容动态设置 excel 列的宽度 sheet.autoSizeColumn(i)，内容较多时，宽度会超出 excel 的最大限制。 原代码如下：123456for (int i = 0; i &lt; cnFields.length; i++) &#123; sheet.autoSizeColumn(i); // 解决自动设置列宽时，内容含中文时，列宽依然不足，所以，要再加宽一点。 int width = sheet.getColumnWidth(i) * 12 / 10; sheet.setColumnWidth(i, width);&#125; 解决其实，excel 的宽度，设置为60就已经挺宽的了，所以，即使内容较多，也不建议把表格宽度值设置得太大，修后的代码，表格宽度最大60，如下：1234567891011121314for (int i = 0; i &lt; cnFields.length; i++) &#123; sheet.autoSizeColumn(i); // 解决自动设置列宽时，内容含中文时，列宽依然不足，所以，要再加宽一点。 int width = sheet.getColumnWidth(i) * 12 / 10; // java.lang.IllegalArgumentException: The maximum column width for an individual cell is 255 characters. int maxExcelRowWidth = 60; if (width &gt; maxExcelRowWidth * 256) &#123; width = maxExcelRowWidth * 256; &#125; sheet.setColumnWidth(i, width);&#125; java 生成多级目录file.mkdir() 在创建多级目录时会报错，只支持在存在的目录下创建一级子目录。1234567File file = new File(filePath);if (!file.exists() || !file.isDirectory()) &#123; if (!file.mkdirs()) &#123; throw new Exception(\"创建文件夹失败，请联系管理员\"); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"experience","slug":"java/experience","permalink":"https://www.lovesofttech.com/categories/java/experience/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"linux 工作中的一些小经验","slug":"linux/experience","date":"2019-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.040Z","comments":true,"path":"linux/experience.html","link":"","permalink":"https://www.lovesofttech.com/linux/experience.html","excerpt":"使用 linux 的小经验，零散的知识点。","text":"使用 linux 的小经验，零散的知识点。 CentOS设置系统时间与网络时间同步 安装 ntpdate 工具: yum -y install ntp ntpdate 设置系统时间与网络时间同步: ntpdate cn.pool.ntp.org 将系统时间写入硬件时间: hwclock --systohc 强制系统时间写入CMOS中防止重启失效：hwclock -w 或 clock -w linux find命令：忽略一个目录或者多个目录忽略一个目录根目录下开始查找，忽略目录 /media12[root@AndyCentOS7Basic /]# find / -path &quot;/media&quot; -prune -o -name my-venv -print/home/utomcat/python-apps/my-venv 忽略多个目录根目录下开始查找，忽略目录 /media 和 /home/utomcat1234567891011# \\( 和 \\) 前后都有空格find / \\( -path &quot;/media&quot; -o -path &quot;/home/utomcat&quot; \\) -prune -o -name my-venv -print# -type f 表示只找文件[root@AndyCentOS7Basic /]# find / -path &quot;/media&quot; -prune -o -type f -name apache-tomcat-8.5.30.tar.gz -print/home/utomcat/soft/apache-tomcat-8.5.30.tar.gz# 没有 -print 则会忽略的目录也显示出来[root@AndyCentOS7Basic /]# find / -path &quot;/media&quot; -prune -o -type f -name apache-tomcat-8.5.30.tar.gz/home/utomcat/soft/apache-tomcat-8.5.30.tar.gz/media 将文件移动到一个不存在的目录，文件消失1mv mysql-8.0.16-2.el7.x86_64.rpm-bundle.tar /mysql /mysql 这个目录不存在，于是这个文件就这样消失了 用 find 命令查找也查不到12[root@localhost soft]# find / -name mysql-8.0.16-2.el7.x86_64.rpm-bundle.tar [root@localhost soft]# -bash: unzip: command not found1yum install -y unzip zip tomcat 内存占用运行一段时间的 tomcat，内存使用上升之后不会自动降下来，重启 tomcat 即可让内存降低到初始启动状态。 不过这只是临时解决问题，根本还是需要优化或者升级硬件。 -bash: vim: command not foundyum -y install vim-enhanced vim-common vim-minimal ldd可以列出动态可执行程序所依赖的模块文件","categories":[{"name":"linux","slug":"linux","permalink":"https://www.lovesofttech.com/categories/linux/"},{"name":"experience","slug":"linux/experience","permalink":"https://www.lovesofttech.com/categories/linux/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"linux","slug":"linux","permalink":"https://www.lovesofttech.com/tags/linux/"}]},{"title":"PowerDesigner 样式设置，以及样式参考值","slug":"database/powerDesignerStyle","date":"2019-06-19T16:00:00.000Z","updated":"2020-09-01T02:53:12.928Z","comments":true,"path":"database/powerDesignerStyle.html","link":"","permalink":"https://www.lovesofttech.com/database/powerDesignerStyle.html","excerpt":"默认样式是偏黄色的，屎黄屎黄的，有没有 ^o^~~","text":"默认样式是偏黄色的，屎黄屎黄的，有没有 ^o^~~ 样式设置看图，图片下方有相关说明。 图片较多，加载慢，请耐心等待~~ 默认样式，屎黄~~ 修改过的样式，个人比较喜欢的清爽风格 修改样式入口，打开 Model 之后，右键也可以找到 Display Preference… 设置背景样式，设置完成后，记得点击：Set As Default 表格样式–设置背景样式 表格样式–设置表格线样式 表格样式设置好后，同样需要点击：Set As Default，下次新建的 Model 才会应用该样式 应用到所有 View 的样式，建议与 Table 的稍微不一样，以方便区分 已有 Model 应用默认样式 已有 Model 应用默认样式，点击 Default 之后的预览效果。然后点击 ok，应用到所有 symbols 即可。 PowerDesigner 相关文章 PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例","categories":[{"name":"PowerDesigner","slug":"PowerDesigner","permalink":"https://www.lovesofttech.com/categories/PowerDesigner/"}],"tags":[{"name":"PowerDesigner","slug":"PowerDesigner","permalink":"https://www.lovesofttech.com/tags/PowerDesigner/"}]},{"title":"日常经验--好记性不如烂文档","slug":"general/experience","date":"2019-05-30T16:00:00.000Z","updated":"2020-09-01T02:53:12.945Z","comments":true,"path":"general/experience.html","link":"","permalink":"https://www.lovesofttech.com/general/experience.html","excerpt":"记下来，方便遇到问题时快速查。 可以节省以后自己查询的时间，也方便别人搜索。 如果不记，下次遇到问题还得再折腾一翻，不划算~~ 利人利已~~","text":"记下来，方便遇到问题时快速查。 可以节省以后自己查询的时间，也方便别人搜索。 如果不记，下次遇到问题还得再折腾一翻，不划算~~ 利人利已~~ 在机械硬盘上使用虚拟机和在固态硬盘上使用虚拟机的差别，有吗？大吗？真的吗？现象 电脑上有两块硬盘。 固态硬盘分了一个区：C，250 G，用于安装系统。 机械硬盘也只分了一个区：D，是一块比较老的机械硬盘，转速5400。 虚拟机 win7 文件保存在 D 盘，启动时很慢，启动起来了，正常使用的过程中，电脑也变得比平时卡，电脑一直处在动不动就卡的状态，查看系统任务-&gt;系统性能，发现硬盘 D 的 IO 大多数时候接近或达到了100%。 实践于是清理固态硬盘空间，将虚拟机文件移至固态硬盘，再启动，变得非常快了，那速度，杠杠的，而且使用过程中电脑也不卡了，固态硬盘也没有出现 IO 100%的情况。 我只想说，同样是硬盘，差距咋就这么大捏~~~ 不同网段间通信遇到的问题本机网段是：192.168.1需要访问的服务器网段是：192.168.33 一直可正常访问，有一次过了一个周末，周一上班时，不能访问了，ping 不通，但是上外网正常。 网管来看了之后，先是把静态 IP 换成动态 IP，获取到的 IP 地址依然在 192.168.1 网段，还是 ping 不通，于是检查机房的交换机，一切正常。 解决最后，重启本机所在的路由器，正常了。 经验遇到类似的问题，包括： 突然不能上外网。 某网站突然不能访问了。 可能是线路的原因，工作中遇到过这种情况。客户散布在全国各地，偶尔有客户联系我们说访问不了网站了，我们自己测试又是正常的，也是通过重启路由器解决的，有时添加 dns:8.8.8.8 也能解决。先让路由器“冷静”两分钟，一般都能解决。 还原 SQL Server 数据库现象12345678标题: Microsoft SQL Server Management Studio------------------------------还原 对于 服务器“192.168.1.8”失败。 (Microsoft.SqlServer.SmoExtended)有关帮助信息，请单击: http://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&amp;ProdVer=10.50.1600.1+((KJ_RTM).100402-1539+)&amp;EvtSrc=Microsoft.SqlServer.Management.Smo.ExceptionTemplates.FailedOperationExceptionText&amp;EvtID=还原+Server&amp;LinkId=20476------------------------------其他信息:System.Data.SqlClient.SqlError: RESTORE 无法处理数据库 &apos;devDatabase&apos;，因为它正由此会话使用。建议在执行此操作时使用 master 数据库。 (Microsoft.SqlServer.Smo)有关帮助信息，请单击: http://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&amp;ProdVer=10.50.1600.1+((KJ_RTM).100402-1539+)&amp;LinkId=20476 设置登录用户的默认数据库为非 devDatabase 后，错误信息变为：12345678标题: Microsoft SQL Server Management Studio------------------------------还原 对于 服务器“192.168.1.8”失败。 (Microsoft.SqlServer.SmoExtended)有关帮助信息，请单击: http://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&amp;ProdVer=10.50.1600.1+((KJ_RTM).100402-1539+)&amp;EvtSrc=Microsoft.SqlServer.Management.Smo.ExceptionTemplates.FailedOperationExceptionText&amp;EvtID=还原+Server&amp;LinkId=20476------------------------------其他信息:System.Data.SqlClient.SqlError: 因为数据库正在使用，所以无法获得对数据库的独占访问权。 (Microsoft.SqlServer.Smo)有关帮助信息，请单击: http://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&amp;ProdVer=10.50.1600.1+((KJ_RTM).100402-1539+)&amp;LinkId=20476 解决设置为单用户之后，还原成功。还原之后，又变成备份之前的多用户模式了。 设置方式：选中要还原的数据库–&gt;右键–&gt;属性–&gt;选项–&gt;状态–&gt;限制访问，该值从MULTI_USER修改为SINGLE_USER，此时该数据库就会显示为单用户模式。 还可以用 sql 脚本设置：1234567---设置数据库为单用户模式USE MASTERALTER DATABASE devDatabase SET SINGLE_USER WITH ROLLBACK IMMEDIATE---设置数据库为多用户模式USE MASTERALTER DATABASE devDatabase SET MULTI_USER WITH ROLLBACK IMMEDIATE 设置为单用户模式的过程，我踩了一个大大的坑，因为我操作的是默认数据库，设置完成之后，再操作就会出错，不给机会恢复数据，重新登录时，会这样提示：12345678标题: 连接到服务器------------------------------无法连接到 192.168.1.8。------------------------------其他信息:无法打开用户默认数据库。登录失败。用户 &apos;dbUser&apos; 登录失败。 (Microsoft SQL Server，错误: 4064)有关帮助信息，请单击: http://go.microsoft.com/fwlink?ProdName=Microsoft+SQL+Server&amp;EvtSrc=MSSQLServer&amp;EvtID=4064&amp;LinkId=20476 遇到这种情况，换一个具备管理权限的用户登录，如果没有，远程到服务器或者直接使用服务器的键盘鼠标显示器，以 windows 身份认证登录 SQL Server Management Studio，将上面提示的用户 dbUser 的默认数据库设置为非 devDatabase 数据库，然后才可以远程登录并恢复数据库。 当然了，如果能直接操作服务器，怎么玩就看个人喜好了~~ 如果以下几种情况你都满足，那就只有恭喜你了~~ 没有别的具备管理权限的用户登录权限。 不能远程到服务器。 不能直接操作服务器。 或者即使可以操作服务器，却不能有效登录 SQL Server。 参考：Sql server还原失败(数据库正在使用,无法获得对数据库的独占访问权) SQL Server Management Studio 保存的 sql 脚本文件编码问题SQL Server Management Studio 保存的 sql 脚本文件，编码默认为 gbk2312，而我用的 IDEA 默认为 ugf-8，每次用 IDEA 打开这类脚本文件，会这样提示： idea 提示：以gbk编码方式打开或者设置项目默认编码为gbk 中文全部显示为乱码。 请忽略乱码部分。本人临时从一个05年的老项目查数据，表名和字段名竟然全是中文，第一次遇到，汗在不停的往下掉~~ 解决文件由原来的默认 gbk2312 编码改为 utf-8。 在 SQL Server Management Studio 保存的时候，【保存】后面的下拉列表选【编码保存(V)…】，在【编码(E):】下拉列表选择 UTF-8 即可，如果已经是 gbk2312 了，按此方法另存，覆盖现有文件即可。 注意我尝试过用 IDEA 直接以 utf8 的方式打开，然后从 SQL Server Management Studio 编辑器把文件内容 copy 过来，或者用 notepad++ 打开再 copy 过来，保存。然后，用 SQL Server Management Studio 编辑器打开，是乱码。 用 SQL Server Management Studio 【编码保存(V)…】为 utf-8 格式的文件，则可以兼顾 SQL Server Management Studio 和 IDEA。 virtual box win7 虚拟机，方向键、home、delete、退格键不好使发生在切换输入法的时候，具体怎么触发的，没有深入研究。 发生之后，26个字母和数字等均可正常输入，就是方向键、home、delete、退格键不好使。 解决第一次是重启虚拟机，后来尝试了各种按键组合，无意间发现，按一下窗口键就好了。 VirtualBox 虚拟 win7 网卡提示：未识别的网络现象虚拟机设置成桥接模式，网卡选成与物理网卡一致，一直用得好好的。 提示不能用之前，把网线从路由器换到了同一个局域网的交换机上，于是出现：未识别的网络。 解决最终是重启物理主机解决的。 尝试各种修改虚拟机网卡设置，禁用部分网卡，启用之前没用过的，修改物理主机的，与 VirtualBox 相关的网卡IP为与物理主机同一个网段的固定IP，重启虚拟机多次，问题依旧。 结论使用 windows 如果遇到百思不得其解的奇葩问题，先重启一下电脑再说。这已经是第二次遇到这种情况了，即：通过常规思路不能解决，重启电脑立即解决。 WebStorm MaxCompute Studio打开 .sql 脚本文件时，提示：Script must bind a MaxCompute project to comile, Please bind a MaxCompute project in script editor tool bar 解决我只是打开一个 sql 脚本文件做普通的修改，用不上这个插件。到设置里，找到插件，去掉后面的勾即可。","categories":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/categories/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"redis 文章目录","slug":"redis/index","date":"2019-05-29T16:00:00.000Z","updated":"2020-09-01T02:53:13.094Z","comments":true,"path":"redis/index.html","link":"","permalink":"https://www.lovesofttech.com/redis/index.html","excerpt":"有关 redis 的使用经验。","text":"有关 redis 的使用经验。 redis5.0.5 在 CentOS7 上的安装和使用","categories":[{"name":"redis","slug":"redis","permalink":"https://www.lovesofttech.com/categories/redis/"}],"tags":[{"name":"redis","slug":"redis","permalink":"https://www.lovesofttech.com/tags/redis/"}]},{"title":"redis5.0.5 在 CentOS7 上的安装和使用","slug":"redis/general","date":"2019-05-29T16:00:00.000Z","updated":"2020-09-01T02:53:13.093Z","comments":true,"path":"redis/general.html","link":"","permalink":"https://www.lovesofttech.com/redis/general.html","excerpt":"介绍安装以及简单的配置。","text":"介绍安装以及简单的配置。 Redis 安装下载安装，进官网：https://redis.io/ 建议将解压目录放到 /opt 下：123[root@AndyCentOS7Basic ~]# wget http://download.redis.io/releases/redis-5.0.5.tar.gz[root@AndyCentOS7Basic ~]# tar xzf redis-5.0.5.tar.gz[root@AndyCentOS7Basic ~]# mv redis-5.0.5 /opt/ 参照官网，安装步骤：12[root@AndyCentOS7Basic ~]# cd /opt/redis-5.0.5/[root@AndyCentOS7Basic ~]# make make test12345678910[root@localhost redis-5.0.7]# make testcd src &amp;&amp; make testmake[1]: Entering directory `/root/redis-5.0.7/src&apos; CC Makefile.depmake[1]: Leaving directory `/root/redis-5.0.7/src&apos;make[1]: Entering directory `/root/redis-5.0.7/src&apos;You need tcl 8.5 or newer in order to run the Redis testmake[1]: *** [test] Error 1make[1]: Leaving directory `/root/redis-5.0.7/src&apos;make: *** [test] Error 2 解决：1yum install -y tcl Redis 运行12345678910111213141516171819202122232425262728[root@AndyCentOS7Basic ~]# /opt/redis-5.0.5/src/redis-server6105:C 30 May 2019 08:26:04.160 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo6105:C 30 May 2019 08:26:04.160 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=6105, just started6105:C 30 May 2019 08:26:04.160 # Warning: no config file specified, using the default config. In order to specify a config file use /opt/redis-5.0.5/src/redis-server /path/to/redis.conf6105:M 30 May 2019 08:26:04.161 * Increased maximum number of open files to 10032 (it was originally set to 1024). _._ _.-``__ &apos;&apos;-._ _.-`` `. `_. &apos;&apos;-._ Redis 5.0.5 (00000000/0) 64 bit .-`` .-```. ```\\/ _.,_ &apos;&apos;-._ ( &apos; , .-` | `, ) Running in standalone mode |`-._`-...-` __...-.``-._|&apos;` _.-&apos;| Port: 6379 | `-._ `._ / _.-&apos; | PID: 6105 `-._ `-._ `-./ _.-&apos; _.-&apos; |`-._`-._ `-.__.-&apos; _.-&apos;_.-&apos;| | `-._`-._ _.-&apos;_.-&apos; | http://redis.io `-._ `-._`-.__.-&apos;_.-&apos; _.-&apos; |`-._`-._ `-.__.-&apos; _.-&apos;_.-&apos;| | `-._`-._ _.-&apos;_.-&apos; | `-._ `-._`-.__.-&apos;_.-&apos; _.-&apos; `-._ `-.__.-&apos; _.-&apos; `-._ _.-&apos; `-.__.-&apos; 6105:M 30 May 2019 08:26:04.161 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.6105:M 30 May 2019 08:26:04.162 # Server initialized6105:M 30 May 2019 08:26:04.162 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add &apos;vm.overcommit_memory = 1&apos; to /etc/sysctl.conf and then reboot or run the command &apos;sysctl vm.overcommit_memory=1&apos; for this to take effect.6105:M 30 May 2019 08:26:04.162 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command &apos;echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled&apos; as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.6105:M 30 May 2019 08:26:04.162 * Ready to accept connections 以后台程序方式运行:1[root@AndyCentOS7Basic ~]# /opt/redis-5.0.5/src/redis-server &amp; 检查后台进程是否正在运行没有运行：12[root@AndyCentOS7Basic ~]# ps -ef |grep redisroot 1726 1707 0 09:01 pts/1 00:00:00 grep --color=auto redis 运行后：123[root@AndyCentOS7Basic ~]# ps -ef |grep redisroot 6105 1998 0 08:26 pts/2 00:00:00 /opt/redis-5.0.5/src/redis-server *:6379root 6127 6109 0 08:27 pts/3 00:00:00 grep --color=auto redis 检测6379端口是否在监听123[root@AndyCentOS7Basic ~]# netstat -lntp | grep 6379tcp 0 0 0.0.0.0:6379 0.0.0.0:* LISTEN 6130/redis-server * tcp6 0 0 :::6379 :::* LISTEN 6130/redis-server * 退出redis服务器123456[root@AndyCentOS7Basic ~]# /opt/redis-5.0.5/src/redis-cli shutdown6130:M 30 May 2019 09:14:18.481 # User requested shutdown...6130:M 30 May 2019 09:14:18.481 * Saving the final RDB snapshot before exiting.6130:M 30 May 2019 09:14:18.548 * DB saved on disk6130:M 30 May 2019 09:14:18.548 # Redis is now ready to exit, bye bye...[1]+ Done /opt/redis-5.0.5/src/redis-server 因为Redis可以妥善处理SIGTERM信号，所以直接 kill -9 PID 也是可以的。1234567[root@AndyCentOS7Basic ~]# ps -ef |grep redisroot 6199 1998 0 09:20 pts/2 00:00:00 /opt/redis-5.0.5/src/redis-server *:6379root 6205 1998 0 09:22 pts/2 00:00:00 grep --color=auto redis[root@AndyCentOS7Basic ~]# kill -9 6199[root@AndyCentOS7Basic ~]# ps -ef |grep redisroot 6207 1998 0 09:22 pts/2 00:00:00 grep --color=auto redis[1]+ Killed /opt/redis-5.0.5/src/redis-server redis 设置密码登录后，要用 redis-cli 关闭 redis 服务器，需要 redis-cli -a 密码 shutdown 修改配置项1vim /opt/redis-5.0.5/redis.conf 设置访问需要密码：# requirepass foobared 改为：requirepass andyRedisPass，其中 andyRedisPass 为密码，改为你自己的密码。 bind 127.0.0.1 直接注释掉，改为：# bind 127.0.0.1 将 daemonize no 改为 daemonize yes，作用是默认启动时为后台启动。 protected-mode 属性redis3.2 版本后新增 protected-mode 配置，默认是 protected-mode yes，即开启。设置外部网络连接 redis 服务时，与该配置相关，如下： 关闭 protected-mode 模式，即改为：protected-mode no，此时外部网络可以直接访问（连接）。 开启 protected-mode 保护模式，需配置 bind ip 或者设置访问密码才能访问（连接）。 指定配置文件启动123456789[root@AndyCentOS7Basic ~]# /opt/redis-5.0.5/src/redis-server /opt/redis-5.0.5/redis.conf &amp;[1] 6209[root@AndyCentOS7Basic ~]# 6209:C 30 May 2019 09:25:05.539 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo6209:C 30 May 2019 09:25:05.539 # Redis version=5.0.5, bits=64, commit=00000000, modified=0, pid=6209, just started6209:C 30 May 2019 09:25:05.539 # Configuration loaded[1]+ Done /opt/redis-5.0.5/src/redis-server /opt/redis-5.0.5/redis.conf[root@AndyCentOS7Basic ~]# ps -ef |grep redisroot 6210 1 0 09:25 ? 00:00:00 /opt/redis-5.0.5/src/redis-server *:6379root 6215 1998 0 09:25 pts/2 00:00:00 grep --color=auto redis 开机启动vim /lib/systemd/system/redis.service1234567891011121314[Unit]Description=RedisAfter=network.target[Service]Type=forkingPIDFile=/var/run/redis_6379.pidExecStart=/opt/redis-5.0.7/src/redis-server /opt/redis-5.0.7/redis.confExecReload=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPIDPrivateTmp=true[Install]WantedBy=multi-user.target 官网文档官方文档 windows 版下载地址：https://github.com/microsoftarchive/redis/releases 目前2016年7月份发布的 Redis-x64-3.2.100 版本为最新版，下载 Redis-x64-3.2.100.msi 文件，一路默认配置安装即可。安装之后，服务即已自动启动，可以连接。","categories":[{"name":"redis","slug":"redis","permalink":"https://www.lovesofttech.com/categories/redis/"}],"tags":[{"name":"redis","slug":"redis","permalink":"https://www.lovesofttech.com/tags/redis/"}]},{"title":"卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016）","slug":"windows/winOffice2016Uninstall","date":"2019-05-26T16:00:00.000Z","updated":"2020-09-01T02:53:13.119Z","comments":true,"path":"windows/winOffice2016Uninstall.html","link":"","permalink":"https://www.lovesofttech.com/windows/winOffice2016Uninstall.html","excerpt":"安装激活，请参考：office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活","text":"安装激活，请参考：office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活 现象参照上面链接（安装并激活）已经安装了 Office 2016，打开一个同事给的 ppt 时提示字体缺失并且部分内容显示不全。被告之是用 wps 编辑的，用 wps 可以正常打开和编辑，于是乎安装了 wps，然后： 打开 Word 文档时，莫名其妙的提示有问题，每次打开都是这样，而且还不能保存文件，一保存就提示要另存为，但另存为也还是不行。 打开 Visio 则提示： 12345Microsoft Visio---------------------------An unspecified error occurred.---------------------------OK Excel 的现象是，不能输入任何字符。 当然，不知道是不是因为安装了 wps 之后才这样的，因为平时也不怎么用 office 系列软件，是过了好长一段时间要用 Word/Visio/Excel 的时候才发现有问题的。 这里得说明一下，wps 是一款很棒的国产软件，在移动端有很好的表现，还能自动保存阅读过的文件（大小有限制）。 也许只是 wps 跟 Office 2016 这个版本有冲突吧。 尝试于是开始了漫长的卸载和重装（踩坑） Office 2016 之旅。 卸载 wps，很顺利。 在控制面板用自带的卸载程序，打开之后，一直停留在一共4步中的第一步。索性有一次下班时没关机专门运行卸载 Office 2016 的程序，但不幸的是，直到第二天上班，还停留在第一步。 用腾讯的软件管家卸载，转了几下圈儿之后，安静了，程序列表依然还有。 先不管了，又过了几天，再去控制面板操作，现象也是转几下圈儿就安静了，程序列表依然还是有。 好吧，那就不卸载了，重新安装。安装过程跟新安装一样，但是还是不能正常使用，问题依旧。 安装 64 位版本，提示已经安装了 32 位版本了。说明还是没有卸载干净。 不知道跟使用破解版是否有关系。后来百度，发现好多人都遇到过，卸载不干净，重新安装时会出错。 解决参考官网：从 PC 卸载 Office 最终的解决办法是，使用微软官方提供的一个完全卸载 office 的 小工具，相当好使，用它卸载之后重启电脑，重新安装 64 位，熟悉的 Office 系列软件又能正常使用了，啦啦啦~~~，心情大好，赶紧记录下来，以防以后遇到同样的问题时手足无措，同时也希望能帮到大家。 微软官网，卸载工具下载链接 由于众所周知的网速问题，这里友情提供下载： 百度网盘链接 提取码: 87th 有两个文件： SetupProd_OffScrub.exe：从官方下载到的版本。 office2016-uninstall-assistant.diagcab：是我从网友提供的网盘下载的版本，用于卸载 Office 2016 以及 Visio 2016 绝对没问题，杠杠的。没有验证其它版本的 Office 的卸载情况，从官网的介绍来看，应该通吃才对。","categories":[{"name":"office","slug":"office","permalink":"https://www.lovesofttech.com/categories/office/"}],"tags":[{"name":"office","slug":"office","permalink":"https://www.lovesofttech.com/tags/office/"}]},{"title":"git 仓库从一个用户下迁移到另外一个用户下，包含提交历史","slug":"git/repoChangeUser","date":"2019-05-04T16:00:00.000Z","updated":"2020-09-01T02:53:12.967Z","comments":true,"path":"git/repoChangeUser.html","link":"","permalink":"https://www.lovesofttech.com/git/repoChangeUser.html","excerpt":"场景一，迁移仓库（含提交历史记录） 场景二，从旧库同步代码","text":"场景一，迁移仓库（含提交历史记录） 场景二，从旧库同步代码 场景一，迁移仓库（含提交历史记录） 需要从第一个仓库 repo-old 转移到第二个仓库 repo-current，包括提交历史记录，同时两个仓库在不同的用户下面。 执行 git remote add repo-current https://gitee.com/uncleAndyChen/repo-current.git，添加第二个仓库为远端仓库，这时，.git/config 文件内容为： 12345678910111213141516[core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true[remote &quot;origin&quot;] url = https://gitee.com/elsafly/repo-old.git fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master[remote &quot;repo-current&quot;] url = https://gitee.com/uncleAndyChen/repo-current.git fetch = +refs/heads/*:refs/remotes/gitee/* 执行 git push repo-current 之后，本地获取到的所有提交都会 push 到远端仓库 repo-current。 修改 git 配置 .git/config 为如下内容： 12345678910111213[core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true[remote &quot;origin&quot;] url = https://gitee.com/uncleAndyChen/repo-current.git fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master 配置修改完，需要在控制面板的 Control Panel\\User Accounts\\Credential Manager -&gt; Windows Credentials 下删除 gitee 的认证信息 再次执行 git 更新（pull 和 push）时会提示输入用户认证信息（登录）。 重新论证之后，就跟使用之前的仓库没什么区别了（提交历史都在）。现在，迁移仓库就算完成了。 场景二，从旧库同步代码在场景一的情况下，如果在操作 git push repo-current 时，还有一次或多次 commit 没有 pull，那么，接下来的操作，就是将这些 commit 同步到新的仓库。 执行 git remote add repo-old https://gitee.com/elsafly/repo-old.git，把旧仓库加为远端仓库。这时，配置内容如下： 12345678910111213141516[core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true[remote &quot;origin&quot;] url = https://gitee.com/uncleAndyChen/repo-current.git fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = origin merge = refs/heads/master[remote &quot;repo-old&quot;] url = https://gitee.com/elsafly/repo-old.git fetch = +refs/heads/*:refs/remotes/gitee/* pull 原来的仓库，会报错： 1234git pull repo-old&quot;...You asked to pull from the remote &apos;elsafly&apos;, but did not specify a branch. Because this is not the default configured remote for your current branch, you must specify a branch on the command line. 解决：将 [branch &quot;master&quot;] 节点的 remote 指向改为需要 pull 的远端仓库名，即改为 repo-old，修改之后，内容如下： 12345678910111213141516[core] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true[remote &quot;origin&quot;] url = https://gitee.com/uncleAndyChen/repo-current.git fetch = +refs/heads/*:refs/remotes/origin/*[branch &quot;master&quot;] remote = repo-old merge = refs/heads/master[remote &quot;repo-old&quot;] url = https://gitee.com/elsafly/repo-old.git fetch = +refs/heads/*:refs/remotes/gitee/* 然后执行 git pull 如果本地有修改，则会提示 merge，如果有冲突，还需要手动解决冲突。 然后，恢复配置，继续用 origin 的远端仓库。将 remote = repo-old 改回 remote = origin 执行 git push，达到同步目的。 注意事项 在都是 gitee 的情况下，要使用不同用户下的仓库，在切换仓库地址之后，需要在控制面板的 Control Panel\\User Accounts\\Credential Manager -&gt; Windows Credentials 下删除认证信息，然后再执行 git 更新（pull 和 push），执行更新时会提示输入用户认证信息（登录）。 否则会报错：123git pull repo-oldremote: You do not have permission to pull from the repository via HTTPSfatal: Authentication failed for &apos;https://gitee.com/elsafly/repo-old.git/&apos;","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"},{"name":"team","slug":"git/team","permalink":"https://www.lovesofttech.com/categories/git/team/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"}]},{"title":"在 win10 下修改 hosts 文件","slug":"windows/win10Hosts","date":"2019-04-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.107Z","comments":true,"path":"windows/win10Hosts.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Hosts.html","excerpt":"由于 hosts 文件为系统文件，默认只读且不让修改，修改它需要技巧。","text":"由于 hosts 文件为系统文件，默认只读且不让修改，修改它需要技巧。 解决hosts文件无法修改问题修改文件属性 进入 hosts 文件所在目录：C:\\Windows\\System32\\drivers\\etc 点击 hosts 文件 -&gt; 右键 -&gt; 属性 -&gt; 安全 -&gt; 高级 -&gt; 更改权限 -&gt; 添加 -&gt; 选择主体 -&gt; 高级 -&gt; 立即查找 -&gt; 找到当前用户的账号 -&gt; 确定 -&gt; 确定 -&gt; 完全控制 -&gt; 确定 替换将 hosts 文件复制到非系统目录，修改，然后复制到原目录，替换原来的文件即可。 借助 notepad++修改后保存的时候，提示需要重启，按照提示重启之后就可以随意修改了。 修改之后，刷新DNS缓存进入cmd -&gt; 执行 ipconfig /flushdns 不过，一般重新打开浏览器即会生效。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"hosts","slug":"windows/hosts","permalink":"https://www.lovesofttech.com/categories/windows/hosts/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"hosts","slug":"hosts","permalink":"https://www.lovesofttech.com/tags/hosts/"}]},{"title":"c++ 文章目录","slug":"cpp/index","date":"2019-03-18T16:00:00.000Z","updated":"2020-09-01T02:53:12.907Z","comments":true,"path":"cpp/index.html","link":"","permalink":"https://www.lovesofttech.com/cpp/index.html","excerpt":"有关 c++ 的使用经验，目前主要是有关图像处理和人工智能相关。","text":"有关 c++ 的使用经验，目前主要是有关图像处理和人工智能相关。 windows10 64位+vs2017+CMake 编译 opencv-4.0.1 和 opencv_contrib-4.0.1","categories":[{"name":"cpp","slug":"cpp","permalink":"https://www.lovesofttech.com/categories/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://www.lovesofttech.com/tags/cpp/"}]},{"title":"windows10 64位+vs2017+CMake 编译 opencv-4.0.1 和 opencv_contrib-4.0.1","slug":"cpp/win10OpencvAndOpencvContribMake","date":"2019-03-18T16:00:00.000Z","updated":"2020-09-01T02:53:12.907Z","comments":true,"path":"cpp/win10OpencvAndOpencvContribMake.html","link":"","permalink":"https://www.lovesofttech.com/cpp/win10OpencvAndOpencvContribMake.html","excerpt":"本文介绍操作过程。如果不想麻烦，可以用编译好的版本，可以省去诸多麻烦。百度网盘下载，提取码：3wv2。csdn 备用下载链接：https://download.csdn.net/download/runandrun/11038165","text":"本文介绍操作过程。如果不想麻烦，可以用编译好的版本，可以省去诸多麻烦。百度网盘下载，提取码：3wv2。csdn 备用下载链接：https://download.csdn.net/download/runandrun/11038165 下载 vs2017vs2017 下载页面，含 for mac 版下载之后，只有1.22M，是在线安装版本，如果只是做 openCV 相关开发，建议安装内容： 勾选大红框的两个复选框。 如果要自己编译 OpenCV，再额外勾选win10SDK。 下载 opencv 和 opencv_contrib opencv 从官网下载即可，windows 环境，下载 Win pack 包，是一个自解压包，包括源码和编译之后的文件。openCV官网下载页面 opencv_contrib，官网没有编译版本，需要自己编译。记得下载的版本要和 openvc 完全一致。opencv_contrib github 下载页面 下载我准备的三个文件，保证你喜欢由于国内网络原因，从 github 下载非常慢， 我上午10点多开始，直到中午吃了个午饭回来还没有下载完。 百度网盘下载，提取码：3wv2 下载解压后会得到三个文件： opencv+opencv_contrib-4.0.1+win10-x64+vs2017-build.zip：我编译好的版本，理论上应该可以直接用，如果想要自己折腾，同时你的下载速度跟我一样，下面两个文件会帮到你。 opencv_contrib-4.0.1.zip cache.rar：用 CMake 编译的时候，会有很多文件下载不下来，可能要反复下载才行，这个文件就是编译时需要的文件，解压后替换 openCV 源码目录下的 .cache 目录，然后重新 Configure。 下载 CMake 官方下载页面 建议下载解压版本，下载解压之后直接能用 java 和 python 环境opencv 是支持 java 和 python 的，编译的时候会找相关的运行环境，我电脑上都配置了的。如果不配置不知道是什么情况，也许会跳过，如果只用 c++ 的话，跳过就跳过吧。 CMake 编译打开解压目录下的 bin/cmake-gui.exe Where is the source code 选择 opencv-4.0.1 的源码目录。 Where to build the binaries 设置编译后的文件存放目录。 点击 Configure，通常由于网络问题，会有很多错，建议下载我的catch文件：百度网盘下载，提取码：3wv2 第一次点击需要设置 vs 版本。 完全没有错之后，设置三项： 找到BUILD_opencv_world项，打上勾。 找到OPENCV_EXTRA_MODULES_PATH项，设置为opencv_contrib目录下的modules文件夹。 找到OPENCV_ENABLE_NONFREE项，打上勾。 设置好后再次点击configure按钮，然后点击generate按钮。 踩的坑 提示：Error in configuration process, project files may be invalid。 是因为把 Where is the source code 设置成 opencv_contrib 的源码目录了，其实是要选 opencv 的源码目录。当时编译的是 opencv_contrib3.1.0。 vs2017 编译准备好10G以上的硬盘空间。 CMake 成功编译完成之后，会在输出目录（在 Where to build the binaries 设置）生成 visual studio 工程，直接在该目录打开解决方案：OpenCV.sln（当然是用vs2017打开）。 在 Solution Explorer窗口，解决方案右键-&gt;Build Solution。这个过程很慢，如果报错，那是因为 CMake 编译的时候有错，需要仔细查看，通过不断的Configure，把错误排除之后再重新Generate直到成功就行了。出现错误，通常是因为有文件没有下载下来导致。 然后，选择菜单 Build-&gt;Batch Build...。 勾选两个 INSTALL 项目-&gt;Build。 编译完成，会生成一个 install 目录，这个目录下的文件就是我们需要的库文件。可以把这个目录 copy 到某处并重新命名为 opencv4.0.1 以备用。 配置 vs2017 环境随便建一个项目，最好建一个空项目。一图胜千言，下面仅用截图来说明opencv项目需要配置的项，就不详细写了，如果不明白，可以在网上找一下相关文章，挺多的。 需要注意的是，vs2017配置好之后，需要重启vs2017才生效。 我编译之后的目录是：C:\\study\\openCV\\opencvv4.0.1_build\\install，我直接用的，下面的截图的目录就是这个，你需要替换成你自己的目录。 默认是x86，如果在 64 位操作系统下开发（应该都64位了吧，还有在32位操作系统下做开发的吗？），建议修改为x64，本文编译和配置都只针对x64 创建一个空项目 显示属性管理窗口 修改默认配置属性，Property Manager -> 展开项目 -> Debug | x64 -> Microsoftt.Cpp.x64.user -> 右键 -> Properties 配置 OpenCV 的包含目录，点击 Edit... 打开编辑配置窗口 要配置 include 目录本身，和该目录下的所有子目录，OpenCV4.x 的 include 下只有一个子目录，如图，而 OpenCV3.x 有两个，请根据实际情况配置。 配置 OpenCV 库目录，同样的，打开编辑配置窗口操作 复制文件名到这里，一行一个。这两个文件位于：CMake编译输出目录下/install/x64/vc15/lib。如果是 OpenCV3.x，则不能把 opencv_world345.lib 和 opencv_world345d.lib 同时加入，项目运行时会报错，只加带d的那个文件名，其中345是版本号。 操作系统环境变量，path 添加配置项 友情提示：看到这里，如果按照上面的步骤操作的，该重启 vs2017 了，重启之后配置才会生效。 测试在刚才建的项目下，添加一个 cpp 文件，内容如下：1234567891011121314#include &lt;opencv2/opencv.hpp&gt;#include &lt;iostream&gt;using namespace cv;using namespace std;int main(int argc, char** argv)&#123; Mat src = imread(&quot;C:/workspace/c++/images/img01.jpg&quot;); imshow(&quot;opencv demo&quot;, src); waitKey(0); destroyAllWindows(); return 0;&#125; 其中 src 要指向你本地目录的一张图片。 创建新项目时，默认是x86，会提示有错，改成x64即可 改成x64正常编译之后运行，如果图片正常打开，恭喜你，配置正常，可以安心撸代码了。 后记 2019-04-12新创建一个项目，找不到库引用。也就是说之前的配置没有生效。按照之前的操作，打开配置信息（位于 Property Manager -&gt; 展开项目 -&gt; Debug | x64 -&gt; Microsoftt.Cpp.x64.user -&gt; 右键 -&gt; Properties），原来配置的信息都在。 单独配置该项目 但是打开项目属性：Solution Explorer -&gt; 在项目名下点击右键 -&gt; Properties，发现相关配置信息都没有。于是在这里重新配置一遍，具体操作与之前的配置一样。如此操作之后，库引用就正常了。 单独配置该项目 后来我才发现，其实是我疏忽了一点，新创建的项目（解决方案），默认是 x86 的，而我之前配置的是 x64，这两种编译模式需要分别配置，x86 的还没有配置过，所以在 x86 模式下，库引用是找不到的。 所以，新创建的项目（解决方案），需要首先把编译模式选成 x64，改完之后，如果代码显示依然为红色（我用了 ReSharper 插件），重新打开工程即可。 当然，如果你在 32 位操作系统下做开发，操持默认就好，只是记得要针对 x86 做配置（位于 Property Manager -&gt; 展开项目 -&gt; Debug | Win32 -&gt; Microsoft.Cpp.Win32.user）。 项目编译模式，默认为 x86，如果没有针对 x86 做 OpenCV 的配置，代码会报错，提示找不到引用（包含）文件","categories":[{"name":"opencv","slug":"opencv","permalink":"https://www.lovesofttech.com/categories/opencv/"},{"name":"cpp","slug":"opencv/cpp","permalink":"https://www.lovesofttech.com/categories/opencv/cpp/"}],"tags":[{"name":"cpp","slug":"cpp","permalink":"https://www.lovesofttech.com/tags/cpp/"},{"name":"opencv","slug":"opencv","permalink":"https://www.lovesofttech.com/tags/opencv/"}]},{"title":"MacOS 端口占用情况，其中 netstat 命令与 CentOS 略有出入","slug":"mac/macPort","date":"2019-03-10T16:00:00.000Z","updated":"2020-09-01T02:53:13.065Z","comments":true,"path":"mac/macPort.html","link":"","permalink":"https://www.lovesofttech.com/mac/macPort.html","excerpt":"本文只讲两个命令：lsof 和 netstat。","text":"本文只讲两个命令：lsof 和 netstat。 lsof -i用默认用户（非root）登录终端，查看 88 端口占用情况，查不到，然后加 sudo 之后，就可以查到，因为 88 端口是被 root 占用的，所以普通用户查不到。 用法： lsof -i:端口 lsof -i tcp:端口 123456789101112macOS:~ andy$ lsof -i:88macOS:~ andy$ sudo lsof -i:88 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEkdc 85 root 4u IPv6 0xc411381cfd4b2b33 0t0 UDP *:kerberoskdc 85 root 5u IPv6 0xc411381cfbfc22db 0t0 TCP *:kerberos (LISTEN)kdc 85 root 6u IPv4 0xc411381cfd4b287b 0t0 UDP *:kerberoskdc 85 root 7u IPv4 0xc411381cfbfc6d9b 0t0 TCP *:kerberos (LISTEN)macOS:~ andy$ sudo lsof -i tcp:88COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEkdc 85 root 5u IPv6 0xc411381cfbfc22db 0t0 TCP *:kerberos (LISTEN)kdc 85 root 7u IPv4 0xc411381cfbfc6d9b 0t0 TCP *:kerberos (LISTEN)macOS:~ andy$ 其中 kdc 是 Kerberos 应用，默认占用 88 端口。 netstat在 linux 上面使用的方法通常为：netstat -nltp-a (all)显示所有选项，默认不显示LISTEN相关-t (tcp)仅显示tcp相关选项-u (udp)仅显示udp相关选项-n 拒绝显示别名，能显示数字的全部转化成数字。-l 仅列出有在 Listen (监听) 的服務状态 -p 显示建立相关链接的程序名-r 显示路由信息，路由表-e 显示扩展信息，例如uid等-s 按各个协议进行统计-c 每隔一个固定时间，执行该netstat命令 MacOS 上，与 linux 不一样在Mac上执行该命令，会报如下错误：123456789netstat: option requires an argument -- pUsage: netstat [-AaLlnW] [-f address_family | -p protocol] netstat [-gilns] [-f address_family] netstat -i | -I interface [-w wait] [-abdgRtS] netstat -s [-s] [-f address_family | -p protocol] [-w wait] netstat -i | -I interface -s [-f address_family | -p protocol] netstat -m [-m] netstat -r [-Aaln] [-f address_family] netstat -rs [-s] 在Mac上正确使用的方法是：即-f需要加上地址族，-p需要加上协议TCP或者UDP等12345678netstat [-AaLlnW] [-f address_family | -p protocol]netstat [-gilns] [-v] [-f address_family] [-I interface]netstat -i | -I interface [-w wait] [-c queue] [-abdgqRtS]netstat -s [-s] [-f address_family | -p protocol] [-w wait]netstat -i | -I interface -s [-f address_family | -p protocol]netstat -m [-m]netstat -r [-Aaln] [-f address_family]netstat -rs [-s] 如果需要查询inet：netstat -anvf inet 如果需要查询TCP：netstat -anvp tcp 如果需要查询UDP：netstat -anvp udp 12345678910111213141516171819202122232425262728macOS:~ andy$ netstat -anvp tcp|grep 88tcp4 0 0 127.0.0.1.3306 127.0.0.1.54532 ESTABLISHED 407026 146988 89 0 0x0102 0x0000000ctcp4 0 0 127.0.0.1.54532 127.0.0.1.3306 ESTABLISHED 406948 146988 2249 0 0x0002 0x00000008tcp4 0 0 127.0.0.1.54313 127.0.0.1.54530 ESTABLISHED 408269 146988 1473 0 0x0102 0x0000000ctcp4 0 0 127.0.0.1.54530 127.0.0.1.54313 ESTABLISHED 408300 146988 2248 0 0x0102 0x00000008tcp4 0 0 127.0.0.1.54527 127.0.0.1.54528 ESTABLISHED 408300 146988 1473 0 0x0102 0x00000004tcp4 0 0 127.0.0.1.54528 127.0.0.1.54527 ESTABLISHED 408300 146988 2249 0 0x0002 0x00000000tcp4 0 0 *.32445 *.* LISTEN 131072 131072 388 0 0x0000 0x00000006tcp4 0 0 *.88 *.* LISTEN 131072 131072 85 0 0x0180 0x00000006tcp6 0 0 *.88 *.* LISTEN 131072 131072 85 0 0x0180 0x00000006macOS:~ andy$ netstat -anvp udp|grep 88udp4 0 0 *.61588 *.* 786896 9216 37 0 0x0180 0x00000000udp4 0 0 *.88 *.* 786896 9216 85 0 0x0180 0x00000004udp6 0 0 *.88 *.* 786896 9216 85 0 0x0180 0x00000004macOS:~ andy$ netstat -anvf inet|grep 88tcp4 0 0 192.168.1.6.55088 120.198.201.211.80 ESTABLISHED 131072 131072 661 0 0x0102 0x00020000tcp4 0 0 127.0.0.1.3306 127.0.0.1.54532 ESTABLISHED 407026 146988 89 0 0x0102 0x0000000ctcp4 0 0 127.0.0.1.54532 127.0.0.1.3306 ESTABLISHED 406948 146988 2249 0 0x0002 0x00000008tcp4 0 0 127.0.0.1.54313 127.0.0.1.54530 ESTABLISHED 408269 146988 1473 0 0x0102 0x0000000ctcp4 0 0 127.0.0.1.54530 127.0.0.1.54313 ESTABLISHED 408300 146988 2248 0 0x0102 0x00000008tcp4 0 0 127.0.0.1.54527 127.0.0.1.54528 ESTABLISHED 408300 146988 1473 0 0x0102 0x00000004tcp4 0 0 127.0.0.1.54528 127.0.0.1.54527 ESTABLISHED 408300 146988 2249 0 0x0002 0x00000000tcp4 0 0 *.32445 *.* LISTEN 131072 131072 388 0 0x0000 0x00000006tcp4 0 0 *.88 *.* LISTEN 131072 131072 85 0 0x0180 0x00000006udp4 0 0 *.61588 *.* 786896 9216 37 0 0x0180 0x00000000udp4 0 0 *.88 *.* 786896 9216 85 0 0x0180 0x00000004","categories":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/categories/MacOS/"},{"name":"port","slug":"MacOS/port","permalink":"https://www.lovesofttech.com/categories/MacOS/port/"}],"tags":[{"name":"port","slug":"port","permalink":"https://www.lovesofttech.com/tags/port/"},{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/tags/MacOS/"}]},{"title":"hexo 标签、分类，大小写问题导致404错误，原因分析和解决","slug":"general/hexoTagsAndCategories404Error","date":"2019-03-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.950Z","comments":true,"path":"general/hexoTagsAndCategories404Error.html","link":"","permalink":"https://www.lovesofttech.com/general/hexoTagsAndCategories404Error.html","excerpt":"在 windows 下一切正常，发布到 github 不正常。","text":"在 windows 下一切正常，发布到 github 不正常。 前提我是直接将 hexo g 生成的 public 目录提交至 github 的，没有使用集成工具。 现象在 windows 下，对标签、分类的修改，如果仅限于字母的大小写：没有增加和减少字母，只是改变了某一个或多个字母的大小写，就会出现这样的情况： 在 windows 下 hexo s 预览，标签和分类均正常。 发布到 github 之后，就不正常了，显示 404，到 tabs 和 categories 目录下去看，发现还是之前的大小写。 也就是说，对标签、分类的仅限于大小写的修改，不会同步至 github。 而在 windows 下，tags 和 categories 目录下的文件夹的大小写是被同步修改了的。 原因分析 应该是 windows 对字母不区分大小写，表面上看是改过的大小写，实际上 windows 记录的是之前的名称。不光是 git 提交到 linux 有这样的问题，svn 提交到 linux 也有同样的问题。 修改文件名称也是类似的。 解决知道原因就好办了。这里举例说明，我之前有一个 tag 和 category，名称为 Java，现在我需要将其改为 java。在文章中是这样设置的：12tags: [Java]categories: [Java] 直接到 public/tags 和 public/categories 下，将 Java 目录删除并 commit 和 push。 修改为新名称: java 12tags: [java]categories: [java] 如果在执行第1步之前，已经修改成新名称，并且已经执行 hexo g，那么，public/tags 和 public/categories 下对应的目录将会是 java，将其删除后，commit 和 push。 执行 hexo g，再次 commit 和 push。 提交最新修改至 github，经验 在 public 目录下创建后缀为 sh 的脚本文件 deployDirectly.sh，文件内容如下： 1234567git pull # 如果每次都是在同一台电脑上操作，则不需要 git pull。cd ../hexo gcd ./publicgit add .git commit -m &apos;update blog&apos;git push 需要提交修改时： 在 windows 下，直接双击 deployDirectly.sh，会调用 Git Bash 来执行，类似 linux 下的终端。 Git Bash，需要安装工具 git for windows 如果在 linux 或者 MacOS 下： 首次运行需要先赋予可执行权限：切换到 public 目录，执行 chmod +x deployDirectly.sh 然后，在 public 目录，执行：./deployDirectly.sh。 注意：MacOS 下需要在命令前加 sudo 以获取管理员权限。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/categories/hexo/"},{"name":"experience","slug":"hexo/experience","permalink":"https://www.lovesofttech.com/categories/hexo/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"博客改动日志","slug":"general/blogLog","date":"2019-03-08T16:00:00.000Z","updated":"2020-09-01T02:53:12.941Z","comments":true,"path":"general/blogLog.html","link":"","permalink":"https://www.lovesofttech.com/general/blogLog.html","excerpt":"较大改动才会记录一下。","text":"较大改动才会记录一下。 2020-08-31本博客的留言功能基于 gitalk， 而 gitalk 又是基于 github 的 issue。由于国内网络原因，在国内访问 github 很慢，gitalk 访问 github 的 api 经常超时，导致留言功能区直接显示：Error: Network Error。 因此，暂时关闭留言功能。 2020-07-09图标库访问出问题，现象如下： qq 浏览器，提示：正在建立安全链接 firefox 浏览器，提示：正在与 use.fontawesome.com 进行TLS握手… 原因是我引用了 fontawesome 最新的样式：https://use.fontawesome.com/releases/v5.5.0/css/all.css（将此文件下载到本地也一样会慢），这样就导致每访问一篇文章都需要等好久才出来，所以，暂时放弃使用 fontawesome 最新的样式（不再引用 all.css 这个文件），只用基础图标。 所以，左侧菜单前的图标，原来每个菜单都不一样，现在则有好多重复，暂时将就一下，可访问性和访问速度更重要。 2019-11-05 为了搜索引擎优化，修改了文章路径的生成规则，现所有文章的URI都以.html结尾，如此一来，所有文章的访问量全部洗白（^o^成都话，就是全部清空了），相当于重新开始记数。 应用了自动生成 sitemap 插件（hexo-generator-baidu-sitemap、hexo-generator-sitemap）和防止爬虫爬外链插件（hexo-autonofollow）。 各大分类的目录索引文件，从各自目录下的 index.md 复制了一份儿到根目录并起名为目录名，减少访问路径层级，优化体验，也是搜索引擎优化需要。 2019-09-17因为 header 与 footer 背景区域比较大，虽然极客蓝感觉很舒服，但因为区域大，还是觉得比较扎眼，所以，除了把头部区域在保持原来体验的情况下尽量减小之外，还把头部和尾部背景颜色调成了浅白色，走大众化风格路线。 2019-09-16 今天把页面主颜色改为 ant design pro 里定义的极客蓝 #2F54EB，感觉很棒。 完善了文章目录的展示效果： 加了边框，目录块与文章内容块显得非常明显，阅读起来更象读有目录的 Word 与 PDF 文档了。 默认展开，这样目录比较长时默认出现滚动条。之前是文章向上滚动到标题看不到的时候才会展开。 当左侧菜单展开时，修改目录块的样式，使之看起来变化并不大，只是窄了一些而已。 左侧菜单添加了常用文章分类链接，方便查阅，同时看起来也不象以前那么空了，有种很充实的感觉。 2019-09-13今天中秋，因为一直在下雨，没有出门，在家待了一天，有了下面的成果。 阅读体验优化： 照顾大多数人的阅读习惯，将文章目录移至左边，保持与 Word 文档、PDF 文档的导航窗格位置一致。 顶部 header，增加菜单项。 这样在阅读文章时，即使在隐藏左侧菜单的情况下，也能让访客很容易找到本站相关文章。 另外，顶部菜单不象以前那么空了，更象是一个完整的网站。 为达以上目的，到 hexo 官网找类似的主题，总有不满意的地方，后来还是决定自己动手。有道是：自己动手，丰衣足食！ 2019-03-10完善标签，解决标签大小写问题导致的404错误。 2019-03-09以下工作从3月6日开始，利用业余时间断断续续操作，到今天终于全部完成。 添加站点访客统计、总访问统计、每篇文章阅读量统计。 添加字数统计、阅读时长插件。 重新组织文章目录结构。 完成 本博客的文章分类列表，点击某一类别会进入相关文章列表。 完成 本博客的所有文章列表。 完善每篇文章的摘要信息。","categories":[{"name":"改动日志","slug":"改动日志","permalink":"https://www.lovesofttech.com/categories/改动日志/"}],"tags":[{"name":"改动日志","slug":"改动日志","permalink":"https://www.lovesofttech.com/tags/改动日志/"}]},{"title":"本博客已于2019年3月6日开启统计功能","slug":"general/busuanzi","date":"2019-03-06T16:00:00.000Z","updated":"2020-09-01T02:53:12.942Z","comments":true,"path":"general/busuanzi.html","link":"","permalink":"https://www.lovesofttech.com/general/busuanzi.html","excerpt":"","text":"统计功能由不蒜子提供，非常感谢不蒜子作者。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"关于博主","slug":"aboutMe","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.903Z","comments":true,"path":"aboutMe.html","link":"","permalink":"https://www.lovesofttech.com/aboutMe.html","excerpt":"北漂9年，在北京一共就职过四家公司，按先后顺序分别是：联达动力、艺龙网、中青旅、当当网。 2011年来成都定居。 用 C#、PHP、Java 做过 B/S 项目，也用 React + Antd 写过纯前端项目。 当过技术小白、就职过资深工程师、做过技术经理、从零组建过技术团队、创过业。 除了管开发，也管过运维（CentOS + Java/PHP + Nginx + MySQL/Oracle）。","text":"北漂9年，在北京一共就职过四家公司，按先后顺序分别是：联达动力、艺龙网、中青旅、当当网。 2011年来成都定居。 用 C#、PHP、Java 做过 B/S 项目，也用 React + Antd 写过纯前端项目。 当过技术小白、就职过资深工程师、做过技术经理、从零组建过技术团队、创过业。 除了管开发，也管过运维（CentOS + Java/PHP + Nginx + MySQL/Oracle）。 沉淀自2001年毕业以来，一直从事软件相关的工作，见证了互联网在中国的蓬勃发展，见证了技术给生活带来的方方面面的改变。 作为一个职场老兵，自己沉淀下来的： 对技术的理解、热爱和执着； 管理技术团队的心路历程； 创业的艰辛与不易； 选择比努力更重要的深刻理解； 还有你正在看的这个技术博客。 写博客 本技术博客，我主要用来记录自己在技术方面的一些经验心得、记录自己在团队管理方面的体会。对于具体的技术，除了方便自己查阅，还希望能帮到同行。 技术日新月异，对技术的掌握和把控，犹如逆水行舟，不进则退。要想做好技术工作，需要具备快速学习的能力，也需要掌握一定的学习方法和技巧。 写博客是一种非常好的巩固学习成果的方式，能帮助自己更好的理解技术，也能方便自己在遇到同样的技术点疑问时，可以直接查阅，这样能节省非常多的时间。 对于一篇技术文章，整理的过程，就是再学习再思考的过程。 如果需要培训新人，写成技术文章，更是能够达到事半功倍的效果。 更重要的是，如果想让自己的语言组织能力不断的得到提升，那就多写文章吧，多把自己脑子里的想法通过文章记录下来，想法不一定是与技术有关。为达提升自己的目的，建议： 本着精益求精的心态，努力把文章写好。 多站在读者的立场去思考。 多听取读者的反馈，比如可以请熟悉的人读自己的文章，然后听取他（她）的见解。 如果有时间，隔一段时间再来读自己的文章，一定会发现有写得不好的地方，如果觉得有必要，可以不断的对文章进行优化。 作为技术管理者以下四点，正在努力践行： 第一，要想做好技术工作，需要有不认输的心态。如果你爱折腾、爱专研、热爱技术、热爱运动（毕竟身体好了才有更多精力去折腾技术），那么我相信你在技术这条路上会走得更远。 第二，对于技术管理，首先需要自己在技术领域有一定建树，要有拿得出手的技能，至少在架构、程序设计方面应该是一个老手，这样才能更好的带领团队做出成绩。 什么设计模式、面向对象设计原则，什么 Java、Pythone、Objective-C、Swift，什么 MySQL、Oracle、Redis、MongoDB，什么 react、react-native、vue，还有 android 和 ios 原生开发，这些应该信手拈来。 呵呵，开玩笑的哈。要想后端与前端都掌握好还是挺不容易的，一般在后端和前端有一端做到精通就不错了，在精通一端的同时适当掌握另外一端，对工作帮助很大，尤其对技术管理者。 第三，如果你同时是一个业务专家，那么在这个业务领域，你就更容易做出成绩来，毕竟技术是为业务服务的，只有能出业绩的技术才是好技术，不是吗？ 第四，需要具备各种软技能，能把各方资源协调到位，把团队管理好，把团队中的人管理好，最终把事情做成，把事情做成是关键。 路漫漫其修远兮，吾将上下而求索。 欢迎来撩 ⊙０⊙ github：https://github.com/uncleAndyChen 码云（gitee）：https://gitee.com/uncleAndyChen CSDN：https://blog.csdn.net/runAndRun 邮箱：andy@lovesofttech.com 关于本博客请点击移步","categories":[{"name":"about me","slug":"about-me","permalink":"https://www.lovesofttech.com/categories/about-me/"}],"tags":[{"name":"about me","slug":"about-me","permalink":"https://www.lovesofttech.com/tags/about-me/"}]},{"title":"本博客的文章分类列表，点击某一类别会进入相关文章列表","slug":"classifyIndex","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.905Z","comments":true,"path":"classifyIndex.html","link":"","permalink":"https://www.lovesofttech.com/classifyIndex.html","excerpt":"本文列的是文章分类，点击进入某一分类文章之后，会看到该分类下的所有文章列表。","text":"本文列的是文章分类，点击进入某一分类文章之后，会看到该分类下的所有文章列表。 友情提示：如果要在新窗口中打开以下链接，请按住 Ctrl 键再点相关链接。 Java开发，文章目录 MyBatis，文章目录 日常开发中有关 MySQL 的一些经验总结 数据库文章汇总目录 React 技术栈（全家桶）学习心得分享，文章目录 前端相关，文章目录 CentOS/linux，文章目录 Linux + Nginx + MySQL + PHP 文章目录 git 文章目录 windows 环境下的日常工作，文章目录 技术之外的话题，文章目录 日常经验汇总，文章目录 工作感言/经验，文章目录 苹果系统（MacOS），文章目录 python，文章目录 软件测试，文章目录 c++ 文章目录 redis 目录","categories":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/categories/index/"}],"tags":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/tags/index/"}]},{"title":"工作 & 生活","slug":"dailyLives/jobAndLivesIndex","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.911Z","comments":true,"path":"dailyLives/jobAndLivesIndex.html","link":"","permalink":"https://www.lovesofttech.com/dailyLives/jobAndLivesIndex.html","excerpt":"与具体技术无关。","text":"与具体技术无关。 软件工程师个人品质、团队精神，你都做到了哪些？ 在工作中，如何能更好的与他人协作 从【技术岗位】招聘的用人方视角，看求职这件事–想要有效且高效求职，就应该了解一下 给刚入职场同学的建议 如何在更少的时间内完成更多的工作 火炉原则 高效能人士的七个习惯–定义 工作中的一些小经验 团队在开发中应该遵循的一些规则，以及部分经验总结 提问的智慧 聊聊工程师的影响力 分享正能量——《肖申克的救赎》 foobar2000，一款 Windows 平台下的高级音频播放器，免费","categories":[{"name":"lives","slug":"lives","permalink":"https://www.lovesofttech.com/categories/lives/"},{"name":"job","slug":"lives/job","permalink":"https://www.lovesofttech.com/categories/lives/job/"}],"tags":[{"name":"lives","slug":"lives","permalink":"https://www.lovesofttech.com/tags/lives/"},{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"}]},{"title":"技术之外的话题，文章目录","slug":"dailyLives/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.910Z","comments":true,"path":"dailyLives/index.html","link":"","permalink":"https://www.lovesofttech.com/dailyLives/index.html","excerpt":"本目录下的文章与技术无关，但与生活、个人品质有关。","text":"本目录下的文章与技术无关，但与生活、个人品质有关。 分享正能量——《肖申克的救赎》 foobar2000，一款 Windows 平台下的高级音频播放器，免费","categories":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/categories/dailyLives/"}],"tags":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/tags/dailyLives/"}]},{"title":"前端相关，文章目录","slug":"frontend/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.935Z","comments":true,"path":"frontend/index.html","link":"","permalink":"https://www.lovesofttech.com/frontend/index.html","excerpt":"含Node与ES6，还有几篇关于是否要放弃React Native的文章，如果正在犹豫是否要选择React Native，可以看看。","text":"含Node与ES6，还有几篇关于是否要放弃React Native的文章，如果正在犹豫是否要选择React Native，可以看看。 环境配置及一般性文章 CentOS 7.5 安装配置 Node ES6 循环之 iterator 和 yield JS 开发链接 Nodejs React Native 已死？被Airbnb抛弃之后，Udacity也弃用了 Airbnb 宣布放弃使用 React Native，回归使用原生技术 Udacity也弃用React Native了！ JS 笔记 前端开发–好记性不如“烂文档” react 相关 React 技术栈（全家桶）学习心得分享，文章目录","categories":[{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/categories/Node/"}],"tags":[{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/tags/Node/"}]},{"title":"数据库文章汇总目录","slug":"database/database","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.918Z","comments":true,"path":"database/database.html","link":"","permalink":"https://www.lovesofttech.com/database/database.html","excerpt":"以 MySQL 和 MyBatis 为主。","text":"以 MySQL 和 MyBatis 为主。 日常开发中有关 MySQL 的一些经验总结 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验 MyBatis 在实际工作中的使用经验 MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MBG 生成的 mapper 支持写入记录后返回主键值的配置 MyBatis 开发中，善用通过 MBG 生成的 *Example 类 MyBatis 普通知识点记录 PowerDesigner PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例 PowerDesigner 样式设置，以及样式参考值 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 redis redis5.0.5 在 CentOS7 上的安装和使用 MongoDB CentOS7 下 安装配置 MongoDB","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"日常开发中有关 MySQL 的一些经验总结","slug":"database/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.920Z","comments":true,"path":"database/index.html","link":"","permalink":"https://www.lovesofttech.com/database/index.html","excerpt":"日常开发中有关 MySQL 的一些经验总结","text":"日常开发中有关 MySQL 的一些经验总结 MySQL 配置项 lower_case_table_names，数据库命名规则 MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"日常经验汇总，文章目录","slug":"general/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.951Z","comments":true,"path":"general/index.html","link":"","permalink":"https://www.lovesofttech.com/general/index.html","excerpt":"一些工作中的经验分享。","text":"一些工作中的经验分享。 hexo 博客改动日志 CentOS 7.5 通过源码自动发布 hexo 博客 Hexo + gitee 免费个人博客搭建 hexo 使用经验汇总 本博客已于2019年3月6日开启统计功能 hexo 标签、分类，大小写问题导致404错误，原因分析和解决 Hexo 个人博客使用 github pages 和 coding.net 静态网站，同时兼顾国内外访问以及 google 和 baidu 爬虫 IDE IntelliJ IDEA，使用心得汇总 sts（Spring Tool Suite）/Eclipse 使用 svn svn递归添加目录、子目录和文件 svn 在 CentOS6 安装以及项目管理 JIRAJIRA 精选插件 日常经验日常经验–好记性不如烂文档 其他 i5 7200u，核显（集成显卡） Intel HD 620，win7 64 位系统安装折腾记录 软件产品版本号制定规则 Byte KB MB GB的转换关系 MarkDown 使用经验 正则表达式全部符号解释 阿里云，建站产品比较 github 访问加速","categories":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/categories/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"git 文章目录","slug":"git/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.966Z","comments":true,"path":"git/index.html","link":"","permalink":"https://www.lovesofttech.com/git/index.html","excerpt":"git 使用经验、基于 git 的项目管理经验","text":"git 使用经验、基于 git 的项目管理经验 在两个 git server 之间同步项目的代码 CentOS 7.5 安装配置 git CentOS 7.5 借助 Gitolite 管理 Git 项目 CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码 git 在工作中的基本用法 Git 用户名邮箱的全局配置和单仓库配置 github pages 绑定自己的域名 修改 github 项目的程序语言 git 回车换行在 windows 与 unix 下不一致的解决方案 使用 git 在码云上进行项目协作开发 本地仓库代码，定时同步更新至远程仓库 git 仓库从一个用户下迁移到另外一个用户下，包含提交历史","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"Java开发，文章目录","slug":"java/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.980Z","comments":true,"path":"java/index.html","link":"","permalink":"https://www.lovesofttech.com/java/index.html","excerpt":"代码规范，以及基于 spring、tomcat 的开发与运维经验。","text":"代码规范，以及基于 spring、tomcat 的开发与运维经验。 工作规范 java/js 代码规约 java 开发，适用于团队的代码规范及某些约定 spring boot spring boot 配置静态资源 关于 Spring Boot，以及学习 Spring Boot 的一个 Demo spring boot 阿里云发送邮件，使用 qq 邮箱的 SMTP 服务，端口由 25 换成 465 spring boot 支持通过 ajax 跨域请求的设置 spring boot1.5以上版本@ConfigurationProperties取消location注解后的替代方案 springBoot 集成百度富文本框 UEditor，多模块方式 spring 官方例子-&gt;宠物医院，数据库改成 MySQL，数据库连接池改成 druid Spring cron 表达式 spring boot，404，502 错误转向定制页面 tomcat 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 其他 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 Java 利用 pdfbox 将 PDF 转换为图片 Maven 项目 jar 包依赖冲突导致运行期错误的排查方法 CRM 项目，api 部分的开发规则，仅供参考 BigDecimal 运算与比较 Java 基本类型与对象类型 windows java 开发环境配置，以及一些常用网址收藏 java 字符串的替换 replace、replaceAll、replaceFirst 的区别 Java 特定版本的帮助文档下载方法 Json-lib 将 Json 转换成 Java Bean 时报警 … does not exist. SKIPPED，解决办法 java 开发中的一些小经验 lombok 以及 IDEA lombok 插件","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"CentOS/linux，文章目录","slug":"linux/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.041Z","comments":true,"path":"linux/index.html","link":"","permalink":"https://www.lovesofttech.com/linux/index.html","excerpt":"这里所列文章内容均来自实际工作，都是实际操作之后整理出来的，大多数文章基于 CentOS7.X。","text":"这里所列文章内容均来自实际工作，都是实际操作之后整理出来的，大多数文章基于 CentOS7.X。 安装CentOS U 盘安装 CentOS7.5 Jenkins CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布 CentOS 7.5 安装配置 jenkins CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 JIRA 在 CentOS7 上安装 JIRA 手记 secureCRT secureCRT 显示不换行且完全显示 SecureCRT 连接 CentOS，用 sz 与 rz 命令，下载、上传文件 解决 SecureCRT 超时自动断开 java 应用环境配置 在 CentOS 上安装配置 Java 运行环境 CentOS 7.5 安装配置 Maven CentOS 7，tomcat 监控脚本 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 Tomcat 配置调优 CentOS7 安装中文字体 Arial 端口、内存占用、进程内存占用 linux 内存占用情况查询 CentOS6 查看端口占用、杀死进程，防火墙端口开启/关闭 查看 linux 进程内存占用情况 定时任务 CentOS 7.5 利用 crontab 定时执行任务 CentOS 7.5 查看 crontab 的日志 开机启动 CentOS下开机启动查看管理命令:chkconfig 用法 CentOS 系统下设置自己安装的程序开机自动启动 shell CentOS 常用命令 linux shell 脚本 其他 CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 CentOS7，一键远程部署 spring boot 项目和 react 项目 CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本 CentOS 7 安装配置 Node CentOS 7 修改网卡参数 CentOS 7.2 安装配置 Samba 服务器 CentOS 7 安装设置 vsftpd 及多用户登录 Linux下使用 curl 命令发送 GET 请求时多个参数但只能接收到一个参数 CentOS 下 RPM 软件包的安装及卸载 如何查看已安装的 CentOS 版本信息 linux 下 zip/unzip 命令详解 CentOS 6.3安装设置 vsftpd 及多用户登录 linux 工作中的一些小经验","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"php 开发--好记性不如“烂文档”","slug":"lnmp/experience","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.056Z","comments":true,"path":"lnmp/experience.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/experience.html","excerpt":"PHP 相关知识点，都是在开发的过程中遇到了才记录一下。","text":"PHP 相关知识点，都是在开发的过程中遇到了才记录一下。 配置 php 加载 memcache 版本不匹配123456php-cgi.exe -b 127.0.0.1:9000 -c D:\\server\\php-5.4.45\\php.ini# 提示：PHP Startup: memcache: Unable to initialize moduleModule compiled with module API=20090626PHP compiled with module API=20100525These options need to match 解决：下载匹配的版本 php_memcache 扩展下载地址 windows 版本，5.3-5.6 linux 版本 PHP7-memcache-dllPHP7-memcache-dll The requested URL /my was not found on this server.旧版本的 apache 配置1234&lt;Directory &quot;C:/workspace/php/&quot;&gt; AllowOverride None Require all granted&lt;/Directory&gt; 会导致任何url都提示：1The requested URL /my was not found on this server. 解决在 httpd.conf 添加一个专门为 php 项目准备的目录，如： C:/workspace/php/:1234&lt;Directory &quot;C:/workspace/php/&quot;&gt; AllowOverride None Require all granted&lt;/Directory&gt; 然后，每个 php 项目在这个目录下为一个子目录，这样就可以了。 配置 memcache 管理 php session，Failed to initialize storage module: memcache 提示：session_start(): Failed to initialize storage module: memcache (path: tmp/session) 这明显是没有配置 memcache 的样子，经过检查，原来是配置了两次。12session.save_handler = memcachesession.save_path = tcp://localhost:11211 之后又配置了1session.save_path = &quot;tmp/session&quot; 所以，只是删除这个配置项即可：session.save_path = &quot;tmp/session&quot; phpStorm 调试卡顿普通调试模式，就是打开监听，运行网站。这种模式下，通常也是可以调试的，但是，偶尔，不能进入断点，网页也一直卡在那儿，如果停掉 PHPStorm 的监听，网页就不再卡，感觉在相互等待一样。 解决办法：直接点击中间的调试按钮（甲壳虫）进行调试，则可直接进入断点，网页也不再卡，而且还能得到出错的信息，感觉这才是真正的调试，有用 IDEA 调试 Java 程序的感觉。 win10 + apache 2.4 网站访问报错ForbiddenYou don’t have permission to access / on this server. 在其它 php 项目与非 php 项目都能正常访问的前提下，只有一个网站有这个现象，排除目录权限配置不对的可能性。最后发现，把网站目录配置到上一级目录了，改回网站根目录即可。 关于开发环境没有发现的错误，在线上被发现的问题现象：开发环境用 apache + php，线上用 nginx + php，线上报错，或者客户在使用软件过程中发现有问题，查看日志，会发现明显错误。而本地开发环境，操作过程中不会发现错误。 假象shopID未赋值时，apache 与 nginx 的表现，已知：apache 为 null，并未抛异常，线上的 nginx 会抛异常：Undefined index: shopID 事实其实表现是一样的，只是在线上是通过查询错误日志来发现问题的，其实本地开发也是有错误日志的，无论是 apache 还是 nginx。 那么问题来了，为什么在开发测试的时候没有发现问题？因为开发测试的时候根本不会留意错误日志文件，并且在作相关操作时，页面也没有报错。但是，在 debug 模式下（按F12），Net-&gt;XHR 模式下查看请求 request 和 response，错误信息在 response下。","categories":[{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/categories/php/"}],"tags":[{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"}]},{"title":"Linux + Nginx + MySQL + PHP 文章目录","slug":"lnmp/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.057Z","comments":true,"path":"lnmp/index.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/index.html","excerpt":"Linux + Nginx + MySQL + PHP，还有两篇discuzX3.4迁移经验。","text":"Linux + Nginx + MySQL + PHP，还有两篇discuzX3.4迁移经验。 CentOS7 环境 Nginx 配置 https 后，http 强制跳转到 https，主域名跳转至带 www 的二级域名 CentOS7 安装 Nginx 并设置开机自启动 CentOS7 以源码方式安装 php7 nginx 配置相关 Nginx 反向代理、负载均衡 php 内存分配占用超限，解决办法 php5.4 php-fpm 重启、关闭 discuzX3.4 网站迁移，备忘录 discuzX3.4 数据库由阿里云自建 MySQL 转移至 RDS，填坑日志 windows 环境，php 开发配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php PHP 开发日常经验 php 开发–好记性不如“烂文档” MySQL 相关文章 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验","categories":[{"name":"LNMP","slug":"LNMP","permalink":"https://www.lovesofttech.com/categories/LNMP/"}],"tags":[{"name":"LNMP","slug":"LNMP","permalink":"https://www.lovesofttech.com/tags/LNMP/"}]},{"title":"苹果系统（MacOS），日常经验","slug":"mac/experience","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.061Z","comments":true,"path":"mac/experience.html","link":"","permalink":"https://www.lovesofttech.com/mac/experience.html","excerpt":"苹果系统（MacOS） 相关知识点，都是在开发的过程中遇到了才记录一下。","text":"苹果系统（MacOS） 相关知识点，都是在开发的过程中遇到了才记录一下。 mac 开机自动连接共享服务器，取消防达-&gt;连接服务器…-&gt;操作（就是那个设置图标）-&gt;清除最使用的服务器… 快捷键截图快捷键：Command + Shift + 4，光标将变成一个小有刻着十字标尺线的十字线 截图快捷键：Command + Shift + 3按下快捷键后直接就能听到一个简短的照相机快门声音，跟区域截图一样，在桌面可以看到一个格式为“.Png”的截图文件 最小化当前窗口：Command + m 不同程序之间的窗口切换快捷键是：command + tab 但是我们经常在同一个程序中打开多个窗口，比如：safari，chrome，finder 等，这时候可以试下 command + ~，该快捷键可以实现同程序不同窗口之间的循环切换 以用 command+F3 来显示桌面以外，我们还可以通过 Fn+F11 键来显示桌面。 ⌘（command）、⌥（option）、⇧（shift）、⇪（下面还有一横线 caps lock）、⌃（control）、↩（return）、⌅（enter） 快速显示桌面F11 具体的喜好操作可以在 系统偏好设置 &gt; mission control 中修改 打开浏览器的开发者工具(Windows系统按F12，Mac系统按control+option+i)","categories":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/categories/MacOS/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/tags/MacOS/"}]},{"title":"苹果系统（MacOS），文章目录","slug":"mac/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.063Z","comments":true,"path":"mac/index.html","link":"","permalink":"https://www.lovesofttech.com/mac/index.html","excerpt":"黑苹使用经验","text":"黑苹使用经验 使用 iTunes 在电脑与 iOS 或 iPad 设备之间共享（传输）文件 MacOS 端口占用情况，其中 netstat 命令与 CentOS 略有出入 MacOS 编译安装 nginx 指定版本 i系列7代cpu，核显（集成显卡） Intel HD 630，MacOS 修改驱动指南 苹果系统（MacOS），日常经验","categories":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/categories/MacOS/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/tags/MacOS/"}]},{"title":"python，文章目录","slug":"python/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.076Z","comments":true,"path":"python/index.html","link":"","permalink":"https://www.lovesofttech.com/python/index.html","excerpt":"python 开发经验","text":"python 开发经验 在 CentOS7 安装最新版 Python（v3.7.1），并与系统自带 Python2.7.5 共存，不影响 yum 正常使用 Java 和 Python 中的整数除法，取余，舍入","categories":[{"name":"python","slug":"python","permalink":"https://www.lovesofttech.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.lovesofttech.com/tags/python/"}]},{"title":"软件测试，文章目录","slug":"softTest/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.097Z","comments":true,"path":"softTest/index.html","link":"","permalink":"https://www.lovesofttech.com/softTest/index.html","excerpt":"软件测试文章","text":"软件测试文章 testLink 1.9.17 安装配置，环境：CentOS 7.5 + PHP 7.2.7 + nginx 1.14.0 测试 &amp; 开发 软件测试方法，等价类划分法","categories":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/categories/soft-test/"}],"tags":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"}]},{"title":"windows 环境下的日常工作，文章目录","slug":"windows/index","date":"2019-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.105Z","comments":true,"path":"windows/index.html","link":"","permalink":"https://www.lovesofttech.com/windows/index.html","excerpt":"在 windows 下的部分工作经验。说明：还有一些文章分布在其他分类下。","text":"在 windows 下的部分工作经验。说明：还有一些文章分布在其他分类下。 windows 下，php 开发环境配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php windows 共享 win10 共享遇到的两个问题 windows 10 访问 CentOS 7 的 SMB 共享文件 windows 用户凭据管理 windows 10，Word 2016 打开共享文件时，提示：在试图打开文件时遇到错误 C# + Entity Framework 开发 EF6 写入数据，调用 SaveChanges() 时异常：Validation failed for one or more entities office 安装与卸载 office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活 卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016） 作为码农的 windows 操作经验 windows10 版本查看以及升级到最新版本 windows10 多桌面 MBR、GPT/GUID 分区格式 记一次用 ghost 还原镜像，调换两台电脑系统盘的操作 windows 控制台 cmd/PowerShell 中文显示乱码，解决方法 批处理文件遍历所有子目录批量移除文件名和目录名中特殊字符 在 win10 下修改 hosts 文件 删除 Windows 服务 windwos 查看端口占用、查找进程、杀死进程的命令 使用 tree 命令导出 windows 的【文件夹/文件】目录树 windows 远程桌面的坑 U盘刻录后如何恢复原来容量大小，以及 FAT32 转化为 NTFS 在 windows 下，工作中的一些小经验","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"}]},{"title":"MacOS 编译安装 nginx 指定版本","slug":"mac/macNginx","date":"2019-02-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.063Z","comments":true,"path":"mac/macNginx.html","link":"","permalink":"https://www.lovesofttech.com/mac/macNginx.html","excerpt":"先用brew安装，顺便把相关依赖给安装了，然后再用brew卸载，再以源码方式安装指定版本。","text":"先用brew安装，顺便把相关依赖给安装了，然后再用brew卸载，再以源码方式安装指定版本。 brew 方式 安装Command Line tools：xcode-select --install 安装brew命令：ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; brew install nginx，默认安装的是最新版，不是长期维护的稳定版。不过，会自动安装 nginx 相关依赖，这是主要目的。 安装好后，再执行brew uninstall nginx卸载，然后下载长期维护版本编译安装。 源码方式安装指定版本下载指定版本，解压，进入源码目录，执行如下命令12sudo ./configuresudo make install 配置示例以下，指定网站到 spring 项目的静态资源目录123456789101112server &#123; listen 80; server_name exam.hellojiazhang.com; charset utf-8; access_log logs/exam.hellojiazhang.com.access.log; error_log logs/exam.hellojiazhang.com.error.log; location / &#123; root /Users/andy/workspace/exam/src/main/resources/static; index index.html; &#125;&#125;","categories":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/categories/MacOS/"},{"name":"nginx","slug":"MacOS/nginx","permalink":"https://www.lovesofttech.com/categories/MacOS/nginx/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"},{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/tags/MacOS/"}]},{"title":"i系列7代cpu，核显（集成显卡） Intel HD 630，MacOS 修改驱动指南","slug":"mac/macOSKabyLakeCpuHD630Driver","date":"2019-02-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.064Z","comments":true,"path":"mac/macOSKabyLakeCpuHD630Driver.html","link":"","permalink":"https://www.lovesofttech.com/mac/macOSKabyLakeCpuHD630Driver.html","excerpt":"本文为黑苹果安装集成显卡驱动经验，花了很多时间鼓捣，走了好多弯路，为了用上黑苹果还专门买了一张A卡，现在A卡拆下来备用了，开心~~~","text":"本文为黑苹果安装集成显卡驱动经验，花了很多时间鼓捣，走了好多弯路，为了用上黑苹果还专门买了一张A卡，现在A卡拆下来备用了，开心~~~ 安装情况我是先在一台装有独立显卡 R9 280X 的台式电脑上安装的，显卡是A卡，装好后直接驱动，完美支持显示器的最大分辨率，显存识别正常。 在这里说明一下，对于刚刚鼓捣黑苹果的人来说，网上教程提到的好多概念都会比较蒙逼，所以，我这里截图说明，希望能帮到新手。 为了成功且真正的驱动 HD 630，需要修改两个地方，先看一下相关截图。 先打开 Clover Configurator，将引导分区挂载，并打开这个文件夹。 找到Clover的配置文件config.plist，右键，选择用 Clover Configurator 打开（请忽略我安装的两个版本，这两个版本都 OK）。 SMBIOS 配置项，红圈儿里就是机型（截图为安装好的默认值），黑苹果在启动的时候会依赖这个配置项加载不同的驱动。刚开始看到网上的教程说要修改这一项，我是到 BIOS 里去找的，非常蒙逼，请不要笑，你是不是也跟我一样——^_^~~ 需要修改的第二项 ig-platform-id（截图为安装好的默认值）。 我安装好后，机型为MacBookAir6,2，Graphic-&gt;ig-platform-id值为ox12345678，非常顺利，装好后网卡、显卡都能用了，声卡费了一些功夫，声卡后来是安装了一款万能声卡驱动（VoodooHDA）搞定的。 但是在驱动 HD 630 上，花了好多时间，走了很多弯路。我是把安装好的硬盘直接换到 HD 630 的电脑上的，不知道新安装会是什么情况（猜测会是一样的）。 以下主角登场了。 环境黑苹果版本：10.14.3电脑：台式兼容机CPU：i3 7100，集成显卡是 HD630 正确的姿势 SMBIOS-&gt;Product Name：MacBookPro14,3 Graphic-&gt;ig-platform-id：0x591b0000 敲黑板，重点，重点，重点：连接显示器的线，不要用 vga 接口的，一定要用 HDMI 接口的。 用 vga 接口会黑屏，无输出信号。 按以上修改加 HDMI 线，就能真正驱动起来了。 下面说一下现象和操作过程，看你是不是也跟我一样。 现象直接把安装好 macOS 10.14.3 的 SSD 换到这台电脑上，显卡已经识别出来了，也能达到最大分辨率，网卡、声卡直接识别，但显卡其实没有真正驱动起来，用VGA线，显存只有7M，换成HDMI线，显存变成14M，会局部花屏和卡顿，严重影响使用。 解决按照网上的教程，大多是修改Graphic-&gt;ig-platform-id和SMBIOS-&gt;Product Name，还有换驱动、修改文件的，都试了，无果。 当然，在这个过程中，网上的教程针对的版本不一定是我安装的版本，对新版10.14.3的教程还比较少。 还有一个重要的点，就是显示器数据线，我大多数操作都是用 VGA 线连接的，只是用 HDMI 线试了几个参数，但是都没对。其实要真正驱动 HD 630，只能用 HDMI 接口，所以，即使参数修改正确了，线没用对，还是会失败，然后去找别的教程，可能更让人蒙逼。 经验如果进入 macOS 后修改了参数导致黑屏，重启的时候，进入引导界面，选 Clover 的 option，进入可以修改SMBIOS和ig-platform-id，修改后仅对当次启动有效，配置文件不会被修改。 如果一开始我就知道这一点，就会节约很多时间，一开始黑屏或者启动死机之后，我的做法是重新做启动U盘，从U盘启动系统后再改。 后来我干脆做了两个U盘，一个坏了就换另外一个启动，再修改启动不了的那个，总之还是效率不高。 关于从磁盘引导首先要保证有一个 EFI 引导分区，如果正常安装，在安装过程中抹盘的话，会自动分出一个200M的EFI分区，在安装好后，把U盘的EFI分区中的文件复制到磁盘的EFI分区即可成功。 不过，有个例，我用一款比较老（14年）的华擎主板，即使升级官方的最新BIOS也还是不能识别磁盘上的EFI引导分区（还好能识别U盘上的EFI引导分区，否则就装不了黑苹果了），但是在新一点的华硕主板上就可以。 感谢本次驱动成功，要非常感谢黑苹果小兵的部落阁的这篇文章：黑苹果必备：Intel核显platform ID整理及smbios速查表 这篇文章中提到的CPU平台，在中关村在线网站上是：核心代号，可以在这个网站上输入CPU型号去查，比如我的 i3 7100 的参数链接，其核心代号是：Kaby Lake","categories":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/categories/MacOS/"},{"name":"HD630","slug":"MacOS/HD630","permalink":"https://www.lovesofttech.com/categories/MacOS/HD630/"}],"tags":[{"name":"MacOS","slug":"MacOS","permalink":"https://www.lovesofttech.com/tags/MacOS/"},{"name":"HD630","slug":"HD630","permalink":"https://www.lovesofttech.com/tags/HD630/"}]},{"title":"i5 7200u，核显（集成显卡） Intel HD 620，win7 64 位系统安装折腾记录","slug":"general/i57200uHD620DriverOnWin7","date":"2019-02-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.951Z","comments":true,"path":"general/i57200uHD620DriverOnWin7.html","link":"","permalink":"https://www.lovesofttech.com/general/i57200uHD620DriverOnWin7.html","excerpt":"如题","text":"如题 现象笔记本型号：宏碁TravelMate P259-G2-MG新安装 win7 64 位旗舰版，从官方下载针对 win7 64 位的显卡驱动，竟然安装不上，提示：此计算机不符合安装该软件的最低要求。 好嘛，我不用集成显卡，用独立的 nvidia 显卡好不好~~，可是在安装驱动时提示：你必须先安装 @Intel 驱动程序，看来是跳不过了。 解决感谢网友的文章，让我得以成功安装，这里记录一下我的操作。 先去官网下载最新驱动（下载以前的也行，反正现在官网的驱动其实已经不支持 win7 了） 最终找到 HD 620 的下载页面 对于宏碁TravelMate P259-G2-MG笔记本，还可以去这里下载：宏碁TravelMate P259-G2-MG笔记本电脑的Windows 7 64bit驱动程序，软件，手册 下载 zip 包，不要下载 exe 安装文件，因为需要修改里面的配置文件之后才能正常安装。 去设备管理器里，找到未安装驱动的标准VGA显示适配器，属性，详细信息，属性–&gt;硬件id，记录下 DEV_59X6&amp;SUBSYS_XXXXX 我电脑上是 PCI\\VEN_8086&amp;DEV_5916&amp;SUBSYS_11341025 打开Graphics文件夹下的文件igdlh64.inf，找到找刚才记下的DEV后面的数字，我这里是 5916，找到其中一行 %iKBLULTGT2% = iKBLD_w10, PCI\\VEN_8086&amp;DEV_5916 复制这一行，再往上找到带有 iSKLD_w7 的区域 Windows 7 Install - DT Only 部分，将刚才复制那一行加到这个区域的最后面，然后把 iKBLD_w10 改为 iKBLD_w7，最终是：%iKBLULTGT2% = iKBLD_w7 PCI\\VEN_8086&amp;DEV_5916 运行安装目录下的 setup.exe，顺利的话，就可以正常安装了。 后记虽然没有正常安装核显（集成显卡）也能设置显示器支持的最大分辨率，但是却不能连接投影仪，现象是：设置分辨率的页面，没有连接投影仪选项（按windows+P建），驱动安装好之后，就正常了。","categories":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/categories/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"foobar2000，一款 Windows 平台下的高级音频播放器，免费","slug":"dailyLives/foobar2000","date":"2019-02-15T16:00:00.000Z","updated":"2020-09-01T02:53:12.909Z","comments":true,"path":"dailyLives/foobar2000.html","link":"","permalink":"https://www.lovesofttech.com/dailyLives/foobar2000.html","excerpt":"关于foobar2000的介绍，这里就不多说了，如果你是一个音乐爱好者，却不知道 foobar2000，那么你就 Out 了。","text":"关于foobar2000的介绍，这里就不多说了，如果你是一个音乐爱好者，却不知道 foobar2000，那么你就 Out 了。foobar2000 百度百科foobar2000 官网下载地址 解决 foobar2000 无法播放 ape 格式音乐foobar2000 提供了很多插件下载，官方下载的版本，默认没有集成 ape 插件。可以去插件列表页面查看官方都提供了哪些右用插件：components 下载 ape 插件 将下载的文件 Monkey.fb2k-component 改名 Monkey.fb2k-component.zip，解压得到 foo_input_monkey.dll 将 foo_input_monkey.dll 移至安装目录下的 components 目录。 重新打开 foobar2000，即可支持 ape 无损格式的音乐了。","categories":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/categories/dailyLives/"},{"name":"foobar2000","slug":"dailyLives/foobar2000","permalink":"https://www.lovesofttech.com/categories/dailyLives/foobar2000/"}],"tags":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/tags/dailyLives/"},{"name":"foobar2000","slug":"foobar2000","permalink":"https://www.lovesofttech.com/tags/foobar2000/"}]},{"title":"JS 笔记","slug":"frontend/jsNote","date":"2019-02-15T16:00:00.000Z","updated":"2020-09-01T02:53:12.937Z","comments":true,"path":"frontend/jsNote.html","link":"","permalink":"https://www.lovesofttech.com/frontend/jsNote.html","excerpt":"js 使用过程中遇到的知识点。","text":"js 使用过程中遇到的知识点。 彻底理解js中的&amp;&amp;和||javascript中，&amp;&amp;和||的用法比较神奇，经常用在对象上，例如a || b，如果a不存在，则返回b。a &amp;&amp; b，如果a存在，则返回b，否则返回a。光这样看，感觉他的概念还挺复杂的，这样去想的话，不但会在脑子里多出一个无用的概念，而且越记越混乱。看问题还是要看本质。 本质是什么呢？&amp;&amp; 和 || 的作用只有一个(定义)：进行布尔值的且和或的运算。当运算到某一个变量就得出最终结果之后，就返回哪个变量。 在javascript中：以下内容会被当成false处理：”” , false , 0 , null , undefined , NaN其他都是true。注意：字符串”false”也会被当做true处理，在未转型的情况下他是字符串，属于一个对象，所以是true。所以：a || b：如果a是true，那么b不管是true还是false，都返回true。因此不用判断b了，这个时候刚好判断到a，因此返回a。 如果a是false，那么就要判断b，如果b是true，那么返回true，如果b是false，返回false，其实不就是返回b了吗。a &amp;&amp; b：如果a是false，那么b不管是true还是false，都返回false，因此不用判断b了，这个时候刚好判断到a，因此返回a。 如果a是true，那么就要在判断b，和刚刚一样，不管b是true是false，都返回b。 来个复杂的例子（注意一点：在js中&amp;&amp;运算符优先级大于||）假设： var a=new Object(),b=0,c=Number.NaN,d=1,e=”Hello”;alert(a || b &amp;&amp; c || d &amp;&amp; e); 表达式从左往右执行，先&amp;&amp;后||1、(b &amp;&amp; c)：b是false，此时不需要判断c，因为不管c是true是false，最终结果一定是false，因此返回当前判断对象b，也就是0；2、(d &amp;&amp; e)：d是true，这个时候判断e，此时不管e是true，是false，返回结果一定是e，e为true，因此返回”Hello”；3、(a || b)：a是true，此时不管b是true是false，结果都是true，所以不判断b，所以返回当前判断对象a，因此返回new Object()；4、(a || e)：同上，因此返回a。这个表达式最终结果为a，也就是new Object() js中!和!!的区别及用法使用javascript时，有时会在变量前面加上两个感叹号，这样做表示什么含义呢？Javascript中，!表示运算符“非”，如果变量不是布尔类型，会将变量自动转化为布尔类型，再取非，那么用两个!!就可以将变量转化为对应布尔值。如果作为条件表达式，不需要使用!!进行转换，Javascript会自动转换，!!就只应用于将类型转换为布尔值。 js中!的用法是比较灵活的，它除了做逻辑运算常常会用！做类型判断，可以用！与上对象来求得一个布尔值， !可将变量转换成boolean类型，null、undefined和空字符串取反都为false，其余都为true。 123456789!null=true!undefined=true!&apos;&apos;=true!100=false!&apos;abc&apos;=false !!常常用来做类型判断，在第一步!（变量）之后再做逻辑取反运算，在js中新手常常会写这样臃肿的代码：判断变量a为非空，未定义或者非空串才能执行方法体的内容 1234var a;if(a!=null&amp;&amp;typeof(a)!=undefined&amp;&amp;a!=&apos;&apos;)&#123; //a有内容才执行的代码 &#125; 实际上我们只需要写一个判断表达：123if(!!a)&#123; //a有内容才执行的代码... &#125; 就能和上面达到同样的效果。a是有实际含义的变量才执行方法，否则变量null，undefined和’’空串都不会执行以下代码。 可以总结出来，“！”是逻辑与运算，并且可以与任何变量进行逻辑与将其转化为布尔值，“!!”则是逻辑与的取反运算，尤其后者在判断类型时代码简洁高效，省去了多次判断null、undefined和空字符串的冗余代码。 javascript之if(value)和if(!!value)的区别没有任何区别。这种写法只是想当然而已。我反对if (!!var1)的写法。同样无聊的写法还有：if ((var1 == var2) == true)。 if 接受“A condition expression that evaluates to true or false”，并非必须PrimitiveBoolean类型。在《ECMAScript Spec》中，if (value)的语义相当于：if (ToBoolean(value))。而Logical Not的语义相当于：not ToBoolean(value)。即!!val相当于ToBoolean(value)。也就是说：if (!!value)的语义相当于if(ToBoolean(ToBoolean(value)))。如果你认为这种写法是合理的，那你为什么不继续写道：if (!!(!!value))、if (!!(!!(!!value)))……？","categories":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/tags/js/"}]},{"title":"CentOS 7 配置 ElasticSearch-6.5.4","slug":"linux/centOS7ElasticsearchNew","date":"2018-12-19T16:00:00.000Z","updated":"2020-09-01T02:53:13.020Z","comments":true,"path":"linux/centOS7ElasticsearchNew.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7ElasticsearchNew.html","excerpt":"本文可以当作在详细了解 CentOS 7 配置 ElasticSearch-6.4.1 的基本上升级版本的操作步骤，操作内容重复的部分就会省略掉。","text":"本文可以当作在详细了解 CentOS 7 配置 ElasticSearch-6.4.1 的基本上升级版本的操作步骤，操作内容重复的部分就会省略掉。 安装以 utomcat 用户操作123456cd soft/wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gzmkdir -p /home/utomcat/apps/es/datamkdir -p /home/utomcat/apps/es/logstar -xzvf elasticsearch-6.5.4.tar.gz 以 root 用户操作1mv /home/utomcat/soft/elasticsearch-6.5.4 /opt/ 以 utomcat 操作12cd /opt/elasticsearch-6.5.4/vim config/elasticsearch.yml elasticsearch.yml 内容：12345cluster.name: hjz-es-clusternode.name: hjz-espath.data: /home/utomcat/apps/es/datapath.logs: /home/utomcat/apps/es/logsnetwork.host: 127.0.0.1 内存占用配置vim /opt/elasticsearch-6.5.4/config/jvm.options将12-Xms1g-Xmx1g 改为你想要分配的大小，比如改为0.5g12-Xms512m-Xmx512m 以下以 root 身份操作1234vim /etc/security/limits.conf# 添加下面两行，其中 utomcat 是启动 es 的用户名utomcat soft nofile 65536utomcat hard nofile 65536 以 root 身份修改 sysctl.conf123vi /etc/sysctl.conf# 添加如下配置vm.max_map_count=262144 用命令 sysctl -p 使修改生效 安装 ik 分词/opt/elasticsearch-6.5.4/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.5.4/elasticsearch-analysis-ik-6.5.4.zip12345678910111213141516[utomcat@hjweb01 plugins]$ /opt/elasticsearch-6.5.4/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.5.4/elasticsearch-analysis-ik-6.5.4.zip-&gt; Downloading https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.5.4/elasticsearch-analysis-ik-6.5.4.zip[=================================================] 100% @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: plugin requires additional permissions @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@* java.net.SocketPermission * connect,resolveSee http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.htmlfor descriptions of what these permissions allow and the associated risks.Continue with installation? [y/N]y-&gt; Installed analysis-ik[utomcat@hjweb01 plugins]$ lltotal 4drwxr-xr-x 2 utomcat gtomcat 4096 Jan 4 15:32 analysis-ik[utomcat@hjweb01 plugins]$ cd analysis-ik/ 配置自定义分词12345678cd /opt/elasticsearch-6.5.4/config/analysis-ik/mkdir customvi custom/custom_word.dic# 配置自定义分词内容cd /opt/elasticsearch-6.5.4/config/analysis-ik/vim IKAnalyzer.cfg.xml# 修改配置，添加自定义分词路径 手动启动1/opt/elasticsearch-6.5.4/bin/elasticsearch -d","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"ElasticSearch","slug":"CentOS/ElasticSearch","permalink":"https://www.lovesofttech.com/categories/CentOS/ElasticSearch/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/tags/ElasticSearch/"}]},{"title":"MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名","slug":"mybatis/MBGExtend","date":"2018-12-10T16:00:00.000Z","updated":"2020-09-01T02:53:13.068Z","comments":true,"path":"mybatis/MBGExtend.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/MBGExtend.html","excerpt":"如题","text":"如题https://github.com/uncleAndyChen/mybatis-generator 如果表名采用驼峰式命名（不推荐驼峰式命名，推荐下划线命名），运行本工程生成表配置内容，要求 MySQL 的配置项：lower_case_table_names 为0或者2的情况下创建的数据表，否则，生成的表配置内容的表名，全是小写的，并非驼峰式命名法。表配置内容生成好之后，重新生成 mapper 时，数据库配置项：lower_case_table_names 的值，对生成结果没有影响。有关 MySQL 命名规范，请参考：有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍，请关注这篇文章提到的 mapUnderscoreToCamelCase 配置项。 本文对应的完整项目 github: https://github.com/uncleAndyChen/mybatis-generator gitee: https://gitee.com/uncleAndyChen/mybatis-generator 进入以上项目路径可查看更详细的介绍。 关于该项目本项目最初想要解决数据库表名、字段名的命名法与 java 的类、属性命名法不一致带来的一系列问题。 当然，本项目的 MBG 扩展类还做了一些其他事情，比如方便分表时做表名替换，更详细的，请参考: MBG 扩展类 module 曾尝试将数据库表名、字段名也采用驼峰命名法。 现在已经改成： 数据库表名、字段名保持下划线命名法。 针对自定义 SQL 查询结果，对应的自定义 POJO 保持驼峰命名法，查询数据库的 SQL 语句保留原生下划线，并且不用写 resultMap。 做到了 Java 规范与 MySQL 命名规范不一致的完美兼顾。 已添加查询示例，不过仅仅是查询示例，没有考虑到项目架构的合理性。实际项目不会在 web 层直接调用 dal 层，实际项目会有业务层和接口层。 本扩展的作用 生成的*Mapper.xml文件中的脚本，表名取MBG所需配置文件中配置的值（工程中的配置文件是：generatorConfig.xml），而不是从数据库读取到的值。 如果数据库表名采用下划线命名法，请忽略这个作用。 数据库表名、字段名命名法： 之前本人推荐采用驼峰命名法。 想要保持统一的命名规则。 不知道通过配置的方式兼顾两种命名法，即数据库表名、字段名在采用下划线命名法的情况下，通过 MBG 生成的对应每一个表的 POJO 采用驼峰命名法，查询数据时不需要考虑 MBG 生成的 xml 映射文件中的 resultMap，如 parent_id 与 parentId 的映射。 现在推荐下划线命名法。 这是为了避免因 windows 与 linux 以及云数据库的大小写敏感不一致，从而带来不必要的麻烦。 同时也是考虑到绝大多数同行的习惯。 最主要的，是解决了之前不知道的兼顾两种命名法的办法（好象有一点拗口~~） 给表名添加MySQL“边界”，用 `（左上角数字键1左边、Tab键上边、Esc键下边的键）引起来。目的是分表时进行表名替换，把每张个表的表名当作一个整体，避免表名补充部分替换。 解决两个问题 适应lower_case_table_names的三种配置值。 利用MyBatis插件，根据业务规则，对表名进行动态替换。 注：项目根目录下有更详细的介绍，点击以下链接查看： github: https://github.com/uncleAndyChen/mybatis-generator gitee: https://gitee.com/uncleAndyChen/mybatis-generator 自己扩展的好处 比起直接修改MBG源代码，这种方式对MBG无代码侵入，方便将来升级MBG。 符合面向对象设计的【开闭原则】，即通过增加代码来为软件添加新功能，而不是直接修改原有代码。这一点，MBG做得非常好，除了可以非常方便的扩展之外，还可以写各种插件以实现自己的业务需要。 使用自己的扩展类在配置文件generatorConfig.xml的context节点，配置runtime值，指向自己的扩展类，需要带包名，如本例：1&lt;context id=\"Mysql\" targetRuntime=\"mybatis.generator.enhance.IntrospectedTableEnhanceImpl\" defaultModelType=\"flat\"&gt; 扩展类的代码很简单，只有十几行123456789101112131415161718import org.mybatis.generator.codegen.mybatis3.IntrospectedTableMyBatis3Impl;public class IntrospectedTableEnhanceImpl extends IntrospectedTableMyBatis3Impl &#123; @Override public String getFullyQualifiedTableNameAtRuntime() &#123; return getTableNameFromConfigFile(); &#125; @Override public String getAliasedFullyQualifiedTableNameAtRuntime() &#123; return getTableNameFromConfigFile(); &#125; private String getTableNameFromConfigFile() &#123; String tableName = this.getTableConfiguration().getTableName(); return \"`\" + tableName + \"`\"; &#125;&#125; 两种运行方式以程序方式运行仿照官方的org.mybatis.generator.api.ShellRunner，写一段代码，以程序的方式运行。本工程的代码如下：12345678910111213141516171819202122232425262728293031323334353637383940public class GeneratorEnhanceRun &#123; public static void main(String[] args) &#123; try &#123; List&lt;String&gt; warnings = new ArrayList&lt;String&gt;(); /** * 初始化配置解析器 */ ConfigurationParser cp = new ConfigurationParser(warnings); /** * 获取配置文件信息 */ FileInputStream fileInputStream = new FileInputStream(ConfigProperties.getValue(\"configFile\")); /** * 调用配置解析器创建配置对象 */ Configuration config = cp.parseConfiguration(fileInputStream); /** * shellcallback接口主要用来处理文件的创建和合并，传入overwrite参数；默认的shellcallback是不支持文件合并的； */ DefaultShellCallback callback = new DefaultShellCallback(true); /** * 创建一个MyBatisGenerator对象。MyBatisGenerator类是真正用来执行生成动作的类 */ MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings); /** * 用System.out打印执行过程 */ ProgressCallback progressCallback = new VerboseProgressCallback(); /** * 执行生成操作 */ myBatisGenerator.generate(progressCallback); &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; &#125;&#125; 本工程，直接运行GeneratorEnhanceRun下的main方法，在运行之前需要先修改resources目录下的配置文件application.properties，将MBG运行需要的配置文件路径配置对。1configFile=C:/workspace/mybatis-generator/generatorConfig.xml cmd窗口运行jar文件 下MBG的jar包，传送门，解压，找到mybatis-generator-1.3.7.jar备用。 将本模块生成jar文件，生成的jar文件名mybatis-generator-enhance.jar。 将两个jar文件以及配置文件放到model与dal项目所在的目录下，在 cmd 窗口执行：1java -Dfile.encoding=UTF-8 -cp mybatis-generator-1.3.7.jar;mybatis-generator-enhance.jar org.mybatis.generator.api.ShellRunner -configfile generatorConfig.xml -overwrite 这里通过 -cp 指定需要用到的所有jar包，用分号隔开，这样在运行的时候才能找到相应的类。 原理简单的说，就是自己的实现类IntrospectedTableEnhanceImpl继承自MBG的一个具体实现类，重写获取表名的方法。 IntrospectedTable是MBG提供的一个比较基础的扩展类，相当于可以重新定义一个runtime。如果要通过继承IntrospectedTable完成扩展，需要自己来实现生成XML和Java代码的所有代码，也可以直接继承IntrospectedTableMyBatis3Impl，重写自己需要的业务逻辑，本模块就是直接继承自该类。 要扩展自己的业务逻辑，建议先仔细阅读IntrospectedTableMyBatis3Impl和IntrospectedTableMyBatis3SimpleImpl，这两个类用得多一些。 在MBG中，提供了几种默认的IntrospectedTable的实现，其实在context上设置的runtime对应的就是不同的IntrospectedTable的实现，下面是几种runtime和对应的实现类： MyBatis3 (default)：org.mybatis.generator.codegen.mybatis3.IntrospectedTableMyBatis3Impl MyBatis3Simple：org.mybatis.generator.codegen.mybatis3.IntrospectedTableMyBatis3SimpleImpl Ibatis2Java2：org.mybatis.generator.codegen.ibatis2.IntrospectedTableIbatis2Java2Impl Ibatis2Java5：org.mybatis.generator.codegen.ibatis2.IntrospectedTableIbatis2Java5Impl MySQL 数据库驱动版本与数据库版本问题用高版本的数据库驱动mysql-connector-java 8.0.13连接低版本数据库MySQL 5.7.23，会有以下问题： 报错 12Cannot obtain primary key information from the database, generated objects may be incomplete... 生成的 mapper 缺少以下接口： 1234deleteByPrimaryKeyselectByPrimaryKeyupdateByPrimaryKeySelectiveupdateByPrimaryKey 解决数据库驱动与数据库版本匹配即可，作者在以下两个版本（5.x与8.x）测试通过： 数据库驱动mysql-connector-java 8.0.13连接数据库MySQL 8.0.11，对应driverClassName: com.mysql.cj.jdbc.Driver 数据库驱动mysql-connector-java 5.1.29连接数据库MySQL 5.7.23，对应driverClassName: com.mysql.jdbc.Driver 本工程的数据库驱动版本，使用的是当前最新的mysql-connector-java 8.0.13，仅支持连接高版本MySQL 8.x。 如果要在MySQL 5.7.x下运行，只需要修改以下两个地方（注意是5.7.x，其它5.x版本没测试）： 修改pom.xml中mysql-connector.version，改为低版本5.1.39。 本项目的执行，依赖根目录下的generatorConfig.xml文件，将其中driverClass，由com.mysql.cj.jdbc.Driver改为com.mysql.jdbc.Driver。","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"MyBatis，文章目录","slug":"mybatis/index","date":"2018-12-10T16:00:00.000Z","updated":"2020-09-01T02:53:13.071Z","comments":true,"path":"mybatis/index.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/index.html","excerpt":"MyBatis 在实际工作中的使用经验","text":"MyBatis 在实际工作中的使用经验 基于spring 切面（AOP）实现动态多数据源切换，基于 MyBatis 插件方式实现动态分表查询 MyBatis 项目中，有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍 解决 mybatis generator 使用 mysql 驱动 8.x 版本时会生成多个库里的同名表的问题 MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MBG 生成的 mapper 支持写入记录后返回主键值的配置 MyBatis 开发中，善用通过 MBG 生成的 *Example 类 MyBatis 普通知识点记录","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"《React进阶之路》第九章示例 bbs-redux-reselect 解读","slug":"react/reactAdvancedStageBBSUnscramble","date":"2018-12-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.088Z","comments":true,"path":"react/reactAdvancedStageBBSUnscramble.html","link":"","permalink":"https://www.lovesofttech.com/react/reactAdvancedStageBBSUnscramble.html","excerpt":"作为学习的例子，只有三个页面，但是麻雀虽小，五脏俱全。","text":"作为学习的例子，只有三个页面，但是麻雀虽小，五脏俱全。 能学到些啥？通过该例子可以学习到以下知识点： 项目的目录结构设计最佳实践。 项目的 state 设计和模块设计技巧。 异步获取 API 数据，以及将获取到的数据展示到页面上。 对应源码项目地址 托管在 github 上的项目链接：https://github.com/uncleAndyChen/react-full-stack-learning 托管在 gitee 上的项目链接 ：https://gitee.com/uncleAndyChen/react-full-stack-learning 克隆时，通过参数 -b 指定该分支：1git clone -b bbs-apicloud https://github.com/uncleAndyChen/react-full-stack-learning.git 三个核心页面 登录页面。 帖子列表页面，仅展示帖子的基本信息。 帖子详情页面，展示帖子的详细内容，包括用户的评论列表。 测试账号 该bbs内置三个用户 tom jack steve 密码都是：123456 state 设计12345678910111213141516171819202122232425262728&#123; app: &#123; requestQuantity: 0, // 当前应用中正在进行的 API 请求数 error: null // 应用全局错误信息 &#125;, auth: &#123; userId: &apos;59e5d570fe26fff867fc94c0&apos;, // 当前登录用户的 id username: &apos;jack&apos; // 当前登录用户的用户名 &#125;, ui: &#123; addDialogOpen: false, // 用于新增帖子的对话框的显示状态 editDialogOpen: false // 用于编辑帖子的对话框的显示状态 &#125;, posts: &#123; allIds: [], // 维护数据的有序性 byId: &#123;&#125; // 根据 id 获取帖子的相关内容 &#125; &#125;, comments: &#123; byPost: &#123; &apos;5c10b55d34ce789876fc00ed&apos;: [] // 帖子 id 与该帖子下的评论 id 的映射。 &#125;, byId: &#123;&#125; // 根据评论 id 获取到的该条评论相关内容。 &#125; &#125;, users: &#123;&#125; &#125;&#125; state 解读一共六个子 state app：记录应用业务状态数据 requestQuantity：当前应用中正在进行的 API 请求数。 error：应用全局错误信息。 auth：登录认证状态 userId：当前登录用户的 id。 username：当前登录用户的用户名。 ui：UI 状态数据 addDialogOpen：用于新增帖子的对话框的显示状态。 editDialogOpen：用于编辑帖子的对话框的显示状态。 posts：帖子列表 allIds：保存帖子列表的 id，维护数据的有序性。 byId：以帖子 id 为 key 的列表，每一个子项为帖子的相关内容。 comments byPost 保存以某一个帖子的 id 为 key 的、该帖子 id 下的评论列表 id，即：帖子 id 与该帖子下的评论 id 的映射。 byId 与 posts 下的 byId 类似，该项是以评论 id 为 key 的列表，每一个子项为评论相关的内容。 users：当前页面相关的用户信息列表 模块设计对应 state 的设计，模块设计基本上也出来了，除了对应上面的六个子 state 都有相应的模块之外，还有一个 Redux 模块。 Redux 模块，位于 redux/modules 目录下，各个功能相关的 reducer、action types、action creators 都定义到一个文件中。各个功能的 reducer 又通过 redux/modules/index.js 合并成一个根 reducer，以供 react-redux 创建 store 并进行统一管理。 运行时数据首页，即帖子列表页面看一下运行起来的 state，仅保留了两篇帖子的数据。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&#123; app: &#123; requestQuantity: 0, error: null &#125;, auth: &#123; userId: &apos;59e5d570fe26fff867fc94c0&apos;, username: &apos;jack&apos; &#125;, ui: &#123; addDialogOpen: false, editDialogOpen: false &#125;, posts: &#123; allIds: [ &apos;5c10b579a41380ad2bf95cfd&apos;, &apos;5c0f145bd76a23857943793c&apos; ], byId: &#123; &apos;5c10b579a41380ad2bf95cfd&apos;: &#123; id: &apos;5c10b579a41380ad2bf95cfd&apos;, title: &apos;fs&apos;, vote: 0, updatedAt: &apos;2018-12-12T07:16:10.863Z&apos;, author: &apos;59e5d570fe26fff867fc94c0&apos; &#125;, &apos;5c0f145bd76a23857943793c&apos;: &#123; id: &apos;5c0f145bd76a23857943793c&apos;, title: &apos;&apos;, vote: 0, updatedAt: &apos;2018-12-11T01:35:23.187Z&apos;, author: &apos;59e5d570fe26fff867fc94c0&apos; &#125; &#125; &#125;, comments: &#123; byPost: &#123;&#125;, byId: &#123;&#125; &#125;, users: &#123; &apos;59e5d22f6722f75272b3bbcf&apos;: &#123; id: &apos;59e5d22f6722f75272b3bbcf&apos;, username: &apos;tom&apos; &#125;, &apos;59e5d570fe26fff867fc94c0&apos;: &#123; id: &apos;59e5d570fe26fff867fc94c0&apos;, username: &apos;jack&apos; &#125; &#125;&#125; 帖子详情页面再看有三条评论的帖子，进入详情页面时，state 的内容。帖子是 jack 发的，三条评论都是 tom 发的，所以users有两个用户的信息。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&#123; app: &#123; requestQuantity: 0, error: null &#125;, auth: &#123; userId: &apos;59e5d570fe26fff867fc94c0&apos;, username: &apos;jack&apos; &#125;, ui: &#123; addDialogOpen: false, editDialogOpen: false &#125;, posts: &#123; allIds: [], byId: &#123; &apos;5c10b55d34ce789876fc00ed&apos;: &#123; id: &apos;5c10b55d34ce789876fc00ed&apos;, title: &apos;asd&apos;, content: &apos;ads&apos;, vote: 0, updatedAt: &apos;2018-12-12T07:14:37.395Z&apos;, author: &apos;59e5d570fe26fff867fc94c0&apos; &#125; &#125; &#125;, comments: &#123; byPost: &#123; &apos;5c10b55d34ce789876fc00ed&apos;: [ &apos;5c1215a60dbbbd7c0a640389&apos;, &apos;5c12159eb50852373a0d1a9e&apos;, &apos;5c12151f9536aad30f94f59f&apos; ] &#125;, byId: &#123; &apos;5c1215a60dbbbd7c0a640389&apos;: &#123; id: &apos;5c1215a60dbbbd7c0a640389&apos;, content: &apos;sadf&apos;, updatedAt: &apos;2018-12-13T08:17:42.783Z&apos;, author: &apos;59e5d22f6722f75272b3bbcf&apos; &#125;, &apos;5c12159eb50852373a0d1a9e&apos;: &#123; id: &apos;5c12159eb50852373a0d1a9e&apos;, content: &apos;sad&apos;, updatedAt: &apos;2018-12-13T08:17:34.272Z&apos;, author: &apos;59e5d22f6722f75272b3bbcf&apos; &#125;, &apos;5c12151f9536aad30f94f59f&apos;: &#123; id: &apos;5c12151f9536aad30f94f59f&apos;, content: &apos;sa&apos;, updatedAt: &apos;2018-12-13T08:15:27.067Z&apos;, author: &apos;59e5d22f6722f75272b3bbcf&apos; &#125; &#125; &#125;, users: &#123; &apos;59e5d570fe26fff867fc94c0&apos;: &#123; id: &apos;59e5d570fe26fff867fc94c0&apos;, username: &apos;jack&apos; &#125;, &apos;59e5d22f6722f75272b3bbcf&apos;: &#123; id: &apos;59e5d22f6722f75272b3bbcf&apos;, username: &apos;tom&apos; &#125; &#125;&#125; 对应源码结构（模块设计）源码结构与state设计是相辅相成的。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182│ index.js│├─components // 全局通用组件│ ├─Header│ │ index.js│ │ style.css│ ││ ├─Loading│ │ index.js│ │ style.css│ ││ └─ModalDialog│ index.js│ style.css│├─containers│ ├─App│ │ index.js│ ││ ├─Home│ │ index.js│ ││ ├─Login│ │ index.js│ │ style.css│ ││ ├─Post│ │ │ index.js // Post 容器组件│ │ │ style.css│ │ ││ │ └─components // Post 专用组件│ │ ├─CommentList│ │ │ index.js│ │ │ style.css│ │ ││ │ ├─CommentsView│ │ │ index.js│ │ │ style.css│ │ ││ │ ├─PostEditor│ │ │ index.js│ │ │ style.css│ │ ││ │ └─PostView│ │ index.js│ │ style.css│ ││ └─PostList│ │ index.js // PostList 容器组件│ │ style.css│ ││ └─components // PostList 专用组件│ ├─PostItem│ │ index.js│ │ style.css│ ││ └─PostsView│ index.js│├─images│ like-default.png│ like.png│├─redux│ │ configureStore.js│ ││ └─modules│ app.js│ auth.js│ comments.js│ index.js // Redux 的根模块，仅将其余模块的 reducer 合并成一个根 reducer。│ posts.js│ ui.js│ users.js│└─utils AsyncComponent.js connectRoute.js date.js request.js // 对 fetch 的封装 SHA1.js url.js // API 配置 关于目录结构设计的最佳实践，请看：React+Redux工程目录结构，最佳实践 redux 模块redux 模块，指的是在 redux/modules 下定义的模块。 一个 redux 模块，不仅包含 action types、action creators、reducers，还包含从该模块获取 state 数据的 selectors 函数。 selectors 函数的使命： 封装：对外提供数据接口，外部调用者不需要知道内部实现细节，也不用关心内部 state 的具体结构。 解耦：内部 state 结构如果有变化，修改对外接口即可，不会影响到外部调用方，降低模块间依赖关系，最大限度解耦。 全局 selector 函数当需要从多个模块的 state 中获取数据时，最好的做法，是在 redux/module/index.js 文件中定义全局 selector 函数，该 selector 再通过各个模块的 selector 获取需要的数据。这样，容器组件通过调用全局 selector 函数，可以非常便利地对全局数据进行处理。 《React进阶之路》第九章示例原书代码 bbs-redux-reselect","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"React+Redux工程目录结构，最佳实践","slug":"react/reactReduxDirectoryStructure","date":"2018-12-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.091Z","comments":true,"path":"react/reactReduxDirectoryStructure.html","link":"","permalink":"https://www.lovesofttech.com/react/reactReduxDirectoryStructure.html","excerpt":"如题","text":"如题 React+Redux 工程目录结构组织按角色类型组织如果你用 MVC 框架开发过应用（无论是前端开发还是后端开发），应该知道 MVC 框架之下，通常有这样一种代码组织方式：12345678910controllers/ todoController.js filterController.jsmodels/ todoModel.js filterModel.jsviews/ todo.js todoItem.js filter.js Controller、Model、View 分别代表三种模块角色。这种思想，对应到 Redux 应用，就有这种组织方式：12345678910111213reducers/ todoReducer.js filterReducer.jsactions/ todoAction.js filterActions.jscomponents/ todoList.js todoItem.js filter.jscontainers/ todoListContainer.js todoItemContainer.js 角色如下： components 目录包含所有的展示组件。 containers 目录包含所有的容器组件。 actions 目录包含所有 action 构造函数。 reducers 目录包含所有 Redux 的 reducer。 充当component、container、action、reducer等不同角色的文件，分别放在对应的多个文件夹下。 Redux 官网的 todomvc 示例采用了这种项目结构划分，如果项目功能比较简单，也还是可以采用这种方式的。1234567891011121314151617181920212223242526272829303132│ index.js│├─actions│ index.js│├─components│ App.js│ Footer.js│ Header.js│ Link.js│ MainSection.js│ TodoItem.js│ TodoList.js│ TodoTextInput.js│├─constants│ ActionTypes.js│ TodoFilters.js│├─containers│ FilterLink.js│ Header.js│ MainSection.js│ VisibleTodoList.js│├─reducers│ index.js│ todos.js│ visibilityFilter.js│└─selectors index.js 按角色类型组织的缺点使用这种结构组织项目，每当增加一个新功能时，需要在containers和components文件夹下增加这个功能需要的组件，还需要在actions和reducers文件夹下，分别添加Redux管理这个功能使用到的action和reducer，如果action type是放在另外一个文件夹的话，还需要在这个文件夹下增加新的action type文件。所以，开发一个功能时，你需要频繁的切换路径，修改不同的文件。当项目逐渐变大时，这种项目结构是非常不方便的。 按照功能组织在Redux框架下，我们可以严格按照模块化思想来开发我们的应用，以最大化的解耦应用，提高代码重用和可维护性。按照功能组织应用的代码，就是这种思想的应用。 一个功能模块对应一个文件夹，这个功能所用到的component、container、action、reducer等文件，都存放在这个文件夹下。 拿Todo应用来说，两个基本的功能就是TodoList和Filter，所以按功能组织就是这样子：123456789101112131415161718todoList/ components/ componentA.js componentB.js containers.js actions.js actionTypes.js index.js reducer.jsfilter/ components/ componentA.js componentB.js container.js actions.js actionTypes.js index.js reducer.js 参考了《深入浅出React和Redux》一书中给出的示例，同时结合自己的理解，有部分调整。 每个功能模块对应一个目录，分别是todoList和filter，每个目录下包含同样的角色文件： components 目录下包含功能模块中所有的展示组件。 container.js 定义容器组件。 actionTypes.js 定义action类型。 actions.js 定义action构造函数。 reducer.js 定义这个功能模块如何响应actions.js定义的动作。 index.js 把所有的角色导入，然后统一导出。 这种组织方式下，当你要修改某个模块时，只要关注对应的目录即可，所有需要修改的代码文件都能在这个目录下找到。 需要注意的是，按功能组织下的每个模块，都有一个index.js，明确了模块对外的接口。 按照功能组织也有缺点这种结构也有一个问题，Redux会将整个应用的状态作为一个store来管理，不同的功能模块之间可以共享store中的部分状态（项目越复杂，这种场景就会越多），于是当你在feature1的container中dispatch一个action，很可能会影响feature2的状态，因为feature1和feature2共享了部分状态，会响应相同的action。这种情况下，不同模块间的功能被耦合到了一起。 混合前面两种方式–DucksDucks: Redux Reducer Bundles，是一种新的Redux项目结构组织方式的提议。它提倡将相关联的reducer、action types和action写到一个文件里。本质上是以应用的状态作为模块的划分依据，而不是以界面功能作为划分模块的依据。这样的一个文件（模块）如下：12345678910111213141516171819202122232425262728293031323334353637383940414243export const types = &#123; const LOAD : 'widget/LOAD', const CREATE : 'widget/CREATE', const UPDATE : 'widget/UPDATE', const REMOVE : 'widget/REMOVE'&#125;const initialState = &#123; widget: null, isLoading: false,&#125;// Reducerexport default function reducer(state = initialState, action = &#123;&#125;) &#123; switch (action.type) &#123; types.LOAD: //... types.CREATE: //... types.UPDATE: //... types.REMOVE: //... default: return state; &#125;&#125;// Action Creators// 这样定义而不是每个action都export，目的是简化代码，import时不需要把所有action都列出来。export const actions = &#123; loadWidget: function() &#123; return &#123; type: types.LOAD &#125;; &#125;, createWidget: createWidget(widget) &#123; return &#123; type: types.CREATE, widget &#125;; &#125;, updateWidget: function(widget) &#123; return &#123; type: types.UPDATE, widget &#125;; &#125;, removeWidget: function(widget) &#123; return &#123; type: types.REMOVE, widget &#125;; &#125;&#125; 由于使用Ducks提议的目录结构，action creators和reducer定义在同一个文件中，为了避免了引入额外的对象，import * 的导入方式已经不推荐。为了使得导入更加方便以及代码更加简洁，比较好的办法就是，把action creators和action types定义到一个命名空间中（请看以上代码）。 这样，我们在container中使用actions时，可以通过import { actions } from &#39;path/to/module.js&#39; 引入，这样定义而不是每个action都export，可以简化import代码，import时不需要把所有action都列出来。 同样的，我们要在container中使用action types时，可以通过import { types } from &#39;path/to/module.js&#39;引入。 整体的目录结构如下：1234567891011components/ (应用级别的通用组件)containers/ feature1/ components/ (功能拆分出的专用组件) feature1.js (容器组件) index.js (feature1对外暴露的接口)redux/ index.js (combineReducers) module1.js (reducer, action types, actions creators) module2.js (reducer, action types, actions creators)index.js 应用应用Ducks工程目录组织方式的思想，《React进阶之路》一书的示例代码第9章，项目bbs-redux-reselect工程目录结构如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182│ index.js│├─components # 全局通用组件│ ├─Header│ │ index.js│ │ style.css│ ││ ├─Loading│ │ index.js│ │ style.css│ ││ └─ModalDialog│ index.js│ style.css│├─containers│ ├─App│ │ index.js│ ││ ├─Home│ │ index.js│ ││ ├─Login│ │ index.js│ │ style.css│ ││ ├─Post│ │ │ index.js # Post 容器组件│ │ │ style.css│ │ ││ │ └─components # Post 专用组件│ │ ├─CommentList│ │ │ index.js│ │ │ style.css│ │ ││ │ ├─CommentsView│ │ │ index.js│ │ │ style.css│ │ ││ │ ├─PostEditor│ │ │ index.js│ │ │ style.css│ │ ││ │ └─PostView│ │ index.js│ │ style.css│ ││ └─PostList│ │ index.js # PostList 容器组件│ │ style.css│ ││ └─components # PostList 专用组件│ ├─PostItem│ │ index.js│ │ style.css│ ││ └─PostsView│ index.js│├─images│ like-default.png│ like.png│├─redux│ │ configureStore.js│ ││ └─modules│ app.js│ auth.js│ comments.js│ index.js│ posts.js│ ui.js│ users.js│└─utils AsyncComponent.js connectRoute.js date.js request.js SHA1.js url.js 参考 Redux进阶系列1: React+Redux项目结构最佳实践 《深入浅出React和Redux》一书的第四章，P76，【4.2 代码文件的组织方式】。","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"使用 tree 命令导出 windows 的【文件夹/文件】目录树","slug":"windows/windowsTree","date":"2018-12-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.124Z","comments":true,"path":"windows/windowsTree.html","link":"","permalink":"https://www.lovesofttech.com/windows/windowsTree.html","excerpt":"以下以 redux 官方示例 todomvc 示例代码为例。先进入文件夹的根目录，如果不在根目录，需要在 tree 的命令后面添加目录路径。","text":"以下以 redux 官方示例 todomvc 示例代码为例。先进入文件夹的根目录，如果不在根目录，需要在 tree 的命令后面添加目录路径。 仅显示目录结构123456789101112131415161718192021222324252627# 根目录下，直接使用 tree 命令C:\\todomvc&gt;treeFolder PATH listingVolume serial number is B051-6B82C:.├─public└─src ├─actions ├─components ├─constants ├─containers ├─reducers └─selectors# 不在根目录下，则要添加需要生成树的目录C:\\&gt;tree C:\\todomvcFolder PATH listingVolume serial number is 00002C4F B051:6B82C:\\TODOMVC├─public└─src ├─actions ├─components ├─constants ├─containers ├─reducers └─selectors 显示目录和文件树12345678910111213141516171819202122232425262728293031323334353637383940414243444546C:\\&gt;tree /f C:\\todomvcFolder PATH listingVolume serial number is 00004051 B051:6B82C:\\TODOMVC│ .gitignore│ package-lock.json│ package.json│ README.md│ tree│├─public│ index.html│└─src │ index.js │ ├─actions │ index.js │ ├─components │ App.js │ Footer.js │ Header.js │ Link.js │ MainSection.js │ TodoItem.js │ TodoList.js │ TodoTextInput.js │ ├─constants │ ActionTypes.js │ TodoFilters.js │ ├─containers │ FilterLink.js │ Header.js │ MainSection.js │ VisibleTodoList.js │ ├─reducers │ index.js │ todos.js │ visibilityFilter.js │ └─selectors index.js 直接导出到文本文件将带扩展名的文件目录输出到当前目录下的list.txt文件中1tree /f C:\\todomvc &gt; list.txt","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"tree","slug":"windows/tree","permalink":"https://www.lovesofttech.com/categories/windows/tree/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"tree","slug":"tree","permalink":"https://www.lovesofttech.com/tags/tree/"}]},{"title":"在工作中，如何能更好的与他人协作","slug":"job/cooperationWith","date":"2018-11-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.004Z","comments":true,"path":"job/cooperationWith.html","link":"","permalink":"https://www.lovesofttech.com/job/cooperationWith.html","excerpt":"个人真实感悟","text":"个人真实感悟 前言这个话题很大，我只选与工作关系紧密的以下几个点，说说我自己的看法，如果有新的想法，我会补充进来的。 与人沟通 团队精神 团队氛围 代码规范 适当的文档 单元测试 做好向上向下管理 给刚入职场同学的建议 与人沟通关于如何与他人更好的协作，我首先想到的，就是《高效能人士的七个习惯》里提到的“知彼解已”和第三种选择。 为了与他人协作，沟通是必不可少的，与人沟通，又是一门可以深入研究的学问，这里我只谈一下上面提到的两点，正好对应《高效能人士的七个习惯》里的两个习惯。 知彼解己场景：工作中针对某一个问题发生争论的时候，我们如何沟通？如何轻松找到问题的解决方案从而加强彼此的协作？ 与人沟通的时候，要做一个善于聆听的人，不能抢话，目视对方，恰当的时候要做出反应，这样会让对方感觉到你对他（她）的尊重，同时要努力站在对方的立场去思考他（她）所讲述的事情，要思考对方对某一个问题的态度背后的原因。只有在你理解了对方的前提下，才能有可能针对对方的疑惑作出恰当的解答，最终找到双方都认同的解决方案，这样才有可能让对话变得愉快，从而提高沟通和协作的效率。 第三种选择第三种选择，是《高效能人士的七个习惯》时的第六个习惯“统合综效”里提到的。 第三种选择也好、知彼解已也好，其实都是双赢思维的一种体现。我们在沟通和作出选择的时候，不能钻牛角尖儿，不光要考虑自己，还要考虑别人。 有关《高效能人士的七个习惯》，我把定义摘抄下来了，传送门。 团队精神没有完美的个人，只有完美的团队。 一个人的力量是弱小的，往往个人无法完成的工作到了团队层面经过集思广益就行迅速找到突破口。 在职场，团队协作精神往往是评价一个人是否合格、是否与工作岗位匹配的一个重要指标。 在招聘的时候，团队精神也是优先考虑的一个因素。一个人能力再强，如果没有团队协作精神，不但不能给团队加分，有可能相反会给团队造成非常大的伤害。 团队精神的重要性，毋容置疑，没有团队精神，就谈不上高效协作。 团队氛围团队要有一个好的工作氛围，大家的协作才有可能高效。 作为管理者，需要在这方面努力下功夫，如果团队中都是偏内向的人，在招聘的时候，就要偏向招一个外向的人到团队中来。 平时的工作，也不能太死板，适时的让大家放松放松，定期团建都是非常有必要的。 代码规范代码规范非常重要，要努力做到：做 code review 的时候，乍一看，就象是自己写的代码一样。 这样，在维护别人写的代码时，就可以做到相对比较轻松。 比较差的情况是，每个人的代码风格都不一样，让一个人去维护另外一个人写的代码时，看不懂，宁愿重新实现，甚至到项目的级别，宁愿推倒重来，这样，变谈不上高效协作了。 适当的文档代码最终都是要给人维护的，所以，除了遵循公司统一的代码规范之外，适当的文档也是必不可少的。 不管将来是否是自己维护，都要养成写必要文档的习惯。 单元测试做好单元测试，可以保证软件质量，可以减少测试工作量，可以让测试更加容易理解软件功能，从而更好的做好测试工作，可以让团队在软件迭代和升级的过程中，玩得更加开心。 这一点我们现在的团队也做得不够好，努力中。 做好向上向下管理具体到个人，协作效率如何，从很大程度上还取决于你是否做好了向上和向下管理。 这里，只提一点，就是在工作中，恰当的沟通，能起到事半功倍的效果，比如，定期汇报工作进度，如果工作遇到困难，要让你的领导及时知道，永远不要让你的领导对你的工作进展是最后一个人知道的。 给刚入职场同学的建议这是我之前的一篇博文中提到过的，现在摘抄至此，如果刚入职场的朋友能做到以下两点，必定会提高你与团队的协作效率。点击查看原文 需要学习新技术来解决工作中的问题 这里提到的新技术，是对你来说，是新技术。 当预计到需要花很长时间时，就需要先跳过这个问题，如果不能跳过，请求团队成员帮助，或者换一种方式实现，否则，需要请示上级，或者说告之上级，让上级来决定下一步该如何做，一般来说，上级会根据项目进度和整个项目的计划，适当调整你的工作、或者让别的成员给予你帮助、或者做出别的安排–比如干脆让熟悉的人来做这个功能，给你安排别的任务等。 如果暂时跳过，则应该利用好业余时间来攻克技术难题或者学习新技术。 否则，你没有及时与上级沟通，时间花了，进度又落后了，那么，到了提交工作成果时，你无货可交，上级对你的初步印象只能是工作能力不足。 如果在你没有请示上级的情况下，花了时间去学习新技术导致进度落后，事后上级对进度落后原因进行跟踪了解，对你的印象可能会变成：沟通能力欠佳。 如果在这个过程中，进度落后了，你又没有加班加点的努力工作，那么上级对你的印象可能还会增加一条：工作不够努力、责任心欠佳。 如果这个过程中，你加班加点了，但是你一下班就把这事儿忘到了九霄云外，虽然加班但进度依然落后很多，上级也看到了你加班了，他（她）对你的印象可能是：学习能力不足。 所以，如果需要学习新技术，那么，一定要尽可能快的解决实际问题，先解决问题，然后等有时间了再去做进一步的扩展学习。 工作建议 利用好上班的工作时间（一般为 8 小时），在上班时间，不要做与工作无关的事情。 在理解相关代码与业务、完成工作任务之间需要掌握好度，不要因为学习相关代码和理解业务需求花太长时间而影响任务的进度，但是基本的了解是必须的。同时，还需要深入的了解，这个很重要，不过，时间上的安排需要自己掌握，初到一个公司，额外的付出肯定是需要的，只有肯多花时间才能更快的融入团队、才能更快的进入工作状态。 任务的进度，一定要保持在一个合理的范围，否则需要恰当的理由。 原则上，给出需求，你来实现，除非确实有特殊原因，否则上级一般是不关注过程的，除非上级比较闲。比较忙的上级，通常都只关注结果。 拿到需求，在动手之前，先要分析理解透彻，根据任务的不同，可能还需要做适当的设计、写文档、写测试用例、写单元测试，把疑问都搞清楚了，准备工作才算完成，然后再开始写代码，实现过程中如果遇到障碍，需要尽早沟通，如果不确定用哪种方案好，向上级反馈，指出供参考的方案（至少两种）的优劣，好让上级做出正确的决策。 进入一个新的环境，一定要先了解团队对于编码格式的要求，可能还会有别的要求，比如 sql 语句不允许写 like、不允许多表 inner join 之类。 一定要抽时间了解整个团队现有的工作成果，比如公共模块，很多通用功能在公共模块里可能都已经有了，不能自己造轮子。如果在公共模块里找不到你需要的功能，你又认为这应该是一个公共功能时，需要请示上级把该功能添加进去，如果上级忙，那么我认为直接添加进去也是可以的，这要根据团队的具体要求，有的团队的公共模块有专人维护，其它成员没有源代码修改权限。如果你因为上级忙而直接添加到公共模块了，至少要以恰当的方式让上级知道这事儿，可能是项目管理工具里的任务完成描述，可能是工作周报，也有可能是例会，还有可能是饭间时间。 请注意，上面一点，是“抽时间”而不是利用上班时间专门去做这件事，除非上级是这么安排的，即便有安排工作时间让你了解现有的工作成果，但我认为，一般来说这个时间是远远不够的。 工作上，不能仅仅满足完成任务，在完成任务之余，对技术也好、业务也好，如果能做到知其然且知其所以然，那么，我相信，你的成长将会很快，领导也会注意到这一点的，下次加薪、提拔，可能就有你的份儿了，一旦领导愿意对你委以重任，恭喜你，你已经获得领导认可了。 你承担团队的工作职责、业务职责越多，说明你对团队、对公司而言，越有价值，那么，通常，公司也愿意分享更多价值给你，最直接的，就是项目奖金、年底奖金、加薪，如果成为技术骨干、成为技术部带头人，还有可能获得公司期权、股份，等等。 所以，骚年，努力工作，利用好可利用的时间。付出才有收获，回报往往与努力程度成正比。","categories":[{"name":"协作","slug":"协作","permalink":"https://www.lovesofttech.com/categories/协作/"},{"name":"job","slug":"协作/job","permalink":"https://www.lovesofttech.com/categories/协作/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"协作","slug":"协作","permalink":"https://www.lovesofttech.com/tags/协作/"}]},{"title":"高效能人士的七个习惯--定义","slug":"job/the7HabitsOfHighlyEffectivePeople","date":"2018-11-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.012Z","comments":true,"path":"job/the7HabitsOfHighlyEffectivePeople.html","link":"","permalink":"https://www.lovesofttech.com/job/the7HabitsOfHighlyEffectivePeople.html","excerpt":"如题","text":"如题 习惯一：积极主动积极主动即采取主动，为自己过去、现在及未来的行为负责，并依据原则及价值观，而非情绪或外在环境来下决定。积极主动的人是改变的催生者，他们摒弃被动的受害者角色，不怨天尤人，发挥了人类四项独特的禀赋——自觉、良知、想象力和自主意志，同时以由内而外的方式来创造改变，积极面对一切。他们选择创造自己的人生，这也是每个人最基本的决定。 习惯二：以终为始所有事物都经过两次的创造——先是在脑海里酝酿，其次才是实质的创造。个人、家庭、团队和组织在做任何计划时，均先拟出愿景和目标，并据此塑造未来，全心投入自己最重视的原则、价值观、关系及目标。对个人、 家庭或组织而言，使命宣言可以说是愿景的最高形式，它是根本的决策，主宰了所有其他决定。领导工作的核心，就是基于共有的使命、愿景和价值观，创造出一个文化。 习惯三：要事第一要事第一即实质的创造，是梦想（你的目标、愿景、价值观及要事处理顺序） 的组织与实践。次要的事不必摆在第一，要事也不能放在第二。无论迫切性如何，个人与组织均要更多聚焦要事，重点是，把要事放在第一位。习惯四：双赢思维（THINK WIN-WIN）双赢思维是一种基于互敬、寻求互惠的思考框架与心意，目的是分享更多的机会、财富及资源，而非敌对式竞争。双赢既非损人利己（赢输），亦非损己利人（输赢）。我们的工作伙伴及家庭成员要从互赖式的角度来思考（“我们”，而非“我”）。双赢思维鼓励我们解决问题，并协助个人找到互惠的解决办法，是一种资讯、力量、认可及报酬的分享。 习惯四：双赢思维双赢思维是一种基于互敬、寻求互惠的思考框架与心意，目的是分享更多的机会、财富及资源，而非敌对式竞争。双赢既非损人利己（赢输），亦非损己利人（输赢）。我们的工作伙伴及家庭成员要从互赖式的角度来思考（“我们”，而非“我”）。双赢思维鼓励我们解决问题，并协助个人找到互惠的解决办法，是一种资讯、力量、认可及报酬的分享。 习惯五：知彼解己当我们不再急切回答，改以诚心去了解、聆听别人，便能开启真正的沟通，增进彼此关系。对方获得理解后，会觉得受到尊重与认可，进而卸下心理防备， 坦然而谈，双方对彼此的了解也就更顺畅自然。知彼需要仁慈心，解己需要勇气，能平衡两者，则可大幅提升沟通的效率。 习惯六：统合综效统合综效谈的是创造第三种选择，即非按照我的方式，亦非遵循你的方式，而是创造第三种更好的办法。它是互相尊重的成果——不但了解了彼此，甚至还称赞彼此的差异，欣赏对方解决问题及把握机会的手法。个人的力量是团队和家庭统合综效的基础，能使整体获得一加一大于二的成效。实践统合综效的人际关系和团队会扬弃敌对的态度（1+1＝0.5），不以妥协为目标（1+1＝1.5），也不仅仅止于合作（1+1＝2），他们要的是创造式的合作（1＋1＞2）。 习惯七：不断更新“不断更新”谈的是，如何在四个生活基本面（身体、精神、智力、社会/情感）中，不断更新自己。这个习惯提升了其他六个习惯的实施效率。对组织而言，习惯七提供了愿景、更新及不断的改善，使组织不至呈现老化及 疲态，并迈向新的成长之路。对家庭而言，习惯七通过固定的个人及家庭活动，使家庭效能升级，就像建立传统，使家庭日新月异，即是一例。","categories":[{"name":"七个习惯","slug":"七个习惯","permalink":"https://www.lovesofttech.com/categories/七个习惯/"},{"name":"job","slug":"七个习惯/job","permalink":"https://www.lovesofttech.com/categories/七个习惯/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"七个习惯","slug":"七个习惯","permalink":"https://www.lovesofttech.com/tags/七个习惯/"}]},{"title":"工作感言/经验，文章目录","slug":"job/index","date":"2018-11-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.006Z","comments":true,"path":"job/index.html","link":"","permalink":"https://www.lovesofttech.com/job/index.html","excerpt":"工作中的软技能","text":"工作中的软技能 软件工程师个人品质、团队精神，你都做到了哪些？ 在工作中，如何能更好的与他人协作 从【技术岗位】招聘的用人方视角，看求职这件事–想要有效且高效求职，就应该了解一下 给刚入职场同学的建议 如何在更少的时间内完成更多的工作 火炉原则 高效能人士的七个习惯–定义 工作中的一些小经验 团队在开发中应该遵循的一些规则，以及部分经验总结 提问的智慧 聊聊工程师的影响力","categories":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/categories/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"}]},{"title":"Git 用户名邮箱的全局配置和单仓库配置","slug":"git/gitContributors","date":"2018-11-28T16:00:00.000Z","updated":"2020-09-01T02:53:12.961Z","comments":true,"path":"git/gitContributors.html","link":"","permalink":"https://www.lovesofttech.com/git/gitContributors.html","excerpt":"如题","text":"如题 现象git 贡献者，在码云上显示的跟实际登录认证账号不一致。 原因如果设置了全局用户名和邮箱为 A，虽然提交代码的时候，登录认证账号是 B，最后在码云上查看，贡献者仍然显示为 A，这就导致认证账号与代码贡献者不一致的现象。 全局用户名和邮箱是本地 git 客户端的变量，可配置，不随 git 库而改变。gitee 和 github 是按邮箱来统计贡献者（Contributors）的。 查看全局用户名和邮箱123456$ git config user.nameAndyChenAndyChen@AndyChen MINGW64 /c/temp$ git config user.email1614923608@qq.com 这是我之前设置的，最近，我在 gitee 上重新注册了一个账号（为了与 github 的账号用同样的邮箱），相关项目已经迁移至新账号，新账号下的项目都没有单独配置用户名和邮箱。 我发现最近的提交，都统计到之前的账号了，而且，家里电脑提交的，和在办公室电脑上提交的，还都不一样（我承认，我有多个 gitee 账号^()^ ^_^），甚是纳闷，后来才想起来有全局配置这回事儿。 解决办法为项目单独配置用户名和邮箱 到项目根目录下，修改 .git 目录下的 config 文件，在末尾添加： 123[user] name = AndyChen email = andy@lovesofttech.com .git 目录是隐藏目录，需要设置隐藏目录可见。 用命令123456789AndyChen@AndyChen MINGW64 /c/workspace/esDemo (master)$ git config user.name &apos;AndyChen&apos;AndyChen@AndyChen MINGW64 /c/workspace/esDemo (master)$ git config user.email &apos;andy@lovesofttech.com&apos;AndyChen@AndyChen MINGW64 /c/workspace/esDemo (master)$ git config user.emailandy@lovesofttech.com 该命令执行之后，会在 .git 目录下的 config 文件，在末尾添加相关配置内容，跟直接修改 config 文件的效果是一样的。 修改全局用户名和邮箱12345AndyChen@AndyChen MINGW64 /c/workspace/esDemo (master)$ git config --global user.name &apos;AndyChen&apos;AndyChen@AndyChen MINGW64 /c/workspace/esDemo (master)$ git config --global user.email &apos;andy@lovesofttech.com&apos; 跟单独给项目配置用户名和邮箱的区别是，这里加了全局选项 --global 再到一个没有项目文件的目录查看配置情况：123456789# 全局配置修改之前的配置AndyChen@AndyChen MINGW64 /c/temp$ git config user.email1614923608@qq.com# 全局配置修改之后的配置AndyChen@AndyChen MINGW64 /c/temp$ git config user.emailandy@lovesofttech.com 如上，说明全局配置已经生效了。","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"react开发，日常经验汇总","slug":"react/reactExperience","date":"2018-11-25T16:00:00.000Z","updated":"2020-09-01T02:53:13.090Z","comments":true,"path":"react/reactExperience.html","link":"","permalink":"https://www.lovesofttech.com/react/reactExperience.html","excerpt":"如题","text":"如题 react 函数调用的坑12345render: item =&gt; ( &lt;span title=&#123;item.opContent&#125;&gt; &#123;item.opContent.length &gt; opContentMaxLength ? &lt;span&gt;item.opContent.substr(0, opContentMaxLength)&amp;nbsp;&amp;nbsp;&lt;a onClick=&#123;this.handleModalVisible(true, item)&#125;&gt;查看&lt;/a&gt;&lt;/span&gt; : item.opContent&#125; &lt;/span&gt; ), 在页面加载时，每一条记录都会调用一次 this.handleModalVisible(true, item)正确的应该是这样：12345render: item =&gt; ( &lt;span title=&#123;item.opContent&#125;&gt; &#123;item.opContent.length &gt; opContentMaxLength ? &lt;span&gt;item.opContent.substr(0, opContentMaxLength)&amp;nbsp;&amp;nbsp;&lt;a onClick=&#123;() =&gt; this.handleModalVisible(true, item)&#125;&gt;查看&lt;/a&gt;&lt;/span&gt; : item.opContent&#125; &lt;/span&gt; ), npm 升级 package.json 依赖包到最新版本号使用工具包：npm-check-updates 全局安装ncu：npm install -g npm-check-updates 使用 检查package.json中dependencies的最新版本：ncu 更新dependencies到新版本：ncu -u1234Hmmmmm... this is taking a long time. Your console is telling me to wait for inputon stdin, but maybe that is not what you want.Try winpty ncu.cmd, or specify a package file explicitly with --packageFile package.json.See https://github.com/tjunnone/npm-check-updates/issues/136#issuecomment-155721102 指定 packageFile 文件名的方式会快一些1ncu -u --packageFile package.json Google Chrome 不能在线安装 React 相关的插件，可下载离线版进行安装由于众所周知的原因，Google Chrome 不能访问应用商店，所以，不能在线安装 React Developer Tools、Redux DevTools、JetBrains IDE Support，不过网上有离线版可供下载，地址如下： React Developer Tools Redux DevTools JetBrains IDE Support 到crx4chrome官网，还可以搜索扩展。 安装方式请参考像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码，该文章有离线安装的详细讲解。 Redux DevTools 调试，版本不兼容问题在Google Chrome Version 70.0.3538.67 (Official Build) (64-bit)安装Redux DevTools 2.15.1的离线版，结果报了很多错，错误直指Redux源码。在没有安装该插件的浏览器上可以正常运行。 解决方式，安装最新版的Redux DevTools 2.16.5。 WebStorm + React 项目，配置 ESLint传送门 依赖包版本在 package.json 这样定义 &quot;eslint&quot;: &quot;^5.6.0&quot;,，cnpm i 之后，实际上安装的是当前最新版本 5.10.0，运行 · 的时候，会得到以下提示：12345678The react-scripts package provided by Create React App requires a dependency: &quot;eslint&quot;: &quot;5.6.0&quot;Don&apos;t try to install it manually: your package manager does it automatically.However, a different version of eslint was detected higher up in the tree: C:\\workspace\\react\\react-full-stack-learning\\node_modules\\eslint (version: 5.10.0) 解决办法是，把版本号前面的 ^ 去掉，这样会精确匹配。 关于版本号的定义，请自行百度。 npm start 时，指定启动端口以指定 91 端口为例 windows 1&quot;start&quot;: &quot;set PORT=91 &amp;&amp; react-scripts start&quot;, linux 1&quot;start&quot;: &quot;export PORT=91 &amp;&amp; react-scripts start&quot;, macOS 下遇到的总是npm start 之后，提示：12? Admin permissions are required to run a server on a port below 1024.Would you like to run the app on another port instead? (Y/n) 这是因为非 root 用户，不允许在 1024 以下的端口运行项目。 解决 想要在指定1024以下的端口运行，可以先 dudo -i 以 root 用户来运行 npm start。 执行 sudo -i 之后，会默认进入 root 根目录，要启动项目，还需要 cd 到项目的根目录下。 当然，不设置则用默认3000端口，或者设置为 1024 以上的端口最省事儿。 package.json 不能添加注释 node 项目的 package.json 添加注释会报错。 JSON 数据不支持注释，虽然某些解析器支持，但最好不要在 JSON 数据内容添加注释，否则遇到不支持的解析器，可能会花很多时间来找问题。","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"},{"name":"experience","slug":"react/redux/experience","permalink":"https://www.lovesofttech.com/categories/react/redux/experience/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码","slug":"react/JetBrainsIDESupport","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.079Z","comments":true,"path":"react/JetBrainsIDESupport.html","link":"","permalink":"https://www.lovesofttech.com/react/JetBrainsIDESupport.html","excerpt":"开发工具：WebStorm + Google Chrome + JetBrains IDE Support 插件","text":"开发工具：WebStorm + Google Chrome + JetBrains IDE Support 插件 效果先来一张截图，看一下效果。 准备工作 WebStorm 的 Javascript Debug 只能选择 Google chrome（至少在我的电脑上是这样），所以，JetBrains IDE Support 插件需要安装到 Google chrome 上。 chrome 最新版下载 安装插件，在应用中心，搜索：JetBrains IDE Support，不过，由于众所周知的原因，如果你不能访问谷歌应用中心的话，可以下载离线版进行安装。 离线安装包下载链接 下载之后，先开启 chrome 的开发者模式（详情请见chrome 安装插件遇到的问题），重启 chrome，再将文件直接拖至 chrome 的扩展页面，按照提示安装即可。 安装插件之后一定要重启浏览器，否则插件不会生效。 WebStorm 和 JetBrains IDE Support 端口设置成一样。 点击 JetBrains IDE Support 插件的 logo 右键，出来如下窗口，点击【Options】设置端口 添加 JavaScript Debug 启动项。 只能选择 chrome 浏览器 调试 在 WebStorm 的【Terminal】窗口运行 npm start。 也可以按照如下配置，就象用 IDEA 开发 Java 程序一样配置启动项，然后直接点击小虫子左边的三角启动项目。 选择刚才添加的【JavaScript Debug】启动项【jsDebug】，点击 Debug 按钮（小虫子），会打开 chrome 窗口，这时候的操作便会触发调试，尽情享受编程的乐趣吧~~~ chrome 安装插件遇到的问题现象提示：无法从该网站添加应用、扩展程序和用户脚本拖上去的插件，变成下载了，汗~~ 开启开发者模式，重新将插件拖上去，问题依旧。 解决开启开发者模式之后，重启浏览器，重新安装，就一切正常了。看来开启开发都模式之后，需要重启浏览器才会生效。 程序包无效：”CRX_HEADER_INVALID”更新时间：2020-01-26可能是 Chrome 升级了的原因，之前的安装方式不好使了，提示程序包无效：”CRX_HEADER_INVALID” 解决： 把下载的 .crx 文件后缀由 .crx 改为 .rar，如，改名为：JetBrainsIDESupportCRX2.0.10.rar 解压至 JetBrainsIDESupportCRX2.0.10 Chrome 访问：chrome://extensions/，开启开发者模式 加载已解压的扩展程序，打开 JetBrainsIDESupportCRX2.0.10 目录","categories":[{"name":"WebStorm","slug":"WebStorm","permalink":"https://www.lovesofttech.com/categories/WebStorm/"},{"name":"react","slug":"WebStorm/react","permalink":"https://www.lovesofttech.com/categories/WebStorm/react/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"WebStorm","slug":"WebStorm","permalink":"https://www.lovesofttech.com/tags/WebStorm/"}]},{"title":"React 项目调试技巧","slug":"react/debug","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.082Z","comments":true,"path":"react/debug.html","link":"","permalink":"https://www.lovesofttech.com/react/debug.html","excerpt":"如题","text":"如题 前端开发的调试方式 借助以下插件进行调试。 Redux DevTools React Developer Tools React Perf F12 之后，在源代码处打断点。 像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码，直接在 WebStorm 源代码上打断点，调试起来有点象在 IDEA 下调试 Java 程序，很爽！ Redux DevTools 安装插件 以 qq 浏览器为例，搜索：Redux DevTools 添加相应代码以支持在浏览器上使用 Redux DevTools 插件。 参考 如果要用 redux，需要加扩展：redux-devtools-extension，只需要作如下调整:12// 将 window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__() 作为 createStore 方法的第三个参数，如下：const store = createStore(reducer, initValues, window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()); 使用插件 npm start 之后，在 chrome 或者 qq 浏览器，按 F12，点击【Redux】，可跟踪 Action 以及 state 的变化。 React Developer Tools 安装插件 以 qq 浏览器为例，搜索：React Developer Tools 使用插件 React Perf性能插件，具体使用可参考《深入浅出React和Redux》，P101-102，【4.6.3 工具应用】章节。 扩展阅读 介绍 React 性能分析器 React 的慢与快：优化 React 应用实战 F12 之后，在源代码处打断点可 F12 之后，点击【Sources】，在想要监控变量的地方打断点，这种方式还是非常方便的。","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"redux 官方示例 todomvc 中的 todoList 过滤事件解析","slug":"react/examplesTodomvcGetVisibleTodos","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.085Z","comments":true,"path":"react/examplesTodomvcGetVisibleTodos.html","link":"","permalink":"https://www.lovesofttech.com/react/examplesTodomvcGetVisibleTodos.html","excerpt":"如题","text":"如题 官方 todomvc 示例源码 如果已经安装 Git for Windows 客户端工具（传送门），在工作文件夹下，右键 -&gt; Git Bash Here，依次执行下面的代码，查看运行效果，运行之后，可以修改源代码，如果编译通过，页面会自动刷新。1234git clone https://github.com/reduxjs/redux.gitcd redux/examples/todomvc/cnpm inpm start 理解代码逻辑点击【All】、【Active】、【Completed】，页面做了哪些操作？在哪里调用了重新获取 todoList 并更新到页面上的呢？点击以上三个链接的时候，FilterLink 组件做的事情，仅仅是把自身数据 state.visibilityFilter 的值改成点击链接的 props.filter。FilterLink 的 props 有一个成员，叫：filter，它是在哪儿赋值的呢？看下面的代码（src/components/Footer.js）123456789&lt;ul className=\"filters\"&gt; &#123;Object.keys(FILTER_TITLES).map(filter =&gt; &lt;li key=&#123;filter&#125;&gt; &lt;FilterLink filter=&#123;filter&#125;&gt; &#123;FILTER_TITLES[filter]&#125; &lt;/FilterLink&gt; &lt;/li&gt; )&#125;&lt;/ul&gt; 从以上代码可知，是通过数组 FILTER_TITLES 的 key 来初始化过滤链接（全部、待办、完成）的。再看一下数组 FILTER_TITLES 的定义：12345const FILTER_TITLES = &#123; [SHOW_ALL]: &apos;All&apos;, [SHOW_ACTIVE]: &apos;Active&apos;, [SHOW_COMPLETED]: &apos;Completed&apos;&#125; 上面的代码，SHOW_ALL、SHOW_ACTIVE、SHOW_COMPLETED 是常量，定义在 src/constants/TodoFilters.js代码如下：123export const SHOW_ALL = &apos;show_all&apos;export const SHOW_COMPLETED = &apos;show_completed&apos;export const SHOW_ACTIVE = &apos;show_active&apos; 通过 WebStorm 的调试窗口（在 WebStorm 调试 react 项目的方法，传送门），可以看到，数组 FILTER_TITLES，实际的值是：12345&#123; &quot;show_all&quot;: &quot;All&quot;, &quot;show_active&quot;: &quot;Active&quot;, &quot;show_completed&quot;: &quot;Completed&quot;&#125; 看到这里，就知道了下面的代码中，传给 FilterLink 组件的 props 成员 filter 的值，其实就是数组 FILTER_TITLES 的 key，即：show_all、show_active、show_completed。123456789&lt;ul className=\"filters\"&gt; &#123;Object.keys(FILTER_TITLES).map(filter =&gt; &lt;li key=&#123;filter&#125;&gt; &lt;FilterLink filter=&#123;filter&#125;&gt; &#123;FILTER_TITLES[filter]&#125; &lt;/FilterLink&gt; &lt;/li&gt; )&#125;&lt;/ul&gt; 在界面上，页面末尾那三个链接【All】、【Active】、【Completed】，就是三个 FilterLink 组件，通过上面的分析，这三个组件的 props.filter 分别是 show_all、show_active、show_completed。FilterLink 组件，又用了一个UI组件 Link，在 Link 组件中，执行的点击事件是： onClick={() =&gt; setFilter()}。setFilter 函数是在容器组件 FilterLink 的 mapDispatchToProps 中定义的：12345const mapDispatchToProps = (dispatch, ownProps) =&gt; (&#123; setFilter: () =&gt; &#123; dispatch(setVisibilityFilter(ownProps.filter)) &#125;&#125;) 它要做的事，只是向 store 发出一个 dispatch，那么，最终执行者在哪儿呢？回答这个问题，需要了解 redux 原理。 redux 的 store 由函数 createStore 返回，该函数的第一个参数是 reducers，是包含了各个模块的 reducer。 而 reducers，在这个例子中，是用 redux 提供的 combineReducers() 函数来整合得到的一个集合（更准确的说，是一个数组），这样，store 就可以根据各个模块的 reducer key 来统一管理各个模块的 state 以及 actions（模块的行为，体现在自己模块的 reducer 中定义的各个函数）。 对于 combineReducers()，官方是这样描述的：combineReducers() 所做的只是生成一个函数，这个函数来调用你的一系列 reducer，每个 reducer 根据它们的 key 来筛选出 state 中的一部分数据并处理，然后这个生成的函数再将所有 reducer 的结果合并成一个大的对象。 了解了这个原理之后，回到刚才的问题，Link 组件的点击事件，最终的行为，是 reducer（文件 src/reducers/visibilityFilter.js 定义的函数） visibilityFilter，其定义如下12345678const visibilityFilter = (state = SHOW_ALL, action) =&gt; &#123; switch (action.type) &#123; case SET_VISIBILITY_FILTER: return action.filter default: return state &#125;&#125;; 该方法的默认行为是返回 SHOW_ALL（常量），即返回字符串 show_all，点击某一个链接时，返回的是 action 传过来的 filter。那这个 action 又是在哪儿定义的呢？从源代码中可以看出，派发的 dispatch 是：dispatch(setVisibilityFilter(ownProps.filter))。再看上下文，不难发现，该 action 是在 src/actions/index.js 下定义的，setVisibilityFilter 的定义如下：1export const setVisibilityFilter = filter =&gt; (&#123; type: types.SET_VISIBILITY_FILTER, filter &#125;); 分析到这里，问题来了，visibilityFilter 接收到这个 action 并执行之后，直接返回的是 action.filter，接下来又发生了什么？先看一下 rcux 文档关于 reducer 的描述（传送门）： reducers 指定了应用状态的变化如何响应 actions 并发送到 store 的，记住 actions 只是描述了有事情发生了这一事实，并没有描述应用如何更新 state。 reducer 就是一个纯函数，接收旧的 state 和 action，返回新的 state。 注意每个 reducer 只负责管理全局 state 中它负责的一部分。每个 reducer 的 state 参数都不同，分别对应它管理的那部分 state 数据。 再回到 visibilityFilter，执行之后，返回的 filter 其实是会更新到 visibilityFilter 这个 reducer 负责的 state。通过浏览器的 Redux DevTools 插件，我们很容易看到，在 state 树上，有两个对象，key 分别为：todos 和 visibilityFilter。 接下来，因为 state 发生了变化，这会导致页面重新渲染，而页面渲染的时候，todoList 会根据 visibilityFilter 的值进行过滤，从而实现了三个链接应该有的功能。相关代码如下：12345678910111213141516171819202122232425262728293031import &#123; createSelector &#125; from &apos;reselect&apos;import &#123; SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE &#125; from &apos;../constants/TodoFilters&apos;const getVisibilityFilter = state =&gt; state.visibilityFilterconst getTodos = state =&gt; state.todosexport const getVisibleTodos = createSelector( [getVisibilityFilter, getTodos], (visibilityFilter, todos) =&gt; &#123; switch (visibilityFilter) &#123; case SHOW_ALL: return todos case SHOW_COMPLETED: return todos.filter(t =&gt; t.completed) case SHOW_ACTIVE: return todos.filter(t =&gt; !t.completed) default: throw new Error(&apos;Unknown filter: &apos; + visibilityFilter) &#125; &#125;)export const getCompletedTodoCount = createSelector( [getTodos], todos =&gt; ( todos.reduce((count, todo) =&gt; todo.completed ? count + 1 : count, 0 ) )) createSelectorg上面的代码，用到了 createSelectorg 来优化性能，有关 createSelectorg 方法，这里不做分析，请参考： 《深入浅出React和Redux》P122，【5.3 用reselect 提高数据获取性能】章节。 翻译|Redux的中间件-Reselect 模拟代码帮助理解reselect的createSelector函数","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"WebStorm + React 项目，配置 ESLint","slug":"react/eslintConfig","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.083Z","comments":true,"path":"react/eslintConfig.html","link":"","permalink":"https://www.lovesofttech.com/react/eslintConfig.html","excerpt":"如题","text":"如题 ESLint 简介ESLint是一个开源的JavaScript代码检查工具，其作者是大名鼎鼎的“红宝书”《JavaScript高级程序设计》作者 Nicholas C. Zakas。Nicholas C. Zakas 在他的多部著作中都有涉及到JavaScript的代码风格问题，而eslint正是用来统一JavaScript代码风格的工具。 代码检查是一种静态的分析，常用于寻找有问题的模式或者代码，并且不依赖于具体的编码风格。对大多数编程语言来说都会有代码检查，一般来说编译程序会内置检查工具。 JavaScript 是一个动态的弱类型语言，在开发中比较容易出错。因为没有编译程序，为了寻找 JavaScript 代码错误通常需要在执行过程中不断调试。像 ESLint 这样的可以让程序员在编码的过程中发现问题而不是在执行的过程中。 ESLint 的初衷是为了让程序员可以创建自己的检测规则。ESLint 的所有规则都被设计成可插入的。ESLint 的默认规则与其他的插件并没有什么区别，规则本身和测试可以依赖于同样的模式。为了便于人们使用，ESLint 内置了一些规则，当然，你可以在使用过程中自定义规则。 ESLint 使用 Node.js 编写，这样既可以有一个快速的运行环境的同时也便于安装。 ESLint 哲学所有都是可拔插的 内置规则和自定义规则共用一套规则 API 内置的格式化方法和自定义的格式化方法共用一套格式化 API 额外的规则和格式化方法能够在运行时指定 规则和对应的格式化方法并不强制捆绑使用 每条规则: 各自独立 可以开启或关闭（没有什么可以被认为“太重要所以不能关闭”） 可以将结果设置成警告或者错误 另外: ESLint 并不推荐任何编码风格，规则是自由的 所有内置规则都是泛化的 项目: 通过丰富文档减少沟通成本 尽可能的简单透明 相信测试的重要性 先看一下代码优化效果请点开图片看大图 按照以上提示，Alt+Enter 之后，会弹出以下窗口： 选择 Fix Current file，之后，优化的代码差异如下： 使用 ESLint 带来的好处统一代码风格，减少review成本和低级错误的出现eslint可以配置在开发环境中，帮助我们找出项目中不符合规则的代码并给出提示。在我们的开发环境中，开发者每次修改代码，都会先用eslint检查代码，再进行babel和react的编译，一旦eslint发现error级别的错误，那么报错文件不会进行后续的编译。这样可以让eslint随时提醒开发者代码是否符合规范，从而减少了我们花费在review代码风格上的时间，降低了低级bug的出现。 支持ES6同类型的代码检查工具还有jslint和jshint，和它们相比，eslint对ES6语法支持更好，可以通过eslint在团队内快速统一ES6的语法，精简产品代码，提高开发效率。 丰富的插件eslint除了上面说的支持ES6语法之外，还支持各种插件，可以让我们添加自己需要的语法规则。比如项目引入了react，那么最好使用eslint-plugin-jsx-a11y和eslint-plugin-react 这两个插件来检查代码，使基于react的代码更符合规范。 配置并在项目中使用 添加 eslint 依赖。全局或者仅在项目安装 ESLint（二选一），并运行 eslint --init 仅在项目安装，执行 npm i eslint --save-dev，如果是开源项目，推荐这种方式。 全局安装 npm i eslint -g 项目如果用的是 webpack，则加入对应的插件 eslint-loader 在项目根目录下创建配置文件 .eslintrc.*，参考：Configuring ESLint（该文对如何配置写得非常详细）。 使用命令生成配置文件 .eslintrc.yml在 cmd 窗口，进入项目根目录，执行 eslint --init。如果用 WebStorm 打开的项目，直接在 Terminal 窗口执行命令即可（默认路径就是项目根目录）。 通过以上操作，最终在项目根目录下生成文件 .eslintrc.yml，内容如下：12345678910111213141516171819202122232425262728env: browser: true commonjs: true es6: trueextends: 'eslint:recommended'parserOptions: ecmaFeatures: jsx: true ecmaVersion: 2018 sourceType: moduleplugins: - reactrules: # 缩进风格：这里设置的是用4个空格缩进。 # 至于要用几个空格来缩进，需要根据团队的编码规范来。 # 如果是研究别人的开源项目，建议根据开源项目的实际情况来设置。 indent: - error - 4 linebreak-style: - error - windows quotes: # 引号：设置成双引号 - error - double semi: # 分号：语句末尾需要有分号 - error - always 这里有一份配置文件的详细解说，点击前往。 实践WebStorm 提示 Error: No ESLint configuration found. 需要配合 ESLint 的配置文件，如果不想配置，可以临时在 WebStorm 中将 ESLint 禁用掉。Ctrl+Alt+s -&gt; Languages &amp; Frameworks -&gt; Code Quality Tools -&gt; ESLint -&gt; Enable，将 Enable 前面的复选框设置为非勾选状态。 参考上面，添加配置文件。 ESLint 是否全局安装，决定 WebStorm 如何配置 如果 ESLint 是配置到 package.json，即仅项目下安装，而不是全局安装，则 Configuration file，勾选 Automatic search 即可。 如果 ESLint 是全局安装，则要指定配置文件，勾选 Configuration file: 并在其后指定配置文件。 eslint-plugin-react 依赖在执行 eslint --init 初始化配置文件的时候，如果选择了要使用 react，则需要安装依赖 eslint-plugin-react，否则会提示： Error: Failed to load plugin react: Cannot find module &#39;eslint-plugin-react&#39;。 解决此类问题，最基本的原则是，缺什么依赖，就安装什么依赖。只是要注意区分，是全局安装还是仅项目安装。 eslint-plugin-react 是否全局安装，与 ESLint 是否全局安装相关： 如果 ESLint 是全局安装的，eslint-plugin-react 也要全局安装，安装命令： cnpm install eslint-plugin-react -g。 同理，如果 ESLint 只是在项目下安装，安装命令： cnpm install eslint-plugin-react --save-dev。 关于 ESLint 与 eslint-plugin-react 的搭配安装，官方文档是这样描述的：If you installed ESLint globally, you have to install React plugin globally too. Otherwise, install it locally. switch 缩进配置如下，配置缩进为两个空格，没有配置 SwitchCase 的情况下，switch 语句会报缩进不对。1234rules: indent: - error - 2 解决：在配置文件里设置 switch case 的缩进，如下：12345rules: indent: - error - 2 - SwitchCase: 1 json 格式配置如下：12345'rules': &#123; // other config 'indent': ['error', 2, &#123;'SwitchCase': 1&#125;], // ...&#125; 让webpack在打包文件之前，对除第三方外的js文件用eslint进行检查。12345678910preLoaders: [ &#123; test: /\\.js$/, // 检测所有的js文件 loader: &quot;eslint-loader&quot;, // 使用eslint插件 exclude: [ // 排除第三方文件 /node_modules/, /app\\/lib/ ] &#125;] 完成上述配置后，webpack在构建时就能自动对js代码用eslint进行检查了。 注：由于webpack在默认配置下遇到error并不会抛出错误终止代码打包，需要在webpack命令上添加bail参数让webpack抛出错误：1webpack --bail --progress --colors --config webpack.config.js 添加插件如果需要react和jsx的语法检查，可以引入eslint-plugin-jsx-a11y和eslint-plugin-react这两个插件并在.eslintrc文件中添加入plugins的配置：1234\"plugins\": [ \"react\", \"jsx-a11y\"] 规则格式是&lt;插件名称&gt;/&lt;规则名称&gt;: &lt;告警级别&gt;：123456&#123; \"rules\": &#123; \"react/jsx-uses-react\": \"error\", \"jsx-a11y/no-static-element-interactions\": \"warn\" &#125;&#125; rules 配置说明以下配置仅列举一部分，详细说明请参考：ESLint 配置文件 .eslintrc 示例及说明123456789101112131415161718192021222324252627282930313233343536'rules': &#123; // no-var 'no-var': 'error', // 要求或禁止 var 声明中的初始化 'init-declarations': 2, // 强制使用单引号 'quotes': ['error', 'single'], // 要求或禁止使用分号而不是 ASI 'semi': ['error', 'never'], // 禁止不必要的分号 'no-extra-semi': 'error', // 强制使用一致的换行风格 'linebreak-style': ['error', 'unix'], // 空格2个 'indent': ['error', 2, &#123;'SwitchCase': 1&#125;], // 指定数组的元素之间要以空格隔开(,后面)， never参数：[ 之前和 ] 之后不能带空格，always参数：[ 之前和 ] 之后必须带空格 'array-bracket-spacing': [2, 'never'], // 在块级作用域外访问块内定义的变量是否报错提示 'block-scoped-var': 0, // if while function 后面的&#123;必须与if在同一行，java风格。 'brace-style': [2, '1tbs', &#123;'allowSingleLine': true&#125;], // 双峰驼命名格式 'camelcase': 2, // 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号， 'comma-dangle': [2, 'never'], // 控制逗号前后的空格 'comma-spacing': [2, &#123;'before': false, 'after': true&#125;], // 控制逗号在行尾出现还是在行首出现 'comma-style': [2, 'last'], // 圈复杂度 'complexity': [2, 9], // 以方括号取对象属性时，[ 后面和 ] 前面是否需要空格, 可选参数 never, always 'computed-property-spacing': [2, 'never'], // 关闭 强制方法必须返回值，TypeScript强类型，不配置 // 'consistent-return': 0 &#125; 规则格式是&lt;规则名称&gt;: &lt;告警级别&gt;，告警级别分为三种: “0”表示忽略问题，等同于”off”; “1”表示给出警告，等同于”warn”; “2”表示直接报错，等同于”error”。 配置第三方规则 airbnb除了支持插件外，eslint还支持通过扩展来快速的引入开源的JavaScript代码规则，减少了我们选择规则的时间，例如eslint官方推荐的规则：1extends: &apos;eslint:recommended&apos; 这里安装前端圈内很流行的 airbnb，参考：eslint-config-airbnb。 前提是要先引入 airbnb 的插件。airbnb 的规则不仅包含了官方推荐的大部分规则，还加入了jsx、react和import的相关规则，能帮助我们一键完成react应用的代码规则配置。 如果扩展引入的有些规则不符合所在团队的开发习惯，可在.eslintrc的rules中用自己的配置覆盖掉扩展中的默认值。 引入扩展的目的是减少我们挑选规则的时间，但这些规则不一定切合团队和项目的具体情况。如果一味地让团队去遵守别人制定的规则，很可能造成对现存代码的大范围修改，反而降低了开发效率。因此，建议先依据团队现有的良好的风格挑选出最符合现有开发习惯的规则，保证已有的好习惯不被破坏的基础上，再添加一些希望在团队中推广的规则。 实际操作安装依赖12345C:\\workspace\\react\\react-full-stack-learning&gt;npx install-peerdeps --dev eslint-config-airbnbnpx: installed 82 in 48.041sinstall-peerdeps v1.9.0Installing peerdeps for eslint-config-airbnb@latest.npm install eslint-config-airbnb@17.1.0 eslint@^5.3.0 eslint-plugin-import@^2.14.0 eslint-plugin-jsx-a11y@^6.1.1 eslint-plugin-react@^7.11.0 --save-dev 实际运行的时候，报错：Unhandled rejection RangeError: Maximum call stack size exceededill install loadIdealTree，换成 cnpm 安装会成功，可能因为其它依赖都是用 cnpm 安装的缘故吧。1cnpm install eslint-config-airbnb@17.1.0 eslint@^5.3.0 eslint-plugin-import@^2.14.0 eslint-plugin-jsx-a11y@^6.1.1 eslint-plugin-react@^7.11.0 --save-dev 或者，运行以下命令，查看依赖，然后在 package.json 文件配置好，再用命令 cnpm i 安装依赖。1234567npm info &quot;eslint-config-airbnb@latest&quot; peerDependencies&#123; eslint: &apos;^4.19.1 || ^5.3.0&apos;, &apos;eslint-plugin-import&apos;: &apos;^2.14.0&apos;, &apos;eslint-plugin-jsx-a11y&apos;: &apos;^6.1.1&apos;, &apos;eslint-plugin-react&apos;: &apos;^7.11.0&apos; &#125; 修改官方扩展为 airbnb1extends: airbnb 扩展阅读Airbnb React/JSX 编码规范 参考 ESLint 标准规则 eslint-plugin-react 规则 Configuring ESLint Getting Started with ESLint ESLint 中文网站 eslint使用心得 eslint 常用配置","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"ESLint","slug":"react/ESLint","permalink":"https://www.lovesofttech.com/categories/react/ESLint/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"ESLint","slug":"ESLint","permalink":"https://www.lovesofttech.com/tags/ESLint/"}]},{"title":"React 技术栈学习，js 知识点","slug":"react/js","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.086Z","comments":true,"path":"react/js.html","link":"","permalink":"https://www.lovesofttech.com/react/js.html","excerpt":"如题","text":"如题 相关函数 hasOwnProperty() 用来检测一个对象是否含有特定的自身属性；和 in 运算符不同，该方法会忽略掉那些从原型链上继承到的属性。 reduce Array的reduce()把一个函数作用在这个Array的[x1, x2, x3…]上，这个函数必须接收两个参数，reduce()把结果继续和序列的下一个元素做累积计算，其效果就是 1[x1, x2, x3, x4].reduce(f) = f(f(f(x1, x2), x3), x4) React 获取参数React 获取 url 参数 —— this.props.match，如：props.match.params.id 参考 map/reduce 用法参考 扩展阅读 解构赋值，参考《ECMAScript 6 入门 第3版》的章节：变量的解构赋值 数组的扩展 扩展操作符可以在一对｛｝符号中把一个对象展开，这样，在｛｝中后面的部分的字段值，可以覆盖展开的部分。 《ECMAScript 6 入门 第3版》，在线阅读 JS 函数式编程指南","categories":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/tags/js/"}]},{"title":"redux 官方示例 todomvc 两个警告修复","slug":"react/examplesTodomvcWarningsFixed","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.086Z","comments":true,"path":"react/examplesTodomvcWarningsFixed.html","link":"","permalink":"https://www.lovesofttech.com/react/examplesTodomvcWarningsFixed.html","excerpt":"通过解决这类问题，会让自己对相关代码的理解更加深入，做到知其然，并且知其所以然，同时，能够让自己对相关知识点印象深刻。","text":"通过解决这类问题，会让自己对相关代码的理解更加深入，做到知其然，并且知其所以然，同时，能够让自己对相关知识点印象深刻。 题外话本人有轻度代码洁癖，只要有警告，我会认为代码还有需要完善的地方，只要有时间我就会着手去解决它，去了解其背后的原因，了解为什么会发出警告，以及解决方案是什么，最终消除这些影响代码质量的“隐患”。 两个警告相关的 PR 备注：PR 合并之后，最新版已经没有这两个警告了 官方 todomvc 示例源码 其实改动很小，主要看解决思路和理解相关的知识点。 两个大大的红色警告 examples/todomvc/src/components/TodoTextInput.js完整警告信息如下：12345678910Warning: Received the string `true` for the boolean attribute `autoFocus`. Although this works, it will not work as expected if you pass the string &quot;false&quot;. Did you mean autoFocus=&#123;true&#125;? in input (at TodoTextInput.js:40) in TodoTextInput (at Header.js:8) in header (at Header.js:6) in Header (created by Connect(Header)) in Connect(Header) (at App.js:7) in div (at App.js:6) in App (at src/index.js:13) in Provider (at src/index.js:12) 解决上面的提示信息，其实已经非常友好了，看重点：Did you mean autoFocus={true}?看一下报错的地方的源码（TodoTextInput.js:40）123456789101112&lt;input className=&#123; classnames(&#123; edit: this.props.editing, 'new-todo': this.props.newTodo &#125;)&#125; type=\"text\" placeholder=&#123;this.props.placeholder&#125; autoFocus=\"true\" value=&#123;this.state.text&#125; onBlur=&#123;this.handleBlur&#125; onChange=&#123;this.handleChange&#125; onKeyDown=&#123;this.handleSubmit&#125; /&gt; 根据友好的提示信息，将上面的 autoFocus=&quot;true&quot; 改为 autoFocus={true} 即可。 examples/todomvc/src/components/MainSection.js完整警告信息如下：1234567891011index.js:1452 Warning: Failed prop type: You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`. in input (at MainSection.js:12) in span (at MainSection.js:11) in section (at MainSection.js:8) in MainSection (created by Connect(MainSection)) in Connect(MainSection) (at App.js:8) in div (at App.js:6) in App (at src/index.js:13) in Provider (at src/index.js:12) 看一下报错的地方的源码（MainSection.js:12）12345&lt;input className=\"toggle-all\" type=\"checkbox\" checked=&#123;completedCount === todosCount&#125;/&gt; 从下面的提示信息看1You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. 我的理解是：设置了 checked 属性，但是又没有提供 onChange 事件来更新它，那么，将会自动为其设置一个 read-only 属性。将上面的代码，去掉 className 属性，如下：1234&lt;input type=\"checkbox\" checked=&#123;completedCount === todosCount&#125;/&gt; 再看界面，这时候，一个可以看到是否选中状态的复选框出现了，它确实是只读的，点击没有反应，当所有待办事项变成完成状态时，该 checkbox 会被设置为选中状态，否则为非选中状态。再看后面的提示：1If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly` 我的理解是：如果该 checkbox 是可变的，那么，请为其设置一个默认值，否则，要么设置 onChange 事件，要么设置 readOnly 属性。设置默认值，例如设置默认选中，可以这样：1234&lt;input type=\"checkbox\" defaultChecked=&#123;true&#125;/&gt; 如果为其设置默认值 defaultChecked，但不动态设置 checked 属性，是不会有上面的警告的，但我们需要动态为其设置 checked 属性，这样在界面上能看出来是否为全部选中状态（向下的箭头颜色有差别，更详细的，请运行起来查看实际效果）。 很明显，如果要为其设置 checked 属性，设置 defaultChecked 是没有意义的（即使设置了，也还是会报同样的警告）。所以，从提示信息看上，为了消除这个警告，有两种解决办法： 设置 readOnly 属性。 12345&lt;input type=\"checkbox\" defaultChecked=&#123;completedCount === todosCount&#125; readOnly/&gt; 设置一个 onChange 事件，哪怕是一个什么也不做的“空”事件。 12345&lt;input type=\"checkbox\" defaultChecked=&#123;completedCount === todosCount&#125; onChange=&#123;()=&gt;&#123;&#125;&#125;/&gt; 对于这个例子，设置 readOnly 是最好的方案，本来也是需要只读的嘛。设置“空”事件有点莫名其妙。 解读第二个警告至于为什么 react 会有这样的检查，stackoverflow.com 网站上有一个网友的回答，我认为是比较贴切的，摘录如下： Controlled ComponentsAttributes needed: value - &lt;input&gt; (not checkbox or radio), &lt;select&gt;, &lt;textbox&gt; or checked for (checkbox or radio). onChange React handles the condition of the element by updating the value or checked attribute (depending on the element) from the props or the state. We need to notify react when we make a change, like inserting data, or checking the box, so react can update the element’s condition when it rerenders the component. To do so, we must include an onChange handler, in which we will update the state or notify the component’s parent, so it will update the props.12345&lt;input type=\"checkbox\" checked=&#123; this.props.checked &#125; onChange=&#123; this.checkboxHandler &#125; /&gt; Uncontrolled ComponentsAttributes needed:1defaultValue - &lt;input&gt; (not checkbox or radio), &lt;select&gt;, &lt;textbox&gt; or defaultChecked for (checkbox or radio). React sets the initial value using defaultValue or defaultChecked, and the update of the element’s state is controlled by the user, usually via the DOM using refs.1234&lt;input type=\"checkbox\" defaultChecked=&#123; this.props.checked &#125; /&gt; 扩展阅读是有关可控组件和非可控组件的。 Forms Uncontrolled Components","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"ESLint 配置文件 .eslintrc 示例及说明","slug":"react/eslintConfigExample","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.084Z","comments":true,"path":"react/eslintConfigExample.html","link":"","permalink":"https://www.lovesofttech.com/react/eslintConfigExample.html","excerpt":"如题","text":"如题 关于 ESLint 介绍，以及在项目中如何配置，请参考WebStorm + React 项目，配置 ESLint。 配置文件ESLint 支持几种格式的配置文件，如果同一个目录下有多个配置文件，ESLint 只会使用一个。优先级顺序如下： JavaScript - 使用 .eslintrc.js 然后输出一个配置对象。 YAML - 使用 .eslintrc.yaml 或 .eslintrc.yml 去定义配置的结构。 JSON -使用 .eslintrc.json 去定义配置的结构，ESLint 的 JSON 文件允许 JavaScript 风格的注释。 Deprecated -使用 .eslintrc，可以使 JSON 也可以是 YAML。 package.json - 在 package.json 里创建一个 eslintConfig 属性，在那里定义你的配置。 配置规则格式规则格式是&lt;规则名称&gt;: &lt;告警级别&gt;，告警级别分为三种: “0”表示忽略问题，等同于”off”; “1”表示给出警告，等同于”warn”; “2”表示直接报错，等同于”error”。 详细规则说明 eslint-plugin-react 规则 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217/** * AlloyTeam ESLint 规则 - React * * 包含所有 ESLint 规则，以及所有 eslint-plugin-react 规则 * 使用 babel-eslint 作为解析器 * * @fixable 表示此配置支持 --fix * @off 表示此配置被关闭了，并且后面说明了关闭的原因 */module.exports = &#123; extends: [ &apos;./index.js&apos;, ], plugins: [ &apos;react&apos; ], rules: &#123; // 布尔值类型的 propTypes 的 name 必须为 is 或 has 开头 // @off 不强制要求写 propTypes &apos;react/boolean-prop-naming&apos;: &apos;off&apos;, // 一个 defaultProps 必须有对应的 propTypes // @off 不强制要求写 propTypes &apos;react/default-props-match-prop-types&apos;: &apos;off&apos;, // 组件必须有 displayName 属性 // @off 不强制要求写 displayName &apos;react/display-name&apos;: &apos;off&apos;, // 禁止在自定义组件中使用一些指定的 props // @off 没必要限制 &apos;react/forbid-component-props&apos;: &apos;off&apos;, // 禁止使用一些指定的 elements // @off 没必要限制 &apos;react/forbid-elements&apos;: &apos;off&apos;, // 禁止使用一些指定的 propTypes // @off 不强制要求写 propTypes &apos;react/forbid-prop-types&apos;: &apos;off&apos;, // 禁止直接使用别的组建的 propTypes // @off 不强制要求写 propTypes &apos;react/forbid-foreign-prop-types&apos;: &apos;off&apos;, // 禁止使用数组的 index 作为 key // @off 太严格了 &apos;react/no-array-index-key&apos;: &apos;off&apos;, // 禁止使用 children 做 props &apos;react/no-children-prop&apos;: &apos;error&apos;, // 禁止使用 dangerouslySetInnerHTML // @off 没必要限制 &apos;react/no-danger&apos;: &apos;off&apos;, // 禁止在使用了 dangerouslySetInnerHTML 的组建内添加 children &apos;react/no-danger-with-children&apos;: &apos;error&apos;, // 禁止使用已废弃的 api &apos;react/no-deprecated&apos;: &apos;error&apos;, // 禁止在 componentDidMount 里面使用 setState // @off 同构应用需要在 didMount 里写 setState &apos;react/no-did-mount-set-state&apos;: &apos;off&apos;, // 禁止在 componentDidUpdate 里面使用 setState &apos;react/no-did-update-set-state&apos;: &apos;error&apos;, // 禁止直接修改 this.state &apos;react/no-direct-mutation-state&apos;: &apos;error&apos;, // 禁止使用 findDOMNode &apos;react/no-find-dom-node&apos;: &apos;error&apos;, // 禁止使用 isMounted &apos;react/no-is-mounted&apos;: &apos;error&apos;, // 禁止在一个文件创建两个组件 // @off 有一个 bug https://github.com/yannickcr/eslint-plugin-react/issues/1181 &apos;react/no-multi-comp&apos;: &apos;off&apos;, // 禁止在 PureComponent 中使用 shouldComponentUpdate &apos;react/no-redundant-should-component-update&apos;: &apos;error&apos;, // 禁止使用 ReactDOM.render 的返回值 &apos;react/no-render-return-value&apos;: &apos;error&apos;, // 禁止使用 setState // @off setState 很常用 &apos;react/no-set-state&apos;: &apos;off&apos;, // 禁止拼写错误 &apos;react/no-typos&apos;: &apos;error&apos;, // 禁止使用字符串 ref &apos;react/no-string-refs&apos;: &apos;error&apos;, // 禁止在组件的内部存在未转义的 &gt;, &quot;, &apos; 或 &#125; &apos;react/no-unescaped-entities&apos;: &apos;error&apos;, // @fixable 禁止出现 HTML 中的属性，如 class &apos;react/no-unknown-property&apos;: &apos;error&apos;, // 禁止出现未使用的 propTypes // @off 不强制要求写 propTypes &apos;react/no-unused-prop-types&apos;: &apos;off&apos;, // 定义过的 state 必须使用 // @off 没有官方文档，并且存在很多 bug： https://github.com/yannickcr/eslint-plugin-react/search?q=no-unused-state&amp;type=Issues&amp;utf8=%E2%9C%93 &apos;react/no-unused-state&apos;: &apos;off&apos;, // 禁止在 componentWillUpdate 中使用 setState &apos;react/no-will-update-set-state&apos;: &apos;error&apos;, // 必须使用 Class 的形式创建组件 &apos;react/prefer-es6-class&apos;: [ &apos;error&apos;, &apos;always&apos; ], // 必须使用 pure function // @off 没必要限制 &apos;react/prefer-stateless-function&apos;: &apos;off&apos;, // 组件必须写 propTypes // @off 不强制要求写 propTypes &apos;react/prop-types&apos;: &apos;off&apos;, // 出现 jsx 的地方必须 import React // @off 已经在 no-undef 中限制了 &apos;react/react-in-jsx-scope&apos;: &apos;off&apos;, // 非 required 的 prop 必须有 defaultProps // @off 不强制要求写 propTypes &apos;react/require-default-props&apos;: &apos;off&apos;, // 组件必须有 shouldComponentUpdate // @off 没必要限制 &apos;react/require-optimization&apos;: &apos;off&apos;, // render 方法中必须有返回值 &apos;react/require-render-return&apos;: &apos;error&apos;, // @fixable 组件内没有 children 时，必须使用自闭和写法 // @off 没必要限制 &apos;react/self-closing-comp&apos;: &apos;off&apos;, // @fixable 组件内方法必须按照一定规则排序 &apos;react/sort-comp&apos;: &apos;error&apos;, // propTypes 的熟悉必须按照字母排序 // @off 没必要限制 &apos;react/sort-prop-types&apos;: &apos;off&apos;, // style 属性的取值必须是 object &apos;react/style-prop-object&apos;: &apos;error&apos;, // HTML 中的自闭和标签禁止有 children &apos;react/void-dom-elements-no-children&apos;: &apos;error&apos;, // @fixable 布尔值的属性必须显式的写 someprop=&#123;true&#125; // @off 没必要限制 &apos;react/jsx-boolean-value&apos;: &apos;off&apos;, // @fixable 自闭和标签的反尖括号必须与尖括号的那一行对齐 &apos;react/jsx-closing-bracket-location&apos;: [ &apos;error&apos;, &#123; nonEmpty: false, selfClosing: &apos;line-aligned&apos; &#125; ], // @fixable 结束标签必须与开始标签的那一行对齐 // @off 已经在 jsx-indent 中限制了 &apos;react/jsx-closing-tag-location&apos;: &apos;off&apos;, // @fixable 大括号内前后禁止有空格 &apos;react/jsx-curly-spacing&apos;: [ &apos;error&apos;, &#123; when: &apos;never&apos;, attributes: &#123; allowMultiline: true &#125;, children: true, spacing: &#123; objectLiterals: &apos;never&apos; &#125; &#125; ], // @fixable props 与 value 之间的等号前后禁止有空格 &apos;react/jsx-equals-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // 限制文件后缀 // @off 没必要限制 &apos;react/jsx-filename-extension&apos;: &apos;off&apos;, // @fixable 第一个 prop 必须得换行 // @off 没必要限制 &apos;react/jsx-first-prop-new-line&apos;: &apos;off&apos;, // handler 的名称必须是 onXXX 或 handleXXX // @off 没必要限制 &apos;react/jsx-handler-names&apos;: &apos;off&apos;, // @fixable jsx 的 children 缩进必须为四个空格 &apos;react/jsx-indent&apos;: [ &apos;error&apos;, 4 ], // @fixable jsx 的 props 缩进必须为四个空格 &apos;react/jsx-indent-props&apos;: [ &apos;error&apos;, 4 ], // 数组中的 jsx 必须有 key &apos;react/jsx-key&apos;: &apos;error&apos;, // @fixable 限制每行的 props 数量 // @off 没必要限制 &apos;react/jsx-max-props-per-line&apos;: &apos;off&apos;, // jsx 中禁止使用 bind // @off 太严格了 &apos;react/jsx-no-bind&apos;: &apos;off&apos;, // 禁止在 jsx 中使用像注释的字符串 &apos;react/jsx-no-comment-textnodes&apos;: &apos;error&apos;, // 禁止出现重复的 props &apos;react/jsx-no-duplicate-props&apos;: &apos;error&apos;, // 禁止在 jsx 中出现字符串 // @off 没必要限制 &apos;react/jsx-no-literals&apos;: &apos;off&apos;, // 禁止使用 target=&quot;_blank&quot; // @off 没必要限制 &apos;react/jsx-no-target-blank&apos;: &apos;off&apos;, // 禁止使用未定义的 jsx elemet &apos;react/jsx-no-undef&apos;: &apos;error&apos;, // 禁止使用 pascal 写法的 jsx，比如 &lt;TEST_COMPONENT&gt; &apos;react/jsx-pascal-case&apos;: &apos;error&apos;, // @fixable props 必须排好序 // @off 没必要限制 &apos;react/jsx-sort-props&apos;: &apos;off&apos;, // @fixable jsx 的开始和闭合处禁止有空格 &apos;react/jsx-tag-spacing&apos;: [ &apos;error&apos;, &#123; closingSlash: &apos;never&apos;, beforeSelfClosing: &apos;always&apos;, afterOpening: &apos;never&apos; &#125; ], // jsx 文件必须 import React &apos;react/jsx-uses-react&apos;: &apos;error&apos;, // 定义了的 jsx element 必须使用 &apos;react/jsx-uses-vars&apos;: &apos;error&apos;, // @fixable 多行的 jsx 必须有括号包起来 // @off 没必要限制 &apos;react/jsx-wrap-multilines&apos;: &apos;off&apos; &#125;&#125;; ESLint 标准规则lloyTeam ESLint 规则 * * 包含所有 ESLint 规则 * 使用 babel-eslint 作为解析器 * * @fixable 表示此配置支持 --fix * @off 表示此配置被关闭了，并且后面说明了关闭的原因 */module.exports = &#123; parser: &apos;babel-eslint&apos;, parserOptions: &#123; ecmaVersion: 2017, sourceType: &apos;module&apos;, ecmaFeatures: &#123; // @TODO Deprecated https://eslint.org/docs/user-guide/configuring#deprecated experimentalObjectRestSpread: true, jsx: true, modules: true &#125; &#125;, env: &#123; browser: true, node: true, commonjs: true, es6: true &#125;, // 以当前目录为根目录，不再向上查找 .eslintrc.js root: true, rules: &#123; // // // 可能的错误 // 这些规则与 JavaScript 代码中可能的语法错误或逻辑错误有关 // // 禁止 for 循环出现方向错误的循环，比如 for (i = 0; i &lt; 10; i--) &apos;for-direction&apos;: &apos;error&apos;, // getter 必须有返回值，并且禁止返回空，比如 return; &apos;getter-return&apos;: [ &apos;error&apos;, &#123; allowImplicit: false &#125; ], // 禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了 // @off 要求太严格了，有时需要在循环中写 await &apos;no-await-in-loop&apos;: &apos;off&apos;, // 禁止与负零进行比较 &apos;no-compare-neg-zero&apos;: &apos;error&apos;, // 禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了 &apos;no-cond-assign&apos;: [ &apos;error&apos;, &apos;except-parens&apos; ], // 禁止使用 console // @off console 的使用很常见 &apos;no-console&apos;: &apos;off&apos;, // 禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式 &apos;no-constant-condition&apos;: [ &apos;error&apos;, &#123; checkLoops: false &#125; ], // 禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/ // @off 几乎不会遇到这种场景 &apos;no-control-regex&apos;: &apos;off&apos;, // @fixable 禁止使用 debugger &apos;no-debugger&apos;: &apos;error&apos;, // 禁止在函数参数中出现重复名称的参数 &apos;no-dupe-args&apos;: &apos;error&apos;, // 禁止在对象字面量中出现重复名称的键名 &apos;no-dupe-keys&apos;: &apos;error&apos;, // 禁止在 switch 语句中出现重复测试表达式的 case &apos;no-duplicate-case&apos;: &apos;error&apos;, // 禁止出现空代码块，允许 catch 为空代码块 &apos;no-empty&apos;: [ &apos;error&apos;, &#123; allowEmptyCatch: true &#125; ], // 禁止在正则表达式中使用空的字符集 [] &apos;no-empty-character-class&apos;: &apos;error&apos;, // 禁止将 catch 的第一个参数 error 重新赋值 &apos;no-ex-assign&apos;: &apos;error&apos;, // @fixable 禁止不必要的布尔类型转换，比如 !! 或 Boolean &apos;no-extra-boolean-cast&apos;: &apos;error&apos;, // @fixable 禁止函数表达式中出现多余的括号，比如 let foo = (function () &#123; return 1 &#125;) &apos;no-extra-parens&apos;: [ &apos;error&apos;, &apos;functions&apos; ], // @fixable 禁止出现多余的分号 &apos;no-extra-semi&apos;: &apos;error&apos;, // 禁止将一个函数声明重新赋值，如： // function foo() &#123;&#125; // foo = bar &apos;no-func-assign&apos;: &apos;error&apos;, // 禁止在 if 代码块内出现函数声明 &apos;no-inner-declarations&apos;: [ &apos;error&apos;, &apos;both&apos; ], // 禁止在 RegExp 构造函数中出现非法的正则表达式 &apos;no-invalid-regexp&apos;: &apos;error&apos;, // 禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中 &apos;no-irregular-whitespace&apos;: [ &apos;error&apos;, &#123; skipStrings: true, skipComments: false, skipRegExps: true, skipTemplates: true &#125; ], // 禁止将 Math, JSON 或 Reflect 直接作为函数调用 &apos;no-obj-calls&apos;: &apos;error&apos;, // 禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable // @off hasOwnProperty 比较常用 &apos;no-prototype-builtins&apos;: &apos;off&apos;, // @fixable 禁止在正则表达式中出现连续的空格，必须使用 /foo &#123;3&#125;bar/ 代替 &apos;no-regex-spaces&apos;: &apos;error&apos;, // 禁止在数组中出现连续的逗号，如 let foo = [,,] &apos;no-sparse-arrays&apos;: &apos;error&apos;, // 禁止在普通字符串中出现模版字符串里的变量形式，如 &apos;Hello $&#123;name&#125;!&apos; &apos;no-template-curly-in-string&apos;: &apos;error&apos;, // 禁止出现难以理解的多行表达式，如： // let foo = bar // [1, 2, 3].forEach(baz); &apos;no-unexpected-multiline&apos;: &apos;error&apos;, // 禁止在 return, throw, break 或 continue 之后还有代码 &apos;no-unreachable&apos;: &apos;error&apos;, // 禁止在 finally 中出现 return, throw, break 或 continue &apos;no-unsafe-finally&apos;: &apos;error&apos;, // @fixable 禁止在 in 或 instanceof 操作符的左侧使用感叹号，如 if (!key in object) &apos;no-unsafe-negation&apos;: &apos;error&apos;, // 必须使用 isNaN(foo) 而不是 foo === NaN &apos;use-isnan&apos;: &apos;error&apos;, // 注释必须符合 jsdoc 的规范 // @off jsdoc 要求太严格 &apos;valid-jsdoc&apos;: &apos;off&apos;, // typeof 表达式比较的对象必须是 &apos;undefined&apos;, &apos;object&apos;, &apos;boolean&apos;, &apos;number&apos;, &apos;string&apos;, &apos;function&apos; 或 &apos;symbol&apos; &apos;valid-typeof&apos;: &apos;error&apos;, // // // 最佳实践 // 这些规则通过一些最佳实践帮助你避免问题 // // setter 必须有对应的 getter，getter 可以没有对应的 setter &apos;accessor-pairs&apos;: [ &apos;error&apos;, &#123; setWithoutGet: true, getWithoutSet: false &#125; ], // 数组的方法除了 forEach 之外，回调函数必须有返回值 &apos;array-callback-return&apos;: &apos;error&apos;, // 将 var 定义的变量视为块作用域，禁止在块外使用 &apos;block-scoped-var&apos;: &apos;error&apos;, // 在类的非静态方法中，必须存在对 this 的引用 // @off 太严格了 &apos;class-methods-use-this&apos;: &apos;off&apos;, // 禁止函数的循环复杂度超过 20，https://en.wikipedia.org/wiki/Cyclomatic_complexity &apos;complexity&apos;: [ &apos;error&apos;, &#123; max: 20 &#125; ], // 禁止函数在不同分支返回不同类型的值 // @off 太严格了 &apos;consistent-return&apos;: &apos;off&apos;, // @fixable if 后面必须要有 &#123;，除非是单行 if &apos;curly&apos;: [ &apos;error&apos;, &apos;multi-line&apos;, &apos;consistent&apos; ], // switch 语句必须有 default // @off 太严格了 &apos;default-case&apos;: &apos;off&apos;, // @fixable 链式调用的时候，点号必须放在第二行开头处，禁止放在第一行结尾处 &apos;dot-location&apos;: [ &apos;error&apos;, &apos;property&apos; ], // @fixable 禁止出现 foo[&apos;bar&apos;]，必须写成 foo.bar // @off 当需要写一系列属性的时候，可以更统一 &apos;dot-notation&apos;: &apos;off&apos;, // @fixable 必须使用 === 或 !==，禁止使用 == 或 !=，与 null 比较时除外 &apos;eqeqeq&apos;: [ &apos;error&apos;, &apos;always&apos;, &#123; null: &apos;ignore&apos; &#125; ], // for in 内部必须有 hasOwnProperty &apos;guard-for-in&apos;: &apos;error&apos;, // 禁止使用 alert // @off alert 很常用 &apos;no-alert&apos;: &apos;off&apos;, // 禁止使用 caller 或 callee &apos;no-caller&apos;: &apos;error&apos;, // switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块 &apos;no-case-declarations&apos;: &apos;error&apos;, // 禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/ // @off 有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难 &apos;no-div-regex&apos;: &apos;off&apos;, // @fixable 禁止在 else 内使用 return，必须改为提前结束 // @off else 中使用 return 可以使代码结构更清晰 &apos;no-else-return&apos;: &apos;off&apos;, // 不允许有空函数，除非是将一个空函数设置为某个项的默认值 &apos;no-empty-function&apos;: [ &apos;error&apos;, &#123; allow: [ &apos;functions&apos;, &apos;arrowFunctions&apos; ] &#125; ], // 禁止解构中出现空 &#123;&#125; 或 [] &apos;no-empty-pattern&apos;: &apos;error&apos;, // 禁止使用 foo == null 或 foo != null，必须使用 foo === null 或 foo !== null // @off foo == null 用于判断 foo 不是 undefined 并且不是 null，比较常用，故允许此写法 &apos;no-eq-null&apos;: &apos;off&apos;, // 禁止使用 eval &apos;no-eval&apos;: &apos;error&apos;, // 禁止修改原生对象 &apos;no-extend-native&apos;: &apos;error&apos;, // @fixable 禁止出现没必要的 bind &apos;no-extra-bind&apos;: &apos;error&apos;, // @fixable 禁止出现没必要的 label &apos;no-extra-label&apos;: &apos;error&apos;, // switch 的 case 内必须有 break, return 或 throw &apos;no-fallthrough&apos;: &apos;error&apos;, // @fixable 表示小数时，禁止省略 0，比如 .5 &apos;no-floating-decimal&apos;: &apos;error&apos;, // 禁止对全局变量赋值 &apos;no-global-assign&apos;: &apos;error&apos;, // @fixable 禁止使用 !! ~ 等难以理解的运算符 // 仅允许使用 !! &apos;no-implicit-coercion&apos;: [ &apos;error&apos;, &#123; allow: [ &apos;!!&apos; ] &#125; ], // 禁止在全局作用域下定义变量或申明函数 &apos;no-implicit-globals&apos;: &apos;error&apos;, // 禁止在 setTimeout 或 setInterval 中传入字符串，如 setTimeout(&apos;alert(&quot;Hi!&quot;)&apos;, 100); &apos;no-implied-eval&apos;: &apos;error&apos;, // 禁止在类之外的地方使用 this // @off this 的使用很灵活，事件回调中可以表示当前元素，函数也可以先用 this，等以后被调用的时候再 call &apos;no-invalid-this&apos;: &apos;off&apos;, // 禁止使用 __iterator__ &apos;no-iterator&apos;: &apos;error&apos;, // 禁止使用 label &apos;no-labels&apos;: &apos;error&apos;, // 禁止使用没必要的 &#123;&#125; 作为代码块 &apos;no-lone-blocks&apos;: &apos;error&apos;, // 禁止在循环内的函数中出现循环体条件语句中定义的变量，比如： // for (var i = 0; i &lt; 10; i++) &#123; // (function () &#123; return i &#125;)(); // &#125; &apos;no-loop-func&apos;: &apos;error&apos;, // 禁止使用 magic numbers // @off 太严格了 &apos;no-magic-numbers&apos;: &apos;off&apos;, // @fixable 禁止出现连续的多个空格，除非是注释前，或对齐对象的属性、变量定义、import 等 &apos;no-multi-spaces&apos;: [ &apos;error&apos;, &#123; ignoreEOLComments: true, exceptions: &#123; Property: true, BinaryExpression: false, VariableDeclarator: true, ImportDeclaration: true &#125; &#125; ], // 禁止使用 \\ 来换行字符串 &apos;no-multi-str&apos;: &apos;error&apos;, // 禁止直接 new 一个类而不赋值 &apos;no-new&apos;: &apos;error&apos;, // 禁止使用 new Function，比如 let x = new Function(&quot;a&quot;, &quot;b&quot;, &quot;return a + b&quot;); &apos;no-new-func&apos;: &apos;error&apos;, // 禁止使用 new 来生成 String, Number 或 Boolean &apos;no-new-wrappers&apos;: &apos;error&apos;, // 禁止使用 0 开头的数字表示八进制数 &apos;no-octal&apos;: &apos;error&apos;, // 禁止使用八进制的转义符 &apos;no-octal-escape&apos;: &apos;error&apos;, // 禁止对函数的参数重新赋值 &apos;no-param-reassign&apos;: &apos;error&apos;, // 禁止使用 __proto__ &apos;no-proto&apos;: &apos;error&apos;, // 禁止重复定义变量 &apos;no-redeclare&apos;: &apos;error&apos;, // 禁止使用指定的对象属性 // @off 它用于限制某个具体的 api 不能使用 &apos;no-restricted-properties&apos;: &apos;off&apos;, // 禁止在 return 语句里赋值 &apos;no-return-assign&apos;: [ &apos;error&apos;, &apos;always&apos; ], // 禁止在 return 语句里使用 await &apos;no-return-await&apos;: &apos;error&apos;, // 禁止出现 location.href = &apos;javascript:void(0)&apos;; &apos;no-script-url&apos;: &apos;error&apos;, // 禁止将自己赋值给自己 &apos;no-self-assign&apos;: &apos;error&apos;, // 禁止将自己与自己比较 &apos;no-self-compare&apos;: &apos;error&apos;, // 禁止使用逗号操作符 &apos;no-sequences&apos;: &apos;error&apos;, // 禁止 throw 字面量，必须 throw 一个 Error 对象 &apos;no-throw-literal&apos;: &apos;error&apos;, // 循环内必须对循环条件的变量有修改 &apos;no-unmodified-loop-condition&apos;: &apos;error&apos;, // 禁止无用的表达式 &apos;no-unused-expressions&apos;: [ &apos;error&apos;, &#123; allowShortCircuit: true, allowTernary: true, allowTaggedTemplates: true &#125; ], // @fixable 禁止出现没用的 label &apos;no-unused-labels&apos;: &apos;error&apos;, // 禁止出现没必要的 call 或 apply &apos;no-useless-call&apos;: &apos;error&apos;, // 禁止出现没必要的字符串连接 &apos;no-useless-concat&apos;: &apos;error&apos;, // 禁止出现没必要的转义 // @off 转义可以使代码更易懂 &apos;no-useless-escape&apos;: &apos;off&apos;, // @fixable 禁止没必要的 return // @off 没必要限制 return &apos;no-useless-return&apos;: &apos;off&apos;, // 禁止使用 void &apos;no-void&apos;: &apos;error&apos;, // 禁止注释中出现 TODO 和 FIXME // @off TODO 很常用 &apos;no-warning-comments&apos;: &apos;off&apos;, // 禁止使用 with &apos;no-with&apos;: &apos;error&apos;, // Promise 的 reject 中必须传入 Error 对象，而不是字面量 &apos;prefer-promise-reject-errors&apos;: &apos;error&apos;, // parseInt 必须传入第二个参数 &apos;radix&apos;: &apos;error&apos;, // async 函数中必须存在 await 语句 // @off async function 中没有 await 的写法很常见，比如 koa 的示例中就有这种用法 &apos;require-await&apos;: &apos;off&apos;, // var 必须在作用域的最前面 // @off var 不在最前面也是很常见的用法 &apos;vars-on-top&apos;: &apos;off&apos;, // @fixable 立即执行的函数必须符合如下格式 (function () &#123; alert(&apos;Hello&apos;) &#125;)() &apos;wrap-iife&apos;: [ &apos;error&apos;, &apos;inside&apos;, &#123; functionPrototypeMethods: true &#125; ], // @fixable 必须使用 if (foo === 5) 而不是 if (5 === foo) &apos;yoda&apos;: [ &apos;error&apos;, &apos;never&apos;, &#123; onlyEquality: true &#125; ], // // // 严格模式 // 这些规则与严格模式指令有关 // // @fixable 禁止使用 &apos;strict&apos;; &apos;strict&apos;: [ &apos;error&apos;, &apos;never&apos; ], // // // 变量 // 这些规则与变量申明有关 // // 变量必须在定义的时候赋值 // @off 先定义后赋值很常见 &apos;init-declarations&apos;: &apos;off&apos;, // 禁止 catch 的参数名与定义过的变量重复 // @off 太严格了 &apos;no-catch-shadow&apos;: &apos;off&apos;, // 禁止使用 delete &apos;no-delete-var&apos;: &apos;error&apos;, // 禁止 label 名称与定义过的变量重复 &apos;no-label-var&apos;: &apos;error&apos;, // 禁止使用指定的全局变量 // @off 它用于限制某个具体的变量名不能使用 &apos;no-restricted-globals&apos;: &apos;off&apos;, // 禁止变量名与上层作用域内的定义过的变量重复 // @off 很多时候函数的形参和传参是同名的 &apos;no-shadow&apos;: &apos;off&apos;, // 禁止使用保留字作为变量名 &apos;no-shadow-restricted-names&apos;: &apos;error&apos;, // 禁止使用未定义的变量 &apos;no-undef&apos;: [ &apos;error&apos;, &#123; typeof: false &#125; ], // @fixable 禁止将 undefined 赋值给变量 &apos;no-undef-init&apos;: &apos;error&apos;, // 禁止对 undefined 重新赋值 &apos;no-undefined&apos;: &apos;error&apos;, // 定义过的变量必须使用 &apos;no-unused-vars&apos;: [ &apos;error&apos;, &#123; vars: &apos;all&apos;, args: &apos;none&apos;, caughtErrors: &apos;none&apos;, ignoreRestSiblings: true &#125; ], // 变量必须先定义后使用 &apos;no-use-before-define&apos;: [ &apos;error&apos;, &#123; functions: false, classes: false, variables: false &#125; ], // // // Node.js 和 CommonJS // 这些规则与在 Node.js 中运行的代码或浏览器中使用的 CommonJS 有关 // // callback 之后必须立即 return // @off Limitations 太多了 &apos;callback-return&apos;: &apos;off&apos;, // require 必须在全局作用域下 // @off 条件加载很常见 &apos;global-require&apos;: &apos;off&apos;, // callback 中的 error 必须被处理 &apos;handle-callback-err&apos;: &apos;error&apos;, // 禁止直接使用 Buffer &apos;no-buffer-constructor&apos;: &apos;error&apos;, // 相同类型的 require 必须放在一起 // @off 太严格了 &apos;no-mixed-requires&apos;: &apos;off&apos;, // 禁止直接 new require(&apos;foo&apos;) &apos;no-new-require&apos;: &apos;error&apos;, // 禁止对 __dirname 或 __filename 使用字符串连接 &apos;no-path-concat&apos;: &apos;error&apos;, // 禁止使用 process.env.NODE_ENV // @off 使用很常见 &apos;no-process-env&apos;: &apos;off&apos;, // 禁止使用 process.exit(0) // @off 使用很常见 &apos;no-process-exit&apos;: &apos;off&apos;, // 禁止使用指定的模块 // @off 它用于限制某个具体的模块不能使用 &apos;no-restricted-modules&apos;: &apos;off&apos;, // 禁止使用 node 中的同步的方法，比如 fs.readFileSync // @off 使用很常见 &apos;no-sync&apos;: &apos;off&apos;, // // // 风格问题 // 这些规则与代码风格有关，所以是非常主观的 // // @fixable 配置数组的中括号内前后的换行格式 // @off 配置项无法配制成想要的样子 &apos;array-bracket-newline&apos;: &apos;off&apos;, // @fixable 数组的括号内的前后禁止有空格 &apos;array-bracket-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable 配置数组的元素之间的换行格式 // @off 允许一行包含多个元素，方便大数量的数组的书写 &apos;array-element-newline&apos;: &apos;off&apos;, // @fixable 代码块如果在一行内，那么大括号内的首尾必须有空格，比如 function () &#123; alert(&apos;Hello&apos;) &#125; &apos;block-spacing&apos;: [ &apos;error&apos;, &apos;always&apos; ], // @fixable if 与 else 的大括号风格必须一致 // @off else 代码块可能前面需要有一行注释 &apos;brace-style&apos;: &apos;off&apos;, // 变量名必须是 camelcase 风格的 // @off 很多 api 或文件名都不是 camelcase &apos;camelcase&apos;: &apos;off&apos;, // @fixable 注释的首字母必须大写 // @off 没必要限制 &apos;capitalized-comments&apos;: &apos;off&apos;, // @fixable 对象的最后一个属性末尾必须有逗号 // @off 没必要限制 &apos;comma-dangle&apos;: &apos;off&apos;, // @fixable 逗号前禁止有空格，逗号后必须要有空格 &apos;comma-spacing&apos;: [ &apos;error&apos;, &#123; &apos;before&apos;: false, &apos;after&apos;: true &#125; ], // @fixable 禁止在行首写逗号 &apos;comma-style&apos;: [ &apos;error&apos;, &apos;last&apos; ], // @fixable 用作对象的计算属性时，中括号内的首尾禁止有空格 &apos;computed-property-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // 限制 this 的别名 // @off 没必要限制 &apos;consistent-this&apos;: &apos;off&apos;, // @fixable 文件最后一行必须有一个空行 // @off 没必要限制 &apos;eol-last&apos;: &apos;off&apos;, // @fixable 函数名和执行它的括号之间禁止有空格 &apos;func-call-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // 函数赋值给变量的时候，函数名必须与变量名一致 &apos;func-name-matching&apos;: [ &apos;error&apos;, &apos;always&apos;, &#123; includeCommonJSModuleExports: false &#125; ], // 函数必须有名字 // @off 没必要限制 &apos;func-names&apos;: &apos;off&apos;, // 必须只使用函数声明或只使用函数表达式 // @off 没必要限制 &apos;func-style&apos;: &apos;off&apos;, // 禁止使用指定的标识符 // @off 它用于限制某个具体的标识符不能使用 &apos;id-blacklist&apos;: &apos;off&apos;, // 限制变量名长度 // @off 没必要限制变量名长度 &apos;id-length&apos;: &apos;off&apos;, // 限制变量名必须匹配指定的正则表达式 // @off 没必要限制变量名 &apos;id-match&apos;: &apos;off&apos;, // @fixable 一个缩进必须用四个空格替代 &apos;indent&apos;: [ &apos;error&apos;, 4, &#123; SwitchCase: 1, flatTernaryExpressions: true &#125; ], // @fixable jsx 中的属性必须用双引号 &apos;jsx-quotes&apos;: [ &apos;error&apos;, &apos;prefer-double&apos; ], // @fixable 对象字面量中冒号前面禁止有空格，后面必须有空格 &apos;key-spacing&apos;: [ &apos;error&apos;, &#123; beforeColon: false, afterColon: true, mode: &apos;strict&apos;, &#125; ], // @fixable 关键字前后必须有空格 &apos;keyword-spacing&apos;: [ &apos;error&apos;, &#123; before: true, after: true &#125; ], // 单行注释必须写在上一行 // @off 没必要限制 &apos;line-comment-position&apos;: &apos;off&apos;, // @fixable 限制换行符为 LF 或 CRLF // @off 没必要限制 &apos;linebreak-style&apos;: &apos;off&apos;, // @fixable 注释前后必须有空行 // @off 没必要限制 &apos;lines-around-comment&apos;: &apos;off&apos;, // 代码块嵌套的深度禁止超过 5 层 &apos;max-depth&apos;: [ &apos;error&apos;, 5 ], // 限制一行的长度 // @off 现在编辑器已经很智能了，不需要限制一行的长度 &apos;max-len&apos;: &apos;off&apos;, // 限制一个文件最多的行数 // @off 没必要限制 &apos;max-lines&apos;: &apos;off&apos;, // 回调函数嵌套禁止超过 3 层，多了请用 async await 替代 &apos;max-nested-callbacks&apos;: [ &apos;error&apos;, 3 ], // 函数的参数禁止超过 7 个 &apos;max-params&apos;: [ &apos;error&apos;, 7 ], // 限制函数块中的语句数量 // @off 没必要限制 &apos;max-statements&apos;: &apos;off&apos;, // 限制一行中的语句数量 // @off 没必要限制 &apos;max-statements-per-line&apos;: &apos;off&apos;, // 三元表达式必须得换行 // @off 三元表达式可以随意使用 &apos;multiline-ternary&apos;: &apos;off&apos;, // new 后面的类名必须首字母大写 &apos;new-cap&apos;: [ &apos;error&apos;, &#123; newIsCap: true, capIsNew: false, properties: true &#125; ], // @fixable new 后面的类必须有小括号 &apos;new-parens&apos;: &apos;error&apos;, // 链式调用必须换行 // @off 没必要限制 &apos;newline-per-chained-call&apos;: &apos;off&apos;, // 禁止使用 Array 构造函数 &apos;no-array-constructor&apos;: &apos;error&apos;, // 禁止使用位运算 // @off 位运算很常见 &apos;no-bitwise&apos;: &apos;off&apos;, // 禁止使用 continue // @off continue 很常用 &apos;no-continue&apos;: &apos;off&apos;, // 禁止在代码后添加内联注释 // @off 内联注释很常用 &apos;no-inline-comments&apos;: &apos;off&apos;, // @fixable 禁止 else 中只有一个单独的 if // @off 单独的 if 可以把逻辑表达的更清楚 &apos;no-lonely-if&apos;: &apos;off&apos;, // 禁止混用不同的操作符，比如 let foo = a &amp;&amp; b &lt; 0 || c &gt; 0 || d + 1 === 0 // @off 太严格了，可以由使用者自己去判断如何混用操作符 &apos;no-mixed-operators&apos;: &apos;off&apos;, // 禁止混用空格和缩进 &apos;no-mixed-spaces-and-tabs&apos;: &apos;error&apos;, // 禁止连续赋值，比如 a = b = c = 5 // @off 没必要限制 &apos;no-multi-assign&apos;: &apos;off&apos;, // @fixable 禁止出现超过三行的连续空行 &apos;no-multiple-empty-lines&apos;: [ &apos;error&apos;, &#123; max: 3, maxEOF: 1, maxBOF: 1 &#125; ], // 禁止 if 里面有否定的表达式，比如： // if (a !== b) &#123; // doSomething(); // &#125; else &#123; // doSomethingElse(); // &#125; // @off 否定的表达式可以把逻辑表达的更清楚 &apos;no-negated-condition&apos;: &apos;off&apos;, // 禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e // @off 没必要限制 &apos;no-nested-ternary&apos;: &apos;off&apos;, // 禁止直接 new Object &apos;no-new-object&apos;: &apos;error&apos;, // 禁止使用 ++ 或 -- // @off 没必要限制 &apos;no-plusplus&apos;: &apos;off&apos;, // 禁止使用特定的语法 // @off 它用于限制某个具体的语法不能使用 &apos;no-restricted-syntax&apos;: &apos;off&apos;, // 禁止使用 tabs &apos;no-tabs&apos;: &apos;error&apos;, // 禁止使用三元表达式 // @off 三元表达式很常用 &apos;no-ternary&apos;: &apos;off&apos;, // @fixable 禁止行尾有空格 &apos;no-trailing-spaces&apos;: &apos;error&apos;, // 禁止变量名出现下划线 // @off 下划线在变量名中很常用 &apos;no-underscore-dangle&apos;: &apos;off&apos;, // @fixable 必须使用 !a 替代 a ? false : true // @off 后者表达的更清晰 &apos;no-unneeded-ternary&apos;: &apos;off&apos;, // @fixable 禁止属性前有空格，比如 foo. bar() &apos;no-whitespace-before-property&apos;: &apos;error&apos;, // @fixable 禁止 if 后面不加大括号而写两行代码 &apos;nonblock-statement-body-position&apos;: [ &apos;error&apos;, &apos;beside&apos;, &#123; overrides: &#123; while: &apos;below&apos; &#125; &#125; ], // @fixable 大括号内的首尾必须有换行 &apos;object-curly-newline&apos;: [ &apos;error&apos;, &#123; multiline: true, consistent: true &#125; ], // @fixable 对象字面量只有一行时，大括号内的首尾必须有空格 &apos;object-curly-spacing&apos;: [ &apos;error&apos;, &apos;always&apos;, &#123; arraysInObjects: true, objectsInObjects: false &#125; ], // @fixable 对象字面量内的属性每行必须只有一个 // @off 没必要限制 &apos;object-property-newline&apos;: &apos;off&apos;, // 禁止变量申明时用逗号一次申明多个 &apos;one-var&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable 变量申明必须每行一个 &apos;one-var-declaration-per-line&apos;: [ &apos;error&apos;, &apos;always&apos; ], // @fixable 必须使用 x = x + y 而不是 x += y // @off 没必要限制 &apos;operator-assignment&apos;: &apos;off&apos;, // @fixable 需要换行的时候，操作符必须放在行末，比如： // let foo = 1 + // 2 // @off 有时放在第二行开始处更易读 &apos;operator-linebreak&apos;: &apos;off&apos;, // @fixable 代码块首尾必须要空行 // @off 没必要限制 &apos;padded-blocks&apos;: &apos;off&apos;, // @fixable 限制语句之间的空行规则，比如变量定义完之后必须要空行 // @off 没必要限制 &apos;padding-line-between-statements&apos;: &apos;off&apos;, // @fixable 对象字面量的键名禁止用引号括起来 // @off 没必要限制 &apos;quote-props&apos;: &apos;off&apos;, // @fixable 必须使用单引号，禁止使用双引号 &apos;quotes&apos;: [ &apos;error&apos;, &apos;single&apos;, &#123; avoidEscape: true, allowTemplateLiterals: true &#125; ], // 必须使用 jsdoc 风格的注释 // @off 太严格了 &apos;require-jsdoc&apos;: &apos;off&apos;, // @fixable 结尾必须有分号 &apos;semi&apos;: [ &apos;error&apos;, &apos;always&apos;, &#123; omitLastInOneLineBlock: true &#125; ], // @fixable 一行有多个语句时，分号前面禁止有空格，分号后面必须有空格 &apos;semi-spacing&apos;: [ &apos;error&apos;, &#123; before: false, after: true &#125; ], // @fixable 分号必须写在行尾，禁止在行首出现 &apos;semi-style&apos;: [ &apos;error&apos;, &apos;last&apos; ], // 对象字面量的键名必须排好序 // @off 没必要限制 &apos;sort-keys&apos;: &apos;off&apos;, // 变量申明必须排好序 // @off 没必要限制 &apos;sort-vars&apos;: &apos;off&apos;, // @fixable if, function 等的大括号之前必须要有空格，比如 if (a) &#123; &apos;space-before-blocks&apos;: [ &apos;error&apos;, &apos;always&apos; ], // @fixable function 的小括号之前必须要有空格 &apos;space-before-function-paren&apos;: [ &apos;error&apos;, &#123; anonymous: &apos;ignore&apos;, named: &apos;never&apos;, asyncArrow: &apos;always&apos; &#125; ], // @fixable 小括号内的首尾禁止有空格 &apos;space-in-parens&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable 操作符左右必须有空格，比如 let sum = 1 + 2; &apos;space-infix-ops&apos;: &apos;error&apos;, // @fixable new, typeof 等后面必须有空格，++, -- 等禁止有空格，比如： // let foo = new Person(); // bar = bar++; &apos;space-unary-ops&apos;: [ &apos;error&apos;, &#123; words: true, nonwords: false &#125; ], // @fixable 注释的斜线或 * 后必须有空格 &apos;spaced-comment&apos;: [ &apos;error&apos;, &apos;always&apos;, &#123; block: &#123; exceptions: [ &apos;*&apos; ], balanced: true &#125; &#125; ], // @fixable case 的冒号前禁止有空格，冒号后必须有空格 &apos;switch-colon-spacing&apos;: [ &apos;error&apos;, &#123; after: true, before: false &#125; ], // @fixable 模版字符串的 tag 之后禁止有空格，比如 tag`Hello World` &apos;template-tag-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable 文件开头禁止有 BOM &apos;unicode-bom&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable 正则表达式必须有括号包起来 // @off 没必要限制 &apos;wrap-regex&apos;: &apos;off&apos;, // // // ECMAScript 6 // 这些规则与 ES6（即通常所说的 ES2015）有关 // // @fixable 箭头函数能够省略 return 的时候，必须省略，比如必须写成 () =&gt; 0，禁止写成 () =&gt; &#123; return 0 &#125; // @off 箭头函数的返回值，应该允许灵活设置 &apos;arrow-body-style&apos;: &apos;off&apos;, // @fixable 箭头函数只有一个参数的时候，必须加括号 // @off 应该允许灵活设置 &apos;arrow-parens&apos;: &apos;off&apos;, // @fixable 箭头函数的箭头前后必须有空格 &apos;arrow-spacing&apos;: [ &apos;error&apos;, &#123; before: true, after: true &#125; ], // constructor 中必须有 super &apos;constructor-super&apos;: &apos;error&apos;, // @fixable generator 的 * 前面禁止有空格，后面必须有空格 &apos;generator-star-spacing&apos;: [ &apos;error&apos;, &#123; before: false, after: true &#125; ], // 禁止对定义过的 class 重新赋值 &apos;no-class-assign&apos;: &apos;error&apos;, // @fixable 禁止出现难以理解的箭头函数，比如 let x = a =&gt; 1 ? 2 : 3 &apos;no-confusing-arrow&apos;: [ &apos;error&apos;, &#123; allowParens: true &#125; ], // 禁止对使用 const 定义的常量重新赋值 &apos;no-const-assign&apos;: &apos;error&apos;, // 禁止重复定义类 &apos;no-dupe-class-members&apos;: &apos;error&apos;, // 禁止重复 import 模块 &apos;no-duplicate-imports&apos;: &apos;error&apos;, // 禁止使用 new 来生成 Symbol &apos;no-new-symbol&apos;: &apos;error&apos;, // 禁止 import 指定的模块 // @off 它用于限制某个具体的模块不能使用 &apos;no-restricted-imports&apos;: &apos;off&apos;, // 禁止在 super 被调用之前使用 this 或 super &apos;no-this-before-super&apos;: &apos;error&apos;, // @fixable 禁止出现没必要的计算键名，比如 let a = &#123; [&apos;0&apos;]: 0 &#125;; &apos;no-useless-computed-key&apos;: &apos;error&apos;, // 禁止出现没必要的 constructor，比如 constructor(value) &#123; super(value) &#125; &apos;no-useless-constructor&apos;: &apos;error&apos;, // @fixable 禁止解构时出现同样名字的的重命名，比如 let &#123; foo: foo &#125; = bar; &apos;no-useless-rename&apos;: &apos;error&apos;, // @fixable 禁止使用 var &apos;no-var&apos;: &apos;error&apos;, // @fixable 必须使用 a = &#123;b&#125; 而不是 a = &#123;b: b&#125; // @off 没必要强制要求 &apos;object-shorthand&apos;: &apos;off&apos;, // @fixable 必须使用箭头函数作为回调 // @off 没必要强制要求 &apos;prefer-arrow-callback&apos;: &apos;off&apos;, // @fixable 申明后不再被修改的变量必须使用 const 来申明 // @off 没必要强制要求 &apos;prefer-const&apos;: &apos;off&apos;, // 必须使用解构 // @off 没必要强制要求 &apos;prefer-destructuring&apos;: &apos;off&apos;, // @fixable 必须使用 0b11111011 而不是 parseInt(&apos;111110111&apos;, 2) // @off 没必要强制要求 &apos;prefer-numeric-literals&apos;: &apos;off&apos;, // 必须使用 ...args 而不是 arguments // @off 没必要强制要求 &apos;prefer-rest-params&apos;: &apos;off&apos;, // @fixable 必须使用 ... 而不是 apply，比如 foo(...args) // @off apply 很常用 &apos;prefer-spread&apos;: &apos;off&apos;, // @fixable 必须使用模版字符串而不是字符串连接 // @off 字符串连接很常用 &apos;prefer-template&apos;: &apos;off&apos;, // generator 函数内必须有 yield &apos;require-yield&apos;: &apos;error&apos;, // @fixable ... 的后面禁止有空格 &apos;rest-spread-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable import 必须按规则排序 // @off 没必要强制要求 &apos;sort-imports&apos;: &apos;off&apos;, // 创建 Symbol 时必须传入参数 &apos;symbol-description&apos;: &apos;error&apos;, // @fixable $&#123;name&#125; 内的首尾禁止有空格 &apos;template-curly-spacing&apos;: [ &apos;error&apos;, &apos;never&apos; ], // @fixable yield* 后面必须要有空格 &apos;yield-star-spacing&apos;: [ &apos;error&apos;, &apos;after&apos; ] &#125;&#125;;","categories":[{"name":"ESLint","slug":"ESLint","permalink":"https://www.lovesofttech.com/categories/ESLint/"}],"tags":[{"name":"ESLint","slug":"ESLint","permalink":"https://www.lovesofttech.com/tags/ESLint/"}]},{"title":"react 技术栈学习，相关知识储备","slug":"react/prepare","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.087Z","comments":true,"path":"react/prepare.html","link":"","permalink":"https://www.lovesofttech.com/react/prepare.html","excerpt":"如题","text":"如题 node 与 cnpm 安装 安装 node 最新版，点击进入下载页面。建议下载【长期维护版本】，而不是【含实验性的最新发布版】。 安装 cnpm，参考官网：淘宝 NPM 镜像 最直接的方式：npm install -g cnpm --registry=https://registry.npm.taobao.org 编程思想 UI=render(data)，React 组件扮演的是 render 函数的角色，应该是一个没有副作用的纯函数。 函数式编辑（redux 应用得比较透彻）。 组件化，最大复用。 组件的粒度，需要根据实际需求来灵活处理。 让一个组件只专注做一件事，如果发现一个组件做的事情太多了，就可以把这个组件拆分成多个组件，让每个组件依然只专注做一件事。 是否需要多处执行？ 组件化之后，代码是否更具可读性？是否能简化代码逻辑，更易于维护？ 是否将来有可能需要多处使用？ 是否可以提取到公用模块库？ JSX JSX 描述 DOM 时，所有属性都采用小驼峰写法。 JSX 中用 {} 来写 JS 语句。 元素内嵌样式使用对象来描述，样式属性名同样使用小驼峰写法，如 backgroundColor 。 样式，html 中的 class， 在 JSX 中，要写成 className。 事件绑定通过 on + eventType 小驼峰写法。 事件，采用驼峰命名，js 的 onclick 要写成 onClick， js 的 onchange 要写成 onChange。 列表，需要有一个属性 key，值在列表中唯一。 受控组件（及时更新至 state），非受控组件（用 ref）。 高阶组件。 简单的知识梳理 class，不是真正的类，只是语法糖。 Component class 中的预定义属性：state, props，它们的变化，会触发组件的重新渲染。它们的更新是异步的，是不能直接修改的，state 需要通过 set 方法来修改。 prop 是组件的对外接口。 state 代表组件的内部状态。 对外用 prop，内部用state。 子组件修改父组件传入的 props 的值，会有副作用，在编码过程中，不允许这个操作。参考《深入浅出React和Redux》，P24-25，【2.2.3 prop 和 state 的对比】章节。 组件的生命周期。类组件才有生命周期方法，函数组件没有生命周期方法。 组件名一定要大写开头。非大写开头，不被当作组件。 参考《深入浅出React和Redux》，P30-34，【2.3.2 更新过程】章节。 componentWillReceiveProps(nextProps) 弄清楚该函数被调用的时机，才能正确的使用它 =&gt; 父组件的 render 函数被调用，那么子组件的该函数被调用。 父组件传入的 props 发生变化，就会先执行这个方法，此方法可以作为 props 传入后，渲染之前 setState 的机会，并且在这个方法中调用的 setState 方法是不会二次渲染的。 这里说的不会造成第二次的渲染，并不是说这里的 setState 不会生效。在这个方法里调用 setState 会在组件更新完成之后在 render 方法执行之前更新状态，将两次的渲染合并在一起。 可以在 componentWillReceiveProps 执行 setState，但是如果你想在这个方法里获取 this.state 得到的将会是上一次的状态。 nextProps 并不一定会变化，所以，需要比较 nextProps 和 this.props 来决定是否执行 props 发生变化后的逻辑。 componentWillMount 在 render 之前调用。 每一个组件 render 之前立即调用。 可以在服务端被调用，也可以在浏览器端被调用。 不建议在该方法内调用 api 来渲染页面。 componentDidMount 在 render 之后调用 所有的子组件都 render 完之后才会调用。 只能在浏览器端被调用，在服务器端使用 react 的时候不会被调用。 推荐在该方法内调用 api 来获取服务器端数据，从而进行页面渲染工作。 propTypes 检查 开发者在代码中定义prop Types，在开发过程中避免犯错，但是在发布产品代码时，用一种自动的方式将 prop Types 去掉，这样最终部署到产品环境的代码就会更优。 现有的 babel-react-optimize 就具有这个功能，可以通过 npm 安装，但是应该确保只在发布产品代码时使用它。 forceUpdate() 默认情况下，当组件的 state 或 props 改变时，组件将重新渲染。 调用 forceUpdate() 会导致组件跳过 shouldComponentUpdate()，直接调用 render()。 这将触发组件的正常生命周期方法，包括每个子组件的 shouldComponentUpdate() 方法。 以下情况，可以手动调用 forceUpdate() 自动触发组件的 render()。 如果你的 render() 方法依赖于一些其他的数据，你可以告诉 React 组件需要通过调用 forceUpdate() 重新渲染。 有些变量不在 state上，你又想达到这个变量更新的时候，重新渲染。 state 里的某个变量层次太深，更新的时候没有自动触发 render()。 export, export default 和 import 区别以及用法这是ES6的语法。ES6 模块主要有两个功能：export 和 import * export 用于对外输出本模块（一个文件可以理解为一个模块）变量、函数、模块的接口。 * import 用于在一个模块中加载另一个含有 export 接口的变量、函数、模块。 区别及用法 export 与 export default 均可用于导出常量、函数、文件、模块等。 你可以在其它文件或模块中通过import+(常量 | 函数 | 文件 | 模块)名的方式，将其导入，以便能够对其进行使用。 在一个文件或模块中，export、import可以有多个，export default仅有一个。 通过 export 方式导出，在导入时要加 {}，export default 则不需要。 扩展阅读 react 中文社区文档 Create React App official website,Getting Started 个人学习心得项目地址 托管在 github 上的项目链接：https://github.com/uncleAndyChen/react-full-stack-learning 托管在 gitee 上的项目链接 ：https://gitee.com/uncleAndyChen/react-full-stack-learning","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"《深入浅出React和Redux》一书的部分章节例子代码演练及相关知识点","slug":"react/reactAndReduxBook","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.089Z","comments":true,"path":"react/reactAndReduxBook.html","link":"","permalink":"https://www.lovesofttech.com/react/reactAndReduxBook.html","excerpt":"如题","text":"如题 对应源码项目地址 托管在 github 上的项目链接：https://github.com/uncleAndyChen/react-full-stack-learning 托管在 gitee 上的项目链接 ：https://gitee.com/uncleAndyChen/react-full-stack-learning 前言针对《深入浅出React和Redux》一书中，某一个被挑选的例子，完成之后，会创建一个相应的分支。 在原书代码的基础上，把相关依赖升级到当前最新版（截止 2018-11-06）。 react v16.6.0 redux v4.0.1 react-redux v5.1.0 《深入浅出React和Redux》原书例子代码，传送门 第一章代码位于 chapter-01，第二章的代码位于 chapter-02，依次类推。 子目录名即为分支名，如第四章代码目录下的子目录：todo_controlled_component，会有一个对应分支也叫 todo_controlled_component。 PropTypes 依赖变化react 的类型检查 PropTypes 自 React v15.5 起已弃用，请使用 prop-types。《深入浅出React和Redux》一书示例代码使用的 react 是 15.4.1 版本，需要调整 PropTypes 的引用：1234// 书中的代码是import &#123; PropTypes &#125; from &apos;react&apos;;// 要改为：import PropTypes from &apos;prop-types&apos;; 扩展阅读：使用 PropTypes 进行类型检查 第二章，分支 controlpanel123# 切换至该分支git checkout controlpanelgit pull 知识点 组件。 组件的 state、props。 父组件通过 props 向子组件传递数据。 第二章，分支 controlpanel_with_summary123# 切换至该分支git checkout controlpanel_with_summarygit pull 知识点 组件的 props，父组件向子组件传递数据，包括传递函数。 子组件通过调用父组件的函数，来达到向父组件传递数据的目的。 第三章，分支 react-redux123# 切换至该分支git checkout react-reduxgit pull 到项目根目录，添加 redux 和 react-redux 依赖。以下操作会添加最新版的 redux（截止 2018-11-06，版本为：4.0.1） 和 react-redux（截止 2018-11-06，版本为：5.1.0）12cnpm i redux --savecnpm i react-redux --save 如果不事先添加 redux 依赖而直接添加 react-redux 依赖，会有警告：1peerDependencies WARNING react-redux@* requires a peer of redux@^2.0.0 || ^3.0.0 || ^4.0.0-0 but none was installed 知识点 UI 组件（presentational component）（傻瓜组件） 容器组件（container component） 应用 redux 的三大原则 redux 库：const store = createStore(reducer, initValues) React-Redux 库 connect(mapStateToProps, mapDispatchToProps)(componentName) mapStateToProps mapDispatchToProps 相关知识点，已经总结到文档：React 技术栈学习，redux 知识点 第四章，分支 todo_controlled_component123# 切换至该分支git checkout todo_controlled_componentgit pull 知识点代码文件组织结构推荐按照功能组织与角色组织的混合方式。具体请参考：React+Redux工程目录结构，最佳实践 确定模块的边界。参考《深入浅出React和Redux》P75-81。 把一个目录看做一个模块，那么我们要做的是明确这个模块对外的接口，而这个接口应该实现把内部封装起来。 目录下人 index.js 文件，就是我们的模块接口。 各个模块之间只能假设其他模块包含 index.js 文件，要引用模块只能导入 index.js，不能够直接去导入其他文件。 导人一个目录的时候，默认导人的就是这个目录下的 index.js 文件， index.js 文件中导出的内容，就是这个模块想要公开出来的接口。 推荐使用 export（命名式）的方式导出模块，而不是用 export default（默认）的方式，因为 export default 在导入时，会增加代码量。 状态树的设计参考《深入浅出React和Redux》P81-83。 一个模块控制一个状态节点。 避免冗余数据。 树形结构扁平。 只能通过 reducer 纯函数修改 state，不能直接修改 state。 所以，push 和 unshift 会改变原来那个数组，是不能直接作用于 state 的。 利用扩展操作符。 combineReducers 利用 combineReducers 可以把多个只针对局部状态的“小的”reducer 合并为一个操纵整个状态树的“大的“ reducer。 更妙的是，没有两个”小的“ reducer 会发生冲突，因为无论怎么组合，状态树上一个子状态都只会被一个 reducer 处理，Redux 就是用这种方法隔绝了各个模块。 很明显，无论我们有多少“小的” reducer，也无论如何组合，都不用在乎它们被因为调用的顺序，因为调用顺序和结果没有关系。 随着应用变得复杂，需要对 reducer 函数进行拆分，拆分后的每一块独立负责管理 state 的一部分。 combineReducers 辅助函数的作用是，把一个由多个不同 reducer 函数作为 value 的 object，合并成一个最终的 reducer 函数，然后就可以对这个 reducer 调用 createStore。 合并后的 reducer 可以调用各个子 reducer，并把它们的结果合并成一个 state 对象。state 对象的结构由传入的多个 reducer 的 key 决定。 最终，state 对象的结构会是这样的： 1234&#123; todos: ... filter: ...&#125; 通过为传入对象的 reducer 命名不同来控制 state key 的命名。例如，你可以调用 combineReducers({ todos: todoReducer, filter: filterReducer }) 将 state 结构变为 { todos, counter }。 个人认为，更好的做法是直接用 reducer 名作为 state 的 key，使用 ES6 的简写方法：combineReducers({ todos, filter })。这与 combineReducers({ todos: todoReducer, filter: filterReducer }) 产生的 state 结果是一样的。 关于 state key 的使用，实际开发过程中还需要注意些什么呢？看笔者总结的踩坑经验：state 的 key bindActionCreators把原来笨重的函数调用过程封装起来，使最终的业务代码更加优雅。 代码修改及完善添加新的依赖123cnpm i --save react-addons-perf...peerDependencies WARNING react-addons-perf@* requires a peer of react-dom@^15.4.2 but react-dom@16.6.0 was installed 意思是，需要 react v15.4.2 支持，所以，将 Store.js 修改如下：12345678910111213141516// 以下代码删除import Perf from &apos;react-addons-perf&apos;win.Perf = Perf;const middlewares = [];if (process.env.NODE_ENV !== &apos;production&apos;) &#123; middlewares.push(require(&apos;redux-immutable-state-invariant&apos;)());&#125;const storeEnhancers = compose( applyMiddleware(...middlewares), (win &amp;&amp; win.devToolsExtension) ? win.devToolsExtension() : (f) =&gt; f,);export default createStore(reducer, &#123;&#125;, storeEnhancers);// 上一行代码改为export default createStore(reducer, &#123;&#125;, window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()); createStore 第三个参数：window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()，是为了支持 Redux DevTools 插件。 警告 Warning: A component is changing an uncontrolled input of type checkbox to be controlled…完整的警告如下：123456789101112131415Warning: A component is changing an uncontrolled input of type checkbox to be controlled. Input elements should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://fb.me/react-controlled-components in input (at todoItem.js:13) in li (at todoItem.js:7) in TodoItem (at todoList.js:14) in ul (at todoList.js:11) in TodoList (created by Connect(TodoList)) in Connect(TodoList) (at todos.js:11) in div (at todos.js:9) in Unknown (at TodoApp.js:8) in div (at TodoApp.js:7) in TodoApp (at src/index.js:10) in Provider (at src/index.js:9) 这是因为 todoItem.js:13 代码中的 checkbox 的 checked 属性没有用 state 来记录，所以会警告，但这并不影响该示例的正常运行。关于页面控件是否受控，以及相关问题，请看官方文档：Controlled Components 解决为了消除以上警告，同时，为了更方便理解 state 变化会引起页面的重新渲染，作如下修改： 将 checkbox 的 onClick 事件删除，这样，点击 checkbox 控件不会有任何反应（checkbox 设置了只读属性）。 将设置待办事项状态的点击事件放到 label 上，添加了 a 标签。 不过，a 标签的 href 属性只是 # 会引发另外的警告，这个下面再解决。 同时将 checkbox 的 checked 属性添加上去，其值就是待办事项的数据：currentState.completed，这是一个 bool 变量。 将变量 checkedProp 定义行 const checkedProp = completed ? {checked: true} : {}; 删除。最后，关键代码如下： 12&lt;input className=&quot;toggle&quot; type=&quot;checkbox&quot; checked=&#123;completed&#125; readOnly/&gt;&lt;label className=&quot;text&quot;&gt;&lt;a href=&quot;#&quot; onClick=&#123;onToggle&#125;&gt;&#123;text&#125;&lt;/a&gt;&lt;/label&gt; a 标签的 href 属性只是 # 会引发的警告1234567./src/todos/views/todoItem.js Line 13: The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md jsx-a11y/anchor-is-valid 项目中用到的 Link 组件 ./src/filter/views/link.js 也有同样的警告，一起修改。123./src/filter/views/link.js Line 11: The href attribute requires a valid value to be accessible. ... 解决参照文章anchor-is-valid，作如下调整： 将 a 标签 &lt;a href=&quot;#&quot; onClick={onToggle}&gt;{text}&lt;/a&gt; 换成 button 控件，同时增加 button 相关的 style.css 文件放到 src 根目录下。123456789&lt;button type=&quot;button&quot; className=&quot;link-button filter not-selected&quot; onClick=&#123;(ev) =&gt; &#123; ev.preventDefault(); onClick(); &#125;&#125;&gt; &#123;children&#125;&lt;/button&gt; 将 link.js 组件中的 a 标签也换成 button，这里就不贴代码了，直接看代码文件吧。 最后还有一个警告，在点击【添加】按钮的时候触发的，不过 chrome 浏览器才有该警告，QQ 浏览器没有，没再深入研究。12[Deprecation] Using unescaped &apos;#&apos; characters in a data URI body is deprecated and will be removed in M71, around December 2018. Please use &apos;%23&apos; instead. See https://www.chromestatus.com/features/5656049583390720 for more details.","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"react 项目，在生产环境去掉 propTypes 检查代码，打包时自动去除","slug":"react/reactPropTypes","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.090Z","comments":true,"path":"react/reactPropTypes.html","link":"","permalink":"https://www.lovesofttech.com/react/reactPropTypes.html","excerpt":"如题","text":"如题 关于PropTypes PropTypes包含一整套验证器，可用于确保你接收的数据是有效的。 能帮助我们在开发的时候及时发现问题。 没有propTypes定义，组件依然能够正常工作，而且，即使在propTypes检查出错的情况下，组件依然能工作。 propTypes只是一个辅助开发的功能，并不会改变组件的行为。 为了验证propTypes的作用，故意违反propTypes规则即可。在项目react-full-stack-learning的分支todo_controlled_component，将todos下的reducer.js的初始值的第一项text改成一个数字10000，如下：123456789101112const initialState = [ &#123; text: 10000, completed: false, id: 0 &#125;, &#123; text: &apos;welcome to react and redux learning&apos;, completed: false, id: 1 &#125;]; npm start之后，在打开的浏览器控制台会显示如下警告，说明propTypes类型检查已经生效。 123456789Warning: Failed prop type: Invalid prop `text` of type `number` supplied to `TodoItem`, expected `string`. in TodoItem (at todoList.js:14) in TodoList (created by Connect(TodoList)) in Connect(TodoList) (at todos.js:12) in div (at todos.js:10) in Unknown (at TodoApp.js:8) in div (at TodoApp.js:7) in TodoApp (at src/index.js:10) in Provider (at src/index.js:9) 要不要在打包时移除PropTypes代码？npm run build之后，将编译打包之后的build目录发布到nginx，打开页面查看，并没有如预期中的警告提示。是不是说明在打包的时候已经做了处理了呢？作者特意在最新版本的react-scripts v2.1.1下测试，同时在react-scripts v0.8.4下测试，表现是一样的。 个人认为，只要打包部署之后，这些代码没有被执行，影响不大，可不必在意。唯一需要考虑的问题就是打包之后的 js 文件大小的问题了。 因为打包之后，并没有看到警告提示，所以，相关的代码是不是已经被移除了呢？因为没有仔细对比，不敢妄下结论。猜测，create-react-app 已经做了优化，见页尾 create-react-app 关于 propTypes 的 Issue。 如果这部分代码特别多，需要考虑应用在移动端的响应速度，就需要考虑在发布打包的时候移除这部分代码。 那么，有没有办法在软件发布的时候，把这些propTypes检查自动去掉呢？答案是肯定的。可以用这个插件解决：babel-plugin-transform-react-remove-prop-types 扩展阅读使用 PropTypes 进行类型检查 关于项目发布至生产环境时，去掉propTypes检查的问题，create-react-app项目有一个Issue：Removing propTypes in production build?","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"React 技术栈学习，redux 知识点","slug":"react/redux","date":"2018-11-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.092Z","comments":true,"path":"react/redux.html","link":"","permalink":"https://www.lovesofttech.com/react/redux.html","excerpt":"本文适合有一定经验的人，时不时的看一下对理解 redux、重构旧代码、写新的代码有帮助。 如果是初学者，可能会比较蒙，建议先了解个大概再带着疑问去深入学习。","text":"本文适合有一定经验的人，时不时的看一下对理解 redux、重构旧代码、写新的代码有帮助。 如果是初学者，可能会比较蒙，建议先了解个大概再带着疑问去深入学习。 如何合理地设计 state 象设计数据库一样设计 state，state 中的每一部分状态看作数据库中的一张表。 把整个应用的状态按照领域（Domain）分成若干子 state，子 state 之间不能保存重复的数据。 state 以键值对的结构存储数据，以记录的 key/ID 作为记录的索引，记录中的其他字段都依赖于索引（即类似数据库表中的主键）。 state 中不能保存可以通过已有数据计算而来的数据，即 state 中的字段不互相依赖。 一个状态节点只属于一个模块。 尽量避免冗余数据。 树形结构扁平化，层次尽量不要太深，最好保持在三层以内。 设计 state 总结设计 Redux State 的关键在于，像设计数据库一样设计 state。把 state 看作应用在内存中的一个数据库，action、reducer 等看作操作这个数据库的 SQL 语句。 state 的 key createStore 的参数 reducer 的 key 即为 store 树上的 key，类似表名，在 reducer 里仅能操作 reducer 的 key 对应的 store，不能操作别的 key 下的数据，所以，也不用给前缀。 而在 mapStateToProps 函数里，是需要写 key，即需要指定“表名”的。 redux 的三大原则参考 单一数据源 整个应用的 state 被储存在一棵 object tree 中，并且这个 object tree 只存在于唯一一个 store 中。 这让同构应用开发变得非常容易。来自服务端的 state 可以在无需编写更多代码的情况下被序列化并注入到客户端中。由于是单一的 state tree ，调试也变得非常容易。在开发中，你可以把应用的 state 保存在本地，从而加快开发速度。此外，受益于单一的 state tree ，以前难以实现的如“撤销/重做”这类功能也变得轻而易举。 state 是只读的 唯一改变 state 的方法就是触发 action，action 是一个用于描述已发生事件的普通对象。 这样确保了视图和网络请求都不能直接修改 state，相反它们只能表达想要修改的意图。因为所有的修改都被集中化处理，且严格按照一个接一个的顺序执行，因此不用担心竞态条件（race condition）的出现。 Action 就是普通对象而已，因此它们可以被日志打印、序列化、储存、后期调试或测试时回放出来。 使用纯函数来执行修改 为了描述 action 如何改变 state tree ，你需要编写 reducers。 Reducer 只是一些纯函数，它接收先前的 state 和 action，并返回新的 state。刚开始你可以只有一个 reducer，随着应用变大，你可以把它拆成多个小的 reducers，分别独立地操作 state tree 的不同部分，因为 reducer 只是函数，你可以控制它们被调用的顺序，传入附加数据，甚至编写可复用的 reducer 来处理一些通用任务，如分页器。 Redux 三个基本概念action action 是把数据从应用层传递到 store 的有效载体，它是 store 数据的唯一来源。 action 本质上是 JavaScript 普通对象。 我们约定，action 内必须使用一个字符串类型的 type 字段来表示将要执行的动作。 action 仅仅表示某对象发生了什么行为，我们应该尽量减少在 action 中传递的数据。 reducer action 只是描述了有事情发生了这一事实，并没有指明应用如何更新 state。 而这正是 reducer 要做的事情。reducer 就是一个纯函数，接收当前 state 和 action，返回新的 state。函数形式：(previousState, action) =&gt; newState 只要传入参数相同，返回的 newState 就一定相同。没有特殊情况、没有副作用，没有 API 请求、没有变量修改，单纯执行计算。 保持 reducer 纯净非常重要。永远不要在 reducer 里做这些操作： 修改传入参数； 执行有副作用的操作，如 API 请求和路由跳转； 调用非纯函数，如 Date.now() 或 Math.random()。 记得不要修改 previousState 的值，创建一个新的对象返回给 newState。 store使用 reducers 来根据 action 更新 state, 存储在 store 中。store 把之前创建的 action 和 reducer 联系在一起。一个 Redux 应用中只有一个 store，store 保存了唯一数据源。store 的职责有： 持有应用的 state； 提供 getState() 方法获取 state； 提供 dispatch(action) 方法更新 state； 通过 subscribe(listener) 注册监听器; 通过 subscribe(listener) 返回的函数注销监听器。 12345let unsubscribe = store.subscribe(() =&gt; console.log(store.getState()));unsubscribe(); redux 数据流redux 架构使用严格的单向数据流动方式，其生命周期分为以下四步： 应用调用 store.dispatch(action) 发送 Action。 redux 根据传入的 action 调用对应的 reducer 方法。 根（父） reducer 把子 reducer 的结果合并成一颗 state 树。 redux store 保存根 reducer 生成的 state 树。 得到的 state 树即为当前应用的下一个 state，所有订阅 store.subscribe(listener) 的监听器都将被调用。监听器可以调用 store.getState() 获得当前 state。 React-Redux 组件 如果一个组件既有 UI 又有业务逻辑，那怎么办？回答是，将它拆分成：外面是一个容器组件，里面包了一个 UI 组件。前者负责与外部的通信，将数据传给后者，由后者渲染出视图。 React-Redux 规定，所有的 UI 组件都由用户提供，容器组件则是由 React-Redux 自动生成。也就是说，用户负责视觉层，状态管理则是全部交给它（容器组件）。 UI 组件（presentational component）UI 组件负责 UI 的呈现。 只负责 UI 的呈现，不带有任何业务逻辑。 没有状态（即不使用 this.state 这个变量）。 所有数据都由参数（this.props）提供。 不使用任何 Redux 的 API。 容器组件（container component）负责管理数据和逻辑。 负责管理数据和业务逻辑，不负责 UI 的呈现。 带有内部状态。 使用 Redux 的 API。 react-reduxreact-redux 提供了一个 connect 函数，用于把 react 组件和 redux 的 store 连接起来，生成一个容器组件，负责数据管理和业务逻辑，其签名如下：1connect(mapStateToProps, mapDispatchToProps)(componentName) mapStateToProps输入逻辑：外部的数据（即state对象）如何转换为 UI 组件的参数。 mapStateToProps 是一个函数。它的作用就是像它的名字那样，建立一个从（外部的）state 对象到（UI 组件的）props 对象的映射关系。 作为函数，mapStateToProps 执行后应该返回一个对象，里面的每一个键值对就是一个映射。 mapStateToProps 会订阅 store，每当 state 更新的时候，就会自动执行，重新计算 UI 组件的参数，从而触发 UI 组件的重新渲染。 mapStateToProps 的第一个参数总是 state 对象，还可以使用第二个参数（假如参数名为：ownProps），代表容器组件的 props 对象。 使用 ownProps 作为参数后，如果容器组件的参数发生变化，也会引发 UI 组件重新渲染。 connect 方法可以省略 mapStateToProps 参数，也就是说，mapStateToProps 是可选参数，如果省略该参数，UI 组件就不会订阅 store，就是说 store 的更新不会引起 UI 组件的更新。 mapDispatchToProps输出逻辑：用户发出的动作如何变为 Action 对象，继而从 UI 组件传出去。 mapDispatchToProps 是 connect 函数的第二个参数，用来建立 UI 组件的参数到 store.dispatch 方法的映射。 换一种说法，它负责把需要用到的 action 映射到展示组件的 props 上。 也就是说，它定义了哪些用户的操作应该当作 Action，传给 store。 mapDispatchToProps 可以是一个函数，也可以是一个对象。 如果 mapDispatchToProps 是一个函数，会得到 dispatch 和 ownProps（容器组件的 props 对象）两个参数。 mapDispatchToProps 作为函数，应该返回一个对象，该对象的每个键值对都是一个映射，定义了 UI 组件的参数怎样发出 Action。12345678910111213const mapDispatchToProps = ( dispatch, ownProps) =&gt; &#123; return &#123; onClick: () =&gt; &#123; dispatch(&#123; type: 'SET_VISIBILITY_FILTER', filter: ownProps.filter &#125;); &#125; &#125;;&#125; 如果 mapDispatchToProps 是一个对象，它的每个键名也是对应 UI 组件的同名参数，键值应该是一个函数，会被当作 Action creator，返回的 Action 会由 Redux 自动发出。 举例来说，上面的 mapDispatchToProps 写成对象就是下面这样。123456const mapDispatchToProps = &#123; onClick: (filter) =&gt; &#123; type: 'SET_VISIBILITY_FILTER', filter: filter &#125;;&#125; 参考 有关 mapStateToProps 与 mapDispatchToProps，还可以参考《深入浅出React和Redux》P71-73，【3.2.5 React-Redux】章节。 阮一峰的网络日志 -&gt; Redux 入门教程（三）：React-Redux 的用法 有对 connect(mapStateToProps, mapDispatchToProps)(componentName) 的详细解读，上面有关 mapStateToProps 与 mapDispatchToProps 的解读文字，均来自这篇文章（略有修改）。 Redux 官方文档中文翻译 Redux 文档 -&gt; 英文原版 前端手记 TodoMVC 之 Redux 篇 扩展阅读 刘一奇 -&gt; React 与 Redux 系列教程，一共八篇文章 理解Redux应用架构——（一）Redux结构概览 理解Redux应用架构——（二）创建store的createStore 理解Redux应用架构——（三）让你爱上的Redux middleware 个人学习心得项目地址 托管在 gitee 上的项目链接 ：https://gitee.com/uncleAndyChen/react-full-stack-learning 托管在 github 上的项目链接：https://github.com/uncleAndyChen/react-full-stack-learning","categories":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/categories/react/"},{"name":"redux","slug":"react/redux","permalink":"https://www.lovesofttech.com/categories/react/redux/"}],"tags":[{"name":"react","slug":"react","permalink":"https://www.lovesofttech.com/tags/react/"},{"name":"redux","slug":"redux","permalink":"https://www.lovesofttech.com/tags/redux/"}]},{"title":"在 CentOS7 安装最新版 Python（v3.7.1），并与系统自带 Python2.7.5 共存，不影响 yum 正常使用","slug":"python/centOS7PythonNewVersion","date":"2018-11-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.075Z","comments":true,"path":"python/centOS7PythonNewVersion.html","link":"","permalink":"https://www.lovesofttech.com/python/centOS7PythonNewVersion.html","excerpt":"在 CentOS7 安装最新版 Python","text":"在 CentOS7 安装最新版 Python 查看安装的版本 12[root@AndyCentOS7Basic ~]# python -VPython 2.7.5 查看可执行文件位置 12[root@AndyCentOS7Basic ~]# which python/usr/bin/python 查看 python 可执行文件 1234[root@AndyCentOS7Basic ~]# ll /usr/bin/python*lrwxrwxrwx 1 root root 7 May 17 15:42 /usr/bin/python -&gt; python2lrwxrwxrwx 1 root root 9 May 17 15:42 /usr/bin/python2 -&gt; python2.7-rwxr-xr-x 1 root root 7216 Apr 11 2018 /usr/bin/python2.7 可见最终 python 执行会指到 python2.7 因为 yum 依赖于默认的 python 版本的缘由，安装新版之前，将 yum 源直接指向 python2 或者 python2.7，然后安装新版本，最后将 python 指向新版即可。12345vi /usr/bin/yum把 #! /usr/bin/python 修改为 #! /usr/bin/python2.7vi /usr/libexec/urlgrabber-ext-down把 #! /usr/bin/python 修改为 #! /usr/bin/python2.7 安装 Python3.7.1下载页面Python Setup and Usage下载源码并安装，依次执行以下命令：123456wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgztar -xzvf Python-3.7.1.tgzcd Python-3.7.1./configuremakemake install 运行 ./configure 之后，有以下提示12345678910...checking for g++... no...checking minix/config.h usability... nochecking minix/config.h presence... nochecking for minix/config.h... no...If you want a release build with all stable optimizations active (PGO, etc),please run ./configure --enable-optimizations 直接 make12345678910111213141516171819202122...INFO: Could not locate ffi libs and/or headersPython build finished successfully!The necessary bits to build these optional modules were not found:_curses _curses_panel _dbm _gdbm _sqlite3 _tkinter _uuid readline To find the necessary bits, look in setup.py in detect_modules() for the module&apos;s name.The following modules found by detect_modules() in setup.py, have beenbuilt by the Makefile instead, as configured by the Setup files:_abc atexit pwd time Failed to build these modules:_ctypes running build_scripts... make install123...ModuleNotFoundError: No module named &apos;_ctypes&apos;make: *** [install] Error 1 说明：因为每台服务器环境都不一样，所以，如果遇到依赖包没有，百度一下，安装之后再重新编译安装 Python，直到安装成功。Python3.7 版本需要一个新的包 libffi-devel，安装此包之后再次进行编译安装即可。1yum install libffi-devel -y 之后重新 make &amp;&amp; make install12345...Collecting setuptoolsCollecting pipInstalling collected packages: setuptools, pipSuccessfully installed pip-10.0.1 setuptools-39.0.1 查看安装情况12345678910[root@AndyCentOS7Basic bin]# whereis pythonpython: /usr/bin/python /usr/bin/python2.7 /usr/lib/python2.7 /usr/lib64/python2.7 /etc/python /usr/local/bin/python3.7m /usr/local/bin/python3.7 /usr/local/bin/python3.7m-config /usr/local/bin/python3.7-config /usr/local/lib/python3.7 /usr/include/python2.7 /usr/share/man/man1/python.1.gz[root@AndyCentOS7Basic bin]# ll /usr/local/bin/python*lrwxrwxrwx 1 root root 9 Nov 9 17:41 /usr/local/bin/python3 -&gt; python3.7-rwxr-xr-x 2 root root 13979584 Nov 9 17:40 /usr/local/bin/python3.7lrwxrwxrwx 1 root root 17 Nov 9 17:41 /usr/local/bin/python3.7-config -&gt; python3.7m-config-rwxr-xr-x 2 root root 13979584 Nov 9 17:40 /usr/local/bin/python3.7m-rwxr-xr-x 1 root root 3097 Nov 9 17:41 /usr/local/bin/python3.7m-configlrwxrwxrwx 1 root root 16 Nov 9 17:41 /usr/local/bin/python3-config -&gt; python3.7-config 将默认的 python 指向新安装的 python3.7.11234567891011121314[root@AndyCentOS7Basic ~]# ln -s /usr/local/bin/python3 /usr/bin/pythonln: failed to create symbolic link ‘/usr/bin/python’: File exists[root@AndyCentOS7Basic ~]# rm -rf /usr/bin/python[root@AndyCentOS7Basic ~]# ln -s /usr/local/bin/python3 /usr/bin/python# 查看 python 指向[root@AndyCentOS7Basic ~]# ll /usr/bin/python*lrwxrwxrwx 1 root root 22 Nov 9 17:49 /usr/bin/python -&gt; /usr/local/bin/python3lrwxrwxrwx 1 root root 9 May 17 15:42 /usr/bin/python2 -&gt; python2.7-rwxr-xr-x 1 root root 7216 Apr 11 2018 /usr/bin/python2.7# 查看默认版本，以下显示 3.7.1 表示安装成功[root@AndyCentOS7Basic ~]# python -VPython 3.7.1 虚拟环境创建虚拟环境 虚拟环境是 Python 解释器的一个私有副本，在这个环境中你可以安装私有包，而且不会影响系统中安装的全局Python 解释器。 虚拟环境非常有用，可以避免你安装的 Python 版本和包与系统预装的发生冲突。为每个项目单独创建虚拟环境，可以保证应用只能访问所在虚拟环境中的包，从而保持全局解释器的干净整洁，使其只作为创建更多虚拟环境的源。 与直接使用系统全局的 Python 解释器相比，使用虚拟环境还有个好处，那就是不需要管理员权限。 在 Python 3 中，虚拟环境由 Python 标准库中的 venv 包原生支持。创建虚拟环境的命令格式如下：1python -m venv virtual-environment-name -m venv 选项的作用是以独立的脚本运行标准库中的 venv 包，后面的参数为虚拟环境的名称。下面我们在 flasky 目录中创建一个虚拟环境。确保当前目录是你想要创建的虚拟环境目录下，然后执行以下命令：1python -m venv my-venv 这个命令执行完毕后，当前目录中会出现一个名为 my-venv 的子目录，这里就是一个全新的虚拟环境，包含这个项目专用的 Python 解释器。 使用虚拟环境若想使用虚拟环境，要先将其“激活”。如果你使用的是 Linux 或 macOS，可以通过下面的命令激活虚拟环境：12# 笔者使用的目录是 ~/python-apps/my-venvsource ~/python-apps/my-venv/bin/activate 虚拟环境被激活后，里面的 Python 解释器的路径会添加到当前命令会话的 PATH 环境变量中，指明在什么位置寻找一众可执行文件。为了提醒你已经激活了虚拟环境，激活虚拟环境的命令会修改命令提示符，加入环境名：(my-venv) $。激活虚拟环境后，在命令提示符中输入 python，将调用虚拟环境中的解释器，而不是系统全局解释器。如果你打开了多个命令提示符窗口，在每个窗口中都要激活虚拟环境。虽然多数情况下，为了方便，应该激活虚拟环境，但是不激活也能使用虚拟环境。例如，为了启动 my-venv 虚拟环境中的 Python 控制台，在Linux 或 macOS 中可以执行 my-venv/bin/python 命令。虚拟环境中的工作结束后，在命令提示符中输入：1deactivate 以此来还原当前终端会话的 PATH 环境变量，把命令提示符重置为最初的状态。 在 windows 10 下配置 Python 3.7.1download 解压至：C:\\dev\\python 添加环境变量：PYTHON_HOME，指向上面的目录 Path 项，添加：%PYTHON_HOME%\\ 查看版本：1234567C:\\Users\\AndyChen&gt;python -VPython 3.7.1# 直接运行 python 查看版本信息C:\\Users\\AndyChen&gt;pythonPython 3.7.1 (v3.7.1:260ec2c36a, Oct 20 2018, 14:05:16) [MSC v.1915 32 bit (Intel)] on win32&gt;&gt;&gt; 看到版本信息，说明配置成功！ 不过，建议用安装程序直接安装。安装程序可以选择安装 IDLE，解压包里没有这个工具。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Python","slug":"CentOS/Python","permalink":"https://www.lovesofttech.com/categories/CentOS/Python/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Python","slug":"Python","permalink":"https://www.lovesofttech.com/tags/Python/"}]},{"title":"Java 和 Python 中的整数除法，取余，舍入","slug":"python/pythonAndJavaDivmod","date":"2018-11-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.077Z","comments":true,"path":"python/pythonAndJavaDivmod.html","link":"","permalink":"https://www.lovesofttech.com/python/pythonAndJavaDivmod.html","excerpt":"本文为转载，原文 Java和Python中的整数除法，取余，舍入","text":"本文为转载，原文 Java和Python中的整数除法，取余，舍入 整数除法对两个不能整除的整数做除法，就要面对舍入的问题。和大多数编程语言一样，Java的基本策略是向零取整(round to zero)，也就是向绝对值变小的方向取整。举几个香甜的小栗子：3/2=1, -3/2=-1。而对于Python而言，情况就有所不同了。12&gt;&gt;&gt;-1/10 -1 显然如果按照Java的取整策略，-1/10应该得0，而Python给出的结果是-1。事实上Python的取整方式是向下取整，也就是向着数轴上负无穷的方向取整。好吧，Java和Python的取整方式不同，夺大点事儿啊…那么如果我们要在Python下采用向零取整的结果，咋整？一种比较直接的方式是：1234567&gt;&gt;&gt;int(float(-1)/10)0``` # 取余 谁说没大事？(╰(￣▽￣)╭) 大事来了！ Java和Python整数除法都遵循下面这个公式：` (a/b)*b+c=a` 也就是说： `a mod b=c=a-(a/b)*b `这里的`/`表示的是整数除法。既然它们的取整方式不一样，那么取余也会受到影响： For Java: -2 % 3==-2For Python: -2 % 3==11在某些实际应用中，我们可能会被要求得到一个整数的个位数字。如果输入的整数是正的，Java和Python都可以用相同的方法来解决： def func(a): pos, res=1, [] while a/pos: res+=(a/pos)%10, pos*=10 return res1234567891011121314151617Java代码也差不多就是这样了。但如果输入的整数是一个负数，Java版本的代码还是可以得到正确的结果，而Python不能（曾经在这里被坑的，举手）。那怎样用Python正确地搞定这个问题嘞？可以先去绝对值和符号，当正数来处理，最后再在结果里搭上符号。 # Python中的另一个除法操作我们知道，在Python中，基本的除号“/”是被重载了的。当两个操作数都是整数时，进行整数除法，得到整数结果，否则进行浮点数除法（真除法），得到浮点数结果。从Python 2.2开始，另一个除号被引入：`//`，它只执行整数除法。注意，`//`的结果类型依操作数而定。 ``` &gt;&gt;&gt;1.0/20.0&gt;&gt;&gt;1.0//2.00.0&gt;&gt;&gt;1//2&gt;0``` 另外，如果想同时得到商和余数，可以使用内建的函数 divmod，结果是一个 tuple。 divmod(7, 2)(3, 1)divmod(7.0, 2)(3.0, 1.0) 123# Python中的舍入除了缺省的舍入方式，Python还有多种舍入可供选择。 * Floor rounding: import mathmath.floor(1.2)1.0math.floor(-1.2)-2.012* Ceiling rounding: math.ceil(1.2)2.0math.ceil(-1.2)-1.01* Round-off: round(0.5)1.0round(-0.4)-0.0round(-0.5)-1.01内嵌的round函数也可以指定一个保留小数位数的参数： round(0.21, 1)0.2round(0.21, 2)0.211* Caution 特别注意！ round(2.675, 2)2.6712咦?bug啦?!当然不是。这里要明确一件事:计算机只认识0,1(量子计算机?懵)。就是说,我们输入的十进制数,在计算机内部都是用二进制来表示的。有的十进制数可以用二进制准确地表示出来,比如十进制的0.125可以表示为0b0.001;然而很多的小数是没法用二进制数精确表示的,计算机里存储的是它们的近似值,例如十进制的0.1,用二进制表示,可以近似为: 0b0.00011001100110011001100110011001100110011001100110011010,所以当我们把它换回十进制数以输出或者使用,得到的值就是0.1000000000000000055511151231257827021181583404541015625。也就是说,0.1在计算机里并不是刚好等于1/10的。你看: 0.1+0.20.300000000000000041234567同样,当我们运行round()函数,也是对计算机中实际存储的值近似取舍。2.67实际上近似为2.67499999999999982236431605997495353221893310546875,第三位小数是4,那么round(2.675, 2)就相当于round(2.674, 2),结果当然是2.67。值得注意的是,这种现象是广泛存在于各种计算机和各种编程语言的,不是bug,只是有的语言选择了不让你看到。# Java中的舍入Java提供了floor和ceil方法来实现向下和向上取整。Math.floor(2.9)Math.ceil(2.1)这俩函数简单方便,居家旅行必备。另外Java中也有个round函数,可以实现各种复杂的取整。 System.out.println(Math.round(0.5));//输出 1System.out.println(Math.round(-0.5));//输出 0System.out.println(Math.round(-0.51));//输出 -11234567891011这什么鬼!Keep Calm and Carry On!数学上有多种不同的策略来进行取整,比如我们体育老师教的四舍五入。各种取整策略的共同点就是要做真值作近似,那就会引入偏差。四舍五入显然并不是一种公平的策略(想想0~4的舍和5~9的得)。有一个叫做银行家舍入(Banker’s Rounding)的东西,不造你听过没,反正我是最近才知道的。事实上.NET和VB6都是默认采用这种方式,而且IEEE 754默认采用这种Rounding。Banker’s Rounding 也就是 round to even 策略。假设当前考虑那位的数字是d(其实d就是将不被保留的第一位),如果d&lt;5,则舍(round to zero);如果d&gt;5,则入(round away from zero);而当d==5时,就要根据d前后的数位来确定往哪边取了。1) 如果d之后存在非零的数位,则入;2)如果d之后不存在非零的数位,则看d之前的一个数位,用c表示:a.如果c是奇数,则入;b.如果c是偶数,则舍。再来一把栗子,对下列数保留0位小数,第一位小数就是d,整数位就是c: BankRound(0.4)==0, BankRound(0.6)==1, BankRound(-0.4)==0, BankRound(-0.6)==-1BankRound(1.5)==2.0, BankRound(-1.5)==-2.0, BankRound(2.5)==2.0, BankRound(-2.5)==-2.0BankRound(1.51)==2.0, BankRound(-1.51)==-2.0, BankRound(2.51)==3.0, BankRound(-2.51)==-3.0123456789101112可以看出,Banker’s Rounding对正数和负数的处理是对称的,因此不会引入符号带来的偏差。另外它以均等的几率来舍入数位(考虑c, c有各一半的几率为奇数和偶数),所以多次舍入后与真值的差别会较小。扯了这么多,跟Java的Math.round( )有什么关系呢?我也是写到这才发现,好像没什么软(luan)关系。因为它并没有遵循Banker’s rounding。而是按照以下策略进行取整:当考虑的数位d不是5,d&lt;5就舍,d&gt;5则入。当d==5:a.如果d的右边有非零数位,则入;b.如果d的右边没有非零数位,则 round to ceiling,即对负数舍,对正数入。Java文档里是这么表述的还有还有, 在Java里可以使用 BigDecimal 和 RoundingMode 实现更通用的取整方式。 double d=-2.5;BigDecimal bd=new BigDecimal(d);double nd=bd.setScale(0,RoundingMode.HALF_EVEN).doubleValue();System.out.println(nd);//输出 -2.0`setScale 的第一个参数是保留的小数位数,第二个参数是舍入模式。可选的舍入模式有:HALF_EVEN, 也就是银行家方式;HALF_UP, 四舍五入;HALF_DOWN, 五舍六入;CEILING、FLOOR, 向正无穷、负无穷方向;UP、DOWN*, 向零和远离零;UNNECESSARY, 断言舍入后的值和原值相等,也就是不需要舍入。如果断言错了,抛出ArithmeticException异常。","categories":[{"name":"Python","slug":"Python","permalink":"https://www.lovesofttech.com/categories/Python/"},{"name":"java","slug":"Python/java","permalink":"https://www.lovesofttech.com/categories/Python/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"Python","slug":"Python","permalink":"https://www.lovesofttech.com/tags/Python/"}]},{"title":"github pages 绑定自己的域名","slug":"git/githubPages","date":"2018-10-27T16:00:00.000Z","updated":"2020-09-01T02:53:12.965Z","comments":true,"path":"git/githubPages.html","link":"","permalink":"https://www.lovesofttech.com/git/githubPages.html","excerpt":"如题","text":"如题 配置 使用 github pages，要将项目名命名成这样，以用户名 uncleAndyChen 为例：uncleAndyChen.github.io，这样，就可以直接用项目名访问个人博客了：http://uncleAndyChen.github.io 请注意，自定义域名生效之后，该方式会失效，也就是说，配置好自定义域名且生效之后，就只能通过配置的域名访问。 以绑定已经备案过的域名 lovesofttech.com 为例，在配置页面配置好之后，会有如下提示： 1Your site&apos;s DNS settings are using a custom subdomain, lovesofttech.com, that&apos;s not set up with a correct CNAME record. We recommend you set this CNAME record to point at [YOUR USERNAME].github.io. For more information, see https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages/. 到域名管理页面，添加 CNAME 解析记录，指向自己的 Github Pages 域名，例如 uncleAndyChen.github.io，域名指向生效之后，域名绑定就完成了。 经验 首先被绑定的域名需要已经备案，为了备案，需要先找一家网站托管商，比如我用的是阿里云的云服务器 ECS。如果云服务器到期，可以考虑将个人博客转至 githu pages，免费还相对稳定，更新也比较简单。 blog 更新 gitee 上的 hexo blog，之前需要在本地 hexo g（编译）之后，再 hexo d（发布）至某一个分支，pages 设置的时候选这个分支即可。前两天我重新配置的时候，发现官方已经直接支持 hexo blog 了，md（markdown）文档 push 之后，会自动触发在线编译，这样，在本地就少了两步操作，即 hexo g（编译）之后，再 hexo d（发布至某一个分支）。 github 暂时还没有发现在线编译功能，我的做法是，把 md 文档托管到 gitee（可以 private，也可以 public，而 github 的 private 项目需要收费），然后，本地 hexo g 之后生成的目录，即 public 目录作为 github 的 blog 项目，需要更新的时候，直接按如下操作即可： 在源代码（众多 markdown 文档）目录，执行 hexo g 到编译生成的 public 目录，在 git 客户端执依次行 123git add .git commit -m &apos;update blog ...&apos;git push 可将以下脚本存为 .sh 文件，需要更新的时候，双击执行即可。没错，就是在 windows 下，我的系统是 win10，双击之后，弹出来的窗口，就是 git Bash 窗口。 123456cd ..hexo gcd publicgit add .git commit -m &apos;update blog ...&apos;git push 域名的【主机记录】要不要配置 www？ 一般我们的域名配置，要配置两个，一个【主机记录】是 www，另外一个是【@】，以我的域名 lovesofttech.com 为例，这样配置对应的网站地址分别是：www.lovesofttech.com 和 lovesofttech.com，这样做是为了照顾不同人群的习惯，有一部分人群记住域名之后，访问时一般要先输入 www，实际上，以 www 开头是一个二级域名，其实可以配置成不以 www 开头即可访问，比如我访问百度的习惯就是直接输入 baidu.com。 至于在浏览器地址栏输入 baidu.com 回车之后，会自动跳转至 www.baidu.com，这个可以在服务器上配置，一般的 web 服务器（比如 nginx）都支持。 那么，为了照顾不同人群的不同习惯，我的 github pages 也想配置带 www 和不带 www 的自定义域名。但是，结果是不支持。通过 github pages 配置了 lovesofttech.com，我再配置一个 www.lovesofttech.com 时，会得到如下错误： 参考：Troubleshooting custom domains -&gt; CNAME already taken github pages 只能配置一个顶级域名 如果配置了 lovesofttech.com，就不能再配置 www.lovesofttech.com 同样的，配置了 www.lovesofttech.com，就不能再配置 lovesofttech.com 终极解决方案这里我们一共要配置两个域名，一个是顶级域名，一个是 www 开头的二级域名。假设已经在 github pages 配置好了二级域名：www.lovesofttech.com。 添加顶级域名（主机记录不填或者填@即为顶级域名）的【CNAME】或【302重定向】记录，将【记录值】设置成二级域名：www.lovesofttech.com。来解决 www.lovesofttech.com 不能正确指向的问题。 用该方法还可以随意定义二级域名来指向同一个博客网站。 阿里云域名管理可添加【CNAME】或【302重定向】解析，这里以【302重定向】为例。 京东云域名管理只能用【CNAME】解析。在域名解析方面，京东云没有阿里云的选项多，解析选项里，是没有 【302重定向】的。 其实，用 【CNAME】跟用【302重定向】的效果是一样的，都是重定向，只是重定向的方式不一样而已，这两种方式对用户而言是没有什么区别的，有区别的，应该是搜索引擎。 启用 HTTPS 参考文章：Custom domains on GitHub Pages gain support for HTTPS Github 使用了 Let’s Encrypt 提供的免费 SSL 证书 Linux下使用acme.sh申请和管理Let’s Encrypt证书","categories":[{"name":"github pages","slug":"github-pages","permalink":"https://www.lovesofttech.com/categories/github-pages/"},{"name":"experience","slug":"github-pages/experience","permalink":"https://www.lovesofttech.com/categories/github-pages/experience/"},{"name":"绑定域名","slug":"github-pages/experience/绑定域名","permalink":"https://www.lovesofttech.com/categories/github-pages/experience/绑定域名/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"github pages","slug":"github-pages","permalink":"https://www.lovesofttech.com/tags/github-pages/"},{"name":"绑定域名","slug":"绑定域名","permalink":"https://www.lovesofttech.com/tags/绑定域名/"}]},{"title":"ElasticSearch demo 以及辅助开发工具","slug":"java/elasticSearchProjectDemo","date":"2018-10-07T16:00:00.000Z","updated":"2020-09-01T02:53:12.977Z","comments":true,"path":"java/elasticSearchProjectDemo.html","link":"","permalink":"https://www.lovesofttech.com/java/elasticSearchProjectDemo.html","excerpt":"ElasticSearch 相关辅助工具使用实践。ElasticSearch 版本 6.4.1。","text":"ElasticSearch 相关辅助工具使用实践。ElasticSearch 版本 6.4.1。 启动 ElasticSearch后台启动/opt/elasticsearch-6.4.1/bin/elasticsearch -d 启动 kibananohup /opt/kibana-6.4.1-linux-x86_64/bin/kibana &amp; 访问 kibanahttp://192.168.1.91:5601/ 启动 Head 插件official github page大致步骤：123456Running with built in servergit clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headcnpm installnpm startopen http://localhost:9100/ 在服务器上真实的操作：12345678910[utomcat@centOS7BasicForTest ~]$ cd ~/soft/elasticsearch-head/[utomcat@centOS7BasicForTest elasticsearch-head]$ npm start&gt; elasticsearch-head@0.0.0 start /home/utomcat/soft/elasticsearch-head&gt; grunt server(node:3302) ExperimentalWarning: The http2 module is an experimental API.Running &quot;connect:server&quot; (connect) taskWaiting forever...Started connect web server on http://localhost:9100 将 localhost 换成服务器的 IP 之后的[访问地址][http://192.168.1.91:9100] 创建和查询测试数据以下，用 postman 工具操作。 操作 PUT 或 POST，报错 1234&#123; &quot;error&quot;: &quot;Content-Type header [application/x-www-form-urlencoded] is not supported&quot;, &quot;status&quot;: 406&#125; 解决 将 Headers 的参数 KEY -&gt; Content-Type 的 VALUE 由 application/x-www-form-urlencoded 改为 ‘application/json’ 这样就可以正确执行了。 创建索引1PUT http://192.168.1.91:9200/hjz-es-index-general body JSON 参数12345678910111213141516171819202122232425262728293031323334&#123; &quot;settings&quot;: &#123; &quot;number_of_replicas&quot;: 0, &quot;number_of_shards&quot;: 3, &quot;index.store.type&quot;: &quot;niofs&quot;, &quot;index.query.default_field&quot;: &quot;title&quot;, &quot;index.unassigned.node_left.delayed_timeout&quot;: &quot;5m&quot; &#125;, &quot;mappings&quot;: &#123; &quot;general&quot;: &#123; &quot;dynamic&quot;: &quot;strict&quot;, &quot;properties&quot;: &#123; &quot;id&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;title&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: true, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;author&quot;: &#123; &quot;type&quot;: &quot;text&quot; &#125;, &quot;content&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: true, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125; &#125; &#125; &#125;&#125; 响应12345&#123; &quot;acknowledged&quot;: true, &quot;shards_acknowledged&quot;: true, &quot;index&quot;: &quot;hjz-es-index-school-district&quot;&#125; 写入文档（一条记录） 选 POST，URL 输入 http://192.168.1.91:9200/hjz-es-index-general/general/ body 参数 123456&#123; &quot;id&quot;:1, &quot;title&quot;:&quot;Elasticsearch简介&quot;, &quot;author&quot;:&quot;Andy&quot;, &quot;content&quot;:&quot;Elasticsearch是一个基于Lucene的搜索引擎&quot;&#125; 执行之后，返回 1234567891011121314&#123; &quot;_index&quot;: &quot;hjz-es-index-general&quot;, &quot;_type&quot;: &quot;general&quot;, &quot;_id&quot;: &quot;-YwaKWYB2RmkJe44rsKf&quot;, &quot;_version&quot;: 1, &quot;result&quot;: &quot;created&quot;, &quot;_shards&quot;: &#123; &quot;total&quot;: 1, &quot;successful&quot;: 1, &quot;failed&quot;: 0 &#125;, &quot;_seq_no&quot;: 0, &quot;_primary_term&quot;: 1&#125; 查询索引所有数据12POST http://192.168.1.91:9200/hjz-es-index-general/general/_search?pretty# body 处写 json 数据，或者 body-&gt;binary; 选择 JSON 格式的文件 注意： 192.168.1.91:9200 是 ES 得访问地址和端口 hjz-es-index-general 是索引的名称 general 是类型的名称 上面 uri http://192.168.1.91:9200/hjz-es-index-general/general/_search?pretty 中的索引名 hjz-es-index-general 和类型名 general 在 JSON 数据中如果有定义，可以省略；如果没有则必须在 uri 中指定。 _search 是要查询 还有 _bulk，是 rest 命令，可以批量执行多个操作 pretty 是将返回的信息以可读的 JSON 形式返回。（不过 postman 自带了 pretty 的功能）send 之后，可以很快看到结果 通过 kibana 创建1234567891011121314151617181920212223242526272829303132333435PUT hjz-es-index-general&#123; &quot;settings&quot;: &#123; &quot;number_of_replicas&quot;: 0, &quot;number_of_shards&quot;: 3, &quot;index.store.type&quot;: &quot;niofs&quot;, &quot;index.query.default_field&quot;: &quot;title&quot;, &quot;index.unassigned.node_left.delayed_timeout&quot;: &quot;5m&quot; &#125;, &quot;mappings&quot;: &#123; &quot;general&quot;: &#123; &quot;dynamic&quot;: &quot;strict&quot;, &quot;properties&quot;: &#123; &quot;id&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;title&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: true, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;author&quot;: &#123; &quot;type&quot;: &quot;text&quot; &#125;, &quot;content&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: true, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125; &#125; &#125; &#125;&#125; 响应12345&#123; &quot;acknowledged&quot;: true, &quot;shards_acknowledged&quot;: true, &quot;index&quot;: &quot;hjz-es-index-general&quot;&#125; 查看索引 mapping 内容1http://192.168.1.91:9200/hjz-es-index-general/_mapping?pretty 结果12345678910111213141516171819202122232425&#123; &quot;hjz-es-index-general&quot;: &#123; &quot;mappings&quot;: &#123; &quot;general&quot;: &#123; &quot;dynamic&quot;: &quot;strict&quot;, &quot;properties&quot;: &#123; &quot;author&quot;: &#123; &quot;type&quot;: &quot;text&quot; &#125;, &quot;content&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;id&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;title&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot; &#125; &#125; &#125; &#125; &#125;&#125; 文档管理official reference 采坑记cluster.name 配置问题如果 cluster.name 参数写错了，会报如下错误：12342018-09-30 15:16:58.721 WARN 7832 --- [][generic][T#2]] o.e.c.t.TransportClientNodesService : node &#123;#transport#-1&#125;&#123;YGbM08bGTPO_wpv-bPWOoQ&#125;&#123;192.168.1.91&#125;&#123;192.168.1.91:9300&#125; not part of the cluster Cluster [hjz-es], ignoring...NoNodeAvailableException[None of the configured nodes are available: [&#123;#transport#-1&#125;&#123;YGbM08bGTPO_wpv-bPWOoQ&#125;&#123;192.168.1.91&#125;&#123;192.168.1.91:9300&#125;]]... 查询 cluster_name123456789101112131415161718# 输入http://192.168.1.91:9200/&#123; &quot;name&quot; : &quot;hjz-es&quot;, &quot;cluster_name&quot; : &quot;hjz-es-cluster&quot;, &quot;cluster_uuid&quot; : &quot;AQI-AmR2QmW5-6HhzxCjYQ&quot;, &quot;version&quot; : &#123; &quot;number&quot; : &quot;6.4.1&quot;, &quot;build_flavor&quot; : &quot;default&quot;, &quot;build_type&quot; : &quot;tar&quot;, &quot;build_hash&quot; : &quot;e36acdb&quot;, &quot;build_date&quot; : &quot;2018-09-13T22:18:07.696808Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;7.4.0&quot;, &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;, &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot; &#125;, &quot;tagline&quot; : &quot;You Know, for Search&quot;&#125; 配置参数要写成上面 cluster_name 对应的值。 依赖问题12345&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;transport&lt;/artifactId&gt; &lt;version&gt;6.4.1&lt;/version&gt;&lt;/dependency&gt; 用下面的代码，初始化 TransportClient12345678@Beanpublic TransportClient esClient() throws UnknownHostException &#123; Settings settings = Settings.builder().put(&quot;cluster.name&quot;, this.esName).build(); InetSocketTransportAddress master = new InetSocketTransportAddress(InetAddress.getByName(esHost), esPort); TransportClient client = new PreBuiltTransportClient(settings).addTransportAddress(master); return client;&#125; 报错：123456...Caused by: java.lang.NoClassDefFoundError: Could not initialize class org.elasticsearch.transport.client.PreBuiltTransportClient...Factory method &apos;esClient&apos; threw exception; nested exception is java.lang.NoClassDefFoundError: org/elasticsearch/plugins/NetworkPlugin...Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/plugins/NetworkPlugin 网上找到的解决方案，是要增加引用12345&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt; &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt; &lt;version&gt;6.4.1&lt;/version&gt;&lt;/dependency&gt; 同时，可将 client 依赖的版本排除1234567891011&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;transport&lt;/artifactId&gt; &lt;version&gt;6.4.1&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt; &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; 当然，不加 exclusions 项，maven 会自动用外面配置的最新版本，而忽略 client 依赖的 2.4.6 版本。如果引用了最新版的 elasticsearch，InetSocketTransportAddress 将不再可用，要换成最新版定义的 TransportAddress。值得注意的是，TransportAddress 在低版本是一个接口。 正确的代码变成1234567891011121314151617181920@Configurationpublic class ElasticSearchConfig &#123; @Value(\"$&#123;elasticsearch.host&#125;\") private String esHost; @Value(\"$&#123;elasticsearch.port&#125;\") private int esPort; @Value(\"$&#123;elasticsearch.cluster.name&#125;\") private String esName; @Bean public TransportClient esClient() throws UnknownHostException &#123; Settings settings = Settings.builder().put(\"cluster.name\", this.esName).build(); TransportAddress transportAddress = new TransportAddress(InetAddress.getByName(esHost), esPort); TransportClient client = new PreBuiltTransportClient(settings).addTransportAddress(transportAddress); return client; &#125;&#125; Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/common/transport/InetSocketTransportAddressspring boot 1.5.10，正常，升级成 2.0.5 就报错了1Caused by: java.lang.NoClassDefFoundError: org/elasticsearch/common/transport/InetSocketTransportAddress 解决，引用 transport-netty4-client 最新版依赖12345&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.plugin&lt;/groupId&gt; &lt;artifactId&gt;transport-netty4-client&lt;/artifactId&gt; &lt;version&gt;6.4.1&lt;/version&gt;&lt;/dependency&gt; xContentBuilder.startObject() 报错：java.lang.NullPointerException代码12XContentBuilder xContentBuilder = XContentFactory.jsonBuilder();xContentBuilder.startObject(); 报错信息1234java.lang.NullPointerException at com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeStartObject(UTF8JsonGenerator.java:324) at org.elasticsearch.common.xcontent.json.JsonXContentGenerator.writeStartObject(JsonXContentGenerator.java:151) at org.elasticsearch.common.xcontent.XContentBuilder.startObject(XContentBuilder.java:252) 出错的源码，UTF8JsonGenerator.java:324，_outputBuffer 为 null，代码如下:1234567891011121314@Overridepublic final void writeStartObject() throws IOException&#123; _verifyValueWrite(&quot;start an object&quot;); _writeContext = _writeContext.createChildObjectContext(); if (_cfgPrettyPrinter != null) &#123; _cfgPrettyPrinter.writeStartObject(this); &#125; else &#123; if (_outputTail &gt;= _outputEnd) &#123; _flushBuffer(); &#125; _outputBuffer[_outputTail++] = BYTE_LCURLY; &#125;&#125; 解决解决方法让人啼笑皆非。我把 elasticsearch api 的三个依赖（org.elasticsearch、org.elasticsearch.client、transport-netty4-client）的版本，全部由 6.4.1 改为 6.4.2，还是报错。 elasticsearch 依赖的 jackson-core 是 2.9.6，我又把 jackson-core 在外层引用最新版本 2.9.7，依然报错。 但是，在调试跟踪源码的过程中，多次 mvn clean compile，有一次突然就不报错了。 然后，我将 jackson-core 依赖在 pom.xml 中去掉，再次调试，正常。最后，我将 elasticsearch api 的三个依赖，改回 6.4.1，正常。 在之前出错的过程中，我多次操作过 mvn clean compile，都没好，一度怀疑是 jackson 存在 bug，经过以上操作之后，怀疑是操作系统的问题（之前也有遇到莫名其妙的问题，重启 windows 之后就好了），于是，我重启了我的 win10，再次调试，elasticsearch api 用 6.4.1 与 6.4.2 都没有再报错了。 这个异常，之前在其中一个类的代码中没有问题，在另外一个类里面有问题，而且我反复测试过，再后来，在两个类中都有问题。 结论在遇到这种类似的问题，有的地方报错，有的地方不报错，有时候报错有时候不报错，如果用的是 windows，最好重启一下再试，如果依然有问题再去跟踪调试和分析源代码。 多项目情况下依赖版本问题导致错误首先是在一个 web 项目下调试通过，然后将 es 相关的类放到一个专门的 module 下，项目启动，报错如下：12345678917:40:50,798 &lt;org.springframework.boot.SpringApplication&gt; ERROR [restartedMain]: Application startup failedorg.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;esClient&apos; defined in apg.common.es.config.ElasticsearchConfig: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.elasticsearch.client.transport.TransportClient]: Factory method &apos;esClient&apos; threw exception; nested exception is java.lang.InstantiationError: org.elasticsearch.common.transport.TransportAddress at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]...Caused by: java.lang.InstantiationError: org.elasticsearch.common.transport.TransportAddress at apg.common.es.config.ElasticsearchConfig.esClient(ElasticsearchConfig.java:26) ~[classes/:?] at apg.common.es.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$b492deb9.CGLIB$esClient$0(&lt;generated&gt;) ~[classes/:?] at apg.common.es.config.ElasticsearchConfig$$EnhancerBySpringCGLIB$$b492deb9$$FastClassBySpringCGLIB$$feac0256.invoke(&lt;generated&gt;) ~[classes/:?]... 解决看一下引用 es module 的依赖树，能看出来，org.elasticsearch 用到的是版本 2.4.6。 其实，es module 已经引用了最新版的 org.elasticsearch，同时，在 org.elasticsearch.client 引用里已经排除对 org.elasticsearch 的依赖，es module 的引用如下：123456789101112131415&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt; &lt;artifactId&gt;transport&lt;/artifactId&gt; &lt;version&gt;$&#123;elasticsearch.client.version&#125;&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt; &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;exclusion&gt; &lt;groupId&gt;org.elasticsearch.plugin&lt;/groupId&gt; &lt;artifactId&gt;transport-netty4-client&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; 至于为什么会这样，暂时还没搞清楚头绪，待空了再好好研究一下 maven 依赖，或者是 maven 编译机制。 既然怀疑是版本引用导致的问题，那就好办了，为了印证这个判断，将同样的代码 copy 至引用的 web 项目，不用调试就已经显示错误了 提示 &#39;TransportAddress&#39; is abstract; cannot be instantiat，TransportAddress 在旧版本确实只是一个接口而已，在新版本里，变成了一个普通类。然后，在 pom.xml 里添加新版本的引用，该提示即消失12345&lt;dependency&gt; &lt;groupId&gt;org.elasticsearch&lt;/groupId&gt; &lt;artifactId&gt;elasticsearch&lt;/artifactId&gt; &lt;version&gt;6.4.2&lt;/version&gt;&lt;/dependency&gt; 在 web 项目添加与 apg.comm.es 相同的依赖之后，再去看一下依赖树，如下所示 外层引用版本会覆盖某一个包（module）下面的引用版本，再一次运行，就正常了。 解决该问题，花了好几个小时，所以，特此记录下来，希望能帮到遇到同样问题的朋友。 网上没找到相关的解决方案，这种问题属于运行时的依赖版本不一样导致的，编译的时候是不会报错的，所以，隐藏得比较深。 建议搜索词official reference","categories":[{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/categories/ElasticSearch/"}],"tags":[{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/tags/ElasticSearch/"}]},{"title":"软件产品版本号制定规则","slug":"general/version","date":"2018-10-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.955Z","comments":true,"path":"general/version.html","link":"","permalink":"https://www.lovesofttech.com/general/version.html","excerpt":"如题","text":"如题 版本号：x.y.z.d版本号组成 x:主版本，涉及到重要功能上线、产品的重大改版，这个版本号会和公司战略发展结合进行更新。 y:次版本，产品经理、运营人员会重点关注次版本，会涉及到新模块、新功能的上线，运营。 z:修订版本，产品专员、测试人员、服务人员也会关注到修订版本，会涉及到 bug 修复、小功能上线。 d:日期版本，一般用于产品和技术、测试部门的沟通。 修改规则 当项目在进行了重大修改或局部修正累积较多，而导致项目整体发生全局变化时，主版本号加 1。 当项目在原有的基础上增加了部分功能时，主版本号不变，子版本号加 1，修正版本号复位为 0。 当项目在进行了局部修改或 bug 修正时，主版本号和子版本号都不变，修正版本号加 1。 扩展：Alpha、Beta、RC、GA 版本的区别 Alpha：是内部测试版,一般不向外部发布,会有很多Bug.一般只有测试人员使用。 Beta：也是测试版，这个阶段的版本会一直加入新的功能。在Alpha版之后推出。 RC：(Release Candidate) 顾名思义么 ! 用在软件上就是候选版本。系统平台上就是发行候选版本。RC版不会再加入新的功能了，主要着重于除错。 GA:General Availability,正式发布的版本，在国外都是用GA来说明release版本的。 RTM：(Release to Manufacture)是给工厂大量压片的版本，内容跟正式版是一样的，不过RTM版也有出限制、评估版的。但是和正式版本的主要程序代码都是一样的。 OEM：是给计算机厂商随着计算机贩卖的，也就是随机版。只能随机器出货，不能零售。只能全新安装，不能从旧有操作系统升级。包装不像零售版精美，通常只有一面CD和说明书(授权书)。 RVL：号称是正式版，其实RVL根本不是版本的名称。它是中文版/英文版文档破解出来的。 EVAL：而流通在网络上的EVAL版，与“评估版”类似，功能上和零售版没有区别。 RTL：Retail(零售版)是真正的正式版，正式上架零售版。在安装盘的i386文件夹里有一个eula.txt，最后有一行EULAID，就是你的版本。比如简体中文正式版是EULAID:WX.4_PRO_RTL_CN，繁体中文正式版是WX.4_PRO_RTL_TW。其中：如果是WX.开头是正式版，WB.开头是测试版。_PRE，代表家庭版；_PRO，代表专业版。 α、β、λ常用来表示软件测试过程中的三个阶段，α是第一阶段，一般只供内部测试使用；β是第二个阶段，已经消除了软件中大部分的不完善之处，但仍有可能还存在缺陷和漏洞，一般只提供给特定的用户群来测试使用；λ是第三个阶段，此时产品已经相当成熟，只需在个别地方再做进一步的优化处理即可上市发行。","categories":[{"name":"版本号","slug":"版本号","permalink":"https://www.lovesofttech.com/categories/版本号/"}],"tags":[{"name":"版本号","slug":"版本号","permalink":"https://www.lovesofttech.com/tags/版本号/"}]},{"title":"git 回车换行在 windows 与 unix 下不一致的解决方案","slug":"git/gitLFAndCRLF","date":"2018-10-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.962Z","comments":true,"path":"git/gitLFAndCRLF.html","link":"","permalink":"https://www.lovesofttech.com/git/gitLFAndCRLF.html","excerpt":"解决 git commit 失败的问题：warning: LF will be replaced by CRLF","text":"解决 git commit 失败的问题：warning: LF will be replaced by CRLF 问题描述在 gitee.com 创建了一个 repository, 上传了一个 github 的开源项目，在 windows 下 git clone 下来，用 IDEA 正常修改，然后 commit 失败，提示：warning: LF will be replaced by CRLF 原因分析原因应该是我在 Windows 环境对文件进行操作，而我拷贝的文件原作者应该是在 Linux 系统是进行编辑的，因此导致此情况的发生，下面是官方的说明点击这里看原文: 格式化与空白是许多开发人员在协作时，特别是在跨平台情况下，遇到的令人头疼的细小问题。由于编辑器的不同或者 Windows 程序员在跨平台项目中的文件行尾加入了回车换行符，一些细微的空格变化会不经意地进入大家合作的工作或提交的补丁中。不用怕，Git 的一些配置选项会帮助你解决这些问题。 假如你正在Windows上写程序，又或者你正在和其他人合作，他们在Windows上编程，而你却在其他系统上，在这些情况下，你可能会遇到行尾结束符问题。这是因为Windows使用回车和换行两个字符来结束一行，而 Mac和 Linux 只使用换行一个字符。虽然这是小问题，但它会极大地扰乱跨平台协作。 Git 可以在你提交时自动地把行结束符 CRLF 转换成 LF，而在签出代码时把 LF 转换成 CRLF。用 core.autocrlf 来打开此项功能，如果是在 Windows 系统上，把它设置成 true，这样当签出代码时，LF 会被转换成 CRLF：1$ git config --global core.autocrlf true Linux 或 Mac 系统使用 LF 作为行结束符，因此你不想 Git 在签出文件时进行自动的转换；当一个以 CRLF 为行结束符的文件不小心被引入时你肯定想进行修正，把 core.autocrlf 设置成 input 来告诉 Git 在提交时把 CRLF 转换成 LF，签出时不转换：1$ git config --global core.autocrlf input 这样会在 Windows 系统上的签出文件中保留 CRLF，会在 Mac 和 Linux 系统上，包括仓库中保留 LF。 如果你是 Windows 程序员，且正在开发仅运行在 Windows 上的项目，可以设置 false 取消此功能，把回车符记录在库中：1$ git config --global core.autocrlf false 解决方案由于我使用别的人模板文件是在 Linux 系统编辑的，Linux 系统使用 LF 作为换行符，我只能将就把 core.autocrlf 设置成 false，这样才不会有警告，但是如果开始就在 Windows 上进行开发，应该将它设置成 true 才对。 新问题按照上面的操作之后，有一个旧项目，因为我把项目从之前的账号迁移至新注册的账号，但是提交之后，还是显示提交者为旧账号，于是我重新 clone 新账号下的项目，然后只把 .git 目录替换至项目根目录下，提示有几个文件有修改，push 的时候报下面的错。几乎没有解。分析了一下操作过程，该项目应该是在执行过 git config --global core.autocrlf false 之前就存在，现在 clone 到本地，LF 已经被 修改成 CRLF 了，所以，新 .git 目录匹配到旧项目中的文件，就提示有修改。那么，push 的时候，之所以会失败，我分析应该是在 push 的时候，会还原 clone 时的修改，也就是，把 CRLF 再替换回 LF，在这个过程中，可能还存在一些不兼容的修改，所以会 push 失败。10 files committed, 5 files failed to commit: improve warning: LF will be replaced by CRLF in .gitignore. The file will have its original line endings in your working directory. warning: LF will be replaced by CRLF in pom.xml. The file will have its original line endings in your working directory. warning: LF will be replaced by CRLF in src/main/java/com/example/demo/DemoApplication.java. The file will have its original line endings in your working directory. warning: LF will be replaced by CRLF in src/main/java/com/example/demo/config/ElasticsearchConfig.java. The file will have its original line endings in your working directory. warning: LF will be replaced by CRLF in src/test/java/com/example/demo/DemoApplicationTests.java. The file will have its original line endings in your working directory. 解决知道原因就好办了，执行 git config --global core.autocrlf false 之后，之前的项目，不要直接替换 .git 目录，如果有这个需要，则要连项目文件一起替换。 linebreak-style1ESLint: Expected linebreaks to be &apos;LF&apos; but found &apos;CRLF&apos;.(linebreak-style)","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"软件工程师个人品质、团队精神，你都做到了哪些？","slug":"job/coderRequirement","date":"2018-10-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.003Z","comments":true,"path":"job/coderRequirement.html","link":"","permalink":"https://www.lovesofttech.com/job/coderRequirement.html","excerpt":"如题","text":"如题 团队成长与个人成长 单兵作战能力，独当一面，战无不胜~~~ 如何成长快一点？善于总结，乐于分享。工作追求，张弛有度，轻松愉快，同时要保证有一个正常合理的产出，结果导向。 code DRY（Don’t repeat yourself） 约定胜于配置 让每个类尽量简单，尽量只做一件事 sql 查询，少用 inner join 变量/类/文件，命名，见名知义 变量/文件，驼峰命名规则，类命名要首字母大写 tab -&gt; 四个空格，保持 idea / webStorm 默认配置 文件编码：utf8 遇到技术难题，卡住时 及时沟通，好调整工作计划。 安排解决问题的时间。 注意看提示，仔细看，根据提示操作，尝试，95% 以上的问题都能找到解决问题的办法。 提问的智慧 软件工程师品质 关注细节 严谨 责任心 细心 耐心 意识 产品意识 维护意识 换位思考 进度与质量 应该偷懒，正确的偷懒 理解 业务 代码 时间关系 多花心思 勤奋 能吃苦 肯专研 能解决实际问题 学习能力强 个人品质修为 勿以恶小而为之，勿以善小而不为。惟贤惟德，能服于人。 系蜀汉先主刘备所言。刘备去世前给其子刘禅的遗诏中的话。刘禅 –&gt; 乐不思蜀 细节决定成败。 遇到问题，解决它，度娘，团队，不能将就。 多测试，多思考，高要求。 要知道自己的短板在哪儿，及时弥补。 培养快速解决问题的能力，厚积薄发。 善于发现问题。 由要我做什么，到我要做什么。 由“收到请回复”说开 别人让你做什么事，做好之后，给一个反馈，这个非常有必要。 收到消息，回复一个 【1】 或者 【ok】 或者【收到】，是对别人的尊重。 需要别人帮忙，有结果了，告之一声，也是对别人的尊重。 工作进展，及时沟通，不要等问了再说。 日常沟通沟通要到位，理解了需求再动手，不清楚的及时问。 团队精神 仔细研读代码规范。 理解约定胜于配置的含义及好处。 代码的可读性、可扩展性，是代码质量的重要指标。 主动性，积极性，表现在哪些方面？ 团队精神、团队协作能力，表现在哪些方面？ 沟通能力，体现在哪些地方？ 团队氛围积极的，向上的，正能量的，活泼的，紧张的，放松的 绩效目的 公平、公正，付出（产出）与回报成正比。 让肯努力、真正有能力的人得到该有的回报，激励大家共同进步，淘汰影响团队发展的人。 日积月累，让别人永远也到达不了你的高度。 Nothing worth having comes easy.值得拥有的东西，永远都来之不易。你今天的日积月累，早晚会成为别人的望尘莫及。","categories":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/categories/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"}]},{"title":"如何在更少的时间内完成更多的工作","slug":"job/lessWorkTime","date":"2018-10-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.009Z","comments":true,"path":"job/lessWorkTime.html","link":"","permalink":"https://www.lovesofttech.com/job/lessWorkTime.html","excerpt":"摘抄自：http://www.infoq.com/cn/news/2018/07/more-work-fewer-hours","text":"摘抄自：http://www.infoq.com/cn/news/2018/07/more-work-fewer-hours 由于不恰当的工作方式，Jason Lengstorf感觉自己的身体开始分崩离析，于是他决定将电脑使用时间限制在每周40小时，以90分钟为单位，培养一种高度专注的工作方式。减少工作时间可以防止过度疲劳或注意力不集中。我们应该像重视工作时间一样重视休息时间，利用休息时间进行创造性连接、充电并提醒自己我们工作是为了什么。 来自Gatsby的开发人员Jason Lengstorf在2018年Craft大会上分享了他在减少工作时间的情况下如何完成更多的工作。InfoQ对Jason进行了采访。 InfoQ与Lengstorf进行了交谈，并问他是什么让他决定减少工作时间以及他是如何做到的，以及如何在更少的工作时间内提高生产力。 InfoQ：是什么让你决定减少工作时间？ Jason Lengstorf：我从事代理商业务，每周工作时间长达70-90小时——它开始对我生活造成影响：我的健康、人际关系、幸福感——一切都变得越来越糟。在完成了一个特别紧张的项目之后，我发现我开始掉胡子了。 这为我敲响了警钟。正因为我的工作方式，我的身体开始分崩离析。我需要做出一点改变。 在一次关于软件行业职业倦怠的采访中，John Willis描述了造成潜在职业倦怠的主要因素： Willis：Christina Maslach（…）是职业倦怠的主要研究人员之一。在她最初的研究中，她将前面提到的三个方面编成了倦怠指标（精疲力竭、犬儒主义和效能）。疲惫通常比犬儒主义和效能更明显。临床倦怠和犬儒主义的迹象通常看起来更像是戒断（例如，我只是想完成我的工作，所以请不要管我）。效能有点难以识别。效能通常与自我价值或感知到组织不承认员工价值有关。 InfoQ：软件行业的职业倦怠问题有多严重？ Lengstorf：我看到了一种文化趋势，人们通过一系列看似积极的习惯来鼓励倦怠。例如，为在截止日期前完成工作不得不在周末加班的人可能会被称赞为团队英雄。缺少睡眠被视为一种奉献精神。把工作放在第一位被视为一件好事。 所有这些都有助于达成短期目标，但从长远来看，它们会导致倦怠。职业倦怠不仅给员工带来了巨大的损失，对雇主来说也是非常糟糕的：运营成本非常高，而且面临着某些员工因过度劳累而离开的风险——这些员工可能掌握着企业大量的知识——这可能是破坏性的，将会给整个系统造成损失，因为除了他们，没有其他人知道如何处理问题。 出现职业倦怠，并不是因为公司试图尽可能多地榨取员工（至少通常不会这样）。实际上，我们在一个行业中工作，行业分配给我们的任务通常先成为我们的爱好，然后才变成工作。我们很容易在工作上用力过猛，如果不做出平衡，我们往往会把自己和整个团队搞得精疲力尽。 InfoQ：你决定对自己的工作施加限制。你做了哪些事情？它们是怎么奏效的？ Lengstorf：我安装了一款名为RescueTime的软件，把一周使用电脑的时间限制在40个小时以内，其中包括花在Netflix、社交媒体和其他非工作活动上的时间。 我还使用计时器将工作单位时间分隔为90分钟，在单位时间内高度集中注意力，这有助于完成复杂、有意义的工作，但不会因为过度劳累而无法使用我的大脑。 结果，我比以往任何时候都更富有成效。在2016年和2017年，我平均每周使用电脑的总时间不到40小时，比我之前每周工作70多个小时完成的工作还要多。 InfoQ：长时间工作有什么缺点？为什么减少工作时间会更有效？ Lengstorf：在工业革命时期，人们做了一些研究，证明人们每周工作40小时效率最高。超过这个时间，开始出现疲惫和缺乏紧迫感，导致更多错误，最终需要花费更多时间来修复错误。用于纠错的时间完全抵消了额外的工作时间——实际上，由于需要额外花时间纠错，生产效率通常会降低。 在知识工作中，专注度是工作中最重要的部分。如果我们过度紧张或无法集中注意力，就不会将100％的精力投入到工作中，这意味着我们正在创造低质量的产品。 通过限制工作时间，我们有足够的时间充电。这意味着我们将在工作时间内尽最大努力，减少错误，并产出高质量的产品。 在IBM工作时，我的团队尽量避免加班。我们强调健康的工作时间表，在度假时做到百分百投入。尽管我们是工作时间最少的团队之一，但也是业务部门中表现最好的团队之一。我无法证明这种结果是因为我们的工作作风导致的，但我确信它对我们的成功起到了重要作用。 InfoQ：对于希望提高生产力的软件开发人员，你有什么建议能给到他们？ Lengstorf：同等对待工作时间和休息时间。 我们需要休息，建立创造性的连接、充电，并提醒自己为了什么而工作。如果我们做不到适当的平衡，即使最愉快的事情也会造成损害：我喜欢冰淇淋，但如果我只吃冰淇淋，不仅会对冰淇淋厌烦，还会让自己生病。 我们应该以同样的方式对待工作：我们每个人都有一个安全的工作范围。如果我们处于这个范围以下，就会感到焦躁不安，而如果我们处于这个范围之上，就会倦怠，并厌恶我们的工作。通过达到适当的平衡，我们不仅可以以可持续的方式创造更多的成功，而且能够真正花时间享受成功。 如果我们无法享受成功带来的喜悦，那么成功又有什么意义呢？ 查看英文原文Getting More Work Done in Fewer Working Hours","categories":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/categories/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"}]},{"title":"聊聊工程师的影响力","slug":"job/influencePower","date":"2018-10-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.008Z","comments":true,"path":"job/influencePower.html","link":"","permalink":"https://www.lovesofttech.com/job/influencePower.html","excerpt":"原文链接","text":"原文链接 让我们来聊聊工程师的影响力。作为一名工程师，你是如何获得影响力的？什么是影响力，它的根源是什么，你该如何运用它或者怎样会失去它？它与管理者的权力和影响力有什么不同？ 这个话题通常与那些迫切希望成为管理者以便获取更多信息和决策影响力的工程师有关。这是一个危险的信号，但糟糕的是，这种情况却很普遍。 如果出现这种情况，你需要做一些自我反省。你的公司是否为高级工程师提供参与领导和决策的机会？是否有一个与管理者并行的工程师职位轨道，至少和总监一个级别？他们之间是否平等互补？公司是否有为工程师量身定制的职业发展阶梯？对于非管理者来说，公司的决策过程是否太过神秘？你认为理所当然的东西，别人可能不这么想，所以一定要去问问他们的想法。 或许他们说的只是个人的想法。或许他们不相信你。或许他们只在管理者“独裁”的公司工作过。或许他们在很多公司工作过，还和你一样认为工程师可以拥有巨大的影响力，但其实这是彻头彻尾的谎言，以致于到最后希望彻底破灭。或许他们因为各种原因不习惯于掌握权力。 不管怎样，那些想要成为管理者以便能够长久利用权力的人，到最后一定不希望成为管理者。 那么什么是工程师的影响力？它是如何体现出来？ 我不想重复讨论有关性别、种族和阶级的相关问题，我只是认为，从某种程度上讲，某些人掌握权力要比其他人更难。 创造的力量行动是工程师的超级神力。我们在用笔记本电脑和自己的大脑创造事物！这太不可思议了！我们不必说服、忽悠或强迫他人为我们做事情，我们亲力亲为。 这看起来很浅显，但却很重要。创造是一切力量的源泉。除非我们同意，否则什么都不会发生。 Facebook的一张海报上写着“CODE WINS ARGUMENTS（代码胜于雄辩）”。这句话说得太过绝对了。不过，有多少次，一场又一场的技术争辩都是因为有人愿意动手去做而得到解决的？行动避免了争辩，行动是对理论最好的证明，行动就是力量。（当然，“做”并不仅仅是指“写代码”。） 此外，开发软件是一项创造性的活动，而大规模的开发协作就更是一项非常具有共通性的活动。作为一种创造性行为，当我们对自己的工作充满动力、灵感和热情时（与砍伐木材相比），才会成为更好的创造者。作为一种协作行为，当我们拥有高度信任感和社交凝聚力时，才会做得更好。 工程能力和判断力、自主性和目标感、社会信任感和合作行为，这些都是伟大工程的基础。每个人都有一两种他们感到最舒适的模式，我们可以将这些模式大致分为几种原型。 影响力原型“选择极其困难且迫在眉睫的工作（也往往极度无聊）”。SOC2合规性、备份和恢复、可怕的重构、认证集成：只要能够推动业务发展，他们才不管这些工作无不无聊。如果你是这样的工程师，那么你将获得别人的尊重和感激。“杀手锏调试器”。通常是工作时间最长或最初构建系统的老工程师。如果你对自己的历史和背景感到乐观，那么它们将成为你的一笔巨大的资产。实际上，人们倾向于高估这种人的不可或缺性，但我不鼓励这样做。“专家”。如果你是某个方面的技术专家，那么你在自己的领域里将会产生巨大的影响。你应该在自己的领域内与时俱进，这样才能保持你的优势。有些人持续提供输出，强大到令人感到费解，有时甚至会在多个方面同时取得进展。有些人长时间工作，有些人对如何最大限度地发挥影响力有着本能的反应。没有人想要惹恼这些人。他们的参与通常会加快一个项目的进度，或者让项目在终点线上挣扎。 并非所有的影响力都源于原始技术实力或产出，只是一小部分创意、协作、人际关系是占据优势的： 有些人怀有好奇心，并且总能比其他人提早一步嗅到新事物的味道。他们似乎在玩弄一些毫无意义的东西，你很想骂他们，但他们却可能救你于灾难之中，所以你不得不学会珍惜他们的这种“玩物丧志”。有些人通过社交的方式来解决问题，比如交友、交换技能、互相帮忙等。不要低估了这种社交方式，它往往是为问题找到正确答案的最快途径。有些人非常懒惰，并且通过他们所谓的优雅的捷径来打击你。有些人是招募磁铁，这种人是值得重金聘请的，因为所有人都喜欢与他们共事。有些人擅长推动利益相关者达成共识。有些人擅长表达、讲故事或教育他人。有些人是人人都想要成为的榜样。有些人很会画饼，让每个人都心甘情愿照着大饼去做事。有些人将代码评审变成了教学艺术形式。有些人会让身边的每个人都更有成效和更有效率。有些人创造了无限的前进动力。有些人善于说不。还有一些特殊的影响力是通过以下这些形式表现出来的。 曾经做过管理者的工程师是非常珍贵的。他们懂得如何为初级工程师解释业务目标，并让他们深信不疑（在初级工程师看来，这些是纯粹的管理者所不具备的东西）。他们拥有强大的技术领导力，他们可以将项目分解为组件，让其他工程师能够赶在截止日期之前完成项目却不会让他们精疲力竭。有些工程师是怎么也甩不掉的顽疾，他们质疑和挑战每个系统和组织架构。但他们也可能是可以打磨成优秀人才的好苗子，只是需要强有力的领导把他们的能量引导到富有成效的对话和改进上，并防止他们影响整个团队。我们不要忘了轮班待命的工程师。如果你的公司有健康的轮班待命文化，那么产品所有权就会形成一种权力和道德权威——提出需求、推动变革、优先安排事项。轮班待命不应该是人人避之不及的东西，而应该是每个代码工程师应该肩负的荣誉勋章。（但它不应该让人感到痛苦不堪或影响他们的生活。）这样的例子我可以说上一整天……工程包含了如此强大的角色和技能，所以我们有必要揭开影响力的面纱，并了解他人如何看待你的影响力。 大多数影响力的形式可归结为“影响和被影响”只是会写代码是不够的。你可能拥有信誉度，但拥有它与使用它是不一样的。要将影响力转化为真实的力量，必须使用它，而使用它的最好方式是沟通。 藏在你脑子里的东西对其他人是没有影响力的，你必须把它们表达出来。 你可以通过多种方式实现这一目标：通过写作、小组谈话、公开招募盟友、说服权威人士、公开表达想法等等。 因为工程是一项创造性的活动，所以独裁主义实际上是非常脆弱和具有破坏性的。唯一可持续的权力形式是所谓的“软实力”，如影响力和激励能力，这就是为什么优秀的管理者喜欢使用软实力，而非常不情愿使用权力。如果你的领导经常强调他们的权威，那就是一种反模式。 如果你不发声，就无法发挥你的影响力。在他人面前说出真实想法可能也会把自己的弱点暴露出来，但有时候也不一定是这样。 这不是一个“零和游戏”你们当中的大多数人拥有的潜能远远超出自己的想象，因为你们感觉不到它们的存在，或者意识不到自己在做什么。 管理者可能拥有硬实力和权威，但是有关技术交付的具体决策通常是由他们身边的工程师做出的。这些工程师都属于行动者，因为他们就是需要为这些决策后果提供支持的人。 权力倾向于流向管理者，因为他们了解更多信息。因此聘请了解这一​​点的管理者并借助它来向其他人行使权力就变得非常重要。 在健康的支配与臣服关系中，臣服一方通常拥有最终权力。同理，在健康的团队中，工程师实际上拥有最终权力。因为你有最终的否决权：你可以拒绝参与贡献。你通常可以另寻更好的下家，或许很多人都应该这样做。 当技术和管理发生冲突，谁会赢？理想情况下，他们需要一起努力为业务和人员寻找最佳的解决方案。在身处水深火热的团队中，他们两者之间反而能够保持紧密的联系。 选择你的战斗如果你能够正确地培养和发挥自己的影响力，你就可以对构建的内容及其构建的方式有很多发言权。但你不可能对一切事情都有发言权，这不合逻辑。 你越是将影响力用在好的产出上，就会积累越多的影响力。但它是一种非常精确的工具，需要以精确的方式来运用。想象一下，在按摩时，按摩师整个人压在你的背上，而不是用他们的肘部或手掌来按压某个部位。过于宽泛的目标会分散你的注意力，并限制你的潜在影响力。 所以，要正确地运用你的注意力。 一旦你有了影响力，别忘了帮助别人提升影响力。注意那些被忽视的人，帮助他们提升他们的影响力。借出你的时间和信誉度，把那些让你变得强大的技能也教给需要它们的人。 英文原文：https://charity.wtf/2018/08/17/on-engineers-and-influence/","categories":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/categories/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"}]},{"title":"CentOS 7 配置 ElasticSearch-6.4.1","slug":"linux/centOS7Elasticsearch","date":"2018-10-01T16:00:00.000Z","updated":"2020-09-01T02:53:13.019Z","comments":true,"path":"linux/centOS7Elasticsearch.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7Elasticsearch.html","excerpt":"如题","text":"如题 安装以 utomcat 的身份配置和启动 ElasticSearch建议不要以 root 启动，存在不安全因素。 以下，以 utomcat 用户操作，最终会以 utomcat 的身份来启动 ElasticSearch。 下载下载页面，该页面可下载的是最新版以 utomcat 的身份操作12345wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.4.1.tar.gztar -xzvf elasticsearch-6.4.1.tar.gzmkdir -p /home/utomcat/apps/es/datamkdir -p /home/utomcat/apps/es/logs 安装、配置以 root 用户操作1mv /home/utomcat/soft/elasticsearch-6.4.1 /opt/ 以 utomcat 操作12cd /opt/elasticsearch-6.4.1/vim config/elasticsearch.yml 增加以下项123456789101112cluster.name: hjz-es-clusternode.name: hjz-espath.data: /home/utomcat/apps/es/datapath.logs: /home/utomcat/apps/es/logs# 以下参数，建议在生产环境设置成局域网 IP，不建议在公网上可访问network.host: 192.168.1.91# 以下参数是为了让 head 插件可以远程访问 ElasticSearch。# 为了安全性，不建议在生产环境设置这两个参数。http.cors.enabled: truehttp.cors.allow-origin: &quot;*&quot; 普通启动1/opt/elasticsearch-6.4.1/bin/elasticsearch 后台启动1/opt/elasticsearch-6.4.1/bin/elasticsearch -d 重启 重启之前先用 jps 查看 Elasticsearch 进程号。 12345678[root@centOS7BasicForTest analysis-ik]# jps3904 Bootstrap3969 Bootstrap1190 jenkins.war1912 Bootstrap4745 Jps1467 Bootstrap1375 Elasticsearch 杀死进程，再重新启动 12[root@centOS7BasicForTest analysis-ik]# kill -9 1375[root@centOS7BasicForTest analysis-ik]# /opt/elasticsearch-6.4.1/bin/elasticsearch -d 启动报错123ERROR: [2] bootstrap checks failed[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536][2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144] 解决以下以 root 身份操作1234vim /etc/security/limits.conf# 添加下面两行，其中 utomcat 是启动 es 的用户名utomcat soft nofile 65536utomcat hard nofile 65536 utomcat 账户退出客户端之后，再次登录，ulimit -Hn 查看硬限制，将会看到修改过的数字：65536，之前是 409612[utomcat@centOS7BasicForTest ~]$ ulimit -Hn65536 接着以 root 身份修改 sysctl.conf123vi /etc/sysctl.conf# 添加如下配置vm.max_map_count=262144 用命令 sysctl -p 使修改生效 再次启动123456789/opt/elasticsearch-6.4.1/bin/elasticsearch...T19:09:42,482][INFO ][o.e.t.TransportService ] [hjz-es] publish_address &#123;192.168.1.91:9300&#125;, bound_addresses &#123;[::]:9300&#125;[2018-09-13T19:09:42,490][INFO ][o.e.b.BootstrapChecks ] [hjz-es] bound or publishing to a non-loopback address, enforcing bootstrap checks[2018-09-13T19:09:45,528][INFO ][o.e.c.s.MasterService ] [hjz-es] zen-disco-elected-as-master ([0] nodes joined)[, ], reason: new_master &#123;hjz-es&#125;&#123;wJZDvKN9Q7WuzLjIHF6gXg&#125;&#123;I5y067JPS0iJC2c65UxnrA&#125;&#123;192.168.1.91&#125;&#123;192.168.1.91:9300&#125;&#123;ml.machine_memory=8067002368, xpack.installed=true, ml.max_open_jobs=20, ml.enabled=true&#125;[2018-09-13T19:09:45,531][INFO ][o.e.c.s.ClusterApplierService] [hjz-es] new_master &#123;hjz-es&#125;&#123;wJZDvKN9Q7WuzLjIHF6gXg&#125;&#123;I5y067JPS0iJC2c65UxnrA&#125;&#123;192.168.1.91&#125;&#123;192.168.1.91:9300&#125;&#123;ml.machine_memory=8067002368, xpack.installed=true, ml.max_open_jobs=20, ml.enabled=true&#125;, reason: apply cluster state (from master [master &#123;hjz-es&#125;&#123;wJZDvKN9Q7WuzLjIHF6gXg&#125;&#123;I5y067JPS0iJC2c65UxnrA&#125;&#123;192.168.1.91&#125;&#123;192.168.1.91:9300&#125;&#123;ml.machine_memory=8067002368, xpack.installed=true, ml.max_open_jobs=20, ml.enabled=true&#125; committed version [1] source [zen-disco-elected-as-master ([0] nodes joined)[, ]]])[2018-09-13T19:09:45,542][INFO ][o.e.x.s.t.n.SecurityNetty4HttpServerTransport] [hjz-es] publish_address &#123;192.168.1.91:9200&#125;, bound_addresses &#123;[::]:9200&#125;[2018-09-13T19:09:45,542][INFO ][o.e.n.Node ] [hjz-es] started... 访问：192.168.1.91:92001234567891011121314151617&#123; &quot;name&quot; : &quot;hjz-es&quot;, &quot;cluster_name&quot; : &quot;elasticsearch&quot;, &quot;cluster_uuid&quot; : &quot;En8MsMWqRx-KEuL20eqN0A&quot;, &quot;version&quot; : &#123; &quot;number&quot; : &quot;6.4.1&quot;, &quot;build_flavor&quot; : &quot;default&quot;, &quot;build_type&quot; : &quot;tar&quot;, &quot;build_hash&quot; : &quot;595516e&quot;, &quot;build_date&quot; : &quot;2018-08-17T23:18:47.308994Z&quot;, &quot;build_snapshot&quot; : false, &quot;lucene_version&quot; : &quot;7.4.0&quot;, &quot;minimum_wire_compatibility_version&quot; : &quot;5.6.0&quot;, &quot;minimum_index_compatibility_version&quot; : &quot;5.0.0&quot; &#125;, &quot;tagline&quot; : &quot;You Know, for Search&quot;&#125; 这种启动方式，客户端关闭之后，就会停止，或者 Ctrl+C 也会停止可以通过参数 -d 让 Elasticsearch 在后台运行。123456789101112131415/opt/elasticsearch-6.4.1/bin/elasticsearch -d[utomcat@centOS7BasicForTest bin]$ jps4673 Jps1186 jenkins.war1426 Bootstrap4597 Elasticsearch1318 Bootstrap1400 Bootstrap1356 Bootstrap1277 Bootstrap[utomcat@centOS7BasicForTest bin]$ ps -ef|grep Elasticsearchutomcat 4597 1 38 19:17 pts/0 00:00:18 /usr/jdk1.8.0_171/bin/java -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=true -Dfile.encoding=UTF-8 -Djna.nosys=true -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=true -Dio.netty.noKeySetOptimization=true -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=false -Dlog4j2.disable.jmx=true -Djava.io.tmpdir=/tmp/elasticsearch.w8x505kO -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/elasticsearch-6.4.1 -Des.path.conf=/opt/elasticsearch-6.4.1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /opt/elasticsearch-6.4.1/lib/* org.elasticsearch.bootstrap.Elasticsearch -dutomcat 4690 4397 0 19:17 pts/0 00:00:00 grep --color=auto Elasticsearch[utomcat@centOS7BasicForTest bin]$ 启动异常？123[root@centOS7BasicForTest analysis-ik]# jps...1375 -- process information unavailable 因为以 utomcat 的身份启动，又以 root 的身份 kill，就会这样，过一会儿就好了。 设置开机启动创建脚本文件1vim /etc/init.d/elasticsearch 文件内容：12345678910111213141516171819202122232425262728293031323334353637#!/bin/sh#chkconfig: 2345 80 05#description: essource /etc/profilecase $1 instart) #下面的“&lt;&lt;!”是切换用户后，待执行的命令，执行完后使用“!”来进行结束 su utomcat&lt;&lt;! cd /opt/elasticsearch-6.4.1/bin ./elasticsearch -d! #上面的“!”与上面的 &quot;!&quot; 对应起来，并且顶格，这是语法 # 或者，换成这种语法：su - utomcat -lc &quot;sh /opt/elasticsearch-6.4.0/bin/elasticsearch -d&quot; echo &quot;elasticsearch startup&quot; ;;stop) es_pid=`ps aux|grep elasticsearch | grep -v &apos;grep elasticsearch&apos; | awk &apos;&#123;print $2&#125;&apos;` kill -9 $es_pid echo &quot;elasticsearch stopped&quot; ;;restart) #“grep -v”过滤掉本身的执行命令，获取准确的pid es_pid=`ps aux|grep elasticsearch | grep -v &apos;grep elasticsearch&apos; | awk &apos;&#123;print $2&#125;&apos;` kill -9 $es_pid echo &quot;es stopped&quot; su utomcat&lt;&lt;! cd /opt/elasticsearch-6.4.1/bin ./elasticsearch -d! echo &quot;es startup&quot; ;;*) echo &quot;parameter error, usage:(start|stop|restart)&quot; ;;esac 设置文件执行权限以及开机启动123chmod +x /etc/init.d/elasticsearchchkconfig --add /etc/init.d/elasticsearchchkconfig elasticsearch on KibanaKibana 用户手册Kibana 是一款开源的数据分析和可视化平台，它是 Elastic Stack 成员之一，设计用于和 Elasticsearch 协作。您可以使用 Kibana 对 Elasticsearch 索引中的数据进行搜索、查看、交互操作。您可以很方便的利用图表、表格及地图对数据进行多元化的分析和呈现。Kibana 可以使大数据通俗易懂。它很简单，基于浏览器的界面便于您快速创建和分享动态数据仪表板来追踪 Elasticsearch 的实时数据变化。搭建 Kibana 非常简单。您可以分分钟完成 Kibana 的安装并开始探索 Elasticsearch 的索引数据 — 没有代码、不需要额外的基础设施。 下载安装下载页面以 utomcat 身份操作1wget https://artifacts.elastic.co/downloads/kibana/kibana-6.4.1-linux-x86_64.tar.gz 以 root 身份操作1mv /home/utomcat/soft/kibana-6.4.1-linux-x86_64 /opt/ 以 utomcat 身份操作123456cd /opt/kibana-6.4.1-linux-x86_64/ vim config/kibana.yml# 添加项server.host: &quot;192.168.1.91&quot;elasticsearch.url: http://192.168.1.91:9200 在后台启动1nohup /opt/kibana-6.4.1-linux-x86_64/bin/kibana &amp; 关闭 shell 客户端之后，进程会被终止。 查看进程 ID123netstat -anltp|grep 5601ps -ef|grep kibanaps -ef|grep node 打开 web 端http://192.168.1.91:5601 Head 插件official github pageRunning with built in servergit clone git://github.com/mobz/elasticsearch-head.gitcd elasticsearch-headcnpm installnpm startopen http://localhost:9100/ 123456789[utomcat@centOS7BasicForTest elasticsearch-head]$ npm start&gt; elasticsearch-head@0.0.0 start /home/utomcat/soft/elasticsearch-head&gt; grunt server(node:5204) ExperimentalWarning: The http2 module is an experimental API.Running &quot;connect:server&quot; (connect) taskWaiting forever...Started connect web server on http://localhost:9100 将 localhost 换成服务器的 IP:192.168.1.91 访问（http://192.168.1.91:9100） 修改连接 elasticsearch 服务 url 默认值123vim /home/utomcat/soft/elasticsearch-head/_site/app.js# 找到：this.base_uri = this.config.base_uri || this.prefs.get(&quot;app-base_uri&quot;) || &quot;http://localhost:9200&quot;，将 localhost 改为服务器 IPthis.base_uri = this.config.base_uri || this.prefs.get(&quot;app-base_uri&quot;) || &quot;http://192.168.1.91:9200&quot; 开机启动该插件开机启动脚本1234567891011121314vi /etc/init.d/eshead# 内容如下#!/bin/shsource /etc/profilecase $1 instart) sh /home/utomcat/shell/es-head-start.sh;;stop) echo &quot;please manual stop...&quot;;;*) echo &quot;parameter error, usage:(start|stop)&quot;;;esac 添加启动脚本1234vim /home/utomcat/shell/es-head-start.sh# 内容如下cd /home/utomcat/soft/elasticsearch-head/nohup npm run start &gt;/home/utomcat/soft/elasticsearch-head/nohup.out 2&gt;&amp;1 &amp; 赋执行权限12345chmod +x /home/utomcat/shell/es-head-start.shchmod +x /etc/init.d/eshead# 设置开机启动chkconfig --add /etc/init.d/esheadchkconfig eshead on 经验，踩坑记chkconfig --add 报错1service eshead does not support chkconfig 需要在脚本中添加：12#chkconfig: 2345 80 05#description: es-head 启动时仍然出错12345678910[root@centOS7BasicForTest init.d]# systemctl start esheadJob for eshead.service failed because the control process exited with error code. See &quot;systemctl status eshead.service&quot; and &quot;journalctl -xe&quot; for details.[root@centOS7BasicForTest init.d]# journalctl -xe...Nov 26 18:14:53 centOS7BasicForTest systemd[1]: Starting SYSV: es-head......Nov 26 18:14:53 centOS7BasicForTest eshead[2235]: /etc/rc.d/init.d/eshead: line 12: syntax error near unexpected token `)&apos;Nov 26 18:14:53 centOS7BasicForTest eshead[2235]: /etc/rc.d/init.d/eshead: line 12: `*)&apos;Nov 26 18:14:53 centOS7BasicForTest systemd[1]: eshead.service: control process exited, code=exited status=2 或者通过 systemctl status eshead 也可以查看记得情况123Nov 26 18:22:49 centOS7BasicForTest systemd[1]: Starting SYSV: es-head...Nov 26 18:22:49 centOS7BasicForTest eshead[1213]: /etc/rc.d/init.d/eshead: line 10: syntax error near unexpected token `)&apos;Nov 26 18:22:49 centOS7BasicForTest eshead[1213]: /etc/rc.d/init.d/eshead: line 10: `stop)&apos; 原来是语法错误下面的脚本后少了两个分号，也就是说，在 case 的每一个语句后面，都需要两个分号1echo &quot;please manual stop...&quot; 添加两个分号之后再次执行1234[root@centOS7BasicForTest init.d]# systemctl start esheadWarning: eshead.service changed on disk. Run &apos;systemctl daemon-reload&apos; to reload units.[root@centOS7BasicForTest init.d]# systemctl daemon-reload[root@centOS7BasicForTest init.d]# systemctl start eshead IK 分词器插件releaseswget https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.4.1/elasticsearch-analysis-ik-6.4.1.zip 123456789101112131415161718[utomcat@centOS7BasicForTest soft]$ /opt/elasticsearch-6.4.1/bin/elasticsearch-plugin install /home/utomcat/soft/elasticsearch-analysis-ik-6.4.1.zipA tool for managing installed elasticsearch pluginsCommands--------list - Lists installed elasticsearch pluginsinstall - Install a pluginremove - removes a plugin from ElasticsearchNon-option arguments:command Option Description ------ ----------- -h, --help show help -s, --silent show minimal output-v, --verbose show verbose outputERROR: Unknown plugin /home/utomcat/soft/elasticsearch-analysis-ik-6.4.1.zip 可以直接解压至 /opt/elasticsearch-6.4.1/plugins/ik 目录，然后重启 es。 换在线安装方式123456789101112[utomcat@centOS7BasicForTest soft]$ /opt/elasticsearch-6.4.1/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.4.1/elasticsearch-analysis-ik-6.4.1.zip-&gt; Downloading https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.4.1/elasticsearch-analysis-ik-6.4.1.zip[=================================================] 100% @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: plugin requires additional permissions @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@* java.net.SocketPermission * connect,resolveSee http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.htmlfor descriptions of what these permissions allow and the associated risks.Continue with installation? [y/N]y-&gt; Installed analysis-ik 5.6.1 的在线安装1234[utomcat@AndyCentOS7Basic ~]$ /opt/elasticsearch-5.6.1/bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.6.1/elasticsearch-analysis-ik-5.6.1.zip-&gt; Downloading https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.6.1/elasticsearch-analysis-ik-5.6.1.zip[=================================================] 100% -&gt; Installed analysis-ik 查看字典12345678910111213ll /opt/elasticsearch-6.4.1/config/analysis-ik/-rw-rw---- 1 utomcat gtomcat 5225922 Sep 14 14:59 extra_main.dic-rw-rw---- 1 utomcat gtomcat 63188 Sep 14 14:59 extra_single_word.dic-rw-rw---- 1 utomcat gtomcat 63188 Sep 14 14:59 extra_single_word_full.dic-rw-rw---- 1 utomcat gtomcat 10855 Sep 14 14:59 extra_single_word_low_freq.dic-rw-rw---- 1 utomcat gtomcat 156 Sep 14 14:59 extra_stopword.dic-rw-rw---- 1 utomcat gtomcat 625 Sep 14 14:59 IKAnalyzer.cfg.xml-rw-rw---- 1 utomcat gtomcat 3058510 Sep 14 14:59 main.dic-rw-rw---- 1 utomcat gtomcat 123 Sep 14 14:59 preposition.dic-rw-rw---- 1 utomcat gtomcat 1824 Sep 14 14:59 quantifier.dic-rw-rw---- 1 utomcat gtomcat 164 Sep 14 14:59 stopword.dic-rw-rw---- 1 utomcat gtomcat 192 Sep 14 14:59 suffix.dic-rw-rw---- 1 utomcat gtomcat 752 Sep 14 14:59 surname.dic 自定义词典，这个很重要123456789101112131415161718192021222324252627282930313233343536373839404142434445464748cd /opt/elasticsearch-6.4.1/config/analysis-ik/mkdir customvi custom/custom_word.dic# 根据业务添加自定义词组，在文件中添加词语即可， 每一个词语一行四中七中九中四系七系九系嘉祥师大德瑞嘉祥系师大系德瑞系成都锦江青羊金牛武侯成华龙泉驿青白江新都温江双流郫都郫县高新高新西天府新简阳锦江区青羊区金牛区武侯区成华区龙泉驿区青白江区新都区温江区双流县郫都区高新区高新西区天府新区简阳市 更新配置123456789101112131415cd /opt/elasticsearch-6.4.1/config/analysis-ik/vim IKAnalyzer.cfg.xml&lt;!DOCTYPE properties SYSTEM &quot;http://java.sun.com/dtd/properties.dtd&quot;&gt;&lt;properties&gt; &lt;comment&gt;IK Analyzer 扩展配置&lt;/comment&gt; &lt;!--用户可以在这里配置自己的扩展字典 --&gt; &lt;entry key=&quot;ext_dict&quot;&gt;custom/custom_word.dic&lt;/entry&gt; &lt;!--用户可以在这里配置自己的扩展停止词字典--&gt; &lt;entry key=&quot;ext_stopwords&quot;&gt;&lt;/entry&gt; &lt;!--用户可以在这里配置远程扩展字典 --&gt; &lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt; &lt;!--用户可以在这里配置远程扩展停止词字典--&gt; &lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;&lt;/properties&gt; 手动重启，会在日志里看到这样一行1... [Dict Loading] /opt/elasticsearch-6.4.1/config/analysis-ik/custom/custom_word.dic 说明已经加载自定义分词词组 热更新 IK 分词使用方法 参数：ik_max_word会将文本做最细粒度的拆分，会根据已有词典，穷尽各种可能的组合。http://192.168.1.91:5601123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081GET _analyze?pretty&#123; &quot;analyzer&quot;: &quot;ik_max_word&quot;, &quot;text&quot;:&quot;中华人民共和国国歌&quot;&#125;# 结果&#123; &quot;tokens&quot;: [ &#123; &quot;token&quot;: &quot;中华人民共和国&quot;, &quot;start_offset&quot;: 0, &quot;end_offset&quot;: 7, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 0 &#125;, &#123; &quot;token&quot;: &quot;中华人民&quot;, &quot;start_offset&quot;: 0, &quot;end_offset&quot;: 4, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 1 &#125;, &#123; &quot;token&quot;: &quot;中华&quot;, &quot;start_offset&quot;: 0, &quot;end_offset&quot;: 2, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 2 &#125;, &#123; &quot;token&quot;: &quot;华人&quot;, &quot;start_offset&quot;: 1, &quot;end_offset&quot;: 3, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 3 &#125;, &#123; &quot;token&quot;: &quot;人民共和国&quot;, &quot;start_offset&quot;: 2, &quot;end_offset&quot;: 7, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 4 &#125;, &#123; &quot;token&quot;: &quot;人民&quot;, &quot;start_offset&quot;: 2, &quot;end_offset&quot;: 4, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 5 &#125;, &#123; &quot;token&quot;: &quot;共和国&quot;, &quot;start_offset&quot;: 4, &quot;end_offset&quot;: 7, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 6 &#125;, &#123; &quot;token&quot;: &quot;共和&quot;, &quot;start_offset&quot;: 4, &quot;end_offset&quot;: 6, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 7 &#125;, &#123; &quot;token&quot;: &quot;国&quot;, &quot;start_offset&quot;: 6, &quot;end_offset&quot;: 7, &quot;type&quot;: &quot;CN_CHAR&quot;, &quot;position&quot;: 8 &#125;, &#123; &quot;token&quot;: &quot;国歌&quot;, &quot;start_offset&quot;: 7, &quot;end_offset&quot;: 9, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 9 &#125; ]&#125; 参数：ik_smart会做最粗粒度的拆分123456789101112131415161718192021222324GET _analyze?pretty&#123; &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;text&quot;:&quot;中华人民共和国国歌&quot;&#125;# 结果&#123; &quot;tokens&quot;: [ &#123; &quot;token&quot;: &quot;中华人民共和国&quot;, &quot;start_offset&quot;: 0, &quot;end_offset&quot;: 7, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 0 &#125;, &#123; &quot;token&quot;: &quot;国歌&quot;, &quot;start_offset&quot;: 7, &quot;end_offset&quot;: 9, &quot;type&quot;: &quot;CN_WORD&quot;, &quot;position&quot;: 1 &#125; ]&#125; 核心概念 ElasticSearch RDBMS 说明 索引（index） 数据库（database） 索引(index)是ElasticSearch存放具体数据的地方，是一类具有相似特征的文档的集合。ElasticSearch中索引的概念具有不同意思，这里的索引相当于关系数据库中的一个数据库实例。在ElasticSearch中索引还可以作为动词，表示对数据进行索引操作。 类型（type） 表（table） 在6.0之前的版本，一个ElasticSearch索引中，可以有多个类型；从6.0版本开始，一个ElasticSearch索引中，只有1个类型，警告！Type在6.0.0版本中已经不赞成使用。而且，7.0版本以后就完全抛弃type了。一个类型是索引的一个逻辑上的分类，通常具有一组相同字段的文档组成。ElasticSearch的类型概念相当于关系数据库的数据表。 文档（document） 行（row） 文档是ElasticSearch可被索引的基础逻辑单元，相当于关系数据库中数据表的一行数据。ElasticSearch的文档具有JSON格式，由多个字段组成，字段相当于关系数据库中列的概念。 Shard 当数据量较大时，索引的存储空间需求超出单个节点磁盘容量的限制，或者出现单个节点处理速度较慢。为了解决这些问题，ElasticSearch将索引中的数据进行切分成多个分片（shard），每个分片存储这个索引的一部分数据，分布在不同节点上。当需要查询索引时，ElasticSearch将查询发送到每个相关分片，之后将查询结果合并，这个过程对ElasticSearch应用来说是透明的，用户感知不到分片的存在。一个索引的分片一定指定，不再修改。 分片与备份 在ES中，索引会备份成分片，每个分片是独立的lucene索引，可以完成搜索分析存储等工作。 副本 其实，分片全称是主分片，简称为分片。主分片是相对于副本来说的，副本是对主分片的一个或多个复制版本（或称拷贝），这些复制版本（拷贝）可以称为复制分片，可以直接称之为副本。当主分片丢失时，集群可以将一个副本升级为新的主分片。 Node 与 Cluster Elastic 本质上是一个分布式数据库，允许多台服务器协同工作，每台服务器可以运行多个 Elastic 实例。单个 Elastic 实例称为一个节点（node）。一组节点构成一个集群（cluster）。 字段（field） 列（column） 映射（mapping） 表结构（schema） 全文索引 索引 查询DSL SQL GET select PUT/POST update DELETE delete 关于 Type 将会在 7.X 中弃用的原因official document–&gt; Removal of mapping types文末有移除 type 的计划，以及每个版本中的用法，很有参考价值：Schedule for removal of mapping typesElasticsearch 6.x Indices created in 5.x will continue to function in 6.x as they did in 5.x. Indices created in 6.x only allow a single-type per index. Any name can be used for the type, but there can be only one. The preferred type name is _doc, so that index APIs have the same path as they will have in 7.0: PUT {index}/_doc/{id} and POST {index}/_doc The _type name can no longer be combined with the _id to form the _uid field. The _uid field has become an alias for the _id field. New indices no longer support the old-style of parent/child and should use the join field instead. The default mapping type is deprecated. 移除原因，翻译：你知道的，为了搜索······ 我们一直认为ES中的“index”类似于关系型数据库的“database”，而“type”相当于一个数据表。ES的开发者们认为这是一个糟糕的认识。例如：关系型数据库中两个数据表示是独立的，即使他们里面有相同名称的列也不影响使用，但ES中不是这样的。 我们都知道elasticsearch是基于Lucene开发的搜索引擎，而ES中不同type下名称相同的filed最终在Lucene中的处理方式是一样的。举个例子，两个不同type下的两个user_name，在ES同一个索引下其实被认为是同一个filed，你必须在两个不同的type中定义相同的filed映射。否则，不同type中的相同字段名称就会在处理中出现冲突的情况，导致Lucene处理效率下降。 去掉type能够使数据存储在独立的index中，这样即使有相同的字段名称也不会出现冲突，就像ElasticSearch出现的第一句话一样“你知道的，为了搜索····”，去掉type就是为了提高ES处理数据的效率。 除此之外，在同一个索引的不同type下存储字段数不一样的实体会导致存储中出现稀疏数据，影响Lucene压缩文档的能力，导致ES查询效率的降低。 创建索引1234567891011121314151617181920212223242526272829303132[root@localhost ~]# curl -XPUT &quot;localhost:9210/test&quot; -d &apos;&#123; &quot;settings&quot;: &#123; &quot;analysis&quot;: &#123; &quot;analyzer&quot;: &#123; #配置分析器 &quot;csh_analyzer&quot;: &#123; #分析器的名字是csh_analyer,这个是系统没有的，我自己定义的一个，可以取一个不和已有的分析器重名的名字 &quot;type&quot;: &quot;standard&quot;, #这个分析器的类型是基于系统自带的标准的standard分析器 &quot;stopwords&quot;: &quot;_english_&quot; #禁用词，或者说无效词范围定义来自_english_列表 &#125; &#125; &#125;, index.mapping.single_type: true &#125;, &quot;mappings&quot;: &#123; &quot;user&quot;: &#123; #定义test索引下的一个type为user，注意，6.0 及以后，一个索引下只能有一个 type，7.0以后不会有 type &quot;properties&quot;: &#123; #开始定义这个type的属性值（也可以用fields） &quot;first_name&quot;: &#123; #字段名为first_name &quot;type&quot;: &quot;string&quot;, #数据类型为string &quot;analyzer&quot;: &quot;standard&quot; #分析器用系统默认的standard &#125;, &quot;last_name&quot;: &#123; #字段名字为last_name &quot;type&quot;: &quot;string&quot;, #字段类型为string &quot;analyzer&quot;: &quot;csh_analyzer&quot; #分析器为自定义的csh_analyzer &#125;, &quot;job&quot;: &#123; #字段名字为job &quot;type&quot;: &quot;string&quot;, #字段类型 &quot;analyzer&quot;: &quot;csh_analyzer&quot; #分析器为自定义的csh_analyzer &#125; &#125; &#125; &#125;&#125;&apos; 查询所有索引列表12[utomcat@hjweb01 esDemo]$ curl localhost:9200/_cat/indices green open pre-es-index uGcKbpOIT7e0l_TS5ShKsw 3 0 4308 15 4mb 4mb 检测集群是否健康12[utomcat@hjweb01 esDemo]$ curl localhost:9200/_cat/health1546583744 06:35:44 hjz-es-cluster green 1 1 3 3 0 0 0 0 - 100.0% 获取集群的节点列表12[utomcat@hjweb01 esDemo]$ curl localhost:9200/_cat/nodes127.0.0.1 23 89 3 0.57 0.14 0.09 mdi * hjz-es ElasticSearch 通过 kibana 简单操作 GET _cat/indices 列出所有索引 GET _cat/health 检测集群是否健康 GET _cat/nodes 获取集群的节点列表 查询1GET xunwu/_search 12345678910GET xunwu/_search&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;title&quot;: &#123; &quot;query&quot;: &quot;富力城&quot; &#125; &#125; &#125;&#125; 结果为空，因为还没有写入数据123456789101112131415&#123; &quot;took&quot;: 1, &quot;timed_out&quot;: false, &quot;_shards&quot;: &#123; &quot;total&quot;: 5, &quot;successful&quot;: 5, &quot;skipped&quot;: 0, &quot;failed&quot;: 0 &#125;, &quot;hits&quot;: &#123; &quot;total&quot;: 0, &quot;max_score&quot;: null, &quot;hits&quot;: [] &#125;&#125; ElasticSearch 默认不允许以 root 身份启动，建议创建一个专门的用户来运行以 root 身份启动，会报错1Exception in thread &quot;main&quot; Java.lang.RuntimeException: don&apos;t run elasticsearch as root. 解决办法，增加启动参数1./elasticsearch -Des.insecure.allow.root=true 或者修改启动文件 ElasticSearch，在 ES_JAVA_OPTS=&quot;${JVM_OPTIONS//\\$\\{ES_TMPDIR\\}/$ES_TMPDIR} $ES_JAVA_OPTS&quot; 前添加一行1ES_JAVA_OPTS=&quot;-Des.insecure.allow.root=true&quot; 如果某个字段内容非常多（比如一篇小说），或者查询业务只需要对该字段进行搜索，返回文档id，然后通过其他途径查看文档原文，则不需要保留_source元字段。可以通过禁用_source元字段，在ElasticSearch 中只存储倒排索引，不保留字段原始值。 通过 Kibana 的 Dev Tools 搜索12345678GET hjz-es-index-test/_search&#123; &quot;query&quot;: &#123; &quot;term&quot;: &#123; &quot;_id&quot;: &quot;20-62&quot; &#125; &#125;&#125; completion 类型的字段保存问题1Caused by: java.lang.IllegalArgumentException: unknown field name [customKey], must be one of [input, weight, contexts] Completion Suggester 12345The following parameters are supported:inputThe input to store, this can be an array of strings or just a string. This field is mandatory.weightA positive integer or a string containing a positive integer, which defines a weight and allows you to rank your suggestions. This field is optional. todo[x] Completion Suggester 可以被普通搜索吗？可以 查看内存、磁盘占用情况1234http://192.168.1.91:9200/_cat/nodes?v&amp;h=http,version,jdk,disk.total,disk.used,disk.avail,disk.used_percent,heap.current,heap.percent,heap.max,ram.current,ram.percent,ram.max,master---http version jdk disk.total disk.used disk.avail disk.used_percent heap.current heap.percent heap.max ram.current ram.percent ram.max master192.168.1.91:9200 6.4.1 1.8.0_171 9.9gb 8.8gb 1.1gb 88.50 475.1mb 47 990.7mb 7.1gb 95 7.5gb * 官网参考链接：cat nodes 123http://192.168.1.91:9200/_cat/allocation?vshards disk.indices disk.used disk.avail disk.total disk.percent host ip node 13 1.5mb 8.8gb 1.1gb 9.9gb 88 192.168.1.91 192.168.1.91 hjz-es 控制分析器 search_analyzer、analyzer 分析器主要有两种情况会被使用，一种是插入文档时，将text类型的字段做分词然后插入倒排索引，第二种就是在查询时，先对要查询的text类型的输入做分词，再去倒排索引搜索 如果想要让 索引 和 查询 时使用不同的分词器，ElasticSearch也是能支持的，只需要在字段上加上search_analyzer参数 在索引时，只会去看字段有没有定义analyzer，有定义的话就用定义的，没定义就用ES预设的 在查询时，会先去看字段有没有定义search_analyzer，如果没有定义，就去看有没有analyzer，再没有定义，才会去使用ES预设的 数据类型，定义 search_analyzer 为 ik_smart 而 analyzer 为 ik_max_word，这样不至于输入“郫都区”，去匹配“郫”、“都”和“区”，而是直接匹配“郫都区”,这三个字已经添加到自定义分词词库。 数据类型https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"ElasticSearch","slug":"CentOS/ElasticSearch","permalink":"https://www.lovesofttech.com/categories/CentOS/ElasticSearch/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/tags/ElasticSearch/"}]},{"title":"阿里云，建站产品比较","slug":"general/cloudProduct","date":"2018-09-30T16:00:00.000Z","updated":"2020-09-01T02:53:12.944Z","comments":true,"path":"general/cloudProduct.html","link":"","permalink":"https://www.lovesofttech.com/general/cloudProduct.html","excerpt":"reference","text":"reference产品名称 | 独享虚拟主机 | 轻量应用服务器 | 云服务器 :- | :- | :- | :-产品特点 | 每台独享虚机的 CPU内存、带宽、硬盘均为独享，具有独立 IP | 支持远程登录，包括SSH方式，远程桌面RDP方式 | 一个虚拟的计算环境，包含了 CPU、内存、操作系统、磁盘、带宽等最基础的服务器组件适用人群 | 独享资源，空间超大，可视化控制面板，预装网站环境，入门新手和小微企业建站首选 | 1. 需要一个快速进入开发状态的资源集合的个人项目开发者2. 需要创建个人应用（如个人博客，个人云盘等）技术业余爱好者、学生3. 搭建低要求、低可用性的网站环境及资源的中小企业用户·技术能力强的IT创业公司/互联网公司 | 1. 对服务器有大量资源需求的传统行业企业2. PaaS和SaaS的开发者和企业优势 | 1. 预装了常见的建站运行环境和数据库，不需要用户安装。2. 提供可视化的主机控制面板，各项功能能够通过点击鼠标就能完成;3. 不需要用户参与服务器运维，由产品整体负责维护，省事省心。·一键启动应用+服务器 | 1. 一站式管理应用，运维，各个集成产品的功能2. 丰富的应用3. 全产品线使用SSD存储，性能优异 | 1. 弹性扩容： 10 分钟内可启动或释放 100 台 ECS 实例；支持在线不停机升级带宽；5 分钟内停机升级 CPU 和内存。2. 可控性：拥有超级管理员的权限，能够完全控制 ECS 实例的操作系统，可以通过管理终端自助解决系统问题，并可以进行部署环境、安装软件等操作。劣势 | 1. 无登录服务器权限，无法对服务器或者运行环境配置做个性化定制。2. 只能用来建站，无法用做其他用途。 | 需要用户具体一定的服务器管理和运维知识 | 需要用户有较强的技术背景，且对云计算的使用需要有熟悉和了解的过程","categories":[],"tags":[]},{"title":"CentOS 7.5 查看 crontab 的日志","slug":"linux/centOS7CrontabLog","date":"2018-09-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.018Z","comments":true,"path":"linux/centOS7CrontabLog.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7CrontabLog.html","excerpt":"如题","text":"如题 查看定时任务的日志1tail -f /var/log/cron 任务 的 mail 日志查看最近的 crontab 执行情况1tail -f /var/spool/mail/root","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"schemas","slug":"CentOS/schemas","permalink":"https://www.lovesofttech.com/categories/CentOS/schemas/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"schemas","slug":"schemas","permalink":"https://www.lovesofttech.com/tags/schemas/"}]},{"title":"spring boot 阿里云发送邮件，使用 qq 邮箱的 SMTP 服务，端口由 25 换成 465","slug":"java/javaMailPort465","date":"2018-09-27T16:00:00.000Z","updated":"2020-09-01T02:53:12.983Z","comments":true,"path":"java/javaMailPort465.html","link":"","permalink":"https://www.lovesofttech.com/java/javaMailPort465.html","excerpt":"如题","text":"如题 生产环境遇到的问题使用端口 25 发送，在测试环境、本地开发环境都可正常发送，但是，发布到阿里云服务器上，提示无法连接到 smtp 服务器：123456789101112131415org.springframework.mail.MailSendException: Mail server connection failed; nested exception is com.sun.mail.util.MailConnectException: Couldn&apos;t connect to host, port: smtp.qq.com, 25; timeout 5000; nested exception is: java.net.SocketTimeoutException: connect timed out. Failed messages: com.sun.mail.util.MailConnectException: Couldn&apos;t connect to host, port: smtp.qq.com, 25; timeout 5000; nested exception is: java.net.SocketTimeoutException: connect timed out...Caused by: com.sun.mail.util.MailConnectException: Couldn&apos;t connect to host, port: smtp.qq.com, 25; timeout 5000 at com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:2118) ~[javax.mail-1.5.6.jar:1.5.6] at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:712) ~[javax.mail-1.5.6.jar:1.5.6] at javax.mail.Service.connect(Service.java:366) ~[javax.mail-1.5.6.jar:1.5.6] at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:501) ~[spring-context-support-4.3.14.RELEASE.jar:4.3.14.RELEASE] at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:421) ~[spring-context-support-4.3.14.RELEASE.jar:4.3.14.RELEASE] ... 68 moreCaused by: java.net.SocketTimeoutException: connect timed out... 经查，原来，阿里云服务器基于安全考虑，默认禁用了 25 端口。官方是这么说的出于安全考虑，阿里云默认封禁TCP 25端口出方向的访问流量，即你无法在阿里云上的云服务器通过TCP 25端口连接外部地址。 TCP 25端口的出方向封禁可能影响您通过TCP 25 端口连接第三方邮件服务商的SMTP服务器对外部发送邮件。如果您需要使用阿里云上的云服务器对外部发送邮件，建议您使用阿里云邮产品或者使用第三方邮件服务商提供的465端口。 如果存在特殊场景，您必须在云服务器上使用TCP 25端口进行对外连接，请在安全管控平台中提交25端口解封申请。… 按照官方的提示，登录阿里云，提交申请，但是还是被拒绝了（审核不通过），理由如下： 不支持本机25端口解封，建议您尝试使用外部邮件服务商的465加密端口，或者查询所访问发信服务是否提供其它SMTP端口。如果使用的是阿里企邮或邮件推送，支持80和465端口发送，请将25更换为80端口。 于是，尝试使用 465 加密端口，问题得以解决，只是配置略有不同而已，其实很简单。 以下重点说一下，spring boot 项目，25 端口与 465 端口配置的不同。 spring boot 项目，发送邮件，服务配置直接在 application.yml 配置即可 application.yml 配置项，使用端口 25123456789101112131415161718spring: mail: host: smtp.qq.com port: 25 username: 1614923608@qq.com password: # qq 邮箱配置的密码，非邮箱登录密码，在邮箱开启 smtp 的设置处配置，需要绑定手机并发短信才能设置 defaultEncoding: UTF-8 protocol: smtp properties: mail: smtp: connectiontimeout: 5000 timeout: 3000 writetimeout: 5000 auth: true starttls: enable: true required: true 使用 465 的配置，与使用 25 端口的配置项，略有不同123456789101112131415161718192021spring: mail: host: smtp.qq.com username: 1614923608@qq.com password: # qq 邮箱配置的密码，非邮箱登录密码，在邮箱开启 smtp 的设置处配置，需要绑定手机并发短信才能设置 defaultEncoding: UTF-8 properties: mail: smtp: connectiontimeout: 5000 timeout: 3000 writetimeout: 5000 auth: true ssl: trust: smtp.qq.com socketFactory: class: javax.net.ssl.SSLSocketFactory port: 465 starttls: enable: true required: true","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"JavaMail","slug":"java/JavaMail","permalink":"https://www.lovesofttech.com/categories/java/JavaMail/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"JavaMail","slug":"JavaMail","permalink":"https://www.lovesofttech.com/tags/JavaMail/"}]},{"title":"BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录","slug":"java/elasticSearchProject","date":"2018-09-26T16:00:00.000Z","updated":"2020-09-01T02:53:12.976Z","comments":true,"path":"java/elasticSearchProject.html","link":"","permalink":"https://www.lovesofttech.com/java/elasticSearchProject.html","excerpt":"偏重搭建开发环境，github 上有项目源代码，用关键词xunwu很容易搜索到。ElasticSearch 版本 5.6.1。","text":"偏重搭建开发环境，github 上有项目源代码，用关键词xunwu很容易搜索到。ElasticSearch 版本 5.6.1。 安装 mysql 并将 xunwu.sql 数据导入 安装 ElasticSearch（version=5.6.1），设置集群名称为 xunwu-es，并安装 elasticsearch-analysis-ik 插件，启动es（如果需要使用 head，需要在配置文件中设置跨域） 安装 kafka（http://kafka.apache.org） 启动并创建 xunwu_topic 主题 安装 zookeeper (http://zookeeper.apache.org) 启动 向 http://localhost:9200/xunwu 发送 json 请求，请求内容为 xunwu-web/src/main/resources/db/house_index_with_suggest_mapping.json 安装 redis 并启动 启动 ElasticSearch后台启动:1/opt/elasticsearch-5.6.1/bin/elasticsearch -d 启动 kibana1nohup /opt/kibana-5.6.1-linux-x86_64/bin/kibana &amp; 访问 kibana 通过 kibana 向 es 发送 json 请求123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103PUT xunwu&#123; &quot;settings&quot;: &#123; &quot;number_of_replicas&quot;: 0, &quot;number_of_shards&quot;: 5, &quot;index.store.type&quot;: &quot;niofs&quot;, &quot;index.query.default_field&quot;: &quot;title&quot;, &quot;index.unassigned.node_left.delayed_timeout&quot;: &quot;5m&quot; &#125;, &quot;mappings&quot;: &#123; &quot;house&quot;: &#123; &quot;dynamic&quot;: &quot;strict&quot;, &quot;_all&quot;:&#123; &quot;enabled&quot;: false &#125;, &quot;properties&quot;: &#123; &quot;houseId&quot;: &#123; &quot;type&quot;: &quot;long&quot; &#125;, &quot;title&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: &quot;analyzed&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;price&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;area&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;createTime&quot;: &#123; &quot;type&quot;: &quot;date&quot;, &quot;format&quot;: &quot;strict_date_optional_time||epoch_millis&quot; &#125;, &quot;lastUpdateTime&quot;: &#123; &quot;type&quot;: &quot;date&quot;, &quot;format&quot;: &quot;strict_date_optional_time||epoch_millis&quot; &#125;, &quot;cityEnName&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;regionEnName&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;direction&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;distanceToSubway&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;subwayLineName&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;subwayStationName&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;tags&quot;: &#123; &quot;type&quot;: &quot;text&quot; &#125;, &quot;street&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;district&quot;: &#123; &quot;type&quot;: &quot;keyword&quot; &#125;, &quot;description&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: &quot;analyzed&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;layoutDesc&quot; : &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: &quot;analyzed&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;traffic&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: &quot;analyzed&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;roundService&quot;: &#123; &quot;type&quot;: &quot;text&quot;, &quot;index&quot;: &quot;analyzed&quot;, &quot;analyzer&quot;: &quot;ik_smart&quot;, &quot;search_analyzer&quot;: &quot;ik_smart&quot; &#125;, &quot;rentWay&quot;: &#123; &quot;type&quot;: &quot;integer&quot; &#125;, &quot;suggest&quot;:&#123; &quot;type&quot;: &quot;completion&quot; &#125;, &quot;location&quot;:&#123; &quot;type&quot;: &quot;geo_point&quot; &#125; &#125; &#125; &#125;&#125; 以上脚本如果在 ElasticSearch 6.X 执行，会报错123456789101112131415161718192021&#123; &quot;error&quot;: &#123; &quot;root_cause&quot;: [ &#123; &quot;type&quot;: &quot;mapper_parsing_exception&quot;, &quot;reason&quot;: &quot;Failed to parse mapping [house]: Could not convert [roundService.index] to boolean&quot; &#125; ], &quot;type&quot;: &quot;mapper_parsing_exception&quot;, &quot;reason&quot;: &quot;Failed to parse mapping [house]: Could not convert [roundService.index] to boolean&quot;, &quot;caused_by&quot;: &#123; &quot;type&quot;: &quot;illegal_argument_exception&quot;, &quot;reason&quot;: &quot;Could not convert [roundService.index] to boolean&quot;, &quot;caused_by&quot;: &#123; &quot;type&quot;: &quot;illegal_argument_exception&quot;, &quot;reason&quot;: &quot;Failed to parse value [analyzed] as only [true] or [false] are allowed.&quot; &#125; &#125; &#125;, &quot;status&quot;: 400&#125; 把上面的请求数据中的analyzed改为true即可。 提交之后，返回数据如下：123456#! Deprecation: [_all] is deprecated in 6.0+ and will be removed in 7.0. As a replacement, you can use [copy_to] on mapping fields to create your own catch all field.&#123; &quot;acknowledged&quot;: true, &quot;shards_acknowledged&quot;: true, &quot;index&quot;: &quot;xunwu&quot;&#125; 原因 ElasticSearch 6.X 的 index 只能是 true 或 false mapping parameters 中的 index 只能接收一个 bool 值，true 或者 false 这是 6.X 的新变化。 之前的版本 1234index分析:analyzed(默认)not_analyzedno start server启动 zookeeper/home/utomcat/soft/zookeeper-3.4.12/bin/zkServer.sh start &amp;123456# cp /home/utomcat/soft/zookeeper-3.4.12/conf/zoo_sample.cfg /home/utomcat/soft/zookeeper-3.4.12/conf/zoo.cfg# /home/utomcat/soft/zookeeper-3.4.12/bin/zkServer.sh start[utomcat@AndyCentOS7Basic conf]$ /home/utomcat/soft/zookeeper-3.4.12/bin/zkServer.sh startZooKeeper JMX enabled by defaultUsing config: /home/utomcat/soft/zookeeper-3.4.12/bin/../conf/zoo.cfgStarting zookeeper ... STARTED 也可以用 kafka 自带的启动脚本启动 zookeeper 启动/home/utomcat/soft/kafka_2.11-2.0.0/bin/zookeeper-server-start.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/zookeeper.properties &amp; 启动 kafka/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-server-start.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/server.properties &amp;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431# /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-server-start.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/server.properties &amp;[utomcat@AndyCentOS7Basic bin]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-server-start.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/server.properties &amp;[1] 2242[utomcat@AndyCentOS7Basic bin]$ [2018-09-20 15:59:26,257] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)[2018-09-20 15:59:26,492] INFO starting (kafka.server.KafkaServer)[2018-09-20 15:59:26,493] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)[2018-09-20 15:59:26,507] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)[2018-09-20 15:59:26,548] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:host.name=223.87.179.191 (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.version=1.8.0_161 (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.home=/usr/jdk1.8.0_161/jre (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.class.path=/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/activation-1.1.1.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/argparse4j-0.7.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/audience-annotations-0.5.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/commons-lang3-3.5.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-api-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-basic-auth-extension-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-file-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-json-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-runtime-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/connect-transforms-2.0.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/guava-20.0.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/hk2-api-2.5.0-b42.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/home/utomcat/soft/kafka_2.11-2.0.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/home/utomcat/soft/kafka_2.11-2.)[2018-09-20 15:59:26,548] INFO Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:java.compiler=&lt;NA&gt; (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:os.version=3.10.0-862.2.3.el7.x86_64 (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:user.name=utomcat (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,548] INFO Client environment:user.home=/home/utomcat (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,549] INFO Client environment:user.dir=/home/utomcat/soft/kafka_2.11-2.0.0/bin (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,549] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@3febb011 (org.apache.zookeeper.ZooKeeper)[2018-09-20 15:59:26,565] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)[2018-09-20 15:59:26,567] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)[2018-09-20 15:59:26,568] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)[2018-09-20 15:59:26,587] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x10004c56b230000, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)[2018-09-20 15:59:26,589] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)[2018-09-20 15:59:26,830] INFO Cluster ID = 9HOtQ4rMRmqdD5tTso0oqw (kafka.server.KafkaServer)[2018-09-20 15:59:26,834] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)[2018-09-20 15:59:26,879] INFO KafkaConfig values: advertised.host.name = null advertised.listeners = null advertised.port = null alter.config.policy.class.name = null alter.log.dirs.replication.quota.window.num = 11 alter.log.dirs.replication.quota.window.size.seconds = 1 authorizer.class.name = auto.create.topics.enable = true auto.leader.rebalance.enable = true background.threads = 10 broker.id = 0 broker.id.generation.enable = true broker.rack = null client.quota.callback.class = null compression.type = producer connections.max.idle.ms = 600000 controlled.shutdown.enable = true controlled.shutdown.max.retries = 3 controlled.shutdown.retry.backoff.ms = 5000 controller.socket.timeout.ms = 30000 create.topic.policy.class.name = null default.replication.factor = 1 delegation.token.expiry.check.interval.ms = 3600000 delegation.token.expiry.time.ms = 86400000 delegation.token.master.key = null delegation.token.max.lifetime.ms = 604800000 delete.records.purgatory.purge.interval.requests = 1 delete.topic.enable = true fetch.purgatory.purge.interval.requests = 1000 group.initial.rebalance.delay.ms = 0 group.max.session.timeout.ms = 300000 group.min.session.timeout.ms = 6000 host.name = inter.broker.listener.name = null inter.broker.protocol.version = 2.0-IV1 leader.imbalance.check.interval.seconds = 300 leader.imbalance.per.broker.percentage = 10 listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL listeners = null log.cleaner.backoff.ms = 15000 log.cleaner.dedupe.buffer.size = 134217728 log.cleaner.delete.retention.ms = 86400000 log.cleaner.enable = true log.cleaner.io.buffer.load.factor = 0.9 log.cleaner.io.buffer.size = 524288 log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308 log.cleaner.min.cleanable.ratio = 0.5 log.cleaner.min.compaction.lag.ms = 0 log.cleaner.threads = 1 log.cleanup.policy = [delete] log.dir = /tmp/kafka-logs log.dirs = /tmp/kafka-logs log.flush.interval.messages = 9223372036854775807 log.flush.interval.ms = null log.flush.offset.checkpoint.interval.ms = 60000 log.flush.scheduler.interval.ms = 9223372036854775807 log.flush.start.offset.checkpoint.interval.ms = 60000 log.index.interval.bytes = 4096 log.index.size.max.bytes = 10485760 log.message.downconversion.enable = true log.message.format.version = 2.0-IV1 log.message.timestamp.difference.max.ms = 9223372036854775807 log.message.timestamp.type = CreateTime log.preallocate = false log.retention.bytes = -1 log.retention.check.interval.ms = 300000 log.retention.hours = 168 log.retention.minutes = null log.retention.ms = null log.roll.hours = 168 log.roll.jitter.hours = 0 log.roll.jitter.ms = null log.roll.ms = null log.segment.bytes = 1073741824 log.segment.delete.delay.ms = 60000 max.connections.per.ip = 2147483647 max.connections.per.ip.overrides = max.incremental.fetch.session.cache.slots = 1000 message.max.bytes = 1000012 metric.reporters = [] metrics.num.samples = 2 metrics.recording.level = INFO metrics.sample.window.ms = 30000 min.insync.replicas = 1 num.io.threads = 8 num.network.threads = 3 num.partitions = 1 num.recovery.threads.per.data.dir = 1 num.replica.alter.log.dirs.threads = null num.replica.fetchers = 1 offset.metadata.max.bytes = 4096 offsets.commit.required.acks = -1 offsets.commit.timeout.ms = 5000 offsets.load.buffer.size = 5242880 offsets.retention.check.interval.ms = 600000 offsets.retention.minutes = 10080 offsets.topic.compression.codec = 0 offsets.topic.num.partitions = 50 offsets.topic.replication.factor = 1 offsets.topic.segment.bytes = 104857600 password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding password.encoder.iterations = 4096 password.encoder.key.length = 128 password.encoder.keyfactory.algorithm = null password.encoder.old.secret = null password.encoder.secret = null port = 9092 principal.builder.class = null producer.purgatory.purge.interval.requests = 1000 queued.max.request.bytes = -1 queued.max.requests = 500 quota.consumer.default = 9223372036854775807 quota.producer.default = 9223372036854775807 quota.window.num = 11 quota.window.size.seconds = 1 replica.fetch.backoff.ms = 1000 replica.fetch.max.bytes = 1048576 replica.fetch.min.bytes = 1 replica.fetch.response.max.bytes = 10485760 replica.fetch.wait.max.ms = 500 replica.high.watermark.checkpoint.interval.ms = 5000 replica.lag.time.max.ms = 10000 replica.socket.receive.buffer.bytes = 65536 replica.socket.timeout.ms = 30000 replication.quota.window.num = 11 replication.quota.window.size.seconds = 1 request.timeout.ms = 30000 reserved.broker.max.id = 1000 sasl.client.callback.handler.class = null sasl.enabled.mechanisms = [GSSAPI] sasl.jaas.config = null sasl.kerberos.kinit.cmd = /usr/bin/kinit sasl.kerberos.min.time.before.relogin = 60000 sasl.kerberos.principal.to.local.rules = [DEFAULT] sasl.kerberos.service.name = null sasl.kerberos.ticket.renew.jitter = 0.05 sasl.kerberos.ticket.renew.window.factor = 0.8 sasl.login.callback.handler.class = null sasl.login.class = null sasl.login.refresh.buffer.seconds = 300 sasl.login.refresh.min.period.seconds = 60 sasl.login.refresh.window.factor = 0.8 sasl.login.refresh.window.jitter = 0.05 sasl.mechanism.inter.broker.protocol = GSSAPI sasl.server.callback.handler.class = null security.inter.broker.protocol = PLAINTEXT socket.receive.buffer.bytes = 102400 socket.request.max.bytes = 104857600 socket.send.buffer.bytes = 102400 ssl.cipher.suites = [] ssl.client.auth = none ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1] ssl.endpoint.identification.algorithm = https ssl.key.password = null ssl.keymanager.algorithm = SunX509 ssl.keystore.location = null ssl.keystore.password = null ssl.keystore.type = JKS ssl.protocol = TLS ssl.provider = null ssl.secure.random.implementation = null ssl.trustmanager.algorithm = PKIX ssl.truststore.location = null ssl.truststore.password = null ssl.truststore.type = JKS transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000 transaction.max.timeout.ms = 900000 transaction.remove.expired.transaction.cleanup.interval.ms = 3600000 transaction.state.log.load.buffer.size = 5242880 transaction.state.log.min.isr = 1 transaction.state.log.num.partitions = 50 transaction.state.log.replication.factor = 1 transaction.state.log.segment.bytes = 104857600 transactional.id.expiration.ms = 604800000 unclean.leader.election.enable = false zookeeper.connect = localhost:2181 zookeeper.connection.timeout.ms = 6000 zookeeper.max.in.flight.requests = 10 zookeeper.session.timeout.ms = 6000 zookeeper.set.acl = false zookeeper.sync.time.ms = 2000 (kafka.server.KafkaConfig)[2018-09-20 15:59:26,886] INFO KafkaConfig values: advertised.host.name = null advertised.listeners = null advertised.port = null alter.config.policy.class.name = null alter.log.dirs.replication.quota.window.num = 11 alter.log.dirs.replication.quota.window.size.seconds = 1 authorizer.class.name = auto.create.topics.enable = true auto.leader.rebalance.enable = true background.threads = 10 broker.id = 0 broker.id.generation.enable = true broker.rack = null client.quota.callback.class = null compression.type = producer connections.max.idle.ms = 600000 controlled.shutdown.enable = true controlled.shutdown.max.retries = 3 controlled.shutdown.retry.backoff.ms = 5000 controller.socket.timeout.ms = 30000 create.topic.policy.class.name = null default.replication.factor = 1 delegation.token.expiry.check.interval.ms = 3600000 delegation.token.expiry.time.ms = 86400000 delegation.token.master.key = null delegation.token.max.lifetime.ms = 604800000 delete.records.purgatory.purge.interval.requests = 1 delete.topic.enable = true fetch.purgatory.purge.interval.requests = 1000 group.initial.rebalance.delay.ms = 0 group.max.session.timeout.ms = 300000 group.min.session.timeout.ms = 6000 host.name = inter.broker.listener.name = null inter.broker.protocol.version = 2.0-IV1 leader.imbalance.check.interval.seconds = 300 leader.imbalance.per.broker.percentage = 10 listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL listeners = null log.cleaner.backoff.ms = 15000 log.cleaner.dedupe.buffer.size = 134217728 log.cleaner.delete.retention.ms = 86400000 log.cleaner.enable = true log.cleaner.io.buffer.load.factor = 0.9 log.cleaner.io.buffer.size = 524288 log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308 log.cleaner.min.cleanable.ratio = 0.5 log.cleaner.min.compaction.lag.ms = 0 log.cleaner.threads = 1 log.cleanup.policy = [delete] log.dir = /tmp/kafka-logs log.dirs = /tmp/kafka-logs log.flush.interval.messages = 9223372036854775807 log.flush.interval.ms = null log.flush.offset.checkpoint.interval.ms = 60000 log.flush.scheduler.interval.ms = 9223372036854775807 log.flush.start.offset.checkpoint.interval.ms = 60000 log.index.interval.bytes = 4096 log.index.size.max.bytes = 10485760 log.message.downconversion.enable = true log.message.format.version = 2.0-IV1 log.message.timestamp.difference.max.ms = 9223372036854775807 log.message.timestamp.type = CreateTime log.preallocate = false log.retention.bytes = -1 log.retention.check.interval.ms = 300000 log.retention.hours = 168 log.retention.minutes = null log.retention.ms = null log.roll.hours = 168 log.roll.jitter.hours = 0 log.roll.jitter.ms = null log.roll.ms = null log.segment.bytes = 1073741824 log.segment.delete.delay.ms = 60000 max.connections.per.ip = 2147483647 max.connections.per.ip.overrides = max.incremental.fetch.session.cache.slots = 1000 message.max.bytes = 1000012 metric.reporters = [] metrics.num.samples = 2 metrics.recording.level = INFO metrics.sample.window.ms = 30000 min.insync.replicas = 1 num.io.threads = 8 num.network.threads = 3 num.partitions = 1 num.recovery.threads.per.data.dir = 1 num.replica.alter.log.dirs.threads = null num.replica.fetchers = 1 offset.metadata.max.bytes = 4096 offsets.commit.required.acks = -1 offsets.commit.timeout.ms = 5000 offsets.load.buffer.size = 5242880 offsets.retention.check.interval.ms = 600000 offsets.retention.minutes = 10080 offsets.topic.compression.codec = 0 offsets.topic.num.partitions = 50 offsets.topic.replication.factor = 1 offsets.topic.segment.bytes = 104857600 password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding password.encoder.iterations = 4096 password.encoder.key.length = 128 password.encoder.keyfactory.algorithm = null password.encoder.old.secret = null password.encoder.secret = null port = 9092 principal.builder.class = null producer.purgatory.purge.interval.requests = 1000 queued.max.request.bytes = -1 queued.max.requests = 500 quota.consumer.default = 9223372036854775807 quota.producer.default = 9223372036854775807 quota.window.num = 11 quota.window.size.seconds = 1 replica.fetch.backoff.ms = 1000 replica.fetch.max.bytes = 1048576 replica.fetch.min.bytes = 1 replica.fetch.response.max.bytes = 10485760 replica.fetch.wait.max.ms = 500 replica.high.watermark.checkpoint.interval.ms = 5000 replica.lag.time.max.ms = 10000 replica.socket.receive.buffer.bytes = 65536 replica.socket.timeout.ms = 30000 replication.quota.window.num = 11 replication.quota.window.size.seconds = 1 request.timeout.ms = 30000 reserved.broker.max.id = 1000 sasl.client.callback.handler.class = null sasl.enabled.mechanisms = [GSSAPI] sasl.jaas.config = null sasl.kerberos.kinit.cmd = /usr/bin/kinit sasl.kerberos.min.time.before.relogin = 60000 sasl.kerberos.principal.to.local.rules = [DEFAULT] sasl.kerberos.service.name = null sasl.kerberos.ticket.renew.jitter = 0.05 sasl.kerberos.ticket.renew.window.factor = 0.8 sasl.login.callback.handler.class = null sasl.login.class = null sasl.login.refresh.buffer.seconds = 300 sasl.login.refresh.min.period.seconds = 60 sasl.login.refresh.window.factor = 0.8 sasl.login.refresh.window.jitter = 0.05 sasl.mechanism.inter.broker.protocol = GSSAPI sasl.server.callback.handler.class = null security.inter.broker.protocol = PLAINTEXT socket.receive.buffer.bytes = 102400 socket.request.max.bytes = 104857600 socket.send.buffer.bytes = 102400 ssl.cipher.suites = [] ssl.client.auth = none ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1] ssl.endpoint.identification.algorithm = https ssl.key.password = null ssl.keymanager.algorithm = SunX509 ssl.keystore.location = null ssl.keystore.password = null ssl.keystore.type = JKS ssl.protocol = TLS ssl.provider = null ssl.secure.random.implementation = null ssl.trustmanager.algorithm = PKIX ssl.truststore.location = null ssl.truststore.password = null ssl.truststore.type = JKS transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000 transaction.max.timeout.ms = 900000 transaction.remove.expired.transaction.cleanup.interval.ms = 3600000 transaction.state.log.load.buffer.size = 5242880 transaction.state.log.min.isr = 1 transaction.state.log.num.partitions = 50 transaction.state.log.replication.factor = 1 transaction.state.log.segment.bytes = 104857600 transactional.id.expiration.ms = 604800000 unclean.leader.election.enable = false zookeeper.connect = localhost:2181 zookeeper.connection.timeout.ms = 6000 zookeeper.max.in.flight.requests = 10 zookeeper.session.timeout.ms = 6000 zookeeper.set.acl = false zookeeper.sync.time.ms = 2000 (kafka.server.KafkaConfig)[2018-09-20 15:59:26,914] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)[2018-09-20 15:59:26,915] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)[2018-09-20 15:59:26,916] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)[2018-09-20 15:59:26,953] INFO Log directory /tmp/kafka-logs not found, creating it. (kafka.log.LogManager)[2018-09-20 15:59:26,965] INFO Loading logs. (kafka.log.LogManager)[2018-09-20 15:59:26,972] INFO Logs loading complete in 7 ms. (kafka.log.LogManager)[2018-09-20 15:59:26,983] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)[2018-09-20 15:59:26,984] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)[2018-09-20 15:59:27,365] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)[2018-09-20 15:59:27,387] INFO [SocketServer brokerId=0] Started 1 acceptor threads (kafka.network.SocketServer)[2018-09-20 15:59:27,415] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,419] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,423] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,426] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)[2018-09-20 15:59:27,455] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)[2018-09-20 15:59:27,460] INFO Result of znode creation at /brokers/ids/0 is: OK (kafka.zk.KafkaZkClient)[2018-09-20 15:59:27,461] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(223.87.179.191,9092,ListenerName(PLAINTEXT),PLAINTEXT)) (kafka.zk.KafkaZkClient)[2018-09-20 15:59:27,462] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)[2018-09-20 15:59:27,500] INFO Creating /controller (is it secure? false) (kafka.zk.KafkaZkClient)[2018-09-20 15:59:27,505] INFO Result of znode creation at /controller is: OK (kafka.zk.KafkaZkClient)[2018-09-20 15:59:27,512] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,513] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,533] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)[2018-09-20 15:59:27,543] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)[2018-09-20 15:59:27,543] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)[2018-09-20 15:59:27,545] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)[2018-09-20 15:59:27,554] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:0,blockEndProducerId:999) by writing to Zk with path version 1 (kafka.coordinator.transaction.ProducerIdManager)[2018-09-20 15:59:27,568] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)[2018-09-20 15:59:27,582] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)[2018-09-20 15:59:27,595] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)[2018-09-20 15:59:27,618] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)[2018-09-20 15:59:27,641] INFO [SocketServer brokerId=0] Started processors for 1 acceptors (kafka.network.SocketServer)[2018-09-20 15:59:27,642] INFO Kafka version : 2.0.0 (org.apache.kafka.common.utils.AppInfoParser)[2018-09-20 15:59:27,642] INFO Kafka commitId : 3402a8361b734732 (org.apache.kafka.common.utils.AppInfoParser)[2018-09-20 15:59:27,643] INFO [KafkaServer id=0] started (kafka.server.KafkaServer) 启动第二个 broker/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-server-start.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/server02.properties &amp; 停止/home/utomcat/soft/kafka_2.11-2.0.0/bin//kafka-server-stop.sh /home/utomcat/soft/kafka_2.11-2.0.0/config/server.properties 查看 kafka 的 topic列出该zookeeper中记录在案的topic列表，只有名字1/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --list --zookeeper 127.0.0.1:2181 创建 topic/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic xunwu_topic123[utomcat@AndyCentOS7Basic conf]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic xunwu_topicWARNING: Due to limitations in metric names, topics with a period (&apos;.&apos;) or underscore (&apos;_&apos;) could collide. To avoid issues it is best to use either, but not both.Created topic &quot;xunwu_topic&quot;. /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic house_build123[utomcat@AndyCentOS7Basic ~]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic house_buildWARNING: Due to limitations in metric names, topics with a period (&apos;.&apos;) or underscore (&apos;_&apos;) could collide. To avoid issues it is best to use either, but not both.Created topic &quot;house_build&quot;. kafka 查看 Topic 的分区和副本情况/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --describe --zookeeper 127.0.0.1:2181 --topic xunwu_topic123[utomcat@AndyCentOS7Basic ~]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --describe --zookeeper 127.0.0.1:2181 --topic xunwu_topicTopic:xunwu_topic PartitionCount:1 ReplicationFactor:1 Configs: Topic: xunwu_topic Partition: 0 Leader: 0 Replicas: 0 Isr: 0 删除 topic/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --delete --zookeeper localhost:2181 --topic house_build123[utomcat@AndyCentOS7Basic ~]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-topics.sh --delete --zookeeper localhost:2181 --topic house_buildTopic house_build is marked for deletion.Note: This will have no impact if delete.topic.enable is not set to true. 监听出错 12345# spring boot 项目提示：Error while fetching metadata with correlation id 28 : &#123;xunwu_topic=LEADER_NOT_AVAILABLE&#125;# kafka 服务提示：[2018-09-26 08:43:37,312] ERROR [KafkaApi-0] Number of alive brokers &apos;0&apos; does not meet the required replication factor &apos;1&apos; for the offsets topic (configured via &apos;offsets.topic.replication.factor&apos;). This error can be ignored if the cluster is starting up and not all brokers are up yet. (kafka.server.KafkaApis) 解决修改配置 vi config/server.properties 1listeners=PLAINTEXT://localhost:9092 测试发消息/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-console-producer.sh --broker-list localhost:9092 --topic xunwu_topic 报错如下 1[2018-09-27 15:26:06,053] WARN [Producer clientId=console-producer] Error while fetching metadata with correlation id 38 : &#123;xunwu_topic=LEADER_NOT_AVAILABLE&#125; (org.apache.kafka.clients.NetworkClient) 解决修改配置 vi config/server.properties 1listeners=PLAINTEXT://localhost:9092 重点如果配置里写的是具体的 IP 地址，则要把 localhost 也换成具体的 IP 地址，否则会报同样的错误。 测试消费消息/home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic xunwu_topic --from-beginning --consumer.config /home/utomcat/soft/kafka_2.11-2.0.0/config/consumer.properties123[utomcat@AndyCentOS7Basic ~]$ /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic xunwu_topic --from-beginning --consumer.config /home/utomcat/soft/kafka_2.11-2.0.0/config/consumer.properties[2018-09-27 16:59:28,169] WARN [Consumer clientId=consumer-1, groupId=test-consumer-group] Connection to node -1 could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient)[2018-09-27 16:59:28,227] WARN [Consumer clientId=consumer-1, groupId=test-consumer-group] Connection to node -1 could not be established. Broker may not be available. (org.apache.kafka.clients.NetworkClient) /home/utomcat/soft/kafka_2.11-2.0.0/bin/kafka-console-consumer.sh --bootstrap-server 192.168.1.88:9092 --topic xunwu_topic --from-beginning --consumer.config /home/utomcat/soft/kafka_2.11-2.0.0/config/consumer.properties redis参考redis Download4.0.11 下载 &amp; 编译安装1234http://download.redis.io/releases/redis-4.0.11.tar.gztar -xzvf redis-4.0.11.tar.gzcd redis-4.0.11make MALLOC=libc make MALLOC=libc 命令执行完成编译后，会在src目录下生成6个可执行文件，分别是redis-server、redis-cli、redis-benchmark、redis-check-aof、redis-check-rdb、redis-sentinel 以 utomcat 操作，会因为权限问题报错 12345678[utomcat@AndyCentOS7Basic redis-4.0.11]$ cd src &amp;&amp; make install CC Makefile.depHint: It&apos;s a good idea to run &apos;make test&apos; ;) INSTALL installinstall: cannot create regular file ‘/usr/local/bin/redis-server’: Permission deniedmake: *** [install] Error 1 以下，以 root 身份操作 123456789[root@AndyCentOS7Basic redis-4.0.11]# cd src &amp;&amp; make installHint: It&apos;s a good idea to run &apos;make test&apos; ;) INSTALL install INSTALL install INSTALL install INSTALL install INSTALL install 启动 redis 以 root 的身份运行/home/utomcat/soft/redis-4.0.11/src/redis-server /home/utomcat/soft/redis-4.0.11/redis.conf1234[root@AndyCentOS7Basic src]# /home/utomcat/soft/redis-4.0.11/src/redis-server /home/utomcat/soft/redis-4.0.11/redis.conf7229:C 20 Sep 18:18:54.104 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo7229:C 20 Sep 18:18:54.104 # Redis version=4.0.11, bits=64, commit=00000000, modified=0, pid=7229, just started7229:C 20 Sep 18:18:54.104 # Configuration loaded 开启远程连接12# bind 127.0.0.1 改为bind 0.0.0.0 重启生效 停止1/home/utomcat/soft/redis-4.0.11/src/redis-cli shutdown 查看进程123[root@AndyCentOS7Basic src]# ps -aux | grep redisroot 7230 0.1 0.0 141836 2040 ? Ssl 18:18 0:02 /home/utomcat/soft/redis-4.0.11/src/redis-server 127.0.0.1:6379root 8961 0.0 0.0 112704 976 pts/2 S+ 18:54 0:00 grep --color=auto redis 更新房源报错123452018-09-26 07:48:18.055 ERROR 18272 --- [io-8080-exec-10] o.s.k.support.LoggingProducerListener : Exception thrown when sending a message with key=&apos;null&apos; and payload=&apos;&#123;&quot;houseId&quot;:21,&quot;operation&quot;:&quot;index&quot;,&quot;retry&quot;:0&#125;&apos; to topic xunwu_topic:org.apache.kafka.common.errors.TimeoutException: Failed to update metadata after 60000 ms....2018-09-26 07:48:18.055 DEBUG 18272 --- [io-8080-exec-10] org.hibernate.SQL : update house set admin_id=?, area=?, bathroom=?, build_year=?, city_en_name=?, cover=?, create_time=?, direction=?, distance_to_subway=?, district=?, floor=?, last_update_time=?, parlour=?, price=?, region_en_name=?, room=?, status=?, street=?, title=?, total_floor=?, watch_times=? where id=?2018-09-26 07:49:05.722 ERROR 18272 --- [nio-8080-exec-2] o.s.k.support.LoggingProducerListener : Exception thrown when sending a message with key=&apos;null&apos; and payload=&apos;&#123;&quot;houseId&quot;:21,&quot;operation&quot;:&quot;index&quot;,&quot;retry&quot;:0&#125;&apos; to topic xunwu_topic: house_build 已经被删除的情况12018-09-27 16:06:13.342 ERROR 9804 --- [nio-8080-exec-3] o.s.k.support.LoggingProducerListener : Exception thrown when sending a message with key=&apos;null&apos; and payload=&apos;&#123;&quot;houseId&quot;:20,&quot;operation&quot;:&quot;remove&quot;,&quot;retry&quot;:0&#125;&apos; to topic house_build: 综合以上，topic 不存在和存在都报同样的错误，可能推测，topic 存在的时候也报错，应该是访问不到 kafka 服务，当然，如果 kafka 没有启动，或者出现故障，也会导致这个错误。 解决12# vi server.propertieslisteners=PLAINTEXT://192.168.1.88:9092 这样，就可以在项目里配置成 IP 来访问 kafka 了。 但是，在修改监听 IP 地址之前，该配置是注释状态的情况下，提示1[2018-09-26 08:43:37,312] ERROR [KafkaApi-0] Number of alive brokers &apos;0&apos; does not meet the required replication factor &apos;1&apos; for the offsets topic (configured via &apos;offsets.topic.replication.factor&apos;). This error can be ignored if the cluster is starting up and not all brokers are up yet. (kafka.server.KafkaApis) 会让人误解，是可以连接 kafka 服务的。 modelmapperofficial website 搜索实践1234轻工作娱松轻娱松满b轻松bb足娱娱娱轻娱松乐aaa消工作娱工作娱娱轻工作松娱工作费abc轻工作娱松轻娱松满足娱娱娱轻娱松乐aaa消工作娱工作娱娱轻工作松娱工作费abc含【轻松】、【满足】即可查询到 搜索结果：houseID=21 分词simple 分词器 https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-simple-analyzer.html 如何使用: http://www.yiibai.com/lucene/lucene_simpleanalyzer.html 功能强于WhitespaceAnalyzer, 首先会通过非字母字符来分割文本信息，然后将词汇单元统一为小写形式。该分析器会去掉数字类型的字符 whitespace 分词器 https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-whitespace-analyzer.html 如何使用：http://www.yiibai.com/lucene/lucene_whitespaceanalyzer.html 仅仅是去除空格，对字符没有lowcase化,不支持中文； 并且不对生成的词汇单元进行其他的规范化处理。 仅用空格分词，不会去掉数字。","categories":[{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/categories/ElasticSearch/"}],"tags":[{"name":"ElasticSearch","slug":"ElasticSearch","permalink":"https://www.lovesofttech.com/tags/ElasticSearch/"}]},{"title":"spring boot，404，502 错误转向定制页面","slug":"java/sprintBootWhitelabelErrorPage","date":"2018-08-16T16:00:00.000Z","updated":"2020-09-01T02:53:12.996Z","comments":true,"path":"java/sprintBootWhitelabelErrorPage.html","link":"","permalink":"https://www.lovesofttech.com/java/sprintBootWhitelabelErrorPage.html","excerpt":"如题","text":"如题 123456Whitelabel Error PageThis application has no explicit mapping for /error, so you are seeing this as a fallback.Wed Aug 15 14:29:58 CST 2018There was an unexpected error (type=Not Found, status=404).No message available 添加一个 Controller，代码如下123456789101112131415161718192021222324252627282930313233package domain.controller;import org.springframework.boot.autoconfigure.web.ErrorController;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpServletRequest;@Controllerpublic class SiteErrorController implements ErrorController &#123; @RequestMapping(\"/error\") public String handleError(HttpServletRequest request) &#123; //获取statusCode:401,404,500 Integer statusCode = (Integer) request.getAttribute(\"javax.servlet.error.status_code\"); switch (statusCode) &#123; case 401: case 403: case 404: return \"/404\"; case 500: case 502: return \"/502\"; default: return \"/502\"; &#125; &#125; @Override public String getErrorPath() &#123; return \"/error\"; &#125;&#125;","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"},{"name":"404","slug":"spring/java/404","permalink":"https://www.lovesofttech.com/categories/spring/java/404/"},{"name":"502","slug":"spring/java/404/502","permalink":"https://www.lovesofttech.com/categories/spring/java/404/502/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"},{"name":"404","slug":"404","permalink":"https://www.lovesofttech.com/tags/404/"},{"name":"502","slug":"502","permalink":"https://www.lovesofttech.com/tags/502/"}]},{"title":"linux 内存占用情况查询","slug":"linux/centOSMemory","date":"2018-08-14T16:00:00.000Z","updated":"2020-09-01T02:53:13.035Z","comments":true,"path":"linux/centOSMemory.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSMemory.html","excerpt":"如题","text":"如题 linux ps 命令的结果中 VSZ，RSS，STAT 的含义和大小 参数名 含义 单位 USER 进程所属用户 PID 进程ID %CPU 进程占用CPU百分比 %MEM 进程占用内存百分比 VSZ 虚拟内存占用大小 单位：kb（killobytes） RSS 实际内存占用大小 单位：kb（killobytes） TTY 终端类型 STAT 进程状态 START 进程启动时刻 TIME 进程运行时长 COMMAND 启动进程的命令 按占用内存由高到低排序1ps auxw|head -1;ps auxw|sort -rn -k4|head -40 查看 utomcat 运行的 java 程序1ps aux|head -1; ps aux | grep java | grep utomcat | sort -k4nr | head -10 示例12345678[root@hjweb01 script]# ps aux|head -1; ps aux | grep java | grep utomcat | sort -k4nr | head -10USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 13545 1.6 14.4 3571532 562676 pts/1 Sl 13:31 0:45 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 13777 1.5 14.0 3565988 544356 pts/5 Sl 13:34 0:41 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/pre/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/pre/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/pre/backend/schedule/temp org.apache.catalina.startup.Bootstrap startutomcat 32454 0.3 13.8 3563932 535848 ? Sl 10:21 0:54 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 22929 0.1 13.5 3593488 524296 ? Sl Jul24 2:02 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 13981 1.5 13.3 3563932 519680 pts/1 Sl 13:36 0:40 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 15263 0.1 6.6 3568036 259860 ? Sl Jul19 12:08 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/backend/schedule/temp org.apache.catalina.startup.Bootstrap start 查看 elasticsearch 内存占用1ps aux|head -1; ps aux | grep elasticsearch | sort -k4nr | head -10 查看 php 进程内存占用情况1ps aux|head -1; ps aux | grep php-fpm | sort -k4nr | head -10 查看 utomcat 运行的 java 程序，同时程序目录带 pre1ps aux|head -1; ps aux | grep java | grep utomcat | grep pre | sort -k4nr | head -10 示例12345678910111213[root@hjweb01 script]# ps aux|head -1; ps aux | grep java | grep utomcat | grep pre | sort -k4nr | head -10 USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 21006 20.8 8.4 2923740 326200 pts/9 Sl 15:05 0:35 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms350M -Xmx350M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 20706 10.7 8.3 2923740 325332 pts/5 Sl 15:02 0:36 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms350M -Xmx350M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 21273 70.5 7.2 2823004 282968 pts/10 Sl 15:07 0:30 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms250M -Xmx250M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/pre/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/pre/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/pre/backend/schedule/temp org.apache.catalina.startup.Bootstrap start# -v 是不显示匹配上的内容[utomcat@hjweb01 ~]$ ps aux|head -1; ps aux | grep java | grep utomcat | grep -v pre | sort -k4nr | head -10USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 24909 0.1 15.6 3635036 608380 ? Sl Jul25 4:00 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 24722 0.0 13.6 3571100 530576 ? Sl Jul25 2:36 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 15263 0.1 6.7 3568036 263564 ? Sl Jul19 15:52 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/backend/schedule/temp org.apache.catalina.startup.Bootstrap startutomcat 31221 0.0 0.0 112708 972 pts/0 S+ 14:22 0:00 grep --color=auto java 查看内存占用的更多参数1ps -e -o &apos;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&apos; | grep java | sort -nrk5 rsz 为实际内存占用，示例如下123456789[root@hjweb01 script]# ps -e -o &apos;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&apos; | grep java | sort -nrk513545 java /usr/jdk1.8.0_181/bin/java 2.1 562456 3569484 13:31 utomcat 100113777 java /usr/jdk1.8.0_181/bin/java 2.0 543828 3565988 13:34 utomcat 100132454 java /usr/jdk1.8.0_181/bin/java 0.3 535532 3563932 10:21 utomcat 100122929 java /usr/jdk1.8.0_181/bin/java 0.1 524296 3593488 Jul24 utomcat 100113981 java /usr/jdk1.8.0_181/bin/java 2.1 519696 3563932 13:36 utomcat 100115263 java /usr/jdk1.8.0_181/bin/java 0.1 259860 3568036 Jul19 utomcat 1001 8454 java /usr/local/cloudmonitor/jre 0.4 72252 2522436 Jul18 root 016264 grep grep --color=auto java 0.0 972 112708 14:06 root 0 只看需要了解的参数，可调整参数列表1ps -e -o &apos;pid,comm,rsz,rss,user&apos; | grep java | sort -nrk5 示例12345678[root@hjweb01 script]# ps -e -o &apos;pid,comm,rsz,rss,user&apos; | grep java | sort -nrk5 8454 java 72252 root32454 java 535596 utomcat22929 java 524296 utomcat15263 java 259860 utomcat13981 java 519680 utomcat13777 java 544028 utomcat13545 java 562440 utomcat 内存的整体使用情况1234[root@hjweb01 script]# free -m total used free shared buff/cache availableMem: 3790 2618 446 0 726 931Swap: 0 0 0 top 命令查看内存使用情况输入 top 之后，再按 m 键12345678910111213top - 16:39:15 up 7 days, 22:33, 12 users, load average: 0.02, 0.05, 0.05Tasks: 119 total, 1 running, 118 sleeping, 0 stopped, 0 zombie%Cpu(s): 1.5 us, 0.3 sy, 0.0 ni, 98.2 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 stKiB Mem : 75.6/3881692 [||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| ]KiB Swap: 0.0/0 [ ] PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 8454 root 20 0 2522436 72500 2724 S 1.3 1.9 49:36.58 java 14569 unginx 20 0 341748 17380 3332 S 0.7 0.4 0:13.04 php-fpm 574 unginx 20 0 342432 15616 3400 S 0.3 0.4 0:16.23 php-fpm 12413 root 20 0 150832 3112 1724 S 0.3 0.1 0:00.28 sshd 28174 root 20 0 157748 2196 1540 R 0.3 0.1 0:00.01 top ...","categories":[{"name":"linux 内存占用","slug":"linux-内存占用","permalink":"https://www.lovesofttech.com/categories/linux-内存占用/"}],"tags":[{"name":"linux 内存占用","slug":"linux-内存占用","permalink":"https://www.lovesofttech.com/tags/linux-内存占用/"}]},{"title":"JIRA 精选插件","slug":"general/JIRAExperience","date":"2018-07-25T16:00:00.000Z","updated":"2020-09-01T02:53:12.940Z","comments":true,"path":"general/JIRAExperience.html","link":"","permalink":"https://www.lovesofttech.com/general/JIRAExperience.html","excerpt":"JIRA 是一款非常棒的产品，本文所列插件也都非常棒，如果喜欢，请支持正版。 非常抱歉，本文在我安装 JIRA 插件的时候，记录得有一点凌乱，因为没有及时整理，所以部分内容可能不全或者已经过时，大家将就看一下。 本文参考了网上的文章，感谢原作者。本人仅成功安装 JIRA，没有测试 Confluence，不过应该是类似的。","text":"JIRA 是一款非常棒的产品，本文所列插件也都非常棒，如果喜欢，请支持正版。 非常抱歉，本文在我安装 JIRA 插件的时候，记录得有一点凌乱，因为没有及时整理，所以部分内容可能不全或者已经过时，大家将就看一下。 本文参考了网上的文章，感谢原作者。本人仅成功安装 JIRA，没有测试 Confluence，不过应该是类似的。 了解 JIRA Jira Software 备选产品-了解位于敏捷团队软件开发工具榜首的 Jira Software 如何与竞品较量 jira 视频教程 Jira使用手册 Jenkins 集成和使用JIRA Bug跟踪管理工具 科学使用参考文章 jira插件破解步骤 JIRA（6.x/7.x）与Confluence（6.x）反编译破解方法 idea-multimarkdown 破解 jira 科学使用方法，请覆盖/opt/atlassian/jira/atlassian-jira/WEB-INF/atlassian-bundled-plugins/下的同名文件后重启服务，完成破解。亲测版本 jira Core/jira SoftWare 7.3.4，jira servicedesk 3.4.1，其他版本请自行测试。 Confluence 科学使用方法，请覆盖/opt/atlassian/confluence/confluence/WEB-INF/atlassian-bundled-plugins的同名文件后重启服务，完成破解。亲测版本 Confluence 6.1.1,其他版本请自行测试。 插件安装教程 先安装要付费的插件，再使用科学使用方法。 jira 科学使用方法，请覆盖/opt/atlassian/jira/atlassian-jira/WEB-INF/atlassian-bundled-plugins下的同名文件后重启服务。 Confluence 科学使用方法，请覆盖/opt/atlassian/confluence/confluence/WEB-INF/atlassian-bundled-plugins的同名文件后重启服务，完成破解。 jira 和 Confluence的通用插件管理器是通用的,覆盖的时候请注意版本号，仅保留最后一个版本就行，之前的老版本请删除。 另外需要注意，请不要再利用系统自带的更新去更新插件管理器，否则会导致所有的插件破解都会失效。 12345678910# jirasudo service jira stop sudo rm -rf /opt/atlassian/jira/atlassian-jira/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.21.jarsudo cp ~/atlassian-universal-plugin-manager-plugin-2.22.2.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/atlassian-bundled-pluginssudo service jira start # confluencesudo rm -rf /opt/atlassian/confluence/confluence/WEB-INF/atlassian-bundled-plugins/atlassian-universal-plugin-manager-plugin-2.22.1.jarsudo cp ~/atlassian-universal-plugin-manager-plugin-2.22.2.jar /opt/atlassian/confluence/confluence/WEB-INF/atlassian-bundled-pluginssudo service confluence restart 以下为插件注册码备用，也许并不适合你，或者已经过时，这是我当时注册时用到的。Jira精选App系列之-测试管理：synapseRT1234567AAABNw0ODAoPeNqFkU9rg0AQxe/7KRYKvSnRGCoBocF4aMif1tieepnKaLfoup3dDfXbd42WlhLIYWBhZt77zdubIxi+sQ0PIj6Ll4toGc15ui54OAtitrftG9KhetZIOvECtkZdklBGdDLRvQSlMS+4xzeCgD+teIHa8Fue46cVhC1K87rk2QkaC8MOSwnPjzUYTAYLb3bnBRFLO2mgNHtoMTHUE1ZC4n3dgmj8smuZK7/uwpo6q/wPZ+arxtZC+hOEfzRABimpoNH4I5ft3P5FvV8k17Z4Xd+piROOw40oUWp8cZkMAiFzNtKgBFli9qUE9X/Oi71gzg5UgxR6NGz7IS12zPaJK28buMF5GC+uQ7g4kRQJPYFsR5DLnlOz6BWeY00Pu12Wpw+rLXu0VL6Dxv+/8A3nYLQtMCwCFE80+5skzo6gZ4Oj62ol7gN1m9OlAhQ4LhnWjBiU6NW4o1TEXDob/ouRbA==X02fj ZAPIAUTOMATION &amp; CI Enhance the testing experience by integrating with automation tools like Selenium, continuous integration tools like Bamboo or Jenkins using RESTful APIs in ZAPI, the Add-on to Zephyr for Jira.123456AAABGA0ODAoPeNptUMFqg0AUvO9XCD0rbqokCEKD8ZCgJtS0h9LLq33GBV2Xt2uo+fquSUpL8bCwOzM7M+89lGCc3dA6PHAWfhT4URg6yeZoH3zFiqH7QNrXLxpJxy5nG9QVCWVEL+O39WH7HjnpGdoBJoQlhNfLBgzGk4HrL10esqSXBipTQIexoZGwFhKfTh2I1qv67odPcwvMCn4zLD0ga0WFUuOrbTVhC2Z/SoMSZIXplxI0/qmwcnnArItnGvz0LqiakbwLKOGVBsggxTW0GtmeTiCFvsV0404QsDItYnvcjFuvx+WSs+wWPZ9yJ4+jwuuwyT7P0+dku87mC6AtTYqExttcsyK7GXG+Cw4DVQ1o/L/hbwPGmngwLQIVAITQYwRytZDXElZT7gN1ah9zeddcAhRkTJSQgrUhcfuytSmZDpB0OCi+9w==X02ea Zephyr for JiraZephyr for Jira - Test Management1234567AAABKg0ODAoPeNqNkMtqwzAQRff6CkHXNlHikgcYGmwvEmyn5NFF6Waqjh0VWzYjOdT9+spJSkvJoguBGM3VuZy7HVi+7iouAi7EIpguJnMexXs+HokZk03t2yO++Z/YHnvy39EHadUJQ0sdsryrX5E2xcEgmdATLEYjSbVWNTp8Pkd40RBfr7ZL7vE9Gssz0FBijdq+LHhygqqDYZ1FhOdLDBbDAe6Npp64Z1GjrWPmUA/QnrBQGh/KGlTlu3rf70nmBjcXfhiX0pWSqA0+ucrDbMxcUlvUoCUmH62i/leFmSeCWxZ2FsgihQVUBtmGStDKXCB1v1YEbJfkoTteKtxPkyCYs/QC/jfDKUJqSZmr7Wt+37d4thFtsizZRqtlyh47kkcw+FfeF5hiofkwLAIUT9sVfkxlOtLAC8DXvGfg3iZOnT8CFCNkbOfs8PJJwKW6AotAnzEy9FAOX02eu Capture for JIRACapture for JIRA 版本 2.9.17.291700032123456AAABHw0ODAoPeNptkEFrg0AQhe/7KxZ6aQ8G3do2BIQG9RBJtCS2p14mMqYLusrsbqj/vmtMmlJyGBiY976ZN3elRZ7ZhouQi2ARBovHkMdJyYUfzFlu2z1SUb9rJB15AUtQVyR7IzsVxdAbS8jrjni22i75/Q7piPTwueDpERoLo4zFhKcmAYPRSPX8F088sbhTBiqTQ4uRoYGwlgpfDy3IZlZ1Ldt3qpaEM1QGqSepR5nFiy/dOOFN43X3ZLiAdgbIoaIaGo2skRUqjR8u2KgUzPHcJgWqwvS7lzT8OXjuiZAVdAAl9URuh0wSsF2aR668dSD85zCc+2w9cW8jzsNy6PGUOy42m3Qbr5br3ytdNHk8R32zVH2Bxv+v+wECBZMdMCwCFBf/szlxaLBgshBg4KjH4+kmgo1EAhRnrJt6WwpSrYtuTTNYv9anSZlu2Q==X02ei Capture 功能特点1.持续反馈◆ 快速复制工程师越快重现bug，就可以更快的解决问题。Capture for JIRA可记录标准变量，例如URL、浏览器信息、屏幕分辨率，Capture for JIRA也可记录其他任何的产品团队需要的与应用有关的具体信息。 ◆ 即时截屏为了使报表过程更加高效，在每次缺陷提交时，Capture for JIRA自动捕捉当前网页屏幕截图。为已存在缺陷添加额外的屏幕截图，以便提交更详细的信息。 ◆ 有意义的注释如果一张图可以胜过千字的解释效果，那么一张有注释的截图的效果就会胜过百万字的效果。通过JIRA Capture，你可以快速高亮问题区域，模糊敏感的细节，加注释，增加将要做的事情。所有的这些通过浏览器就可以便捷地实现。◆ 可适应的工作流每个团队对于产品测试都有独一无二的价值观。通过允许团队创建和分享预定义字段的自定义模板，Capture for JIRA使得每个组织都能够针对特定测试需求来改善产品。 2.探索性测试◆ 协同测试将探索性测试提升到一个新的层次。在团队中测试可以使您定位更多问题，交付更好的产品。Capture for JIRA通过发动团队力量来记录所有会话细节以实现快速的问题重现。◆ 自动记录Capture for JIRA透明化测试流程。它可以记录所有的情况、截图和测试会话中提出的问题。按照问题、项目或者个人快速浏览和筛选所有的测试回话活动。◆ 量的增长敏捷开发所追求的就是不断成长。Capture for JIRA通过提供每个版本的数量、类型和bug源的报告来帮助敏捷开发团队提升产品质量。 适用人群◆ 团队团队中每个成员都要对产品质量负责，Capture for JIRA为项目的所有利益相关者而设计，无论是产品负责人、开发人员、设计师、质量工程师以及用户都可以通过快速提出详细问题而使产品质量得到提升。◆ 开发人员Capture for JIRA为开发人员提供完整的bug报告，其中包括所有必需的信息使得开发人员能够快速重现任何bug。开发人员还可以自定义Capture for JIRA使其自动收集他们需要的关于应用程序特定的信息。◆ 设计师设计师在产品的用户体验上倾尽全力，他们可以提出被别的团队成员忽视的一些问题。Capture for JIRA 允许设计师与工程师团队更加有效的沟通，这是一种多赢的方式。 ◆ 质量工程师质量工程师可以从用户角度对产品的各个方面提出反馈，因此他们的地位举足轻重。Capture for JIRA使质量工程师在任何项目中进行敏捷开发，并快速提出基于用户体验的内容丰富的反馈。 ◆ 所有人最成功的公司会注重他们自己的产品以保证在发现问题和提高产品质量时，团队成员能够全身心投入。Capture for JIRA让团队中的任何人都可以十分便捷的随时随地提出意见和反馈。 Capture 相关链接 安装好后的帮助页面（请修改你的服务器IP和端口号）：http://192.168.1.91:8080/secure/BonfireGettingStarted.jspa https://zephyrdocs.atlassian.net/wiki/spaces/CAPTURE/pages/166068285/Working+with+Sessions https://zephyrdocs.atlassian.net/wiki/spaces/CAPTURE/pages/166068275/Capture+for+JIRA+User+Guide http://www.unlimax.com/jira-capture.html JIRA 是一款非常棒的产品，本文所列插件也都非常棒，如果喜欢，请支持正版。","categories":[{"name":"jira","slug":"jira","permalink":"https://www.lovesofttech.com/categories/jira/"},{"name":"experience","slug":"jira/experience","permalink":"https://www.lovesofttech.com/categories/jira/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"jira","slug":"jira","permalink":"https://www.lovesofttech.com/tags/jira/"}]},{"title":"Tomcat 占用内存以及 jvm 参数设置","slug":"java/javaMemory","date":"2018-07-24T16:00:00.000Z","updated":"2020-09-01T02:53:12.984Z","comments":true,"path":"java/javaMemory.html","link":"","permalink":"https://www.lovesofttech.com/java/javaMemory.html","excerpt":"如题","text":"如题 linux ps 命令的结果中 VSZ，RSS，STAT 的含义和大小 参数名 含义 单位 USER 进程所属用户 PID 进程ID %CPU 进程占用CPU百分比 %MEM 进程占用内存百分比 VSZ 虚拟内存占用大小 单位：kb（killobytes） RSS 实际内存占用大小 单位：kb（killobytes） TTY 终端类型 STAT 进程状态 START 进程启动时刻 TIME 进程运行时长 COMMAND 启动进程的命令 查看 utomcat 运行的 java 程序1ps aux|head -1; ps aux | grep java | grep utomcat | sort -k4nr | head -10 示例12345678[root@hjweb01 script]# ps aux|head -1; ps aux | grep java | grep utomcat | sort -k4nr | head -10USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 13545 1.6 14.4 3571532 562676 pts/1 Sl 13:31 0:45 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 13777 1.5 14.0 3565988 544356 pts/5 Sl 13:34 0:41 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/pre/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/pre/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/pre/backend/schedule/temp org.apache.catalina.startup.Bootstrap startutomcat 32454 0.3 13.8 3563932 535848 ? Sl 10:21 0:54 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 22929 0.1 13.5 3593488 524296 ? Sl Jul24 2:02 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 13981 1.5 13.3 3563932 519680 pts/1 Sl 13:36 0:40 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 15263 0.1 6.6 3568036 259860 ? Sl Jul19 12:08 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/backend/schedule/temp org.apache.catalina.startup.Bootstrap start 查看 utomcat 运行的 java 程序，同时程序目录带 pre1ps aux|head -1; ps aux | grep java | grep utomcat | grep pre | sort -k4nr | head -10 示例12345678910111213[root@hjweb01 script]# ps aux|head -1; ps aux | grep java | grep utomcat | grep pre | sort -k4nr | head -10 USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 21006 20.8 8.4 2923740 326200 pts/9 Sl 15:05 0:35 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms350M -Xmx350M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 20706 10.7 8.3 2923740 325332 pts/5 Sl 15:02 0:36 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms350M -Xmx350M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/pre/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/pre/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/pre/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 21273 70.5 7.2 2823004 282968 pts/10 Sl 15:07 0:30 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/pre/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -server -Xms250M -Xmx250M -Xss512k -XX:+AggressiveOpts -XX:+UseBiasedLocking -XX:+DisableExplicitGC -XX:MaxTenuringThreshold=15 -XX:+UseConcMarkSweepGC -XX:+UseParNewGC -XX:+CMSParallelRemarkEnabled -XX:LargePageSizeInBytes=128m -XX:+UseFastAccessorMethods -XX:+UseCMSInitiatingOccupancyOnly -Djava.awt.headless=true -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/pre/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/pre/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/pre/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/pre/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/pre/backend/schedule/temp org.apache.catalina.startup.Bootstrap start# -v 是不显示匹配上的内容[utomcat@hjweb01 ~]$ ps aux|head -1; ps aux | grep java | grep utomcat | grep -v pre | sort -k4nr | head -10USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDutomcat 24909 0.1 15.6 3635036 608380 ? Sl Jul25 4:00 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web2/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web2/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web2/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web2 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web2 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web2/temp org.apache.catalina.startup.Bootstrap startutomcat 24722 0.0 13.6 3571100 530576 ? Sl Jul25 2:36 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/webLoadBalance/web1/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/webLoadBalance/web1/bin/bootstrap.jar:/home/utomcat/tomcat/webLoadBalance/web1/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/webLoadBalance/web1 -Dcatalina.home=/home/utomcat/tomcat/webLoadBalance/web1 -Djava.io.tmpdir=/home/utomcat/tomcat/webLoadBalance/web1/temp org.apache.catalina.startup.Bootstrap startutomcat 15263 0.1 6.7 3568036 263564 ? Sl Jul19 15:52 /usr/jdk1.8.0_181/bin/java -Djava.util.logging.config.file=/home/utomcat/tomcat/backend/schedule/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize=2048 -Djava.protocol.handler.pkgs=org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK=0027 -Dignore.endorsed.dirs= -classpath /home/utomcat/tomcat/backend/schedule/bin/bootstrap.jar:/home/utomcat/tomcat/backend/schedule/bin/tomcat-juli.jar -Dcatalina.base=/home/utomcat/tomcat/backend/schedule -Dcatalina.home=/home/utomcat/tomcat/backend/schedule -Djava.io.tmpdir=/home/utomcat/tomcat/backend/schedule/temp org.apache.catalina.startup.Bootstrap startutomcat 31221 0.0 0.0 112708 972 pts/0 S+ 14:22 0:00 grep --color=auto java 查看更多参数1ps -e -o &apos;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&apos; | grep java | sort -nrk5 rsz 为实际内存占用，示例如下123456789[root@hjweb01 script]# ps -e -o &apos;pid,comm,args,pcpu,rsz,vsz,stime,user,uid&apos; | grep java | sort -nrk513545 java /usr/jdk1.8.0_181/bin/java 2.1 562456 3569484 13:31 utomcat 100113777 java /usr/jdk1.8.0_181/bin/java 2.0 543828 3565988 13:34 utomcat 100132454 java /usr/jdk1.8.0_181/bin/java 0.3 535532 3563932 10:21 utomcat 100122929 java /usr/jdk1.8.0_181/bin/java 0.1 524296 3593488 Jul24 utomcat 100113981 java /usr/jdk1.8.0_181/bin/java 2.1 519696 3563932 13:36 utomcat 100115263 java /usr/jdk1.8.0_181/bin/java 0.1 259860 3568036 Jul19 utomcat 1001 8454 java /usr/local/cloudmonitor/jre 0.4 72252 2522436 Jul18 root 016264 grep grep --color=auto java 0.0 972 112708 14:06 root 0 只看需要了解的参数，可调整参数列表1ps -e -o &apos;pid,comm,rsz,rss,user&apos; | grep java | sort -nrk5 示例12345678[root@hjweb01 script]# ps -e -o &apos;pid,comm,rsz,rss,user&apos; | grep java | sort -nrk5 8454 java 72252 root32454 java 535596 utomcat22929 java 524296 utomcat15263 java 259860 utomcat13981 java 519680 utomcat13777 java 544028 utomcat13545 java 562440 utomcat 内存的整体使用情况1234[root@hjweb01 script]# free -m total used free shared buff/cache availableMem: 3790 2618 446 0 726 931Swap: 0 0 0 top 命令查看内存使用情况输入 top 之后，再按 m 键12345678910111213top - 16:39:15 up 7 days, 22:33, 12 users, load average: 0.02, 0.05, 0.05Tasks: 119 total, 1 running, 118 sleeping, 0 stopped, 0 zombie%Cpu(s): 1.5 us, 0.3 sy, 0.0 ni, 98.2 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 stKiB Mem : 75.6/3881692 [||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||| ]KiB Swap: 0.0/0 [ ] PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 8454 root 20 0 2522436 72500 2724 S 1.3 1.9 49:36.58 java 14569 unginx 20 0 341748 17380 3332 S 0.7 0.4 0:13.04 php-fpm 574 unginx 20 0 342432 15616 3400 S 0.3 0.4 0:16.23 php-fpm 12413 root 20 0 150832 3112 1724 S 0.3 0.1 0:00.28 sshd 28174 root 20 0 157748 2196 1540 R 0.3 0.1 0:00.01 top ... 基于 tomcat 的调优参考tomcat 8 9 性能 优化 调优 centos 7 linux不要单纯为了调优而去调优，应该有针对性的去发现不足，解决问题，以提高性能。所以，调优的前提是做好各种监控分析，包括服务器基础资源使用、各个应用运行状况、代码质量、数据库状况、等等，根据业务的并发，服务器资源，以及存在的问题，有针对性的去优化。 性能的提升，主要从以下几个方面入手 架构调优 负载均衡，高可用，nginx + tomcat 动静分离，容器化 等， 不具体阐述 代码调优 代码编写规范。 pmd 、findbug、sonar 等工具，检测问题，并优化。 不具体阐述。 tomcat 连接数，线程数，缓存，修改server.xml打开被注释的默认连接池配置默认配置：1234&lt;!-- &lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot; maxThreads=&quot;150&quot; minSpareThreads=&quot;4&quot;/&gt; --&gt; 修改实例：12345&lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot; maxThreads=&quot;150&quot; minSpareThreads=&quot;100&quot; prestartminSpareThreads=&quot;true&quot; maxQueueSize=&quot;100&quot;/&gt; 参数讲解：123456name: 线程名称namePrefix: 线程前缀maxThreads : 最大并发连接数，不配置时默认200，一般建议设置500~ 800 ，要根据自己的硬件设施条件和实际业务需求而定。minSpareThreads：Tomcat启动初始化的线程数，默认值25 prestartminSpareThreads：在tomcat初始化的时候就初始化minSpareThreads的值， 不设置trueminSpareThreads 的值就没啥效果了 。maxQueueSize: 最大的等待队列数，超过则拒绝请求 修改连接配置123&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt; 改为：12345678910111213connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; executor=&quot;tomcatThreadPool&quot; enableLookups=&quot;false&quot; maxIdleTime=&quot;60000&quot; acceptCount=&quot;100&quot; maxPostSize=&quot;10485760&quot; acceptorThreadCount=&quot;2&quot; disableUploadTimeout=&quot;true&quot; URIEncoding=&quot;utf-8&quot; keepAliveTimeout =&quot;6000&quot; maxKeppAliveRequests=&quot;500&quot; /&gt; 参数讲解：1234567891011port：连接端口。 protocol：连接器使用的传输方式。 executor： 连接器使用的线程池名称enableLookups：禁用DNS 查询maxIdleTime：线程空闲时间，超过该时间后，空闲线程会被销毁，默认值为6000（1分钟），单位毫秒。acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理，默认设置 100 。maxPostSize：限制 以FORM URL 参数方式的POST请求的内容大小，单位字节，默认是 2097152(2兆)，10485760 为 10M。如果要禁用限制，则可以设置为 -1。acceptorThreadCount： 用于接收连接的线程的数量，默认值是1。一般这个指需要改动的时候是因为该服务器是一个多核CPU，如果是多核 CPU 一般配置为 2。disableUploadTimeOut：允许Servlet容器，正在执行使用一个较长的连接超时值，以使Servlet有较长的时间来完成它的执行，默认值为falsekeepAliveTimeout - 表示在下次请求过来之前，tomcat保持该连接多久。这就是说假如客户端不断有请求过来，且未超过过期时间，则该连接将一直保持。maxKeepAliveRequests -表示该连接最大支持的请求数。超过该请求数的连接也将被关闭（此时就会返回一个Connection: close头给客户端）。 (maxKeepAliveRequests=&quot;1&quot;代表禁用长连接)（1表示禁用，-1表示不限制个数，默认100个。一般设置在100~200之间） 压缩会增加Tomcat负担，最好采用Nginx + Tomcat 或者 Apache + Tomcat 方式，压缩交由Nginx/Apache 去做。Tomcat 的压缩是在客户端请求服务器对应资源后，从服务器端将资源文件压缩，再输出到客户端，由客户端的浏览器负责解压缩并浏览。相对于普通的 浏览过程 HTML、CSS、Javascript和Text，它可以节省40% 左右的流量。更为重要的是，它可以对动态生成的，包括CGI、PHP、JSP、ASP、Servlet,SHTML等输出的网页也能进行压缩，压缩效率也很高。 管理AJP端口AJP是为 Tomcat 与 HTTP 服务器之间通信而定制的协议，能提供较高的通信速度和效率。如果tomcat前端放的是apache的时候，会使用到AJP这个连接器。 默认是开启的。如果不使用apache，注释该连接器。12345678&lt;!--&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;--&gt;``` ## tomcat JVM 调优这一点需要去了解较多的基础知识，比如：了解堆栈内存，了解jvm 垃圾收集器，了解jvm 性能监控常用工具，能够读懂gc日志等。修改 catalina.sh （4G 内存机器参考配置） JAVA_OPTS=”-Xms2G -Xmx2G -Xmn512m -XX:MetaspaceSize=512M -XX:MaxMetaspaceSize=512M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xloggc:/appl/gc.log -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly”1## 参数解释 -Xms2G 初始分配的堆内存-Xmx2G 最大允许分配的堆内存，这两个配成一样。-Xmn512m 年轻代大小 -XX:MetaspaceSize=512M 初始元空间大小，达到该值就会触发垃圾收集进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就适当降低该值；如果释放了很少的空间，那么在不超过MaxMetaspaceSize时，适当提高该值。-XX:MaxMetaspaceSize=512M -XX:+UseConcMarkSweepGC 并发标记清除（CMS）收集器 -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError 表示当JVM发生OOM时，自动生成DUMP文件。-XX:HeapDumpPath=${目录}参数表示生成DUMP文件的路径，也可以指定文件名称，例如：-XX:HeapDumpPath=${目录}/java_heapdump.hprof。如果不指定文件名，默认为：java__heapDump.hprof。 -verbose:gc 输出GC日志 ， -XX:+PrintGC 与 -verbose:gc 是一样的，可以认为-verbose:gc 是 -XX:+PrintGC的别名. -XX:+PrintGCDetails 打印GC详细信息-XX:+PrintGCTimeStamps 打印gc时间戳-XX:+PrintGCDateStamps-Xloggc:/appl/gc.log 定义gc日志目录-XX:CMSInitiatingOccupancyFraction=75 是指设定CMS在对内存占用率达到75%的时候开始GC(因为CMS会有浮动垃圾,所以一般都较早启动GC); -XX:+UseCMSInitiatingOccupancyOnly 只是用设定的回收阈值(上面指定的75%),如果不指定,JVM仅在第一次使用设定值,后续则自动调整12345678910# apr 模式(Apache Portable Runtime/Apache可移植运行库)，是Apache HTTP服务器的支持库。你可以简单地理解为，Tomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从操作系统级别解决异步IO问题，从而大大地提高Tomcat对静态文件的处理性能。 要tomcat支持apr，必须要安装apr和native，这样tomcat可以利用apache的apr接口，使用操作系统的部分本地操作，从而提升性能。[tomcat apr 模式](https://tomcat.apache.org/native-doc/)todo:具体设置还需要百度和实际操作和测试。## JVM 调优另外一个版本&#123;tomcat_home&#125;/bin/catalina.sh OS specific support. $var must be set to either true or false.1在该注释后添加如下代码： export JAVA_OPTS=’-server-Xms350M-Xmx350M-Xss512k-XX:+AggressiveOpts-XX:+UseBiasedLocking-XX:+DisableExplicitGC-XX:MaxTenuringThreshold=15-XX:+UseConcMarkSweepGC-XX:+UseParNewGC-XX:+CMSParallelRemarkEnabled-XX:LargePageSizeInBytes=128m-XX:+UseFastAccessorMethods-XX:+UseCMSInitiatingOccupancyOnly-Djava.awt.headless=true’;12参数解释 -Xmx：java heap最大值，使用的最大内存上面两个值是分配JVM的最小和最大内存，取决于硬件物理内存的大小，建议均设为物理内存的一半。-XX:PermSize:设定内存的永久保存区域-XX:MaxPermSize:设定最大内存的永久保存区域-XX:MaxNewSize:-Xss 15120 这使得JBoss每增加一个线程（thread)就会立即消耗15M内存，而最佳值应该是128K,默认值好像是512k.+XX:AggressiveHeap 会使得 Xms没有意义。这个参数让jvm忽略Xmx参数,疯狂地吃完一个G物理内存,再吃尽一个G的swap。-Xss：每个线程的Stack大小-verbose:gc 现实垃圾收集信息-Xloggc:gc.log 指定垃圾收集日志文件-Xmn：young generation的heap大小，一般设置为Xmx的3、4分之一-XX:+UseParNewGC ：缩短minor收集的时间-XX:+UseConcMarkSweepGC ：缩短major收集的时间` 相关内容参考Tomcat 内存与优化篇","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"tomcat","slug":"java/tomcat","permalink":"https://www.lovesofttech.com/categories/java/tomcat/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"Tomcat 配置调优","slug":"linux/centOSTomcatConfig","date":"2018-07-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.038Z","comments":true,"path":"linux/centOSTomcatConfig.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSTomcatConfig.html","excerpt":"如题","text":"如题 linux 内存占用情况查询 基于 tomcat 的调优参考tomcat 8 9 性能 优化 调优 centos 7 linux不要单纯为了调优而去调优，应该有针对性的去发现不足，解决问题，以提高性能。所以，调优的前提是做好各种监控分析，包括服务器基础资源使用、各个应用运行状况、代码质量、数据库状况、等等，根据业务的并发，服务器资源，以及存在的问题，有针对性的去优化。 性能的提升，主要从以下几个方面入手 架构调优 负载均衡，高可用，nginx + tomcat 动静分离，容器化 等， 不具体阐述 代码调优 代码编写规范。 pmd 、findbug、sonar 等工具，检测问题，并优化。 不具体阐述。 tomcat 连接数，线程数，缓存，修改server.xml打开被注释的默认连接池配置默认配置：1234&lt;!-- &lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot; maxThreads=&quot;150&quot; minSpareThreads=&quot;4&quot;/&gt; --&gt; 修改实例：12345&lt;Executor name=&quot;tomcatThreadPool&quot; namePrefix=&quot;catalina-exec-&quot; maxThreads=&quot;150&quot; minSpareThreads=&quot;100&quot; prestartminSpareThreads=&quot;true&quot; maxQueueSize=&quot;100&quot;/&gt; 参数讲解：123456name: 线程名称namePrefix: 线程前缀maxThreads : 最大并发连接数，不配置时默认200，一般建议设置500~ 800 ，要根据自己的硬件设施条件和实际业务需求而定。minSpareThreads：Tomcat启动初始化的线程数，默认值25 prestartminSpareThreads：在tomcat初始化的时候就初始化minSpareThreads的值， 不设置trueminSpareThreads 的值就没啥效果了 。maxQueueSize: 最大的等待队列数，超过则拒绝请求 修改连接配置123&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt; 改为：12345678910111213connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; executor=&quot;tomcatThreadPool&quot; enableLookups=&quot;false&quot; maxIdleTime=&quot;60000&quot; acceptCount=&quot;100&quot; maxPostSize=&quot;10485760&quot; acceptorThreadCount=&quot;2&quot; disableUploadTimeout=&quot;true&quot; URIEncoding=&quot;utf-8&quot; keepAliveTimeout =&quot;6000&quot; maxKeppAliveRequests=&quot;500&quot; /&gt; 参数讲解：1234567891011port：连接端口。 protocol：连接器使用的传输方式。 executor： 连接器使用的线程池名称enableLookups：禁用DNS 查询maxIdleTime：线程空闲时间，超过该时间后，空闲线程会被销毁，默认值为6000（1分钟），单位毫秒。acceptCount：指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理，默认设置 100 。maxPostSize：限制 以FORM URL 参数方式的POST请求的内容大小，单位字节，默认是 2097152(2兆)，10485760 为 10M。如果要禁用限制，则可以设置为 -1。acceptorThreadCount： 用于接收连接的线程的数量，默认值是1。一般这个指需要改动的时候是因为该服务器是一个多核CPU，如果是多核 CPU 一般配置为 2。disableUploadTimeOut：允许Servlet容器，正在执行使用一个较长的连接超时值，以使Servlet有较长的时间来完成它的执行，默认值为falsekeepAliveTimeout - 表示在下次请求过来之前，tomcat保持该连接多久。这就是说假如客户端不断有请求过来，且未超过过期时间，则该连接将一直保持。maxKeepAliveRequests -表示该连接最大支持的请求数。超过该请求数的连接也将被关闭（此时就会返回一个Connection: close头给客户端）。 (maxKeepAliveRequests=&quot;1&quot;代表禁用长连接)（1表示禁用，-1表示不限制个数，默认100个。一般设置在100~200之间） 压缩会增加Tomcat负担，最好采用Nginx + Tomcat 或者 Apache + Tomcat 方式，压缩交由Nginx/Apache 去做。Tomcat 的压缩是在客户端请求服务器对应资源后，从服务器端将资源文件压缩，再输出到客户端，由客户端的浏览器负责解压缩并浏览。相对于普通的 浏览过程 HTML、CSS、Javascript和Text，它可以节省40% 左右的流量。更为重要的是，它可以对动态生成的，包括CGI、PHP、JSP、ASP、Servlet,SHTML等输出的网页也能进行压缩，压缩效率也很高。 管理AJP端口AJP是为 Tomcat 与 HTTP 服务器之间通信而定制的协议，能提供较高的通信速度和效率。如果tomcat前端放的是apache的时候，会使用到AJP这个连接器。 默认是开启的。如果不使用apache，注释该连接器。12345678&lt;!--&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;--&gt;``` ## tomcat JVM 调优这一点需要去了解较多的基础知识，比如：了解堆栈内存，了解jvm 垃圾收集器，了解jvm 性能监控常用工具，能够读懂gc日志等。修改 catalina.sh （4G 内存机器参考配置） JAVA_OPTS=”-Xms2G -Xmx2G -Xmn512m -XX:MetaspaceSize=512M -XX:MaxMetaspaceSize=512M -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -Xloggc:/appl/gc.log -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly”1## 参数解释 -Xms2G 初始分配的堆内存-Xmx2G 最大允许分配的堆内存，这两个配成一样。-Xmn512m 年轻代大小 -XX:MetaspaceSize=512M 初始元空间大小，达到该值就会触发垃圾收集进行类型卸载，同时GC会对该值进行调整：如果释放了大量的空间，就适当降低该值；如果释放了很少的空间，那么在不超过MaxMetaspaceSize时，适当提高该值。-XX:MaxMetaspaceSize=512M -XX:+UseConcMarkSweepGC 并发标记清除（CMS）收集器 -XX:+CMSClassUnloadingEnabled -XX:+HeapDumpOnOutOfMemoryError 表示当JVM发生OOM时，自动生成DUMP文件。-XX:HeapDumpPath=${目录}参数表示生成DUMP文件的路径，也可以指定文件名称，例如：-XX:HeapDumpPath=${目录}/java_heapdump.hprof。如果不指定文件名，默认为：java__heapDump.hprof。 -verbose:gc 输出GC日志 ， -XX:+PrintGC 与 -verbose:gc 是一样的，可以认为-verbose:gc 是 -XX:+PrintGC的别名. -XX:+PrintGCDetails 打印GC详细信息-XX:+PrintGCTimeStamps 打印gc时间戳-XX:+PrintGCDateStamps-Xloggc:/appl/gc.log 定义gc日志目录-XX:CMSInitiatingOccupancyFraction=75 是指设定CMS在对内存占用率达到75%的时候开始GC(因为CMS会有浮动垃圾,所以一般都较早启动GC); -XX:+UseCMSInitiatingOccupancyOnly 只是用设定的回收阈值(上面指定的75%),如果不指定,JVM仅在第一次使用设定值,后续则自动调整12345678910# apr 模式(Apache Portable Runtime/Apache可移植运行库)，是Apache HTTP服务器的支持库。你可以简单地理解为，Tomcat将以JNI的形式调用Apache HTTP服务器的核心动态链接库来处理文件读取或网络传输操作，从操作系统级别解决异步IO问题，从而大大地提高Tomcat对静态文件的处理性能。 要tomcat支持apr，必须要安装apr和native，这样tomcat可以利用apache的apr接口，使用操作系统的部分本地操作，从而提升性能。[tomcat apr 模式](https://tomcat.apache.org/native-doc/)todo:具体设置还需要百度和实际操作和测试。## JVM 调优另外一个版本&#123;tomcat_home&#125;/bin/catalina.sh OS specific support. $var must be set to either true or false.1在该注释后添加如下代码： export JAVA_OPTS=’-server-Xms350M-Xmx350M-Xss512k-XX:+AggressiveOpts-XX:+UseBiasedLocking-XX:+DisableExplicitGC-XX:MaxTenuringThreshold=15-XX:+UseConcMarkSweepGC-XX:+UseParNewGC-XX:+CMSParallelRemarkEnabled-XX:LargePageSizeInBytes=128m-XX:+UseFastAccessorMethods-XX:+UseCMSInitiatingOccupancyOnly-Djava.awt.headless=true’;12参数解释 -Xmx：java heap最大值，使用的最大内存上面两个值是分配JVM的最小和最大内存，取决于硬件物理内存的大小，建议均设为物理内存的一半。-XX:PermSize:设定内存的永久保存区域-XX:MaxPermSize:设定最大内存的永久保存区域-XX:MaxNewSize:-Xss 15120 这使得JBoss每增加一个线程（thread)就会立即消耗15M内存，而最佳值应该是128K,默认值好像是512k.+XX:AggressiveHeap 会使得 Xms没有意义。这个参数让jvm忽略Xmx参数,疯狂地吃完一个G物理内存,再吃尽一个G的swap。-Xss：每个线程的Stack大小-verbose:gc 现实垃圾收集信息-Xloggc:gc.log 指定垃圾收集日志文件-Xmn：young generation的heap大小，一般设置为Xmx的3、4分之一-XX:+UseParNewGC ：缩短minor收集的时间-XX:+UseConcMarkSweepGC ：缩短major收集的时间123456# 相关内容参考[Tomcat 内存与优化篇](https://www.cnblogs.com/wulaijun/p/5490699.html)# The valid characters are defined in RFC 7230 and RFC 3986## tomcat-8.5.32 在 centOS 下报的错误 15-Aug-2018 09:57:12.970 INFO [http-nio-8110-exec-2] org.apache.coyote.http11.Http11Processor.service Error parsing HTTP request header Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level. java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986 at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:484) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:684) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:748)123456报HTTP 400错误（Chrome无异常、IE报错）。问题原因初步判断为 8.5 版本的服务端接收请求不会对符号进行转义，Chrome不异常的原因或许是浏览器自身转义了。[参考](https://blog.csdn.net/mk900715/article/details/67637317/)## 解决在conf/catalina.properties中最后添加一行： org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true123重启 Tomcat 服务[官方指南地址](http://tomcat.apache.org/tomcat-8.5-doc/config/systemprops.html) org.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH If this is true ‘%2F’ and ‘%5C’ will be permitted as path.delimiters.If not specified, the default value of false will be used.` tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/categories/tomcat/"}],"tags":[{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"本地仓库代码，定时同步更新至远程仓库","slug":"git/gitMergeToRemote","date":"2018-07-19T16:00:00.000Z","updated":"2020-09-01T02:53:12.963Z","comments":true,"path":"git/gitMergeToRemote.html","link":"","permalink":"https://www.lovesofttech.com/git/gitMergeToRemote.html","excerpt":"利用 gitee 平台，线上一键部署项目。","text":"利用 gitee 平台，线上一键部署项目。 场景 代码托管在本地局域网服务器上创建的 git 服务。 本地局域网服务器上已经部署自动构建脚本，可正常发布到开发和测试环境。 生产环境获取不到本地局域网 git 托管的代码。 偶尔在非上班时间需要紧急修复 Bug 并上线，那么即使不在办公室，也可以照样获取到项目的源码，且有全部提交历史。 解决方案借助码云免费私有项目来中转，每次在测试服务器上构建的时候，把获取到的最新代码同步 push 至码云上的项目。每天下班之后，测试服务器定时关机之前，再执行一次代码同步至码云项目的任务。 那么，问题来了，怎么样才能从一个 git 仓库提交代码到另一个 git 仓库？如何让本地代码提交更新之后，在需要发布到线上的时候，将本地所有代码同步至码云上去呢？为达此目的，网上查看了好多文章，均不全。经过反复测试，正确的步骤如下： 以下以 gitee 上的 demo 项目为例 在 gitee 上创建一个新项目 demo，0 提交。如果有提交，push 的时候会报错，不能同步更新。 在 gitee 账户下，配置 ssh 个人私钥，只有个人私钥才能 push，项目公钥，只能 pull。 作用：用公钥，git 操作，如 push/clone/pull 都免用户名和密码 在测试服务器上运行：12345ssh-keygen -t rsa -C &quot;xxxxx@xxxxx.com&quot;# Generating public/private rsa key pair...# 三次回车即可生成 ssh key# 查看你的 public key，并把他添加到码云（Gitee.com）。SSH key添加地址:https://gitee.com/profile/sshkeyscat ~/.ssh/id_rsa.pub 添加到码云后，在终端（Terminal）中输入 1ssh -T git@gitee.com 若返回 1Welcome to Gitee.com, yourname! 则证明添加成功。 关于如何操作，请看官方教程 这里引用官方文档：项目的 ssh key 和用户的 ssh key 两处地方有什么不同？ 项目的 sshkey 只针对项目，且我们仅对项目提供了部署公钥，即项目下的公钥仅能拉取项目，这通常用于生产服务器拉取仓库的代码。而用户的 key 则是针对用户的，用户添加了 key 就对用户名下的项目和用户参加了的项目具有权限，一般而言，用户的key具有推送和拉取的权限，而项目的 key 则只具有拉取权限。 在本地项目的工作目录添加 remote 项目 demo，这里 demo 是需要从本地局域网同步的远端项目。 1git remote add demo git@gitee.com:elsafly/demo.git 上述代码对 .git/config 文件的修改是，添加了123[remote &quot;demo&quot;] url = git@gitee.com:elsafly/demo.git fetch = +refs/heads/*:refs/remotes/demo/* 同步主分支代码 12git checkout mastergit push demo 同步 branch-v1.0，以下指令会自动在远端创建相同分支。 12git checkout branch-v1.0git push demo 操作日志以 utomcat 的身份执行1234567891011121314151617181920212223[utomcat@centOS7BasicForTest ~]$ ssh-keygen -t rsa -C &quot;1614923608@qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/home/utomcat/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/utomcat/.ssh/id_rsa.Your public key has been saved in /home/utomcat/.ssh/id_rsa.pub.The key fingerprint is:SHA256:92cdC1dfr5XkUm5K3NDiWieJHpCaz2aKsuEw8vfm/pQ 1614923608@qq.comThe key&apos;s randomart image is:+---[RSA 2048]----+| || . . || o o +o|| o . + X *|| oS .o X X+|| oo..= O+o||.o . E= o..+..||..+.o o.+ o || .+o*+o. |+----[SHA256]-----+[utomcat@centOS7BasicForTest ~]$ cat ~/.ssh/id_rsa.pubssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDb4K+3HTCT9Kowo/2D3Nq69gSBC+/H7fMGZtNyqbkmnXIOBxQhQx1o9HM8sJvFWgiJ99ev2a49X5fuZm3Mm6osFNRYAtmajnl9VU/zaFX0sXzh6f60Z847gjh5bWwBKzV1TPejCVMVNmq3TDwf8nbEX9/o2JIihWHAowyqgCUTLQySQkK1pAcjPuYtNTKAQ8wpaFC0ssquGTggGegC2J/HMjQGgHz6XxFUhEHNBLGhleSSIP9dNqe5LypPyeYdHXI63+0K6kBEoUbwt7eh1uy/Vw7oOcJLpPJISr+qZXbbLNyIW8GV3Js73FDWXNN8tRj0yF9q5VlCthfGPrMxwxmD 1614923608@qq.com 将上面 cat 得到的内容复制到 giree 添加 ssh 公钥的页面公钥栏。 所用到的 git 指令参考文章：从一个 git仓库提交代码到另一个git仓库 将仓库 repo_b 的 URL 添加到工作仓库的 remote。1git remote add origin_repo_b git@server_ip:/path/repo_b.git origin_repo_b:自己起的名字，只要不与现有的 remote 名重复即可 git@server_ip:/path/repo_b.git:repo_b 的远程路径 将代码推送到远程 repo_b1git push origin_repo_b branch_a origin_repo_b:远程仓库 repo_b 的名字 branch_a:仓库 repo_a 的的 branch_a 分支 将一份相同的代码提交到多个不同的 git 托管服务器（多个git仓库）方法非常相似，就是用到了下面的指令1git remote set-url --add [--push] &lt;name&gt; &lt;newurl&gt; 现在，假设在远程的 git 服务器上又新增了一个仓库 repo_c，要求 repo_b、repo_c 提交的代码必须一致。 将远程 repo_c 配置到当前的工作的本地 git 仓库中1git remote set-url --add origin_repo_b git@192.168.1.101:~/project/repo_c.git 这句话的意思是，将远程仓库 git@192.168.1.101:~/project/repo_c.git 也加入到 origin_repo_b 这个名字下面管理 将代码同时提交到远程仓库 repo_b 和远程仓库 repo_c1git push origin_repo_b branch_a 在多个 git 仓库同步代码，注意事项以 utomcat 的身份生成公钥：1ssh-keygen -t rsa -C &quot;1614923608@qq.com&quot; -f ~/.ssh/forGitee # -f参数：指定文件名。但这里不能指定，需要用默认的，否则将不会生效。后面会说明。 配置个人私钥和项目公钥，尝试 clone 项目，都提示：1234567[utomcat@hjweb01 gitCode]$ git clone git@gitee.com:elsafly/projectName.gitCloning into &apos;hjz&apos;...Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 经测试，发现，为 gitee.com 配置公钥时，要添加默认名即：id_rsa，否则不能与 gitee 通信 重点：可以用不同的用户创建不同目的的公钥，然后以这用户的身份来操作 git 项目。 同样的，在本地用 Gitolite 搭建的 git Server，在 CentOS 上创建公钥，将 id_rsa 改名，git clone，也会提示：fatal: Could not read from remote repository. authorized_keys拷贝ssh公钥到 authorized_keys 后仍然无法免密登录。 解决修改修改.ssh目录的权限以及authorized_keys 的权限(这个必须修改，要不然还是需要密码)12sudo chmod 644 ~/.ssh/authorized_keyssudo chmod 700 ~/.ssh git 官方文档官方文档 git 语法 git 基本语法 123456git [--version] [--help] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;] [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path] [-p|--paginate|-P|--no-pager] [--no-replace-objects] [--bare] [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;] [--super-prefix=&lt;path&gt;] &lt;command&gt; [&lt;args&gt;] git clone 基本语法 1234567git clone [--template=&lt;template_directory&gt;] [-l] [-s] [--no-hardlinks] [-q] [-n] [--bare] [--mirror] [-o &lt;name&gt;] [-b &lt;name&gt;] [-u &lt;upload-pack&gt;] [--reference &lt;repository&gt;] [--dissociate] [--separate-git-dir &lt;git dir&gt;] [--depth &lt;depth&gt;] [--[no-]single-branch] [--no-tags] [--recurse-submodules[=&lt;pathspec&gt;]] [--[no-]shallow-submodules] [--jobs &lt;n&gt;] [--] &lt;repository&gt; [&lt;directory&gt;] 从一个远程仓库拉取更新同步到另外一个远程仓库典型应用场景：我 fork 了一个 RTT 到我的 git 下，然后从我的远程仓库中 git clone 到了本地。一段时间之后，RTT 官方的 git 上有了更新，如何把 RTT 官方 git 上的更新同步到我的远程 git 上？ 在本地 git 命令中用 git remote add 增加一个分支来跟踪 RTT 官方的 git。 把 RTT 官方的更新 git fetch 下来，再然后用 git merge 合并到本地的 master 分支上。 用 git push 提交到自己的远程 git 上。 git clone 三种用法 git clone 将 指向的版本库创建一个克隆到 目录。 目录相当于克隆版本库的工作区，文件都会检出，版本库位于工作区下的 .git 目录中 git clone –bare &lt;directory.git&gt; git clone –mirror &lt;directory.git&gt; 区别【–bare】和【–mirror】创建的克隆版本库都不包含工作区，直接就是版本库的内容，这样的版本库称为裸版本库。一般约定俗成裸版本库的目录名以 .git 为后缀。【–mirror】区别于【–bare】之处在于【–mirror】克隆出来的裸版本库对上游版本库进行了注册，这样可以在裸版本库中使用 git fecth 命令和上游版本库进行持续同步。","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"discuzX3.4 网站迁移，备忘录","slug":"lnmp/discuzX3.4MoveServer","date":"2018-07-18T16:00:00.000Z","updated":"2020-09-01T02:53:13.054Z","comments":true,"path":"lnmp/discuzX3.4MoveServer.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/discuzX3.4MoveServer.html","excerpt":"如题：","text":"如题： 操作步骤 如果服务器也要切换，需要先停网站，然后导出数据，再导入新服务器，把网站整个打包（可能会有上传的图片，没验证）上传至新服务器。 在新域名修改之前，以新域名进入论坛，会自动跳到旧域名，这时需要进入新域名后台管理页面，方法是在域名后加 /admin.php，如：dz.hellojiazhang.com/admin.php 全局-&gt;域名设置-&gt;应用域名-&gt;默认，改为新域名。 清空浏览器缓存，否则还会自动跳转至旧域名。 修改以下配置文件的数据库连接信息： /config/config_ucenter.php /config/config_global.php /uc_server/data/config.inc.php 以下两个文件可以删除 /config/config_global_default.php /config/config_ucenter_default.php 修改 nginx 以及 php 配置，以支持最大上传附件达到 20M。 12345# vim /usr/local/php/etc/php.iniupload_max_filesize = 20Mpost_max_size = 30Mmax_execution_time = 900max_input_time = 900 nginx.conf 在 http { } 中添加如下配置项： 12# vim /usr/local/nginx/conf/nginx.confclient_max_body_size 20m; 修改配置文件 DZXUCenterConfig.properties 下的节点 ucApi 地址为新域名。该配置文件是针对 tomcat 站点与论坛之间同步会员信息（登录、退出、注册）用的。 坑在修改回服务器自建 MySQL 数据库的时候，将数据库地址改为 localhost，报错：1Discuz! Database Error 反复检查了三个配置文件以及数据库用户名和密码，用 java 程序用同样的配置信息，正常。最后是把三个配置文件的数据库连接地址改为 127.0.0.1 才正常的。 只能当经验了，暂时没时间研究为什么了。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"php","slug":"CentOS/php","permalink":"https://www.lovesofttech.com/categories/CentOS/php/"},{"name":"discuzX","slug":"CentOS/php/discuzX","permalink":"https://www.lovesofttech.com/categories/CentOS/php/discuzX/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"discuzX","slug":"discuzX","permalink":"https://www.lovesofttech.com/tags/discuzX/"}]},{"title":"discuzX3.4 数据库由阿里云自建 MySQL 转移至 RDS，填坑日志","slug":"lnmp/discuzX3.4ToInnoDBTable","date":"2018-07-18T16:00:00.000Z","updated":"2020-09-01T02:53:13.055Z","comments":true,"path":"lnmp/discuzX3.4ToInnoDBTable.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/discuzX3.4ToInnoDBTable.html","excerpt":"如题","text":"如题 场景将 discuzX3.4 的数据从阿里云自建数据库导出来，然后导入到 RDS。因为阿里云的 RDS 不支持 MyISAM 和 MEMORY 存储引擎，所以报如下错误1234567ERROR 3161 (HY000): Storage engine MyISAM is disabled (Table creation is disallowed).ERROR 3161 (HY000): Storage engine MEMORY is disabled (Table creation is disallowed).ERROR 1146 (42S02): Table &apos;hellojz.forum_threaddisablepos&apos; doesn&apos;t existERROR 3161 (HY000): Storage engine MEMORY is disabled (Table creation is disallowed).ERROR 1146 (42S02): Table &apos;hellojz.ucenter_vars&apos; doesn&apos;t exist... 查看了 RDS 的官方文档，声称 MyISAM 会自动转为 InnoDB，确实已经将绝大部分表自动转了，但是依然有部分为 MyISAM 的表未自动转换，同时 discuz 还有表使用的 MEMORY 的存储引擎，所以，导入数据以失败告终。RDS for MySQL默认关闭MyISAM引擎 原文：MyISAM引擎表不支持事务，读写操作会相互冲突，仅支持表级别锁。当其上的查询或者写入操作时间比较长的时候，会阻塞其他操作，容易导致连接堆积，而且在crash 后存在数据丢失的风险，因此RDS for MySQL推荐使用 Innodb 引擎。 目前RDS for MySQL如果导入表、新建表是MyISAM引擎或调整表引擎为MyISAM，会自动修改为Innodb引擎。 为什么 RDS for MySQL 不支持 MyISAM 引擎？ 原文：RDS for MySQL 不支持 MyISAM 引擎的主要原因有如下几个： MyISAM 对数据完整性的保护存在缺陷，且这些缺陷会导致数据库数据的损坏甚至丢失。另外，这些缺陷很多是设计问题，无法在不破坏兼容性的前提下修复。 MyISAM 在出现数据损害情况下，很多都需要手工修复，无法适用于产品服务的方式。 对于 RDS 的存储而言，MyISAM 对于 I/O 的操作不是最优化的方案，导致 MyISAM 的性能相对于 InnoDB 的优势不大。 MyISAM 向 InnoDB 的迁移代价低，大多数应用仅需要改动建表的代码即可完成迁移。 MyISAM 的发展在向 InnoDB 转移，在最新的 5.7 版本中 MySQL 可以完全不是 MyISAM，系统的数控也被转移到了 InnoDB。 更多关于 RDS 的信息请点击：云数据库 RDS 版 批量生成修改所有表的存储引擎为 InnoDB 的脚本语句1234USE dz;SELECT CONCAT( &apos;ALTER TABLE &apos; ,TABLE_NAME ,&apos; ENGINE=InnoDB;&apos;) as alertScriptFROM information_schema.TABLES AS t WHERE TABLE_SCHEMA = &apos;dz&apos; AND TABLE_TYPE = &apos;BASE TABLE&apos;; 生成结果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297ALTER TABLE common_admincp_cmenu ENGINE=InnoDB;ALTER TABLE common_admincp_group ENGINE=InnoDB;ALTER TABLE common_admincp_member ENGINE=InnoDB;ALTER TABLE common_admincp_perm ENGINE=InnoDB;ALTER TABLE common_admincp_session ENGINE=InnoDB;ALTER TABLE common_admingroup ENGINE=InnoDB;ALTER TABLE common_adminnote ENGINE=InnoDB;ALTER TABLE common_advertisement ENGINE=InnoDB;ALTER TABLE common_advertisement_custom ENGINE=InnoDB;ALTER TABLE common_banned ENGINE=InnoDB;ALTER TABLE common_block ENGINE=InnoDB;ALTER TABLE common_block_favorite ENGINE=InnoDB;ALTER TABLE common_block_item ENGINE=InnoDB;ALTER TABLE common_block_item_data ENGINE=InnoDB;ALTER TABLE common_block_permission ENGINE=InnoDB;ALTER TABLE common_block_pic ENGINE=InnoDB;ALTER TABLE common_block_style ENGINE=InnoDB;ALTER TABLE common_block_xml ENGINE=InnoDB;ALTER TABLE common_cache ENGINE=InnoDB;ALTER TABLE common_card ENGINE=InnoDB;ALTER TABLE common_card_log ENGINE=InnoDB;ALTER TABLE common_card_type ENGINE=InnoDB;ALTER TABLE common_connect_guest ENGINE=InnoDB;ALTER TABLE common_credit_log ENGINE=InnoDB;ALTER TABLE common_credit_log_field ENGINE=InnoDB;ALTER TABLE common_credit_rule ENGINE=InnoDB;ALTER TABLE common_credit_rule_log ENGINE=InnoDB;ALTER TABLE common_credit_rule_log_field ENGINE=InnoDB;ALTER TABLE common_cron ENGINE=InnoDB;ALTER TABLE common_devicetoken ENGINE=InnoDB;ALTER TABLE common_district ENGINE=InnoDB;ALTER TABLE common_diy_data ENGINE=InnoDB;ALTER TABLE common_domain ENGINE=InnoDB;ALTER TABLE common_failedip ENGINE=InnoDB;ALTER TABLE common_failedlogin ENGINE=InnoDB;ALTER TABLE common_friendlink ENGINE=InnoDB;ALTER TABLE common_grouppm ENGINE=InnoDB;ALTER TABLE common_invite ENGINE=InnoDB;ALTER TABLE common_magic ENGINE=InnoDB;ALTER TABLE common_magiclog ENGINE=InnoDB;ALTER TABLE common_mailcron ENGINE=InnoDB;ALTER TABLE common_mailqueue ENGINE=InnoDB;ALTER TABLE common_member ENGINE=InnoDB;ALTER TABLE common_member_action_log ENGINE=InnoDB;ALTER TABLE common_member_connect ENGINE=InnoDB;ALTER TABLE common_member_count ENGINE=InnoDB;ALTER TABLE common_member_crime ENGINE=InnoDB;ALTER TABLE common_member_field_forum ENGINE=InnoDB;ALTER TABLE common_member_field_home ENGINE=InnoDB;ALTER TABLE common_member_forum_buylog ENGINE=InnoDB;ALTER TABLE common_member_grouppm ENGINE=InnoDB;ALTER TABLE common_member_log ENGINE=InnoDB;ALTER TABLE common_member_magic ENGINE=InnoDB;ALTER TABLE common_member_medal ENGINE=InnoDB;ALTER TABLE common_member_newprompt ENGINE=InnoDB;ALTER TABLE common_member_profile ENGINE=InnoDB;ALTER TABLE common_member_profile_setting ENGINE=InnoDB;ALTER TABLE common_member_security ENGINE=InnoDB;ALTER TABLE common_member_secwhite ENGINE=InnoDB;ALTER TABLE common_member_stat_field ENGINE=InnoDB;ALTER TABLE common_member_status ENGINE=InnoDB;ALTER TABLE common_member_validate ENGINE=InnoDB;ALTER TABLE common_member_verify ENGINE=InnoDB;ALTER TABLE common_member_verify_info ENGINE=InnoDB;ALTER TABLE common_member_wechat ENGINE=InnoDB;ALTER TABLE common_member_wechatmp ENGINE=InnoDB;ALTER TABLE common_myapp ENGINE=InnoDB;ALTER TABLE common_myinvite ENGINE=InnoDB;ALTER TABLE common_mytask ENGINE=InnoDB;ALTER TABLE common_nav ENGINE=InnoDB;ALTER TABLE common_onlinetime ENGINE=InnoDB;ALTER TABLE common_optimizer ENGINE=InnoDB;ALTER TABLE common_patch ENGINE=InnoDB;ALTER TABLE common_plugin ENGINE=InnoDB;ALTER TABLE common_pluginvar ENGINE=InnoDB;ALTER TABLE common_process ENGINE=InnoDB;ALTER TABLE common_regip ENGINE=InnoDB;ALTER TABLE common_relatedlink ENGINE=InnoDB;ALTER TABLE common_remote_port ENGINE=InnoDB;ALTER TABLE common_report ENGINE=InnoDB;ALTER TABLE common_searchindex ENGINE=InnoDB;ALTER TABLE common_seccheck ENGINE=InnoDB;ALTER TABLE common_secquestion ENGINE=InnoDB;ALTER TABLE common_session ENGINE=InnoDB;ALTER TABLE common_setting ENGINE=InnoDB;ALTER TABLE common_smiley ENGINE=InnoDB;ALTER TABLE common_sphinxcounter ENGINE=InnoDB;ALTER TABLE common_stat ENGINE=InnoDB;ALTER TABLE common_statuser ENGINE=InnoDB;ALTER TABLE common_style ENGINE=InnoDB;ALTER TABLE common_stylevar ENGINE=InnoDB;ALTER TABLE common_syscache ENGINE=InnoDB;ALTER TABLE common_tag ENGINE=InnoDB;ALTER TABLE common_tagitem ENGINE=InnoDB;ALTER TABLE common_task ENGINE=InnoDB;ALTER TABLE common_taskvar ENGINE=InnoDB;ALTER TABLE common_template ENGINE=InnoDB;ALTER TABLE common_template_block ENGINE=InnoDB;ALTER TABLE common_template_permission ENGINE=InnoDB;ALTER TABLE common_uin_black ENGINE=InnoDB;ALTER TABLE common_usergroup ENGINE=InnoDB;ALTER TABLE common_usergroup_field ENGINE=InnoDB;ALTER TABLE common_visit ENGINE=InnoDB;ALTER TABLE common_word ENGINE=InnoDB;ALTER TABLE common_word_type ENGINE=InnoDB;ALTER TABLE connect_disktask ENGINE=InnoDB;ALTER TABLE connect_feedlog ENGINE=InnoDB;ALTER TABLE connect_memberbindlog ENGINE=InnoDB;ALTER TABLE connect_postfeedlog ENGINE=InnoDB;ALTER TABLE connect_tthreadlog ENGINE=InnoDB;ALTER TABLE forum_access ENGINE=InnoDB;ALTER TABLE forum_activity ENGINE=InnoDB;ALTER TABLE forum_activityapply ENGINE=InnoDB;ALTER TABLE forum_announcement ENGINE=InnoDB;ALTER TABLE forum_attachment ENGINE=InnoDB;ALTER TABLE forum_attachment_0 ENGINE=InnoDB;ALTER TABLE forum_attachment_1 ENGINE=InnoDB;ALTER TABLE forum_attachment_2 ENGINE=InnoDB;ALTER TABLE forum_attachment_3 ENGINE=InnoDB;ALTER TABLE forum_attachment_4 ENGINE=InnoDB;ALTER TABLE forum_attachment_5 ENGINE=InnoDB;ALTER TABLE forum_attachment_6 ENGINE=InnoDB;ALTER TABLE forum_attachment_7 ENGINE=InnoDB;ALTER TABLE forum_attachment_8 ENGINE=InnoDB;ALTER TABLE forum_attachment_9 ENGINE=InnoDB;ALTER TABLE forum_attachment_exif ENGINE=InnoDB;ALTER TABLE forum_attachment_unused ENGINE=InnoDB;ALTER TABLE forum_attachtype ENGINE=InnoDB;ALTER TABLE forum_bbcode ENGINE=InnoDB;ALTER TABLE forum_collection ENGINE=InnoDB;ALTER TABLE forum_collectioncomment ENGINE=InnoDB;ALTER TABLE forum_collectionfollow ENGINE=InnoDB;ALTER TABLE forum_collectioninvite ENGINE=InnoDB;ALTER TABLE forum_collectionrelated ENGINE=InnoDB;ALTER TABLE forum_collectionteamworker ENGINE=InnoDB;ALTER TABLE forum_collectionthread ENGINE=InnoDB;ALTER TABLE forum_creditslog ENGINE=InnoDB;ALTER TABLE forum_debate ENGINE=InnoDB;ALTER TABLE forum_debatepost ENGINE=InnoDB;ALTER TABLE forum_faq ENGINE=InnoDB;ALTER TABLE forum_filter_post ENGINE=InnoDB;ALTER TABLE forum_forum ENGINE=InnoDB;ALTER TABLE forum_forum_threadtable ENGINE=InnoDB;ALTER TABLE forum_forumfield ENGINE=InnoDB;ALTER TABLE forum_forumrecommend ENGINE=InnoDB;ALTER TABLE forum_groupcreditslog ENGINE=InnoDB;ALTER TABLE forum_groupfield ENGINE=InnoDB;ALTER TABLE forum_groupinvite ENGINE=InnoDB;ALTER TABLE forum_grouplevel ENGINE=InnoDB;ALTER TABLE forum_groupuser ENGINE=InnoDB;ALTER TABLE forum_hotreply_member ENGINE=InnoDB;ALTER TABLE forum_hotreply_number ENGINE=InnoDB;ALTER TABLE forum_imagetype ENGINE=InnoDB;ALTER TABLE forum_medal ENGINE=InnoDB;ALTER TABLE forum_medallog ENGINE=InnoDB;ALTER TABLE forum_memberrecommend ENGINE=InnoDB;ALTER TABLE forum_moderator ENGINE=InnoDB;ALTER TABLE forum_modwork ENGINE=InnoDB;ALTER TABLE forum_newthread ENGINE=InnoDB;ALTER TABLE forum_onlinelist ENGINE=InnoDB;ALTER TABLE forum_order ENGINE=InnoDB;ALTER TABLE forum_poll ENGINE=InnoDB;ALTER TABLE forum_polloption ENGINE=InnoDB;ALTER TABLE forum_polloption_image ENGINE=InnoDB;ALTER TABLE forum_pollvoter ENGINE=InnoDB;ALTER TABLE forum_post ENGINE=InnoDB;ALTER TABLE forum_post_location ENGINE=InnoDB;ALTER TABLE forum_post_moderate ENGINE=InnoDB;ALTER TABLE forum_post_tableid ENGINE=InnoDB;ALTER TABLE forum_postcache ENGINE=InnoDB;ALTER TABLE forum_postcomment ENGINE=InnoDB;ALTER TABLE forum_postlog ENGINE=InnoDB;ALTER TABLE forum_poststick ENGINE=InnoDB;ALTER TABLE forum_promotion ENGINE=InnoDB;ALTER TABLE forum_ratelog ENGINE=InnoDB;ALTER TABLE forum_relatedthread ENGINE=InnoDB;ALTER TABLE forum_replycredit ENGINE=InnoDB;ALTER TABLE forum_rsscache ENGINE=InnoDB;ALTER TABLE forum_sofa ENGINE=InnoDB;ALTER TABLE forum_spacecache ENGINE=InnoDB;ALTER TABLE forum_statlog ENGINE=InnoDB;ALTER TABLE forum_thread ENGINE=InnoDB;ALTER TABLE forum_thread_moderate ENGINE=InnoDB;ALTER TABLE forum_threadaddviews ENGINE=InnoDB;ALTER TABLE forum_threadcalendar ENGINE=InnoDB;ALTER TABLE forum_threadclass ENGINE=InnoDB;ALTER TABLE forum_threadclosed ENGINE=InnoDB;ALTER TABLE forum_threaddisablepos ENGINE=InnoDB;ALTER TABLE forum_threadhidelog ENGINE=InnoDB;ALTER TABLE forum_threadhot ENGINE=InnoDB;ALTER TABLE forum_threadimage ENGINE=InnoDB;ALTER TABLE forum_threadlog ENGINE=InnoDB;ALTER TABLE forum_threadmod ENGINE=InnoDB;ALTER TABLE forum_threadpartake ENGINE=InnoDB;ALTER TABLE forum_threadpreview ENGINE=InnoDB;ALTER TABLE forum_threadprofile ENGINE=InnoDB;ALTER TABLE forum_threadprofile_group ENGINE=InnoDB;ALTER TABLE forum_threadrush ENGINE=InnoDB;ALTER TABLE forum_threadtype ENGINE=InnoDB;ALTER TABLE forum_trade ENGINE=InnoDB;ALTER TABLE forum_tradecomment ENGINE=InnoDB;ALTER TABLE forum_tradelog ENGINE=InnoDB;ALTER TABLE forum_typeoption ENGINE=InnoDB;ALTER TABLE forum_typeoptionvar ENGINE=InnoDB;ALTER TABLE forum_typevar ENGINE=InnoDB;ALTER TABLE forum_warning ENGINE=InnoDB;ALTER TABLE home_album ENGINE=InnoDB;ALTER TABLE home_album_category ENGINE=InnoDB;ALTER TABLE home_appcreditlog ENGINE=InnoDB;ALTER TABLE home_blacklist ENGINE=InnoDB;ALTER TABLE home_blog ENGINE=InnoDB;ALTER TABLE home_blog_category ENGINE=InnoDB;ALTER TABLE home_blog_moderate ENGINE=InnoDB;ALTER TABLE home_blogfield ENGINE=InnoDB;ALTER TABLE home_class ENGINE=InnoDB;ALTER TABLE home_click ENGINE=InnoDB;ALTER TABLE home_clickuser ENGINE=InnoDB;ALTER TABLE home_comment ENGINE=InnoDB;ALTER TABLE home_comment_moderate ENGINE=InnoDB;ALTER TABLE home_docomment ENGINE=InnoDB;ALTER TABLE home_doing ENGINE=InnoDB;ALTER TABLE home_doing_moderate ENGINE=InnoDB;ALTER TABLE home_favorite ENGINE=InnoDB;ALTER TABLE home_feed ENGINE=InnoDB;ALTER TABLE home_feed_app ENGINE=InnoDB;ALTER TABLE home_follow ENGINE=InnoDB;ALTER TABLE home_follow_feed ENGINE=InnoDB;ALTER TABLE home_follow_feed_archiver ENGINE=InnoDB;ALTER TABLE home_friend ENGINE=InnoDB;ALTER TABLE home_friend_request ENGINE=InnoDB;ALTER TABLE home_friendlog ENGINE=InnoDB;ALTER TABLE home_notification ENGINE=InnoDB;ALTER TABLE home_pic ENGINE=InnoDB;ALTER TABLE home_pic_moderate ENGINE=InnoDB;ALTER TABLE home_picfield ENGINE=InnoDB;ALTER TABLE home_poke ENGINE=InnoDB;ALTER TABLE home_pokearchive ENGINE=InnoDB;ALTER TABLE home_share ENGINE=InnoDB;ALTER TABLE home_share_moderate ENGINE=InnoDB;ALTER TABLE home_show ENGINE=InnoDB;ALTER TABLE home_specialuser ENGINE=InnoDB;ALTER TABLE home_userapp ENGINE=InnoDB;ALTER TABLE home_userappfield ENGINE=InnoDB;ALTER TABLE home_visitor ENGINE=InnoDB;ALTER TABLE mobile_setting ENGINE=InnoDB;ALTER TABLE mobile_wechat_authcode ENGINE=InnoDB;ALTER TABLE mobile_wechat_masssend ENGINE=InnoDB;ALTER TABLE mobile_wechat_resource ENGINE=InnoDB;ALTER TABLE mobile_wsq_threadlist ENGINE=InnoDB;ALTER TABLE portal_article_content ENGINE=InnoDB;ALTER TABLE portal_article_count ENGINE=InnoDB;ALTER TABLE portal_article_moderate ENGINE=InnoDB;ALTER TABLE portal_article_related ENGINE=InnoDB;ALTER TABLE portal_article_title ENGINE=InnoDB;ALTER TABLE portal_article_trash ENGINE=InnoDB;ALTER TABLE portal_attachment ENGINE=InnoDB;ALTER TABLE portal_category ENGINE=InnoDB;ALTER TABLE portal_category_permission ENGINE=InnoDB;ALTER TABLE portal_comment ENGINE=InnoDB;ALTER TABLE portal_comment_moderate ENGINE=InnoDB;ALTER TABLE portal_rsscache ENGINE=InnoDB;ALTER TABLE portal_topic ENGINE=InnoDB;ALTER TABLE portal_topic_pic ENGINE=InnoDB;ALTER TABLE security_evilpost ENGINE=InnoDB;ALTER TABLE security_eviluser ENGINE=InnoDB;ALTER TABLE security_failedlog ENGINE=InnoDB;ALTER TABLE ucenter_admins ENGINE=InnoDB;ALTER TABLE ucenter_applications ENGINE=InnoDB;ALTER TABLE ucenter_badwords ENGINE=InnoDB;ALTER TABLE ucenter_domains ENGINE=InnoDB;ALTER TABLE ucenter_failedlogins ENGINE=InnoDB;ALTER TABLE ucenter_feeds ENGINE=InnoDB;ALTER TABLE ucenter_friends ENGINE=InnoDB;ALTER TABLE ucenter_mailqueue ENGINE=InnoDB;ALTER TABLE ucenter_memberfields ENGINE=InnoDB;ALTER TABLE ucenter_members ENGINE=InnoDB;ALTER TABLE ucenter_mergemembers ENGINE=InnoDB;ALTER TABLE ucenter_newpm ENGINE=InnoDB;ALTER TABLE ucenter_notelist ENGINE=InnoDB;ALTER TABLE ucenter_pm_indexes ENGINE=InnoDB;ALTER TABLE ucenter_pm_lists ENGINE=InnoDB;ALTER TABLE ucenter_pm_members ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_0 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_1 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_2 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_3 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_4 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_5 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_6 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_7 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_8 ENGINE=InnoDB;ALTER TABLE ucenter_pm_messages_9 ENGINE=InnoDB;ALTER TABLE ucenter_protectedmembers ENGINE=InnoDB;ALTER TABLE ucenter_settings ENGINE=InnoDB;ALTER TABLE ucenter_sqlcache ENGINE=InnoDB;ALTER TABLE ucenter_tags ENGINE=InnoDB;ALTER TABLE ucenter_vars ENGINE=InnoDB; 执行过程中，下面注释掉的两张表报错1234-- ALTER TABLE forum_post ENGINE=InnoDB;-- ALTER TABLE common_member_grouppm ENGINE=InnoDB;Error Code: 1075. Incorrect table definition; there can be only one auto column and it must be defined as a key 0.000 sec 建表脚本，如果 ENGINE=MyISAM 则正常，改为 InnoDB 则报错为了验证错误信息，特意将建表 sql 拿到临时数据库去执行，得到同样的错误提示，这个提示是不准确的。在 MySQL Workbench 下操作得到正确的提示，请继续往下看123456789CREATE TABLE `common_member_grouppm_temp` ( `uid` mediumint(8) unsigned NOT NULL DEFAULT &apos;0&apos;, `gpmid` smallint(6) unsigned NOT NULL AUTO_INCREMENT, `status` tinyint(1) NOT NULL DEFAULT &apos;0&apos;, `dateline` int(10) unsigned NOT NULL DEFAULT &apos;0&apos;, PRIMARY KEY (`uid`,`gpmid`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;Error Code: 1075. Incorrect table definition; there can be only one auto column and it must be defined as a key 用 MySQL Workbench 操作，得到解决，大赞 MySQL Workbench于是用 MySQL Workbench 查看表结构，点击自增字段之后，得到一个重要的提示1Only the first key column of a InnoDB table can be AUTO_INCREMENT. Please reorder the columns before making this column AUTO_INCREMENT. 解决方案，重要！于是得到解决方案，将自增列调整至第一行，同时修改表存储引擎为 InnoDB，即可成功。12345678910111213-- ALTER TABLE common_member_grouppm ENGINE=InnoDB; 改为以下脚本（Workbench 生成的）ALTER TABLE `dz`.`common_member_grouppm` ENGINE = InnoDB ,CHANGE COLUMN `gpmid` `gpmid` SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT FIRST,DROP PRIMARY KEY,ADD PRIMARY KEY (`gpmid`, `uid`);-- ALTER TABLE forum_post ENGINE=InnoDB; 改为以下脚本ALTER TABLE `dz`.`forum_post` ENGINE = InnoDB ,CHANGE COLUMN `position` `position` INT(8) UNSIGNED NOT NULL AUTO_INCREMENT FIRST,DROP PRIMARY KEY,ADD PRIMARY KEY (`position`, `tid`); 结论：结合使用 MySQL 的经验，进一步体验到，MySQL 的错误提示其实挺不准的，这时个人经验就显得尤其重要了，同时也体现了 DBA 的重要性。 查看数据库存储引擎1234567891011121314151617181920212223242526mysql&gt; SHOW ENGINES;+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| Engine | Support | Comment | Transactions | XA | Savepoints |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+| CSV | YES | CSV storage engine | NO | NO | NO || MRG_MYISAM | YES | Collection of identical MyISAM tables | NO | NO | NO || MEMORY | YES | Hash based, stored in memory, useful for temporary tables | NO | NO | NO || BLACKHOLE | YES | /dev/null storage engine (anything you write to it disappears) | NO | NO | NO || MyISAM | YES | MyISAM storage engine | NO | NO | NO || InnoDB | DEFAULT | Supports transactions, row-level locking, and foreign keys | YES | YES | YES || ARCHIVE | YES | Archive storage engine | NO | NO | NO || PERFORMANCE_SCHEMA | YES | Performance Schema | NO | NO | NO || FEDERATED | NO | Federated MySQL storage engine | NULL | NULL | NULL |+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+9 rows in set (0.00 sec)mysql&gt; show variables like &apos;%storage_engine%&apos;;+----------------------------------+-----------------------+| Variable_name | Value |+----------------------------------+-----------------------+| default_storage_engine | InnoDB || default_tmp_storage_engine | InnoDB || disabled_storage_engines | myisam,memory,archive || internal_tmp_disk_storage_engine | InnoDB |+----------------------------------+-----------------------+4 rows in set (0.01 sec) 查看表的存储引擎123456789101112131415mysql&gt; show create table ucenter_tags;+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| Table | Create Table |+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+| ucenter_tags | CREATE TABLE `ucenter_tags` ( `tagname` char(20) NOT NULL, `appid` smallint(6) unsigned NOT NULL DEFAULT &apos;0&apos;, `data` mediumtext, `expiration` int(10) unsigned NOT NULL, KEY `tagname` (`tagname`,`appid`)) ENGINE=InnoDB DEFAULT CHARSET=utf8 |+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+1 row in set (0.00 sec)mysql&gt; MySQL 存储引擎参考MySQL修改数据表存储引擎的3种方法介绍","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"php","slug":"CentOS/php","permalink":"https://www.lovesofttech.com/categories/CentOS/php/"},{"name":"discuzX","slug":"CentOS/php/discuzX","permalink":"https://www.lovesofttech.com/categories/CentOS/php/discuzX/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"discuzX","slug":"discuzX","permalink":"https://www.lovesofttech.com/tags/discuzX/"}]},{"title":"Udacity也弃用React Native了！","slug":"frontend/RNNewsGiveUpUdacity","date":"2018-07-08T16:00:00.000Z","updated":"2020-09-01T02:53:12.932Z","comments":true,"path":"frontend/RNNewsGiveUpUdacity.html","link":"","permalink":"https://www.lovesofttech.com/frontend/RNNewsGiveUpUdacity.html","excerpt":"英文原文：https://engineering.udacity.com/react-native-a-retrospective-from-the-mobile-engineering-team-at-udacity-89975d6a8102","text":"英文原文：https://engineering.udacity.com/react-native-a-retrospective-from-the-mobile-engineering-team-at-udacity-89975d6a8102 来源：前端之巅（微信公众号） 前端之巅报道不久之前，Airbnb 团队刚刚宣布放弃使用 React Native，才过了不到一个月，在线教育机构Udacity 移动团队最近也宣布从 App 中移除了使用 React Native 开发的最后一批功能。而 6 月中旬，Facebook 宣布将大规模重构 RN，这一系列的事件，让不少正在使用 React Native 的开发者瑟瑟发抖，陷入了恐慌之中。 在本文章中，Udacity 团队将告诉大家他们使用 React Native 的历程以及放弃他们的原因，也希望给一些开发者一些参考和启发，看自己是否适合使用 React Native。 以下来自 Udacity 移动团队的自述：Udacity 移动团队Udacity 的移动团队分为 iOS 和 Android 两个团队。团队规模 在引入 React Native 时：1 个 iOS 开发2 个 Android 开发者1 个项目经理1 个设计师 现在：4 个 iOS 开发者3 个 Android 开发者1 个项目经理1 个设计师在使用 React Native 的 18 个月中，我们的 iOS 和 Android 团队规模都有所增长，整个团队由一名项目经理来领导。期间，我们还经历了向多设计师和多设计范式转型。开发背景在引入 React Native 时，我们 iOS 团队唯一的开发人员非常乐于使用 React Native，这极大丰富了他之前 Javascript 和 Web 的开发经验。两位 Android 开发人员中的一位对 Javascript 有丰富的经验，而另一个只有很少的 Javascript、React 或 Web 经验。现在，四个 iOS 开发人员中至少有三个非常乐于使用 Javascript 和 React Native。后来加入团队的其他 Android 开发人员也只有很少的 Javascript 或 Web 经验。Udacity 的 App 用途Udacity 的移动 app 旨在将 Udacity 的学习体验带到用户的移动设备上。它支持身份验证、内容发现、程序注册（在某些情况还支持支付），以及消费各种类型的学习资料。Udacity 的 App 也作为新的实验性功能和旨在提升用户整体学习效果的活动的试验场。 代码库的大小iOS：97,400 行（.swift、.h、.m）Android：93,000 行（xml、java、kotlin、gradle）Udacity 为什么以及如何采用 RN ？ 为什么要引入它？当时，Udacity 正准备推出全新的移动端专用功能。我们希望在两个平台上快速进行实验和验证，因此跨平台具有很大的吸引力。可以总结为以下几点： 跨平台解决方案具有更高的可行性大多数（2/3 开发人员）团队成员非常适应 Javascript 和 Web 开发可以提高开发速度来自公司之外其他团队的成功案例 Udacity 是如何引入的？React Native 的初始特性是在一个单独的 GitHub 代码库中构建的，然后作为 git 子树分别并入 iOS 和 Android 代码库。这样可以进行非常快的原型设计，并且如果有必要，可以将某些功能作为独立产品发布。Udacity 团队设计了很多原型，最终在 React Native 代码库中引入了第二个更大的功能。 时间线2016 年 8 月：为功能 1 创建 React Native 代码库2016 年 11 月：在 Android 上发布了功能 12016 年 11 月：开始开发功能 22016 年 12 月：设计功能 3 原型2017 年 1 月：功能 1 开发结束2017 年 2 月：功能 2 发布2017 年 3 月：功能 3 原型设计结束2017 年 11 月：在 Android 上更新功能 22017 年 12 月：功能 4 原型作为独立 app 发布。最终由于性能问题取消了对原生的支持2018 年 2 月：在 iOS 上更新功能 22018 年 4 月：从 Android 中移除功能 12018 年 6 月：从两个 app 中移除功能 2 为什么要移除 React Native？原因很简单。因为剩下的唯一一个 React Native 功能已经没有用了，我们不再需要支持它。或许这样问会更有趣：“为什么我们不继续在 React Native 上投入，以便获得新功能？”此时，需要考虑几件事： 同时需要在两个平台上构建的功能数量越来越少2.Android 特定需求在增加 对长期维护成本感到沮丧4.Android 团队不愿继续使用 React Native 用什么来取代 React Native？Udacity 移除的 React Native 功能不再受支持，所以不需要进行任何替换。初次尝试 React Native 给我们带来哪些好处？使用 React Native 进行跨平台构建非常容易可以引入 React 和 Javascript 生态系统中的库和工具能够同时在两个平台上对功能进行原型设计跨职能团队中的单个开发人员能够同时为两个平台构建大部分功能团队对 React Native 的整体理解有所改善 遇到了哪些问题？在使用 React Native 期间，我们遇到了很多问，主要在于流程、使用场景，React Native 本身的问题。 设计和体验方面的挑战平台一致的 UI/UX因为要往现有的体验中加入一些新的页面，所以我们希望新的 React Native 代码能够遵循原生平台模式和现有的样式，这意味着我们不一定能为两个平台使用相同的 UI 设计。要在 React Native 中确保每个平台本身的样式并不困难，但确实需要了解每个代码库的设计范式。至少需要对平台以及每个操作系统的自定义小部件进行检查。对于我们来说，通常需要与每个平台的开发人员和设计人员沟通，以便了解需求是什么，否则如果两个平台使用同一个样式，有可能会导致在 Android 平台上的新功能体验与 App 的其他部分截然不同。在更复杂的情况下，需要使用一些额外的平台特定代码来自定义 App 体验。确保回退图标的行为是正确的就是一个例子。由于需要将新的 React Native 功能集成到现有的 app 中，要确保回退图标和后退按钮按的行为是正确的需要对 Android 原生代码和 React Native 代码做出特定的修改。有一次，Android app 的导航结构发生了变化，我们不得不修改 React Native 代码，只是为了要改变原生与 React Native 之间的集成方式。React Native 不需要有自己的 Activity，我们把它们移到 Fragment 中，并放在带有 BottomNavigationView 的屏幕中，然后在它和其他原生 Fragment 之间协调状态。这种类型的变更需要回到各自的代码库，做出更改，更新集成，并确保新的变更不会对 iOS App 产生负面影响。 设备特定问题无论你要把这个叫作“碎片化”还是“多样化”，我们仍然要面对这样的事实：越来越多的 Android 设备有自己独一无二的配置。很多时候，我们发现布局无法完美匹配不同尺寸的 Android 手机，在最新的 iPhone 或 Pixel 设备上运行流畅的动画在其他国家（在这些国家 Android 使用更为广泛）的低端设备上运行不佳。这些肯定不只是 React Native 的问题，它们是 Android 平台开发常见的问题。但随着平台检查方面的工作量以及需要考虑到的因素数量的增加，我们不得不开始考虑，React Native 到底可以为我们节省多少时间。 全球性增长在我们使用 React Native 期间，国际化成为 Android 团队的一个焦点。我们的几个国际办事处要求对 App 进行本地化，并减少 apk 大小。React Native 的字符串本地化完全可以实现，尽管确实需要做出一些额外的设置。在我们的例子中，我们需要对代码库做出单独的修改。这增加了本地化的复杂性，因为向其他团队寻求本地化帮助并非理想的方式，同时也会降低 React Native 功能的本地化频率。我们能够在一段时间内减少 apk 大小，但是 React Native 的大小可能会增加，对此我们无能为力。移除最后一个 React Native 功能后，我们的 apk 大小减少了约 10MB。 集成挑战与原生组件和导航结构的集成根据我们的经验，对于独立的功能，将 React Native 集成到现有应用程序中可能非常简单，但如果要与现有组件紧密集成和交互，则可能会麻烦一些。我们经常需要大量的桥接代码在原生和 React Native 组件之间进行通信。在 React Native 组件与现有导航结构集成的地方，每次发生变更时，都需要进行至少一次的桥接代码更新。 工具 / 构建问题集成 React Native 需要对每个 App 的构建过程做出变更。我们使用 CircleCI 来构建项目，因此需要对它进行重新配置，以支持额外的 React Native 构建步骤。而在 Android 方面，它并不像我们所预期的那么简单。在进行重新配置后，CircleCI 的构建时间增加了大约 20％。从代码库中移除最后一个 React Native 功能后，我们看到了以下改进：CircleCI 构建时间从 15 分钟减少到 12 分钟发布的 apk 大小从 28.4MB 降至 18.1MB Android 团队也经常遇到 Android/Gradle 构建工具与 React Native 的冲突问题。iOS 团队也面临着相当大的挑战。配置构建过程是一个很痛苦的事，因为我们的构建文件结构不是标准的。由于我们使用了单独的代码库，我们在 srcroot/ReactNative 目录中拉取 React Native 代码库，很多现有构建工具假设使用的是默认的 app 结构，即 /ReactNative/ios/…ios。此外，我们使用 cocoapods 进行依赖管理，最初建议用它来管理 React Native 依赖，但后来被弃用。我们的非标准文件结构也给我们带来了麻烦，我们不得不在 Podfile 中做一些令人讨厌的侵入性修改，让它从正确的位置读取配置文件。由于 cocoapods 不再是标准的 React Native 依赖管理方式，因此 Podfile 的更新只能依赖于社区，而这些更新通常不太同步。比如 css/Yoga 已经推出更新，但 Podfile 引用的却是不正确的版本。最后，我们不得不做出一些侵入性的修改，使用 sed 和正则表达式来实现版本检查和安装。iOS 项目的 CI 也是一个痛点。我们现在必须添加一个 npm 依赖层，并确保在安装其他依赖之前它们是最新的。这给我们的构建步骤带来了额外的时间消耗。还有一个问题会导致构建崩溃，比如一个版本的 npm 有package.lock文件，而另一个版本没有，这会导致我们在 React Native 升级过程中安装了不正确的依赖版本。 来自 React Native 的挑战文档React Native 本身发展得很快，但文档却相对缺乏。特别是我们是第一次使用 React Native，我们发现特定版本的文档多多少少有点不齐全。那个时候，用于将 React Native 与现有项目集成的文档似乎很少，因此，在对 CI 做出构建配置时，这无疑增加了我们的难度。随着 React Native 不断发展，文档和社区得到了改善。如果换到了今天，我们或许会更容易找到一些问题的答案。 导航我们最初使用的是 NavigationExperimental，它不是最容易使用的导航库。React Navigation 出现后，迅速在社区中流行开来，在 ReactNavigation 的功能得到真正的完善之前，我们已经弃用了 NavigationExperimental。不过，如果不把一些东西强行组合在一起（例如在呈现模态流中推送流），有些事情在 ReactNavigation 中是做不到的。 性能如前所述，我们也会注意到性能问题。我们能够制作出一些非常漂亮的动画，这些动画在高配置的 iOS 和 Android 设备上看起来很棒，但在一些低配置 Android 设备上表现不佳。进入 app 的 React Native 部分时，加载时间比我们预期的要长，而且它们看起来不像是无缝的过渡。在对功能 4 进行原型设计时，图形渲染性能是一个非常大的问题，我们不得不使用原生体验取代了 React Native。 滞后于原生平台因为它不是与 iOS 或 Android 一起构建的，所以 React Native 有时会滞后于原生平台。在很大程度上，它依赖社区来提供新的原生功能。其中一个例子就是迫切需要为 iPhone X 提供安全区域支持。我们最终选择在短时间内不使用 SafeArea，因为 React Native 团队很快就会推出该特性。跨平台开发人员在使用 SafeAreaView 开发兼容性 app 时需要特别注意这个特定于平台的特性。有时候，React Native 也会在采用新平台需求方面表现滞后，例如 Android app 被要求在 2018 年 8 月之前采用 API Level 26。而在这方面还有几个未解决的问题。 突破性的更新React Native 无法向后兼容，这点非常令人沮丧。比如，在 React Native 升级了它的底层 React 库后，PropType 就被弃用了。如果我们不维护自己的分支，很多第三方库就会变得无法使用。 来自维护方面的挑战有时候，维护 React Native 代码库对我们来说是一个挑战。如前所述，Android 通常需要额外的工作，无论是与现有代码集成还是修复 UI 问题。这导致 iOS 和 Android 使用了不同的 React Native 代码库分支，这样才能让两个平台之间不互相影响。由于使用了不同的分支，开始出现代码分歧，并且用于解决冲突的工作流增加了。结果，对一个平台的更新并不会立即被添加到另一个平台中。React Native 的演化速度也给我们带来了挑战。由于可能会出现突破性变更，因此为了获得新功能或修复 bug 而进行的依赖更新的速度变慢了。另外，有时这会导致摩擦力增加，从而降低了代码的维护速度。由于团队规模小，带宽有限，如果不是简单的、可以快速修复的问题，那么问题就不太可能很快得到解决，因为这可能需要额外的开发工作量。因为引入了 React Native，所以我们并不总能清楚地知道 bug 处于什么级别。它是否存在于两个平台中？还是只在一个平台上出现？如果只在一个平台上出现，是在原生代码中还是在 React Native 代码中？这些问题所带来的复杂性有时候会减慢 QA 过程。当需要修复 React Native 代码库中的问题时，我们现在必须同时考虑 iOS 和 Android，并且可能需要使用 3 个开发栈，而不是 1 个。此外，不是所有人都觉得 React Native 效率很高，能够迅速上手并修复问题的开发人员的数量也减少了。 我们本该可以做哪些事情？我相信，我们遇到的一些问题是我们的场景所固有的，但是我们其实可以做些不一样的事情来缓解其中的一些问题。 减少代码分歧我们本可以更好地让 React Native 代码库中的变更与每个平台的 App 保持同步。我相信保持这些更新同步将有助于增强我们的跨平台开发意识。多在设备上进行测试，特别是在 Android 上，可能可以在早期就发现更多的 UI 和性能问题，并在发布之前修复它们。在开发新功能之前解决旧问题，可以减少代码分歧的数量。 更一致的设计如果从一开始就设计更具体方案可能有助于改善功能的原生外观。比如使用与原生 App 一致的文本和边值，而不是使用新值，并在两个平台上使用它们。 团队成员需要学习对 React Native 不太熟悉的团队成员可以更努力地尝试融入新的开发栈，这样就会有更多的人能够快速解决问题。适用React Native 的场景？我相信，我们团队中没有人会认为 React Native 一无是处。我当然相信 React Native 有它适合的场景。你是否需要在两个平台上从头开始快速地构建新 app？你是否正在开发一个 App 或功能，要求在不同的平台上具有相同的外观和行为？你的 Javascript 开发人员是不是有多余的时间可用于开发移动应用？如果对这些问题中的任何一个答案“是”，那么 React Native 很可能适合你。特别是如果你有 Javascript 和 React 经验，并且正在寻找一个不需要太多原生代码就能构建的应用程序，那么 React Native 是一个非常有吸引力的选择。这样你就能够马上开始开发，而无需去学习 2 种不同的技术栈。对于新开发的完全跨平台的 app，React Native 也是一个很好的选择。还会再次使用 React Native 吗？ iOS 和 Android 团队有不同的意见。iOS有可能。iOS 团队通常很乐意使用 React Native，并考虑使用它开发新功能。此外，在产品方面，我们的 PM 对在 iOS 上运行 React Native 比对 Android 更有信心。 Android不会。理想情况下，Android 团队将来不会继续在 React Native 上投入。我们发现与 React Native 组件集成的过程很麻烦，并且在 Android 设备上的体验达不到预期。此外，还有一种倾向，坚持使用单一的开发栈，而不是在 Android 框架之上添加新的抽象层，或引入可能的错误。我们的印象是，使用 React Native 开发 Android 新功能的速度更快，但长期来看，新功能从早期阶段到能够完美发布需要更长的时间。 关于使用另一种跨平台解决方案？从团队方面来看，在不久的将来，我们可能不会在跨平台开发上继续投入。iOS 团队可以使用 React Native 构建一些特定于 iOS 的东西，因为他们通常更喜欢这种体验。就个人而言，团队的成员将继续关注 React Native 和 Flutter。随着 React Native 和 Flutter 等解决方案的不断发展，我们也将继续对它们做出评估。我们对 React Native 是否适合我们的团队和路线图有了更好的理解。在进行技术选型时，我们可以利用这些信息做出更加明智的决策。 我们看到了 React Native 的优点以及局限性。我们能否明确地给出 React Native 是否适合你的定论？不能。 但是，在评估 React Native 是否可用在你们的项目中时，希望我们的经验可以作为参考。 oschina 报道 原谅链接：https://www.oschina.net/news/97790/udacity-moved-all-react-native-code 在线教育机构 Udacity 宣布放弃使用 React Native。 上个月我们报导过 Airbnb 决定弃用 React Native 的消息，一瞬间仿佛 RN 变成了危险、不可靠的角色，而最近在 Udacity 的 Media 博客中，Udacity 的移动团队也宣布其已经删除了应用中使用 React Native 编写的所有功能。 文章回顾了 Udacity 移动工程团队使用 React Native 的经历，包括团队与应用情况、为什么使用 RN、最后又为什么放弃 RN 等。作者表示虽然 React Native 有许多优势，但是他们在开发过程中也遇到了不少困难，包括 UI/UX、性能、向后兼容性与后期维护等问题，这些问题最终导致了开发团队决定放弃使用 React Native，在尝试了 18 个月、做出 4 个功能之后完全将其代码删除。 作者还表示，删除的功能并没有使用替代方案重新开发，团队决定不再维护这几个功能。而至于将来会不会再用到 React Native，他表示 iOS 和 Android 团队有不同的考量，iOS 方面将来还是有可能使用 RN，但是 Android 上将不会再使用，它的体验和组件集成等问题过于严重。 尽管如此，作者还是对 React Native 大加赞赏，他认为其确实有适用的场合，无论是需要在两个平台上快速从头开始构建新应用，还是希望不管平台如何，应用的外观/行为都相同，这些情况下使用 React Native 都是不错的选择。特别是如果开发者有 Javascript/React 背景，并且正在准备构建一个不需要太多本机代码的应用程序，那么 React Native 将会是一个非常好的选择，它可以使得开发者不用去学习 iOS 与 Android 这两种不同的技术栈。作者希望开发者在评估 React Native 运用于他们项目的可行性时，自己团队的这些经验能够给到帮助。","categories":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/categories/RN/"}],"tags":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/tags/RN/"}]},{"title":"测试 & 开发","slug":"softTest/testDev","date":"2018-07-07T16:00:00.000Z","updated":"2020-09-01T02:53:13.099Z","comments":true,"path":"softTest/testDev.html","link":"","permalink":"https://www.lovesofttech.com/softTest/testDev.html","excerpt":"如题","text":"如题 开发要不要自己做测试？怎么做？ 开发人员如何能够胜任测试？工程效能团队如何赋能开发人员，帮助开发人员高效地完成高质量测试？ 现在包括 Google、Facebook 和 eBay 等一线互联网巨头公司都在逐渐推行“没有专职测试，测试工作由开发人员完成”的全新模式，原本专职的业务功能测试团队的规模逐渐缩小，有些甚至已经完全没有了，而原本的测试开发团队逐渐在向工程效能（Engineering Productivity）团队转型。这些互联网巨头之所以能够很好地落地这种全新的模式，是因为他们都较好地解决了这个模式的两个最大的难题： 开发人员如何能够胜任测试？ 工程效能团队如何赋能开发人员，帮助开发人员高效地完成高质量测试？ 本文会围绕这两个问题来展开讨论。 首先让我们一起看一下开发人员自己做测试都会遇到哪些问题和阻碍。 开发人员自己做测试会遇到哪些问题人性角度引发的问题首先从人性的角度来看，开发人员通常是属于“创造性思维”，自己开发的代码就像是亲儿子一样，怎么看都觉得实现很棒；而测试人员则属于“破坏性思维”，测试人员的职责就是要尽可能多的找到潜在的缺陷，而且专职的测试人员通常已经在以往的测试实践中积累了大量典型的容易出错的模式，所以测试人员比起开发人员，往往更能客观且全面做好充分的测试。 思维惯性的问题刚才是从人性角度上来讲的，如果从技术层面来看，由开发人员自己测试，会存在严重的“思维惯性”，通常开发人员在设计和开发过程中没有考虑到的分支和处理逻辑，在自己做测试的时候同样不会考虑到。比如对于一个函数，其中有一个 String 类型的输入参数，如果开发人员在做功能实现的时候压根没有考虑到 String 存在 Null 值得可能性，那么代码的实现里面也不会对 Null 值做处理，连带结果就是测试的时候就更不会设计 Null 值得测试数据，这样的“一条龙”缺失就会给代码的质量留下了缺陷隐患。更糟糕的是，对于这种情况，即便启用了代码覆盖率指标去衡量测试完整程度，也不能有效暴露这类问题，因为处理 Null 值得代码压根没有写，又何来代码覆盖率一说呐。 被测试环境和测试执行环境的复杂性问题有专职测试的时候，测试工作是专职测试人员完成的，专职测试人员通常会负责搭建被测试环境以及管理测试执行环境。被测试环境好理解，就是 System Under Test（SUT）。而测试执行环境是指用于执行测试用例的机器，比如对于 Web 的 GUI 测试，最简单的测试执行环境就是你本地机器上的浏览器。但是对于大型互联网企业，测试执行环境远远要比你想象的更复杂。通常都是一些大型的测试执行集群，甚至是内部的测试执行私有云，比如用 Selenium Grid 搭建的 GUI 测试执行环境，往往这样的集群都会有成百上千台机器，再比如用 Appium+Selenium Grid 搭建的移动设备测试集群，也往往会有上千台设备。现在没有了专职的测试人员，那就需要开发人员自己去管理、维护和搭建这些测试基础架构，这样做其实是得不偿失的，工作量本身并没有减少，只是换了一批人来做同样的事情，而且开发的精力往往更应该花在构建新的业务功能上，而不是用在维护测试基础设施。 测试数据准备的问题测试数据准备是测试过程中必不可少的关键步骤，有专职测试的时候，是由测试人员来准备测试数据的，一方面测试人员往往比开发人员在全局层面上更了解被测系统，所以对于测试数据的设计与生成也会更高效，另一方面测试人员在以往的测试过程中已经积累了很多测试数据生成的方法和小工具。现在这些都需要开发人员自己来完成了，无疑进一步加大了开发人员的工作量，而且开发人员往往对跨模块，跨系统的测试数据准备缺乏系统性的理解，往往为了生成一条非自己业务领域的数据而花费大量的学习成本。举个例子，假设现在“买家模块”的开发人员需要测试“商品买入”的操作，那么就需要事先准备好“可以被卖的商品”，这就意味着“买家模块”的开发人员需要明确知道“卖家模块”和“商品模块”的细节，才能生成“可以被卖的商品”。这类问题在目前主流的微服务架构面前会更严重，原因是为了产生一条测试数据，可能会需要依次调用很多个服务。 测试执行与 CI/CD 集成问题对于不同的业务开发团队，各个阶段采用的自动化测试框架可能都不同，比如有些会使用基于 Java 的 Selenium，也有些会使用基于 JavaScript 的 Nightwatch 等，有专职测试的时候，各种不同的测试框架与 CI/CD 的集成，都是由各个业务团队的测试人员和 CI/CD 的人员一起完成的，现在没有了专职测试，这部分工作就需要开发人员自己和 CI/CD 人员一起完成，这就要求开发人员不仅需要非常熟悉自动化测试框架的细节（很多时候为了更好地和 CI/CD 集成，会对开源测试框架或者是自研测试框架做二次开发，比如改进 retry 机制，增加覆盖率统计等等），还必须了解 CI/CD 的流水线设计以及脚本设计，然后再将需要支持的自动化测试框架的运行命令行和需要暴露的参数（测试用例 Git 路径、测试执行环境、测试报告路径等等）写进 CI/CD 的脚本。这些工作在很大程度上分散了开发的精力，对于提高开发自身效率是非常不利的。 失败测试用例归属问题有专职测试的时候，开发人员往往只关注自己修改部分相关的测试用例，模块或者服务的全回归测试中如果有失败的测试用例，通常是由测试人员跟进去分析具体原因，并协调解决然后才能发布上线。但是现在开发人员负责所有测试，他就必须关注全局的测试。举个实际的例子来看，比如“用户登录”服务的开发工程师修复了一个缺陷，然后本地自测通过后递交了代码，然后很不幸，在 CI/CD 的流水线上全回归测试却发现有部分用例失败了，虽然这些失败的用例和这次的代码修改没有任何关系，但是为了保证自己的修改能够顺利上线（CI/CD 的流水线要求只有全回归测试 100% 通过才可以上线），他必须挨个去分析失败的测试用例然后自己去找到对应的人去协调解决，这显然是非常不合理和不敏捷的做法。 归根结底，这些问题的本质都会直接影响开发人员本质工作的进度和效率，那么我们应该如何解决或者在一定程度上缓解这些问题呢？这就是接下来要讨论的问题，工程效能团队如何赋能开发人员，帮助开发人员高效地完成高质量的测试。 工程效能团队赋能开发人员进行高效率高质量的测试赋能的基本思路是能够让开发人员更专注于测试本身，而从那些辅助测试的工作（比如搭建测试执行环境、CI/CD 集成等）上解放出来，这些辅助测试的工作由“工程效能”服务或者相关支持工具链来统一解决。这个思想和和目前非常流行的 Service Mesh 的设计思想不谋而合，Service Mesh 也是可以让服务的开发人员可以把所有的精力集中在业务功能的实现上，而不需要去关心服务间通信的基础设施，像类似于服务的注册与发现，熔断机制等都会统一由 Service Mesh 以对业务应用透明的方式来实现。这些“工程效能”服务或者相关支持工具链通常都会由原本从测试开发转型过来的工程效能团队来设计和开发。那么我们接下来看一下可以提供哪些“工程效能”服务或者相关支持工具链，并且能以什么样的方式来解决或缓解上面提到的开发自己测试带来的问题。 测试执行服务（Test Execution Service）CI/CD 各个阶段所有的测试执行发起都通过测试执行服务（TES，Test Execution Service），TES 通过统一的 Web Service 接口与 CI/CD 以解耦的方式进行集成。无论是 CI/CD 流水线，还是开发人员执行测试，都通过 TES 来发起，唯一的区别是开发人员一般使用 TES 的 UI 界面发起测试，而 CI/CD 是直接在流水线脚本里面调用 TES 的 Restful API 发起测试。测试执行服务的输入参数也很简单直观，通常只包括测试框架名字、测试用例集版本号、测试用例路径、 测试报告获取方式、同步 / 异步执行开关等。一旦调用 TES 发起测试，后续如何调用 Jenkins job、如何打包下载 test jar、如何找到适合的测试执行环境、如何发起测试以及如何收集测试报告等都对使用者完全透明。可以想象，现在，开发人员在和 CI/CD 集成以及执行测试的时候，已经可以完全不需要去关心执行测试的命令行、发起测试的 Jenkins job 以及配置、测试的具体执行环境、测试报告获取等信息。这将大大提高开发人员自己执行测试的效率和便利程度。 测试数据服务（Test Data Service）前面提到过，跨模块，跨系统的测试数据准备对于开发自己做测试是个挑战，尤其是现在大量采用微服务架构，这个问题就会更突出。测试数据服务（TDS，Test Data Service）将会以 Web Service 接口的形式为所有类型的测试提供一致的测试数据准备入口。无论开发是要做 API 测试，还是 GUI 测试，或者是性能测试，都可以通过调用 TDS 的 Web Service 或者 UI 来准备各种组合类型和量级的测试数据。TDS 本身还是个开发平台，任何开发人员都可以通过脚手架代码来贡献新的数据类型支持，并且 TDS 平台本身借助自己的 Core Service 和内建数据库具有元数据管理能力，能够提供诸如测试数据数量以及质量的管理。下图展示了典型的 TDS 架构设计简图供参考。 测试执行环境服务（Test Bed Service）正如前面提到的，测试执行环境对于大型企业来说是很庞大复杂的，为了方便开发人员使用测试执行环境，或者说为了使测试执行环境对于开发人员透明，就需要引入测试执行环境服务（TBS，Test Bed Service）。TBS 的主要职责是负责管理、创建，扩容 / 收缩测试执行集群。一个常见的测试执行环境架构如下图所示，TBS 会根据等待执行的测试用例的排队情况，动态决策测试执行集群的节点数量和类型，通常会使用 Docker 和 Kubernetes 来实现 TBS 的 Gird 管理。 构建工程效率工具链仓库（Engineering Productivity Tools Store）类似于 App Store 的概念，可以把各种测试小工具以及提高效率的工具集统一在 Engineering Productivity Tools Store 里面集中版本化管理。比如文章开头我们提到过开发自己做测试的时候存在思维盲区，对于像 String 这样的参数可能遗漏 Null 值得用例，我们就可以开发一个小工具对被测函数的输入参数类型基于边界值自动生成边界测试用例，比如 String 类型的参数一定会生成 Null，SQL 注入攻击字符串，非英文字符，超长的字符串等，这样就可以系统性地避免开发的盲区。诸如此类的工具还有很多，以后有机会再和大家一一分享。 测试既服务（TaaS，Test as a Service）的全局架构除了以上的内容，其实还有诸如测试报告服务（TRS，Test Report Service）、全局测试配置服务（GRS，Global Registry Service）和用于 API 测试解耦的 Mock 服务（Unified Mock Service），由于篇幅无法一一展开。需要强调是的是，这里谈到的很多服务已经在某些企业内部有了落地实践，并取得了很好地效果。 参考摘录自：开发要不要自己做测试？怎么做？","categories":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/categories/soft-test/"}],"tags":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"}]},{"title":"React Native 已死？被Airbnb抛弃之后，Udacity也弃用了","slug":"frontend/RNNewsGiveUp","date":"2018-07-06T16:00:00.000Z","updated":"2020-09-01T02:53:12.930Z","comments":true,"path":"frontend/RNNewsGiveUp.html","link":"","permalink":"https://www.lovesofttech.com/frontend/RNNewsGiveUp.html","excerpt":"开源中国: https://www.oschina.net/news/97790/udacity-moved-all-react-native-code 英文原文：https://inthepocket.com/blog/2018/react-native-is-dead-long-live-react-native","text":"开源中国: https://www.oschina.net/news/97790/udacity-moved-all-react-native-code 英文原文：https://inthepocket.com/blog/2018/react-native-is-dead-long-live-react-native 在线教育机构 Udacity 宣布放弃使用 React Native！ 上个月，Airbnb 刚刚决定弃用 React Native 的消息，一瞬间仿佛 RN 变成了危险、不可靠的角色，而最近在 Udacity 的 Media 博客中，Udacity 的移动团队也宣布其已经删除了应用中使用 React Native 编写的所有功能。 Udacity 为什么弃用 React Native？ Udacity 的移动团队表示虽然 React Native 有许多优势，但是他们在开发过程中也遇到了不少困难，包括 UI/UX、性能、向后兼容性与后期维护等问题，这些问题最终导致了开发团队决定放弃使用 React Native，在尝试了 18 个月、做出 4 个功能之后完全将其代码删除。 作者还表示，删除的功能并没有使用替代方案重新开发，团队决定不再维护这几个功能。而至于将来会不会再用到 React Native，他表示 iOS 和 Android 团队有不同的考量，iOS 方面将来还是有可能使用 RN，但是 Android 上将不会再使用，它的体验和组件集成等问题过于严重。 Airbnb 为何放弃使用 React Native？Airbnb 表示，尽管很多团队都依赖 React Native 并计划在可预见的将来使用它，但他们最终还是无法实现最初的目标。此外，还有一些他们无法克服的技术和组织挑战，如果继续使用 React Native，这些挑战最终会变成更大的难题。 因此，Airbnb 放弃使用 React Native 的主要原因是 React Native 未能实现完全的跨平台抽象，有时候仍然需要针对特定平台单独编写代码来解决问题。这就间接要求他们的工程师必须熟悉三个平台才能真正用好 React Native，然而绝大多数开发者只熟悉一两个平台，久而久之便引发了一系列的问题。 写在最后虽然Airbnb和Udacity如今都弃用React Native，但它仍然是个极其强大的框架，能处理超大型应用，但任何工具都有局限性，目前 React Native 社区依然很活跃，Facebook 也刚刚宣布了他们在进行大规模的架构改动，让框架更灵活，并且与原生架构结合得更好，而 Expo 等公司也做出了许多突破性的库，如 react-native-gesture-handler 等。所以说，虽然 Airbnb 弃用了 React Native，但整体而言，React Native 还活着。 来源：http://baijiahao.baidu.com/s?id=1603957763408488922&amp;wfr=spider&amp;for=pc 20 日晚，Airbnb 在 Medium 上发博文宣布，“由于许多技术上和组织上的问题，我们决定放弃 React Native，将所有精力投入到原生应用上。” ▌Airbnb 的心路历程 与此同时，Airbnb 团队以 5 篇博文表达了对 React Native 从入门到放弃的心路历程： Part 1：React Native at Airbnb（https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c） 经过不断地评估新技术，最终于 2016 年初遇了 React Native 的美好，更多的工程师可以利用其跨平台的特性进行快速地开发、还能保持原生的质量、以及只需为 App 进行一次编码、同时提高了开发者的体验，基于以上的种种优点，促使 Airbnb 团队开始基于 React Native 大刀阔斧地布局。Part 2：React Native at Airbnb: The Technology（https://medium.com/airbnb-engineering/react-native-at-airbnb-the-technology-dafd0b43838） 详解了 React Native 作为一项技术的工作原理和优缺点。其在跨平台、统一设计语言系统（DLS）、React、迭代速度、基础架构、性能、Redux 等方面都有良好的优势，但 React Native 彼时仍不成熟、JavaScript 工具缺少安全性类型难以扩展、重构易出错。Part 3：Building a Cross-Platform Mobile Team（https://medium.com/airbnb-engineering/building-a-cross-platform-mobile-team-3e1837b40a88） 剖析了 React Native 对团队的一些复杂的挑战。Part 4：Making a Decision on React Native（https://medium.com/airbnb-engineering/sunsetting-react-native-1868ba28e30a） React Native 如今已经难以满足 Airbnb 的快速开发、产品质量，以及虽说 React Native 功能代码几乎均可跨平台共享，但 Airbnb 的 App 中只有一小部分是基于 React Native，所以需要大量桥接基础架构，因此Airbnb 宣布即将放弃 React Native 的使用。Part 5：What’s Next for Mobile（https://medium.com/airbnb-engineering/whats-next-for-mobile-at-airbnb-5e71618576ab） 从 React Native 开发中吸取经验，回归基于原生技术的自有框架开发将会更好。最终得出结论，他们决定在今年年底全面放弃 React Native。 这条消息来得很突然，因为 Airbnb 一直在为 React Native 贡献开源项目和工作流工具，就在上个月还在 React Europe 大会上发布了 Lona 工具，但没过多久就有了上文所述的话题…… ▌React Native 从入门到放弃 Airbnb 是硅谷创业公司中最早使用 React Native 的公司之一，他们从 2016 年就开始使用，而彼时距离 2015 年 React Native 发布才仅仅过去了一年。那时，Airbnb 有原生的 iOS 和 Android 应用，在 Web 上则使用 React。由于有着丰富的 React 经验，他们决定采用 React Native 来加速原生应用的开发。这次移植造成的影响就是带来了大量的额外工作，而这个影响刚开始时并不明显。他们花费了大量时间去研究如何编写辅助功能（如原生桥梁、封装代码等）以便让 JavaScript 支持已有的原生功能。同时，每当 iOS、Android 或 React Native 升级时，这些库都要进行维护。这不仅是技术上的难题，也造成了毫无必要的组织问题。 由于最初的意图是“作为公司整体快速前进”，因此出于诸多原因（上文 Part 2 中所述），使用 React Native 已不再是个可行的策略。 但这是否意味着其他人也要拒绝 React Native？我看未必。Airbnb 的博文中提到的许多问题我们都遇到过。但对于 Airbnb 的规模（作为比较，笔者公司 In The Pocket 的移动应用一共有 100 名开发者，一个产品团队通常包含 4~10 名开发者）以及他们在产品和用户体验需求方面的投入的力量来说，他们的确有理由放弃 React Native。不管是什么工具，都要知道，甚至预料到它的局限性。 ▌“混合应用很难。” 尽管 React Native 是个 JavaScript 框架，但绝大多数 React Native 至少会两种平台（Android、iOS、React Native）。笔者使用 React Native 大约有一年半的经验。我们认识到，理解常见的原生开发模式（如导航等）非常有必要，而且某些时候不得不在代码中加入一些原生的东西。没错，这会带来不必要的复杂性，但最终，我们仍然希望尽量使用 JavaScript，尽管其实底层是原生的。 “我们不得不支持三个平台（以前是两个），这让我们感到很疲惫……” Airbnb 有 220 个 React Native 的界面，但每个平台上还有 880 个原生界面面，这就是说只有 20% 的功能是 React Native 的。“我们遇到的大多数问题都是由混合模式造成的“。我们在将 React 与原生代码结合的过程中也认识到了这一点。但是，这些困难不应该成为选择 React Native 平台的阻力。 “许多功能都要求把各种技术结合到一起，此时迭代速度、代码质量和开发者经验都符合甚至超过了我们的目标值和期望。许多时候我们感觉我们站在了移动开发变革的最前沿。” 即使 Airbnb 已经决定要在移动产品中放弃 React Native，这也不应该对 React Native 的未来造成负面影响。Airbnb 的主要开源项目（Lottie、react-native-maps）已成为开发者日常生活的一部分，现在它们都被转交给了 React Native 社区。读完所有五篇博文之后我们可以认为，考虑到可维护性和可持续性，React Native 并不适合像 Airbnb 这种规模的应用。最终，他们证明了 React Native 是个极其强大的框架，能处理超大型应用。但任何工具都会有局限性。 但目前 React Native 社区仍然很活跃，Facebook 也刚刚宣布了他们在进行大规模的架构改动，让框架更灵活，并且与原生架构结合得更好，而 Expo 等公司也做出了许多突破性的库，如 react-native-gesture-handler 等。 所以说，虽然 Airbnb 弃用了 React Native，但整体而言，React Native 还活着。 原文：https://inthepocket.com/blog/2018/react-native-is-dead-long-live-react-native作者：Kevin Meyvaert，In The Pocket 的 Web 全栈工程师，React Native专家。译者：弯月审校：屠敏","categories":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/categories/RN/"}],"tags":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/tags/RN/"}]},{"title":"火炉原则","slug":"job/stovePrinciple","date":"2018-07-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.010Z","comments":true,"path":"job/stovePrinciple.html","link":"","permalink":"https://www.lovesofttech.com/job/stovePrinciple.html","excerpt":"所谓“火炉法则”，就是把“火炉”烧得红红的，放在那里，本身并不会主动烫人，但只要有人敢于触摸，它就必烫无疑，不会顾及触摸者的身份，人人平等，谁摸烫谁，而且立即处罚，没有下不为例。","text":"所谓“火炉法则”，就是把“火炉”烧得红红的，放在那里，本身并不会主动烫人，但只要有人敢于触摸，它就必烫无疑，不会顾及触摸者的身份，人人平等，谁摸烫谁，而且立即处罚，没有下不为例。 火炉法则的特性警示性一个火炉放在那里，熊熊火苗，告诫旁人不能轻易触碰和跨越，自然具有威慑力。制度就是规范，也应具有警示作用，起到事前的一个约束与预防作用。 及时性一个红通通的火炉，如果你去触碰它，你会马上会被灼伤，而不是摸上去，等一下再感觉到热。违背制度就会马上得到相应的惩处，承担相应的责任，及时性是奖惩的一个重要原则。 必然性如果你去触碰火炉，你必然会被灼伤，而不会这次碰了会灼伤，下次就不会灼伤。违背制度必然会承担相应的后果，而不会因为时间、地点的改变而改变。 平等性不管你是什么人，一般工人也好，政府官员也好，企业老板也好，去触碰了火炉，都会被灼伤，火炉不会因为你是什么人而选择是否灼伤。在制度面前，人人平等，谁违反了制度，都会受到相应的惩戒。 结语从这四个方面来看，用火炉来比喻制度和制度的执行，倒也显得十分贴切。换言之，对于制度建设，教育和规劝违法乱纪的社会行为确有必要，但还应与“严厉的惩罚”相结合，方能产生“治标”的同时、更能“治本”的效果。“教育规劝”也好，“培养守则意识”也罢，都只是寄托在“行为人能够自觉遵守”这一点上；而严厉的处罚，则是强制行为人必须遵守，是对上述“行为要求”的一种必要的配套措施。","categories":[{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/categories/team/"},{"name":"job","slug":"team/job","permalink":"https://www.lovesofttech.com/categories/team/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"}]},{"title":"testLink 1.9.17 安装配置，环境：CentOS 7.5 + PHP 7.2.7 + nginx 1.14.0","slug":"softTest/centOS7TestLink","date":"2018-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.096Z","comments":true,"path":"softTest/centOS7TestLink.html","link":"","permalink":"https://www.lovesofttech.com/softTest/centOS7TestLink.html","excerpt":"如题","text":"如题 TestLink的主要功能 测试需求管理 测试用例管理 测试用例对测试需求的覆盖管理 测试计划的制定 测试用例的执行 大量测试数据的度量和统计功能。 但 Testlink 无缺陷管理 下载github home12wget https://github.com/TestLinkOpenSourceTRMS/testlink-code/archive/1.9.17.tar.gztar -xzvf 1.9.17.tar.gz 解压之后得到 testlink-code-1.9.17 将其移至 web 目录（/home/unginx/apps) 并改名为 testlink nginx 站点配置1vim /usr/local/nginx/vhosts/testlink.conf 配置文件内容如下：123456789101112131415server &#123; listen 80; server_name testlink.apg.com; charset utf-8; access_log logs/testlink.apg.com.access.log; error_log logs/testlink.apg.com.error.log; root /home/unginx/apps/testlink/; index index.php; location ~ [^/].php(/|$) &#123; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_index index.php; include fastcgi.conf; &#125;&#125; 然后执行下面的命令使配置生效。1/usr/local/nginx/sbin/nginx -s reload 安装配置访问 testlink.apg.com点击【New installation】 检查配置，有失败项，不能继续。 以下有关 LDAP 的配置警告，可以先不管。1Checking LDAP library Failed! LDAP library not enabled. LDAP authentication cannot be used. (default internal authentication will works). 作如下配置123[root@centOS7BasicForTest apps]# mkdir -p /var/testlink/logs/[root@centOS7BasicForTest apps]# mkdir -p /var/testlink/upload_area/[root@centOS7BasicForTest apps]# chown -R unginx:gweb /var/testlink 然后刷新 可以继续了，不过还可以修改 php 配置使最前面两项达到安装要求。针对检查结果提示，修改 php 配置1vim /usr/local/php/etc/php.ini 修改以下项1234#session.gc_maxlifetime = 1440session.gc_maxlifetime = 2400#max_execution_time = 30max_execution_time = 120 重启1/etc/init.d/php-fpm restart 我们要用 mysql，所以，忽略 Postgres 和 MSSQL。这样，除了 load，其它项均符合要求。继续到下一步，填写数据库配置相关项，然后继续。 最后一步，出错了，大概是因为数据库访问地址没有权限访问。 Database Error Message: Invalid argument 提示信息：12345TestLink setup will now attempt to setup the database:Creating connection to Database Server:Failed!Please check the database login details and try again.Database Error Message: Invalid argument 以上错误，在 windows 本地搭建相同的 php 版本，web 服务器用的是 apache，用 phpStorm 调试，最终发现是 ip 地址和密码在调用 preg_replace 方法时被修改了，所以会出错。需要修改源代码来解决。 nginx 提示的信息如下，不过，这个信息可忽略。 12018/07/12 11:24:04 [error] 7281#0: *335 FastCGI sent in stderr: &quot;PHP message: PHP Deprecated: __autoload() is deprecated, use spl_autoload_register() instead in /home/unginx/apps/testlink/third_party/phpmailer/PHPMailerAutoload.php on line 45&quot; while reading response header from upstream, client: 192.168.1.89, server: testlink.apg.com, request: &quot;POST /install/installNewDB.php HTTP/1.1&quot;, upstream: &quot;fastcgi://unix:/tmp/php-cgi.sock:&quot;, host: &quot;testlink.apg.com&quot;, referrer: &quot;http://testlink.apg.com/install/installDbInput.php?&quot; ## 解决修改文件：testlink-code-1.9.17\\install\\installNewDB.php大概从第 63 行开始，找到下面的变量，注释掉 preg_replace 所在的行。12345678$db_server = trim($_SESSION['databasehost']);//$db_server = preg_replace($san,'',$db_server);$db_admin_pass = trim($_SESSION['databaseloginpassword']);//$db_admin_pass = preg_replace($san,'',$db_admin_pass);$tl_db_passwd = trim($_SESSION['tl_loginpassword']);//$tl_db_passwd = preg_replace($san,'',$tl_db_passwd); 不注释的话 会将 IP 地址里的点“吃掉”，如 192.168.1.3 会变成 19216813 会将密码里的特殊字符“吃掉” 修改之后再次运行，提示如下：12345678910111213141516171819202122232425TestLink setup will now attempt to setup the database:Creating connection to Database Server:OK!Database testlink does not exist. Will attempt to create:Creating database `testlink`:OK!Creating Testlink DB user `testlinkDbUser`:OK! ( ok - new user) Processing:sql/mysql/testlink_create_tables.sqlOK!Writing configuration file:OK!IMPORTANT NOTICE - IMPORTANT NOTICE - IMPORTANT NOTICE - IMPORTANT NOTICEYOU NEED TO RUN MANUALLY Following Script on your DB CLIENT ApplicationC:\\workspace\\php\\testlink-code-1.9.17\\install/sql/mysql/testlink_create_udf0.sqlTHANKS A LOT YOUR ATTENTION PLEASE:To have a fully functional installation You need to configure mail server settings, following this stepscopy from config.inc.php, [SMTP] Section into custom_config.inc.php.complete correct data regarding email addresses and mail server.Installation was successful!You can now log in to Testlink (using login name:admin / password:admin - Please Click Me!). 登录出错http://tl.dev.com/login.php1mysqli_real_connect(): (HY000/1045): Access denied for user &apos;testlinkDbUser&apos;@&apos;192.168.1.89&apos; (using password: YES) - in C:\\workspace\\php\\testlink-code-1.9.17\\third_party\\adodb\\drivers\\adodb-mysqli.inc.php - Line 124,[source] =&gt; GUI,[timestamp] =&gt; 1531377269,[userID] =&gt; 0,[sessionID] =&gt; ,[transactionID] =&gt; ,[activityCode] =&gt; PHP,[objectID] =&gt; ,[objectType] =&gt; ,[transaction] =&gt; ,[*activateCaching] =&gt; ,[dbID] =&gt; ,[*detailLevel] =&gt; 4294967295,[*userFeedback] =&gt; ,[*serializationInterfaces] =&gt; ,[*serializationFormatDescriptors] =&gt; ,[*tables] =&gt; Array ([assignment_status] =&gt; assignment_status,[assignment_types] =&gt; assignment_types,[attachments] =&gt; attachments,[builds] =&gt; builds,[cfield_build_design_values] =&gt; cfield_build_design_values,[cfield_design_values] =&gt; cfield_design_values,[cfield_execution_values] =&gt; cfield_execution_values,[cfield_node_types] =&gt; cfield_node_types,[cfield_testplan_design_values] =&gt; cfield_testplan_design_values,[cfield_testprojects] =&gt; cfield_testprojects,[custom_fields] =&gt; custom_fields,[db_version] =&gt; db_version,[events] =&gt; events,[execution_bugs] =&gt; execution_bugs,[execution_tcsteps] =&gt; execution_tcsteps,[executions] =&gt; executions,[inventory] =&gt; inventory,[issuetrackers] =&gt; issuetrackers,[testproject_issuetracker] =&gt; testproject_issuetracker,[codetrackers] =&gt; codetrackers,[testproject_codetracker] =&gt; testproject_codetracker,[keywords] =&gt; keywords,[milestones] =&gt; milestones,[node_types] =&gt; node_types,[nodes_hierarchy] =&gt; nodes_hierarchy,[object_keywords] =&gt; object_keywords,[platforms] =&gt; platforms,[plugins] =&gt; plugins,[plugins_configuration] =&gt; plugins_configuration,[req_coverage] =&gt; req_coverage,[req_relations] =&gt; req_relations,[req_specs] =&gt; req_specs,[req_specs_revisions] =&gt; req_specs_revisions,[reqmgrsystems] =&gt; reqmgrsystems,[testproject_reqmgrsystem] =&gt; testproject_reqmgrsystem,[requirements] =&gt; requirements,[req_versions] =&gt; req_versions,[req_revisions] =&gt; req_revisions,[req_notify_assignments] =&gt; req_notify_assignments,[req_monitor] =&gt; req_monitor,[rights] =&gt; rights,[risk_assignments] =&gt; risk_assignments,[role_rights] =&gt; role_rights,[roles] =&gt; roles,[testcase_relations] =&gt; testcase_relations,[tcversions] =&gt; tcversions,[tcsteps] =&gt; tcsteps,[testcase_keywords] =&gt; testcase_keywords,[testplan_platforms] =&gt; testplan_platforms,[testcase_script_links] =&gt; testcase_script_links,[testplan_tcversions] =&gt; testplan_tcversions,[testplans] =&gt; testplans,[testprojects] =&gt; testprojects,[testsuites] =&gt; testsuites,[text_templates] =&gt; text_templates,[transactions] =&gt; transactions,[user_assignments] =&gt; user_assignments,[user_group] =&gt; user_group,[user_group_assign] =&gt; user_group_assign,[user_testplan_roles] =&gt; user_testplan_roles,[user_testproject_roles] =&gt; user_testproject_roles,[users] =&gt; users),[*views] =&gt; Array ([tcversions_last_active] =&gt; tcversions_last_active,[last_executions] =&gt; last_executions,[last_executions_by_platforms] =&gt; last_executions_by_platforms,[latest_tcase_version_number] =&gt; latest_tcase_version_number,[latest_req_version] =&gt; latest_req_version,[latest_rspec_revision] =&gt; latest_rspec_revision),[*auditCfg] =&gt; stdClass Object ([eventSource] =&gt; GUI,[logEnabled] =&gt; 1))) called at [C:\\workspace\\php\\testlink-code-1.9.17\\lib\\functions\\logger.class.php:558] 授权即可1GRANT ALL PRIVILEGES ON *.* TO &apos;testlinkDbUser&apos;@&apos;192.168.1.89&apos; IDENTIFIED BY &apos;abd123K^4@#!&apos; WITH GRANT OPTION; testlink 配置为中文$tlCfg-&gt;default_language = ‘en_GB’替换为$tlCfg-&gt;default_language = ‘zh_CN’然后以管理员身份登录之后，将语言设置为中文即可，如下所示： 时区显示不正确配置解决方法是在根目录下的 config.inc.php 文件的 /* [GLOBAL] / 下加入以下代码12putenv(&quot;TZ=Asia/Shanghai&quot;);date_default_timezone_set(&quot;PRC&quot;); 与 jira 集成选【jira (Interface: db)】模式12345678910&lt;issuetracker&gt; &lt;jiraversion&gt;7.5.2&lt;/jiraversion&gt; &lt;dbhost&gt;192.168.1.91:3306&lt;/dbhost&gt; &lt;dbname&gt;jira&lt;/dbname&gt; &lt;dbtype&gt;mysql&lt;/dbtype&gt; &lt;dbuser&gt;root&lt;/dbuser&gt; &lt;dbpassword&gt;123456&lt;/dbpassword&gt; &lt;uriview&gt;http://jira.apg.com/browse/&lt;/uriview&gt; &lt;uricreate&gt;http://jira.apg.com/secure/Dashboard.jspa&lt;/uricreate&gt;&lt;/issuetracker&gt; testlink 和 jira 的集成，一般步骤 还有待研究，还没有找到添加 jira bug 的入口。 System-Issue Tracker Management 添加 JIRA 的 db 模式，如上。 测试项目管理，“Issue Tracker Integration” 勾选 “活动的“，并选择 ”Issue Tracker“。 测试用例页面，点击新增的Bug管理图标，可进入 JIRA 系统。 到JIRA系统中提交问题，复制问题编号。 将问题编号与TestLink中的测试用例进行关联，关联后测试用例下方会显示相关联的Bug标题，点击标题可以直接链接到JIRA系统的此Bug页面。 报错应该是有 Bug，暂时未解决，后来又重新添加计划任务，没有再出现这个错误，应该是前一步新建测试计划，保存的时候因为输入的内容有中文或者有特殊字符导致没有保存成功，后来没有重现。123456789101112131415#0 database-&gt;exec_query( /* Class:testplan - Method: get_builds_for_html_options */ SELECT id, name FROM builds WHERE testplan_id = AND active=1 AND is_open=1 ORDER BY name ASC, -1) called at [/home/unginx/apps/testlink/lib/functions/database.class.php:728]#1 database-&gt;fetchColumnsIntoMap( /* Class:testplan - Method: get_builds_for_html_options */ SELECT id, name FROM builds WHERE testplan_id = AND active=1 AND is_open=1 ORDER BY name ASC, id, name) called at [/home/unginx/apps/testlink/lib/functions/testplan.class.php:1978]#2 testplan-&gt;get_builds_for_html_options(, 1, 1) called at [/home/unginx/apps/testlink/lib/functions/tlTestCaseFilterControl.class.php:1239]#3 tlTestCaseFilterControl-&gt;init_setting_build() called at [/home/unginx/apps/testlink/lib/functions/tlTestCaseFilterControl.class.php:571]#4 tlTestCaseFilterControl-&gt;init_settings() called at [/home/unginx/apps/testlink/lib/functions/tlFilterControl.class.php:246]#5 tlFilterControl-&gt;__construct(database Object ([db] =&gt; ADODB_mysqli Object ([databaseType] =&gt; mysqli,[dataProvider] =&gt; mysql,[hasInsertID] =&gt; 1,[hasAffectedRows] =&gt; 1,[metaTablesSQL] =&gt; SELECT TABLE_NAME, CASE WHEN TABLE_TYPE = &apos;VIEW&apos; THEN &apos;V&apos; ELSE &apos;T&apos; END FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=,[metaColumnsSQL] =&gt; SHOW COLUMNS FROM `%s`,[fmtTimeStamp] =&gt; &apos;Y-m-d H:i:s&apos;,[hasLimit] =&gt; 1,[hasMoveFirst] =&gt; 1,[hasGenID] =&gt; 1,[isoDates] =&gt; 1,[sysDate] =&gt; CURDATE(),[sysTimeStamp] =&gt; NOW(),[hasTransactions] =&gt; 1,[forceNewConnect] =&gt; 1,[poorAffectedRows] =&gt; 1,[clientFlags] =&gt; 0,[substr] =&gt; substring,[port] =&gt; 3306,[socket] =&gt; ,[_bindInputArray] =&gt; ,[nameQuote] =&gt; `,[optionFlags] =&gt; Array ([0] =&gt; Array ([0] =&gt; 5,[1] =&gt; 0)),[arrayClass] =&gt; ADORecordSet_array_mysqli,[multiQuery] =&gt; ,[_genIDSQL] =&gt; update %s set id=LAST_INSERT_ID(id+1);,[_genSeqSQL] =&gt; create table if not exists %s (id int not null),[_genSeqCountSQL] =&gt; select count(*) from %s,[_genSeq2SQL] =&gt; insert into %s values (%s),[_dropSeqSQL] =&gt; drop table if exists %s,[database] =&gt; testlink,[host] =&gt; 127.0.0.1,[user] =&gt; testlinkDbUser,[password] =&gt; not stored,[debug] =&gt; ,[maxblobsize] =&gt; 262144,[concat_operator] =&gt; +,[length] =&gt; length,[random] =&gt; rand(),[upperCase] =&gt; upper,[fmtDate] =&gt; &apos;Y-m-d&apos;,[true] =&gt; 1,[false] =&gt; 0,[replaceQuote] =&gt; \\&apos;,[charSet] =&gt; ,[metaDatabasesSQL] =&gt; ,[uniqueOrderBy] =&gt; ,[emptyDate] =&gt; ,[emptyTimeStamp] =&gt; ,[lastInsID] =&gt; ,[hasTop] =&gt; ,[readOnly] =&gt; ,[genID] =&gt; 0,[raiseErrorFn] =&gt; ,[cacheSecs] =&gt; 3600,[memCache] =&gt; ,[memCacheHost] =&gt; ,[memCachePort] =&gt; 11211,[memCacheCompress] =&gt; ,[sysUTimeStamp] =&gt; ,[noNullStrings] =&gt; ,[numCacheHits] =&gt; 0,[numCacheMisses] =&gt; 0,[pageExecuteCountRows] =&gt; 1,[uniqueSort] =&gt; ,[leftOuter] =&gt; ,[rightOuter] =&gt; ,[ansiOuter] =&gt; ,[autoRollback] =&gt; ,[fnExecute] =&gt; ,[fnCacheExecute] =&gt; ,[blobEncodeType] =&gt; ,[rsPrefix] =&gt; ADORecordSet_,[autoCommit] =&gt; 1,[transOff] =&gt; 0,[transCnt] =&gt; 0,[fetchMode] =&gt; 2,[null2null] =&gt; null,[bulkBind] =&gt; ,[_oldRaiseFn] =&gt; ,[_transOK] =&gt; ,[_connectionID] =&gt; mysqli Object ([affected_rows] =&gt; ,[client_info] =&gt; ,[client_version] =&gt; ,[connect_errno] =&gt; ,[connect_error] =&gt; ,[errno] =&gt; ,[error] =&gt; ,[error_list] =&gt; ,[field_count] =&gt; ,[host_info] =&gt; ,[info] =&gt; ,[insert_id] =&gt; ,[server_info] =&gt; ,[server_version] =&gt; ,[stat] =&gt; ,[sqlstate] =&gt; ,[protocol_version] =&gt; ,[thread_id] =&gt; ,[warning_count] =&gt; ),[_errorMsg] =&gt; You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;AND active=1 AND is_open=1 ORDER BY name ASC&apos; at line 1,[_errorCode] =&gt; ,[_queryID] =&gt; 1,[_isPersistentConnection] =&gt; ,[_evalAll] =&gt; ,[_affected] =&gt; ,[_logsql] =&gt; ,[_transmode] =&gt; ,[*connectionParameters] =&gt; Array (),[databaseName] =&gt; testlink),[queries_array] =&gt; Array (),[is_connected] =&gt; 1,[nQuery] =&gt; 0,[overallDuration] =&gt; 0,[dbType] =&gt; mysqli,[databaselogEnabled] =&gt; 0,[databaselogQueries] =&gt; 0)) called at [/home/unginx/apps/testlink/lib/functions/tlTestCaseFilterControl.class.php:340]#6 tlTestCaseFilterControl-&gt;__construct(database Object ([db] =&gt; ADODB_mysqli Object ([databaseType] =&gt; mysqli,[dataProvider] =&gt; mysql,[hasInsertID] =&gt; 1,[hasAffectedRows] =&gt; 1,[metaTablesSQL] =&gt; SELECT TABLE_NAME, CASE WHEN TABLE_TYPE = &apos;VIEW&apos; THEN &apos;V&apos; ELSE &apos;T&apos; END FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=,[metaColumnsSQL] =&gt; SHOW COLUMNS FROM `%s`,[fmtTimeStamp] =&gt; &apos;Y-m-d H:i:s&apos;,[hasLimit] =&gt; 1,[hasMoveFirst] =&gt; 1,[hasGenID] =&gt; 1,[isoDates] =&gt; 1,[sysDate] =&gt; CURDATE(),[sysTimeStamp] =&gt; NOW(),[hasTransactions] =&gt; 1,[forceNewConnect] =&gt; 1,[poorAffectedRows] =&gt; 1,[clientFlags] =&gt; 0,[substr] =&gt; substring,[port] =&gt; 3306,[socket] =&gt; ,[_bindInputArray] =&gt; ,[nameQuote] =&gt; `,[optionFlags] =&gt; Array ([0] =&gt; Array ([0] =&gt; 5,[1] =&gt; 0)),[arrayClass] =&gt; ADORecordSet_array_mysqli,[multiQuery] =&gt; ,[_genIDSQL] =&gt; update %s set id=LAST_INSERT_ID(id+1);,[_genSeqSQL] =&gt; create table if not exists %s (id int not null),[_genSeqCountSQL] =&gt; select count(*) from %s,[_genSeq2SQL] =&gt; insert into %s values (%s),[_dropSeqSQL] =&gt; drop table if exists %s,[database] =&gt; testlink,[host] =&gt; 127.0.0.1,[user] =&gt; testlinkDbUser,[password] =&gt; not stored,[debug] =&gt; ,[maxblobsize] =&gt; 262144,[concat_operator] =&gt; +,[length] =&gt; length,[random] =&gt; rand(),[upperCase] =&gt; upper,[fmtDate] =&gt; &apos;Y-m-d&apos;,[true] =&gt; 1,[false] =&gt; 0,[replaceQuote] =&gt; \\&apos;,[charSet] =&gt; ,[metaDatabasesSQL] =&gt; ,[uniqueOrderBy] =&gt; ,[emptyDate] =&gt; ,[emptyTimeStamp] =&gt; ,[lastInsID] =&gt; ,[hasTop] =&gt; ,[readOnly] =&gt; ,[genID] =&gt; 0,[raiseErrorFn] =&gt; ,[cacheSecs] =&gt; 3600,[memCache] =&gt; ,[memCacheHost] =&gt; ,[memCachePort] =&gt; 11211,[memCacheCompress] =&gt; ,[sysUTimeStamp] =&gt; ,[noNullStrings] =&gt; ,[numCacheHits] =&gt; 0,[numCacheMisses] =&gt; 0,[pageExecuteCountRows] =&gt; 1,[uniqueSort] =&gt; ,[leftOuter] =&gt; ,[rightOuter] =&gt; ,[ansiOuter] =&gt; ,[autoRollback] =&gt; ,[fnExecute] =&gt; ,[fnCacheExecute] =&gt; ,[blobEncodeType] =&gt; ,[rsPrefix] =&gt; ADORecordSet_,[autoCommit] =&gt; 1,[transOff] =&gt; 0,[transCnt] =&gt; 0,[fetchMode] =&gt; 2,[null2null] =&gt; null,[bulkBind] =&gt; ,[_oldRaiseFn] =&gt; ,[_transOK] =&gt; ,[_connectionID] =&gt; mysqli Object ([affected_rows] =&gt; ,[client_info] =&gt; ,[client_version] =&gt; ,[connect_errno] =&gt; ,[connect_error] =&gt; ,[errno] =&gt; ,[error] =&gt; ,[error_list] =&gt; ,[field_count] =&gt; ,[host_info] =&gt; ,[info] =&gt; ,[insert_id] =&gt; ,[server_info] =&gt; ,[server_version] =&gt; ,[stat] =&gt; ,[sqlstate] =&gt; ,[protocol_version] =&gt; ,[thread_id] =&gt; ,[warning_count] =&gt; ),[_errorMsg] =&gt; You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;AND active=1 AND is_open=1 ORDER BY name ASC&apos; at line 1,[_errorCode] =&gt; ,[_queryID] =&gt; 1,[_isPersistentConnection] =&gt; ,[_evalAll] =&gt; ,[_affected] =&gt; ,[_logsql] =&gt; ,[_transmode] =&gt; ,[*connectionParameters] =&gt; Array (),[databaseName] =&gt; testlink),[queries_array] =&gt; Array (),[is_connected] =&gt; 1,[nQuery] =&gt; 0,[overallDuration] =&gt; 0,[dbType] =&gt; mysqli,[databaselogEnabled] =&gt; 0,[databaselogQueries] =&gt; 0), execution_mode) called at [/home/unginx/apps/testlink/lib/execute/execNavigator.php:29] 使用指南中译版：TestLink教程：一份完整指南英文原版：TestLink Tutorial: A Complete Guide其它学习资料：TestLink学习四：TestLink1.9.13使用说明 load 加载失败，尝试配置，未成功1Checking LDAP library Failed! LDAP library not enabled. LDAP authentication cannot be used. (default internal authentication will works). 尝试解决1yum -y install openldap php-gd gd-devel php-ldap php.ini 修改123extension=ldap``` 重启 php，提示：Unable to load dynamic library &apos;ldap&apos; [root@centOS7BasicForTest testlink]# /etc/init.d/php-fpm restartGracefully shutting down php-fpm . doneStarting php-fpm [12-Jul-2018 11:10:50] NOTICE: PHP message: PHP Warning: PHP Startup: Unable to load dynamic library ‘ldap’ (tried: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/ldap (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/ldap: cannot open shared object file: No such file or directory), /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/ldap.so (/usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/ldap.so: cannot open shared object file: No such file or directory)) in Unknown on line 0 done`编译参数添加 –with-ldap 后重新安装，也没管用。故，先放弃。 相关链接https://github.com/TestLinkOpenSourceTRMS/testlink-codehttp://www.testlink.org/http://www.mantis.org.cn/","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"soft test","slug":"CentOS/soft-test","permalink":"https://www.lovesofttech.com/categories/CentOS/soft-test/"},{"name":"testLink","slug":"CentOS/soft-test/testLink","permalink":"https://www.lovesofttech.com/categories/CentOS/soft-test/testLink/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"},{"name":"testLink","slug":"testLink","permalink":"https://www.lovesofttech.com/tags/testLink/"}]},{"title":"selenium","slug":"softTest/selenium","date":"2018-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.098Z","comments":true,"path":"softTest/selenium.html","link":"","permalink":"https://www.lovesofttech.com/softTest/selenium.html","excerpt":"如题","text":"如题 https://www.seleniumhq.org/download/3.12 版http://selenium-release.storage.googleapis.com/index.html?path=3.12/ 未完待续…","categories":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/categories/soft-test/"},{"name":"selenium","slug":"soft-test/selenium","permalink":"https://www.lovesofttech.com/categories/soft-test/selenium/"}],"tags":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"},{"name":"selenium","slug":"selenium","permalink":"https://www.lovesofttech.com/tags/selenium/"}]},{"title":"软件测试方法，等价类划分法","slug":"softTest/testEquivalence","date":"2018-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.100Z","comments":true,"path":"softTest/testEquivalence.html","link":"","permalink":"https://www.lovesofttech.com/softTest/testEquivalence.html","excerpt":"如题","text":"如题 概念 等价类：等价类是指某个输入域的子集合。在该子集合中，各个输入数据对于揭露程序中的错误都是等效的，具有等价特性。 有效等价类：是指对于程序的需求规格说明来说是合理的，有意义的输入数据构成的集合。利用有效等价类可检验程序是否实现了规格说明中所规定的功能和性能（确认过程）。 无效等价类：与有效等价类的定义恰巧相反，是指对于程序的需求规格说明来说是不合理的，无意义的输入数据构成的集合。利用无效等价类可检验程序对于无效数据的异常处理能力（检验过程）。设计测试用例时，要同时考虑这两种等价类。因为，软件不仅要能接收合理的数据，也要能经受意外的考验。这样的测试才能确保软件具有更高的可靠性。 健壮性测试：健壮性有两层含义即容错能力和恢复能力。 容错性测试通常构造一些不合理的输入来引诱软件错误，例如 输入错误的数据类型：如“猴”年“马”月 输入定义域之外的数值 粗暴一些方式俗称“大猩猩”测试法。除了不能拳打脚踢嘴咬之外，什么招术都可以使出来。例如在测试客户机-服务器模式的软件时，把网线拔掉，造成通信异常中断。 恢复测试重点考察以下几项： 系统能否重新运行 有无重要的数据丢失 是否毁坏了其他相关的软件硬件 测试方法 划分：指互不相交的一组子集，这些子集的并是整个集合。对测试的意义：完备性和无冗余性。 等价类合理地假设：测试某等价类的代表值就等于对这一类其它值的测试。 等价类划分：等价类划分是一种典型的黑盒测试方法。等价类测试方法是把所有可能的输入数据，即程序的输入域划分成若干部分，然后从每一部分中选取少数有代表性的数据作为测试用例。使用等价类划分方法设计测试用例要经历划分等价类（列出等价类表）和选取测试用例两步，它将不能穷举的测试过程进行合理分类，从而保证设计出来的测试用例具有完整性和代表性。 参考https://www.cnblogs.com/whylaughing/p/5821812.html","categories":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/categories/soft-test/"}],"tags":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"}]},{"title":"JMeter","slug":"softTest/jmeter","date":"2018-06-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.097Z","comments":true,"path":"softTest/jmeter.html","link":"","permalink":"https://www.lovesofttech.com/softTest/jmeter.html","excerpt":"如题","text":"如题 download目前的最新版Getting Started http://www.51testing.com/zhuanti/jmeter.htmlJMeter性能测试，完整入门篇 badboy home pagedownloads page最近更新：二月 2016 BadboyInstaller-2.2.5.exe 未完待续…","categories":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/categories/soft-test/"},{"name":"JMeter","slug":"soft-test/JMeter","permalink":"https://www.lovesofttech.com/categories/soft-test/JMeter/"}],"tags":[{"name":"soft test","slug":"soft-test","permalink":"https://www.lovesofttech.com/tags/soft-test/"},{"name":"JMeter","slug":"JMeter","permalink":"https://www.lovesofttech.com/tags/JMeter/"}]},{"title":"Airbnb 宣布放弃使用 React Native，回归使用原生技术","slug":"frontend/RNNewsGiveUpAirbnb","date":"2018-06-20T16:00:00.000Z","updated":"2020-09-01T02:53:12.931Z","comments":true,"path":"frontend/RNNewsGiveUpAirbnb.html","link":"","permalink":"https://www.lovesofttech.com/frontend/RNNewsGiveUpAirbnb.html","excerpt":"来源：https://www.oschina.net/news/97276/airbnb-sunsetting-react-native","text":"来源：https://www.oschina.net/news/97276/airbnb-sunsetting-react-native Airbnb 表示，尽管很多团队都依赖 React Native 并计划在可预见的将来使用它，但他们最终还是无法实现最初的目标。此外，还有一些他们无法克服的技术和组织挑战，如果继续使用 React Native，这些挑战最终会变成更大的难题。 因此，Airbnb 宣布放弃使用 React Native，并将所有的努力重新投入到基于原生技术开发 App。 Airbnb 在博客中提到，当 React Native 按照预期运行时，工程师能以惊人的速度开发应用。然而实际情况是由于众多的技术和组织问题，RN 反而给项目带来了意外的延迟，还增加了项目成员的挫败感。 接着，Airbnb 表示尽管 React Native 中的代码几乎完全是跨平台共享的，但他们的应用程序中只有一小部分是 React Native。另外还需要编写大量桥接基础设施的代码，以保证产品工程师能够有效地工作。因此，他们最后是在三个平台（React Native, Android, iOS），而不是两个平台上进行编码。 可以看到，Airbnb 放弃使用 React Native 的主要原因是 React Native 未能实现完全的跨平台抽象，有时候仍然需要针对特定平台单独编写代码来解决问题。这就间接要求他们的工程师必须熟悉三个平台才能真正用好 React Native，然而绝大多数开发者只熟悉一两个平台，久而久之便引发了一系列的问题。 最后，Airbnb 说道，决定是否使用新平台是一个重大决定，这完全取决于你团队独有的因素。他们的经历和放弃原因可能不适用于你的团队。事实上，许多公司今天仍在继续使用 React Native，它可能仍然是许多其他公司的最佳选择。","categories":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/categories/RN/"}],"tags":[{"name":"RN","slug":"RN","permalink":"https://www.lovesofttech.com/tags/RN/"}]},{"title":"CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码","slug":"git/centOS7GitSSHKey","date":"2018-06-20T16:00:00.000Z","updated":"2020-09-01T02:53:12.959Z","comments":true,"path":"git/centOS7GitSSHKey.html","link":"","permalink":"https://www.lovesofttech.com/git/centOS7GitSSHKey.html","excerpt":"如题","text":"如题 配置全局用户信息12git config --global user.name &quot;你的用户名&quot;git config --global user.email &quot;你的邮箱&quot; 生成秘钥执行以下命令生成秘钥：ssh-keygen -t rsa -C “你的邮箱”这一步，也可以参考：码云帮助文档 -&gt; 生成并部署SSH key12345678910111213141516171819202122[root@centOS7BasicForTest config]# ssh-keygen -t rsa -C &quot;***@qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): Created directory &apos;/root/.ssh&apos;.Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:SHA256:d502E7pWZL9Mv5ZfwgIGY913sXlJWUdf7cw8N9wcEPQ ***@qq.comThe key&apos;s randomart image is:+---[RSA 2048]----+| .+o+O|| . . ooX|| + . . *E*|| . o * OX|| S + o B.=|| o o =ooo|| + oo+|| . . +o|| ..o|+----[SHA256]-----+ 获取生成的 key1cat ~/.ssh/id_rsa.pub 参照码云的帮助页面，将 id_rsa.pub 的内容，粘贴至码云项目的公匙。 项目首页-&gt;管理-&gt;左侧-&gt;部署公钥管理-&gt;添加公钥，地址是https://gitee.com/uncleAndyChen/[projectName]/deploy_keys/new，其中 [projectName] 为你在 gitee 上的项目名。 以 ssh 的方式 clone 项目 1git clone git@gitee.com:elsafly/doc.tech.git 之后，项目有更新，执行 git pull 即可。 Permission denied (publickey)以下，用 unginx 的身份运行，没有权限，换成 root 用户即可。 原因是生成 ssh key 的是 root 用户，如果想以 unginx 身份执行 git clone ….，以 unginx 登录重新执行上面的步骤。123456789101112[unginx@centOS7BasicForTest apps]$ git clone git@gitee.com:elsafly/doc.tech.gitCloning into &apos;doc.tech&apos;...The authenticity of host &apos;gitee.com (120.55.226.24)&apos; can&apos;t be established.ECDSA key fingerprint is SHA256:FQGC9Kn/eye1W8icdBgrQp+KkGYoFgbVr17bmjey0Wc.ECDSA key fingerprint is MD5:27:e5:d3:f7:2a:9e:eb:6c:93:cd:1f:c1:47:a3:54:b1.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added &apos;gitee.com,120.55.226.24&apos; (ECDSA) to the list of known hosts.Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 应用要在服务器上部署博客，只需写好脚本，定时执行，即可达到代码提交（push）之后，博客自动更新发布的目的。12345[root@centOS7BasicForTest shell.script]# vi doc.tech.shcd /home/unginx/apps/doc.techgit pull#hexo clean #根据需要添加，建议不要这条命令hexo g","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"git","slug":"CentOS/git","permalink":"https://www.lovesofttech.com/categories/CentOS/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"CentOS 7.5 利用 crontab 定时执行任务","slug":"linux/centOS7Crontab","date":"2018-06-20T16:00:00.000Z","updated":"2020-09-01T02:53:13.017Z","comments":true,"path":"linux/centOS7Crontab.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7Crontab.html","excerpt":"如题","text":"如题 cron 介绍 cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。 配置文件格式：Minute Hour Day Month DayOFWeek Command 参数： -e 编辑该用户的计时器设置。 -l 列出该用户的计时器设置。 -r 删除该用户的计时器设置。 -u&lt;用户名称&gt; 指定要设定计时器的用户名称。 运行规则基本格式12345678* * * * * command分 时 日 月 周 命令第1列表示分钟1～59 每分钟用*或者 */1表示第2列表示小时1～23（0表示0点）第3列表示日期1～31第4列表示月份1～12第5列标识号星期0～6（0表示星期天）第6列要运行的命令 例子12345678910111230 19 * * * /usr/sbin/poweroff #每天晚上 7 点半关机30 21 * * * /usr/local/etc/rc.d/apache restart #每晚的21:30 重启apache 45 4 1,10,22 * * /usr/local/etc/rc.d/apache restart #每月1、10、22日的4 : 45重启apache 10 1 * * 6,0 /usr/local/etc/rc.d/apache restart #每周六、周日的1 : 10重启apache 0,30 18-23 * * * /usr/local/etc/rc.d/apache restart #每天18 : 00至23 : 00之间每隔30分钟重启apache 0 23 * * 6 /usr/local/etc/rc.d/apache restart #每星期六的11 : 00 pm重启apache* 23-7/1 * * * /usr/local/etc/rc.d/apache restart #晚上11点到早上7点之间，每隔一小时重启 apache* */1 * * * /usr/local/etc/rc.d/apache restart #每一小时重启apache 0 11 4 * mon-wed /usr/local/etc/rc.d/apache restart #每月的4号与每周一到周三的11点重启apache 0 4 1 jan * /usr/local/etc/rc.d/apache restart #一月一号的4点重启apache */30 * * * * /usr/sbin/ntpdate 210.72.145.44 #每半小时同步一下时间 0 */2 * * * www /usr/bin/somecommand &gt;&gt; /dev/null 2&gt;&amp;1 #以用户www的身份每两小时就运行某个程序 查看运行状态如果你的定时任务没有执行，确认一下 crond 服务是否运行12345678910111213[root@centOS7BasicForTest shell.script]# systemctl status crond● crond.service - Command Scheduler Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled) Active: active (running) since Thu 2018-06-21 07:51:56 HKT; 10h ago Main PID: 601 (crond) CGroup: /system.slice/crond.service └─601 /usr/sbin/crond -nJun 21 07:51:56 centOS7BasicForTest systemd[1]: Started Command Scheduler.Jun 21 07:51:56 centOS7BasicForTest systemd[1]: Starting Command Scheduler...Jun 21 07:51:56 centOS7BasicForTest crond[601]: (CRON) INFO (Syslog will be used instead of sendmail.)Jun 21 07:51:56 centOS7BasicForTest crond[601]: (CRON) INFO (RANDOM_DELAY will be scaled with factor 26% if used.)Jun 21 07:51:56 centOS7BasicForTest crond[601]: (CRON) INFO (running with inotify support) 配置定时任务执行脚本crontab -e15 11 * * * /root/shell.script/elsafly.sh 并未正确执行定时任务在日志里有执行，但是实际上，脚本命令执行后，没有生效。 解决：在要执行的脚本（elsafly.sh）中，加载系统环境变量12#!/bin/shsource /etc/profile 定时任务有错tail -f /var/log/cron 查日志，提示：123456Jul 10 11:05:01 izwz97mqm1h3u2vxe4kesjz crond[467]: (root) RELOAD (/var/spool/cron/root)Jul 10 11:05:01 izwz97mqm1h3u2vxe4kesjz CROND[25785]: (root) CMD (/root/shell.script/elsafly.sh)Jul 10 11:05:02 izwz97mqm1h3u2vxe4kesjz CROND[25793]: (CRON) EXEC FAILED (/usr/sbin/sendmail): No such file or directoryJul 10 11:05:02 izwz97mqm1h3u2vxe4kesjz CROND[25784]: (root) MAIL (mailed 146 bytes of output but got status 0x0001#012)Jul 10 11:10:01 izwz97mqm1h3u2vxe4kesjz CROND[25801]: (root) CMD (/usr/lib64/sa/sa1 1 1)Jul 10 11:14:16 izwz97mqm1h3u2vxe4kesjz crontab[25806]: (root) BEGIN EDIT (root) 解决，在脚本后面添加 &gt; /dev/null 2&gt;&amp;1118 11 * * * sh /root/shell.script/elsafly.sh &gt; /dev/null 2&gt;&amp;1 【&gt; /dev/null 2&gt;&amp;1】解释可以将/dev/null看作”黑洞”. 它非常等价于一个只写文件. 所有写入它的内容都会永远丢失. 而尝试从它那儿读取内容则什么也读不到. 然而, /dev/null对命令行和脚本都非常的有用.用处:禁止标准输出. 1 cat $filename &gt;/dev/null # 文件内容丢失，而不会输出到标准输出.禁止标准错误. 2&gt;/dev/null 这样错误信息[标准错误]就被丢到太平洋去了. 1234&gt; 代表重定向到哪里，例如：echo &quot;123&quot; &gt; /home/123.txt 1 表示stdout标准输出，系统默认值是1，所以&quot;&gt;/dev/null&quot;等同于&quot;1&gt;/dev/null&quot; 2 表示stderr标准错误 &amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1 定时关机如：上午 11 点过 8 分关机123crontab -e# 输入以下内容8 11 * * * /sbin/shutdown -h now 注意：/sbin/ 是必须的，否则会提示 /bin/sh: shutdown: command not found，该提示，从 /var/log/cron 可查到。 日志问题每条 JOB 执行完毕之后，系统会自动将输出发送邮件给当前系统用户。日积月累，非常的多，甚至会撑爆整个系统。所以每条 JOB 命令后面进行重定向处理是非常必要的： &gt;/dev/null 2&gt;&amp;1 。前提是对 Job 中的命令需要正常输出已经作了一定的处理, 比如追加到某个特定日志文件","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"schemas","slug":"CentOS/schemas","permalink":"https://www.lovesofttech.com/categories/CentOS/schemas/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"schemas","slug":"schemas","permalink":"https://www.lovesofttech.com/tags/schemas/"}]},{"title":"在 win10 下配置 PHP7.2.6 + Discuz! X3.4","slug":"windows/win10Php7Discuz","date":"2018-06-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.108Z","comments":true,"path":"windows/win10Php7Discuz.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Php7Discuz.html","excerpt":"如题","text":"如题 用 nginx1.14.0 运行 Discuz，网页响应非常慢环境 windows 10 中文企业版 web 服务器：nginx1.14.0 PHP 版本：php-7.2.6-nts-Win32-VC15-x64（Non Thread Safe）环境搭建，请参考我的另外一篇文章：在 win10 下配置 nginx1.14.0 + PHP7.2.6 “症状”，卡顿严重 UCenter，【应用列表】，第一个应用，检测通信，提示【正在连接…】很久，甚至是一直这样，第二个应用会等第一个应用检查结束再检查，第二个应用就表现成一直没有检测。 进入管理中心，验证码没有出来，要刷新很多次才能看到有验证码。 网页切换非常慢，响应速度不能容忍。 运行遇到的问题1Deprecated: __autoload() is deprecated, use spl_autoload_register() instead in C:\\workspace\\DiscuzX\\upload\\source\\class\\class_core.php on line 27 解决：打开 C:\\workspace\\DiscuzX\\upload\\source\\class\\class_core.php将 24 行开始的代码：1234567if(function_exists(&apos;spl_autoload_register&apos;)) &#123; spl_autoload_register(array(&apos;core&apos;, &apos;autoload&apos;));&#125; else &#123; function __autoload($class) &#123; return core::autoload($class); &#125;&#125; 改为：12345678if(function_exists('spl_autoload_register')) &#123; spl_autoload_register(array('core', 'autoload'));&#125;//else &#123;// function __autoload($class) &#123;// return core::autoload($class);// &#125;//&#125; 就是把 else 部分删除即可。 尝试解决网页响应慢的问题起初以为是 php 版本在 windows 上有问题，换成 PHP7.0.30、PHP5.6.36，还是一样。应该是 nginx 对 windows 的支持不如对 unix 系列支持的好，对 socket 的支持比较差。在 CentOS7.5 上，同样是 nginx1.14.0 + PHP7.2.6 + Discuz! X3.4，运行良好，速度很快。 将 nginx1.14.0 换成 Apache2.4.33，网页响应非常快环境 windows 10 中文企业版 web 服务器：Apache2.4.33 PHP 版本：php-7.2.6-Win32-VC15-x64（Thread Safe）环境搭建，请参考我的另外一篇文章：在 win10 下配置 Apache2.4.33 + PHP 7.2.6 以上环境配置好这后，网页响应速度终于正常了，图片验证码也正常了，通信检测也快了…，那叫一个爽呀，终于可以用 PHPStorm 调试了。 安装界面对运行环境的检查结果，如下图所示：【环境检查】部分 【目录、文件权限检查】、【函数依赖检查】部分 系统邮箱设置windows 下和 CentOS7.5 下用相同的配置，均可发送测试邮件。SMTP 服务器 必须使用：ssl://前缀 密码、邮箱修改uc_server\\model\\user.php 下的 函数：edit_user 找回密码：通过邮箱找回，会修改密码，会传用户名、密码、邮箱。 修改密码，只会传用户名和密码。 邮箱验证，只会传用户名和邮箱。 修改时，接收的参数12345678910111213141516171819202122232425C:\\workspace\\php\\dzt\\uc_server\\control\\user.phpfunction onedit() &#123; $this-&gt;init_input(); $username = $this-&gt;input(&apos;username&apos;); $oldpw = $this-&gt;input(&apos;oldpw&apos;); $newpw = $this-&gt;input(&apos;newpw&apos;); $email = $this-&gt;input(&apos;email&apos;); $ignoreoldpw = $this-&gt;input(&apos;ignoreoldpw&apos;); $questionid = $this-&gt;input(&apos;questionid&apos;); $answer = $this-&gt;input(&apos;answer&apos;); $newUsername = $this-&gt;input(&apos;newUsername&apos;); if(!$ignoreoldpw &amp;&amp; $email &amp;&amp; ($status = $this-&gt;_check_email($email, $username)) &lt; 0) &#123; return $status; &#125; $status = $_ENV[&apos;user&apos;]-&gt;edit_user($username, $oldpw, $newpw, $email, $ignoreoldpw, $questionid, $answer, $newUsername); if($newpw &amp;&amp; $status &gt; 0) &#123; $this-&gt;load(&apos;note&apos;); $_ENV[&apos;note&apos;]-&gt;add(&apos;updatepw&apos;, &apos;username=&apos;.urlencode($username).&apos;&amp;password=&apos;); $_ENV[&apos;note&apos;]-&gt;send(); &#125; return $status;&#125; 修改网站，在浏览器 tab 上的 logo在网站根目录，将文件 favicon.ico 替换成自己的即可。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"discuzX","slug":"windows/discuzX","permalink":"https://www.lovesofttech.com/categories/windows/discuzX/"},{"name":"php","slug":"windows/discuzX/php","permalink":"https://www.lovesofttech.com/categories/windows/discuzX/php/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"discuzX","slug":"discuzX","permalink":"https://www.lovesofttech.com/tags/discuzX/"}]},{"title":"在 win10 下配置 Apache2.4.33 + PHP7.2.6","slug":"windows/win10Php7HttpdPhp7","date":"2018-06-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.109Z","comments":true,"path":"windows/win10Php7HttpdPhp7.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Php7HttpdPhp7.html","excerpt":"如题","text":"如题 下载 Apache windows 编译版有两个网站提供 windows 环境的编译版下载 Apache Haus Downloads Apache 2.4 VC15 Windows Binaries and Modules 笔者下载的版本 下载 vc15 运行环境vc_redist_x64 下载 PHP7.2.6与 nginx 不一样，Apache 要下载线程安全版，即 ts 版。php 最新版本下载列表页面 笔者下载的，php7 针对 Apache 的版本 配置 PHP7.2.6将 PHP 解压至目录：c:/dev/php7TS复制 php.ini-development 为 php.ini，修改配置。php.ini 修改之后，重启 apache 服务即可生效。 常规配置 找到下面的配置项，并作相应的修改 12345678910error_log = C:\\dev\\php7TS\\logs\\php_errors.logextension_dir = &quot;C:\\dev\\php7TS\\ext&quot;date.timezone = &quot;Asia/Shanghai&quot;cgi.fix_pathinfo=1extension=curlextension=gd2extension=opensslextension=mysqliextension=pdo_mysql 在 [opcache] 下面添加如下配置 12345678910111213141516; dll地址zend_extension=php_opcache.dll; 开关打开opcache.enable=1; 开启CLIopcache.enable_cli=1; 可用内存, 酌情而定, 单位为：Mbopcache.memory_consumption=528; Zend Optimizer + 暂存池中字符串的占内存总量.(单位:MB)opcache.interned_strings_buffer=8; 对多缓存文件限制, 命中率不到 100% 的话, 可以试着提高这个值opcache.max_accelerated_files=10000; Opcache 会在一定时间内去检查文件的修改时间, 这里设置检查的时间周期, 默认为 2, 定位为秒opcache.revalidate_freq=1; 打开快速关闭, 打开这个在PHP Request Shutdown的时候回收内存的速度会提高opcache.fast_shutdown=1 配置 XDebug下载列表，找到对应的版本，记得是针对 PHP 7.2 线程安全版（不带 nts） 本文下载的版本PHPStorm 官方安装 debug 的帮助页面 下载之后，剪切至 PHP 的 ext 目录，在 php.ini 最后添加如下信息：123456789101112131415161718192021222324252627282930[xdebug]zend_extension = C:\\dev\\php7TS\\ext\\php_xdebug-2.6.0-7.2-vc15-x86_64.dll;开启远程调试 xdebug.remote_enable=1xdebug.profiler_enable=1;xdebug.profiler_enable=offxdebug.profiler_enable_trigger=offxdebug.profiler_output_name=cachegrind.out.%t.%pxdebug.profiler_output_dir=&quot;tmp&quot;xdebug.show_local_vars=0xdebug.remote_connect_back=1;开启自动跟踪xdebug.auto_trace=1;开启异常跟踪xdebug.show_exception_trace=1;开启异常跟踪xdebug.remote_autostart=1;收集变量xdebug.collect_vars=1;收集参数xdebug.collect_params=1;trace输出路径xdebug.trace_output_dir=&quot;tmp/xdebug&quot;;以下三个分别是主机、端口、句柄xdebug.remote_host=&quot;localhost&quot;;注意，这里的端口，在 nginx 环境需要手动运行 php-cgi，而php-cgi 的商品默认为 9000，所以这里需要配置 xcebug 为不同的端口。;但在 Apache 环境，不需要运行 php-cgi，所以，不存在端口冲突，用 xdebug 的默认端口 9000 即可，这样也不用修改 PHPStorm 的配置。;xdebug.remote_port=9001xdebug.remote_handler=&quot;dbgp&quot; 配置 Apache 支持 PHPnginx 支持 PHP 需要先运行 php-cgi，而 Apache 只要配置好就可自动支持 php。在 http.conf 文件中 LoadModule 的最后一行添加如下内容：12345678# added manualDefine PHPROOT C:/dev/php7TSLoadModule php7_module $&#123;PHPROOT&#125;/php7apache2_4.dllAddType application/x-httpd-php .php .html .htmPHPIniDir $&#123;PHPROOT&#125;LoadFile $&#123;PHPROOT&#125;/libssh2.dll#LoadFile $&#123;PHPROOT&#125;/libssl-1_1-x64.dll #网上解决 cURL 库无法开启有这一行，但是会报错（httpd.exe: Syntax error on line 191 of C:/dev/Apache24/conf/httpd.conf: Cannot load C:/dev/php7TS/libssl-1_1-x64.dll into server:），注释掉就好了。 配置 Apache 的虚拟主机找到下面的配置，去掉前面的 #，配置虚拟主机需要用到 httpd-vhosts.conf1Include conf/extra/httpd-vhosts.conf 修改 httpd-vhosts.conf，添加如下内容只要将 php 项目都放到变量 devProjectRoot 指定的目录，就会有权限访问，否则需要单独配置目录访问权限。12345678910111213Define devProjectRoot &quot;C:/workspace/php&quot;&lt;Directory &quot;$&#123;devProjectRoot&#125;&quot;&gt; AllowOverride None Require all granted&lt;/Directory&gt;&lt;VirtualHost *:80&gt; DocumentRoot &quot;$&#123;devProjectRoot&#125;/dz&quot; ServerName dz.dev.com ErrorLog &quot;logs/dz.dev.com-error.log&quot; CustomLog &quot;logs/dz.dev.com-access.log&quot; common&lt;/VirtualHost&gt; 安装 Apache 作为 windows 服务以管理员身份运行 cmd，进入 Apache 的解压目录下的 bin 目录，执行下面的命令123456C:\\dev\\Apache24\\bin&gt;httpd -k install -n ApacheInstalling the &apos;Apache&apos; serviceThe &apos;Apache&apos; service is successfully installed.Testing httpd.conf....Errors reported here must be corrected before the service can be started.httpd: Syntax error on line 39 of C:/dev/Apache24/conf/httpd.conf: ServerRoot must be a valid directory 对应的卸载命令：httpd -k uninstall -n Apache 上面的错误是因为，Apache 的 ServerRoot 配置项，不支持相对目录，需要改为绝对目录，修改：http.conf1Define SRVROOT &quot;C:/dev/Apache24&quot; 再次启动，成功123C:\\dev\\Apache24\\bin&gt;net start apacheApache 服务正在启动 ..Apache 服务已经启动成功。 其它问题 如果出现提示443端口被占用，可以通过命令 netstat -aon|findstr “443” 查看是哪个软件占用了该端口，视情况调整或关闭该软件（不推荐修改apache配置绕过该问题）。 检查 Apache 的配置是否正确：httpd.exe -n “apache” -t 1234567891011C:\\dev\\Apache24\\bin&gt;httpd.exe -n &quot;apache&quot; -tAH00526: Syntax error on line 43 of C:/dev/Apache24/conf/extra/httpd-vhosts.conf:Invalid command &apos;Order&apos;, perhaps misspelled or defined by a module not included in the server configurationC:\\dev\\Apache24\\bin&gt;net start apacheApache 服务正在启动 .Apache 服务无法启动。发生服务特定错误: 1.请键入 NET HELPMSG 3547 以获得更多的帮助。 修复错误配置之后，再次检查并启动 123456C:\\dev\\Apache24\\bin&gt;httpd.exe -n &quot;apache&quot; -tSyntax OKC:\\dev\\Apache24\\bin&gt;net start apacheApache 服务正在启动 ..Apache 服务已经启动成功。 如果访问一个不存在的页面，会提示：Forbidden 12ForbiddenYou don&apos;t have permission to access /install/ on this server. 卸载旧的 apache 后，安装另一个版本，启动报错 123456789101112131415C:\\dev\\Apache24\\bin&gt;httpd -k uninstall -n ApacheRemoving the &apos;Apache&apos; serviceThe &apos;Apache&apos; service has been removed successfully.C:\\dev\\Apache24\\bin&gt;d:D:\\&gt;cd D:\\server\\Apache24\\binD:\\server\\Apache24\\bin&gt;httpd -k install -n Apache[Sat Aug 17 09:28:50.386657 2019] [mpm_winnt:error] [pid 20536:tid 536] AH00433: Apache: Service is already installed.D:\\server\\Apache24\\bin&gt;net start apache发生系统错误 1058。无法启动服务，原因可能是已被禁用或与其相关联的设备没有启动。 原因是，之前的版本在卸载之前并没有停止，所以，安装“新”的版本其实并没有成功。在服务里找到 apache 并停止。继续下面的步骤。123456D:\\server\\Apache24\\bin&gt;httpd -k install -n ApacheInstalling the &apos;Apache&apos; serviceThe &apos;Apache&apos; service is successfully installed.Testing httpd.conf....Errors reported here must be corrected before the service can be started.AH00558: httpd: Could not reliably determine the server&apos;s fully qualified domain name, using 192.168.56.1. Set the &apos;ServerName&apos; directive globally to suppress this message 在 httpd.conf 文件中定义：ServerName:win10，服务名其实可以随填。下面再次卸载后重新安装：123456789D:\\server\\Apache24\\bin&gt;httpd -k uninstall -n ApacheRemoving the &apos;Apache&apos; serviceThe &apos;Apache&apos; service has been removed successfully.D:\\server\\Apache24\\bin&gt;httpd -k install -n ApacheInstalling the &apos;Apache&apos; serviceThe &apos;Apache&apos; service is successfully installed.Testing httpd.conf....Errors reported here must be corrected before the service can be started. 在调用httpd.exe注册Apache的服务时，弹出这句话并不是error，而是提示：如果这行下边出现错误则解决错误后再启动。 很多人看到Errors都会想怎么启动就遇到错误啊，首先需要强调的是这句话并不是说Apache启动错误。 这句话是Apache内置的启动提示语句，暂时没有找到取消和更改的方法。 这句话英文翻译后可以理解为：Apache每次启动都会检测配置文件httpd.conf有没有错误，如果在Errors reported here must be corrected before the service can be started.这句话下边出现提示或错误时必须先把这些问题解决了才能成功启动Apache服务。 所以大家看到Errors reported here这句下边没有任何提示则说明Apache启动很成功！可以放心进行其他相关操作。 下面检查配置，并用命令方式启动服务：123456D:\\server\\Apache24\\bin&gt;httpd.exe -n &quot;apache&quot; -tSyntax OKD:\\server\\Apache24\\bin&gt;net start apacheApache 服务正在启动 ..Apache 服务已经启动成功。 配置检查没有问题，成功启动，说明安装已大功告成！","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"Apache","slug":"windows/Apache","permalink":"https://www.lovesofttech.com/categories/windows/Apache/"},{"name":"php","slug":"windows/Apache/php","permalink":"https://www.lovesofttech.com/categories/windows/Apache/php/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"Apache","slug":"Apache","permalink":"https://www.lovesofttech.com/tags/Apache/"}]},{"title":"在 win10 下配置 nginx1.14.0 + PHP7.2.6","slug":"windows/win10Php7Nginx","date":"2018-06-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.109Z","comments":true,"path":"windows/win10Php7Nginx.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Php7Nginx.html","excerpt":"如题","text":"如题 下载 nginx1.14.0nginx-1.14 下载 winsw-v2.1.2winsw release 列表，选：WinSW.NET4.exe 笔者下载的版本 下载 PHP7.2.6nginx 下 php 是以 FastCGI 的方式运行，所以我们下载非线程安全也就是 nts 的 php 包。php 最新版本下载列表页面 笔者下载的版本 将 nginx 安装成 windows 服务 将 nginx 解压至 c 盘根目录 c:/nginx，不要版本号，方便以后升级至最新版本。 将下载到的 WinSW.NET4.exe 重命名为：winsw.exe，并移到 nginx 根目录 在 nginx 目录添加配置文件：winsw.xml 12345678910&lt;service&gt; &lt;id&gt;nginx&lt;/id&gt; &lt;name&gt;nginx&lt;/name&gt; &lt;description&gt;nginx&lt;/description&gt; &lt;logpath&gt;C:\\nginx\\logs&lt;/logpath&gt; &lt;logmode&gt;roll&lt;/logmode&gt; &lt;depend&gt;&lt;/depend&gt; &lt;executable&gt;c:\\nginx\\nginx.exe&lt;/executable&gt; &lt;stopexecutable&gt;C:\\nginx\\nginx.exe -s stop&lt;/stopexecutable&gt;&lt;/service&gt; 以管理员身份运行 cmd，进入 nginx 根目录，执行如下命令 12C:\\nginx&gt;winsw install2018-06-08 08:20:19,037 INFO - Installing the service with id &apos;nginx&apos; 检查配置并启动12345678910C:\\nginx&gt;nginx -tnginx: the configuration file C:\\nginx/conf/nginx.conf syntax is oknginx: configuration file C:\\nginx/conf/nginx.conf test is successfulC:\\nginx&gt;net start nginxThe nginx service is starting.The nginx service was started successfully.C:\\nginx&gt;nginx -vnginx version: nginx/1.14.0 遇到的问题及解决过程因为之前安装过 nginx-1.12.0，用 sc delete nginx 删除服务之后，进入新版目录安装时出错。123456789101112131415161718192021222324252627282930313233343536373839404142C:\\Windows\\system32&gt;sc delete nginx[SC] DeleteService SUCCESSC:\\nginx&gt;winsw install2018-06-08 08:17:46,936 INFO - Installing the service with id &apos;nginx&apos;Service with id &apos;nginx&apos; already existsTo install the service, delete the existing one or change service Id in the configuration file2018-06-08 08:17:46,940 FATAL - Unhandled exceptionSystem.Exception: Installation failure: Service with id &apos;nginx&apos; already exists at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args)System.Exception: Installation failure: Service with id &apos;nginx&apos; already exists at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args)C:\\nginx&gt;cd ..C:\\&gt;cd nginx-1.12.0C:\\nginx-1.12.0&gt;winsw uninstall2018-06-08 08:18:49,533 INFO - Starting ServiceWrapper in the CLI mode2018-06-08 08:18:49,755 INFO - Uninstalling the service with id &apos;nginx&apos;2018-06-08 08:18:49,757 WARN - The service with id &apos;nginx&apos; is running. It may be impossible to uninstall it2018-06-08 08:18:49,768 ERROR - Failed to uninstall the service with id &apos;nginx&apos;. It has been marked for deletion.2018-06-08 08:18:49,770 INFO - Completed. Exit code is 0C:\\nginx-1.12.0&gt;net stop nginxThe nginx service is stopping.The service name is invalid.More help is available by typing NET HELPMSG 2185.C:\\nginx-1.12.0&gt;winsw uninstall2018-06-08 08:19:10,163 INFO - Starting ServiceWrapper in the CLI mode2018-06-08 08:19:10,569 INFO - Uninstalling the service with id &apos;nginx&apos;2018-06-08 08:19:10,570 WARN - The service with id &apos;nginx&apos; does not exist. Nothing to uninstall2018-06-08 08:19:10,572 INFO - Completed. Exit code is 0C:\\nginx-1.12.0&gt;cd ..C:\\&gt;cd nginxC:\\nginx&gt;winsw install2018-06-08 08:20:19,037 INFO - Installing the service with id &apos;nginx&apos; 在另外一台电脑上操作，先停止 nginx，再用之前安装的程序卸载，然后再安装最新版，很顺利123456789101112131415C:\\WINDOWS\\system32&gt;net stop nginxnginx 服务正在停止.nginx 服务已成功停止。C:\\WINDOWS\\system32&gt;cd C:\\nginx-1.12.0C:\\nginx-1.12.0&gt;winsw.exe uninstall2018-06-09 09:10:07,109 INFO - Uninstalling the service with id &apos;nginx&apos;C:\\nginx-1.12.0&gt;cd ..C:\\&gt;cd nginxC:\\nginx&gt;winsw.exe install2018-06-09 09:10:19,289 INFO - Installing the service with id &apos;nginx&apos; 配置 PHP7.2.6将 PHP 解压至目录：c:/dev/php7复制 php.ini-development 为 php.ini，修改配置 常规配置 找到下面的配置项，并作相应的修改12345678910error_log = C:\\dev\\php7\\logs\\php_errors.logextension_dir = &quot;C:\\dev\\php7\\ext&quot;date.timezone = &quot;Asia/Shanghai&quot;cgi.fix_pathinfo=1extension=curlextension=gd2extension=opensslextension=mysqliextension=pdo_mysql 备注一下，php-7.0.30-nts-Win32-VC14-x64 的扩展跟 7.2 的不一样，如下12extension=php_mysqli.dllextension=php_curl.dll 在 [opcache] 下面添加如下配置12345678910111213141516; dll地址zend_extension=php_opcache.dll; 开关打开opcache.enable=1; 开启CLIopcache.enable_cli=1; 可用内存, 酌情而定, 单位为：Mbopcache.memory_consumption=528; Zend Optimizer + 暂存池中字符串的占内存总量.(单位:MB)opcache.interned_strings_buffer=8; 对多缓存文件限制, 命中率不到 100% 的话, 可以试着提高这个值opcache.max_accelerated_files=10000; Opcache 会在一定时间内去检查文件的修改时间, 这里设置检查的时间周期, 默认为 2, 定位为秒opcache.revalidate_freq=1; 打开快速关闭, 打开这个在PHP Request Shutdown的时候回收内存的速度会提高opcache.fast_shutdown=1 配置 XDebug下载列表，找到对应的版本，记得是针对 PHP 7.2 并且带 nts 的版本，本文下载的版本XDebug installXDebug windows install将 phpinfo(); 的页面，Ctrl + A， Ctrl + c 的结果 Ctrl + v 到上面页面的输入框，得到如下结果： 下面是我们要关注的信息：123456InstructionsDownload php_xdebug-2.6.0-7.2-vc15-nts-x86_64.dllMove the downloaded file to C:\\dev\\php7\\extEdit C:\\dev\\php7\\php.ini and add the linezend_extension = C:\\dev\\php7\\ext\\php_xdebug-2.6.0-7.2-vc15-nts-x86_64.dllRestart the webserver 添加之后，首先端口跟 php 冲突，添加其它端口之后，依然不能进入断点。解决方法，请参考我之前的文章：windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache下载之后，剪切至 PHP 的 ext 目录，在 php.ini 最后添加如下信息：1234567891011121314151617181920212223242526272829[xdebug]zend_extension = C:\\dev\\php7\\ext\\php_xdebug-2.6.0-7.2-vc15-nts-x86_64.dll;开启远程调试 xdebug.remote_enable=1xdebug.profiler_enable=1;xdebug.profiler_enable=offxdebug.profiler_enable_trigger=offxdebug.profiler_output_name=cachegrind.out.%t.%pxdebug.profiler_output_dir=&quot;tmp&quot;xdebug.show_local_vars=0xdebug.remote_connect_back=1;开启自动跟踪xdebug.auto_trace=1;开启异常跟踪xdebug.show_exception_trace=1;开启异常跟踪xdebug.remote_autostart=1;收集变量xdebug.collect_vars=1;收集参数xdebug.collect_params=1;trace输出路径xdebug.trace_output_dir=&quot;tmp/xdebug&quot;;以下三个分别是主机、端口、句柄xdebug.remote_host=&quot;localhost&quot;;注意，这里的端口不能跟 php-cgi 冲突，php-cgi 默认为 9000xdebug.remote_port=9001xdebug.remote_handler=&quot;dbgp&quot; 运行 php运行 cmd，进入 php 根目录，启动 php1php-cgi.exe -b 127.0.0.1:9000 -c C:/dev/php7/php.ini 遇到的问题不支持 advice_mysqli_connect运行 Discuz!X3.4 简体中文 UTF8 版 20180101 的安装向导，提示：不支持 advice_mysqli_connect解决：php.ini 找到下面项，将前面的分号删除1extension=mysqli 配置站点，将 nginx.conf 里面的 php 配置 copy 出来，可是有问题12345678910111213141516171819202122server &#123; listen 80; server_name dz.dev.com; charset utf-8; access_log logs/dz.dev.com.access.log; error_log logs/dz.dev.com.com.error.log; root C:/workspace/DiscuzX/upload; index index.php; #location ~ [^/].php(/|$) &#123; # fastcgi_pass unix:/tmp/php-cgi.sock; # fastcgi_index index.php; # include fastcgi.conf; #&#125; location ~ \\.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; include fastcgi_params; &#125;&#125; No input file specified.解决：1SCRIPT_FILENAME /scripts$fastcgi_script_name; 改为：1SCRIPT_FILENAME $document_root$fastcgi_script_name; php5.6.30 找不到 MSVCR110.dll12php-cgi.exe - 系统错误由于找不到 MSVCR110.dll，无法继续执行代码。重新安装程序可能会解决此问题。 解决，下载并安装：Visual C++ Redistributable for Visual Studio 2012 Update 4","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"},{"name":"php","slug":"windows/nginx/php","permalink":"https://www.lovesofttech.com/categories/windows/nginx/php/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布","slug":"linux/centOS7JenkinsAutoDeploy","date":"2018-06-05T16:00:00.000Z","updated":"2020-09-01T02:53:13.023Z","comments":true,"path":"linux/centOS7JenkinsAutoDeploy.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7JenkinsAutoDeploy.html","excerpt":"如题","text":"如题 准备工作 CentOS 7.5 安装配置 jenkins CentOS 7.5 安装配置 git CentOS 7.5 安装配置 Maven CentOS 7.5 war 包发布到 tomcat web 服务器，自动化发布脚本 Configure System配置 Publish over SSH Path to key指定公匙路径，比如我要以 utomcat 的身份来获取 git 源码，则先创建 utomcat 的公匙，然后指定：/home/utomcat/.ssh/utomcat Global Tool Configuration配置 Maven Configuration 和 Git，根据服务器上安装情况配置即可。 配置邮件服务作用是可以配置一些通知，比如：在每次构建之后，收到构建情况的邮箱通知。 以下以配置 qq 发件邮箱为例。需要注意的是，发件人和管理员（System Admin e-mail address）邮箱要配置成一个，否则会导致发邮件失败，提示信息类似为：发件人与发件账号必须为同一个。SMTP server：smtp.qq.comDefault user e-mail suffix：@qq.com勾选：Use SMTP AuthenticationUser Name：1614923608@qq.comPassword：#填入邮箱配置的验证码（需要发短信设置的那个，在开启 smtp 配置处），非邮箱登录密码勾选：Use SSL 创建 jenkins 任务Source Code Management选 Git。Repository URL：ugit@git.apg.com:source # 需要先配置好 ssh 方式访问Credentials：noneBranch Specifier (blank for ‘any’)：*/master # 分支，这里用默认值 Pre StepsBuild:pom.xml # 指定项目根目录下的 pom.xml，对于多 module 的项目，如果指向子目录下的 pom.xml，可能不能通过 mvn 编译成功。Goals and options:clean package -Dmaven.test.skip=true # 这是 maven 编译项目的指令 Post Steps选:Run only if build succeedsCommand:sh /home/utomcat/shell-script/autoDeploy.sh bootProjectName-1.0.0 执行的脚本 autoDeploy.sh，请参考：CentOS 7.5 war 包发布到 tomcat web 服务器，自动化发布脚本 通过 Jenkins 远程执行停止 tomcat 的脚本，报错12Neither the JAVA_HOME nor the JRE_HOME environment variable is definedAt least one of these environment variable is needed to run this program 解决：在 shutdown.sh 和 startup.sh 的最前面加上下面的脚本1export JAVA_HOME=/usr/jdk1.8.0_171 还有更好的方式，在脚本 autoDeploy.sh 前面添加：1source /etc/profile Jenkins 连接 git 时无权访问的问题提示信息123456789Failed to connect to repository : Command &quot;/usr/bin/git ls-remote -h ugit@git.apg.com:source HEAD&quot; returned status code 128:stdout: stderr: Permission denied, please try again. Permission denied, please try again. Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password). fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 原因这是因为通过 ssh 方式访问 git 服务没有权限导致。 解决以 jenkins 启动用户的身份登录服务器，执行 ssh-keygen -t rsa -C “userName”，将公钥 id_rsa.pub 添加到 git 服务器。 如果是 gitee.com，则添加项目公钥或者添加用户公钥均可。 如果是 gitolite 搭建的 git 服务，则将上面生成的公钥添加到 gitolite-admin 项目的 keydir 目录下并改名为 jenkins 的启动用户（也可以自定义），同时在 gitolite.conf 中添加该用户对项目的访问权限。 在 Jenkins job 中调用脚本来启动 tomcat，但是并未真正启动现象其它脚本都执行成功了，比如：获取项目最新代码、打包项目、停止 tomcat、删除旧文件、解压新生成的 war 包至 web 目录，copy 配置文件至 WEB-INF/classes/。只是最后一步启动 tomcat 之后，调用的地方显示：123Tomcat started.``` tomcat 日志停留在下面就不动了 26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/web/wx/shoppingCart.html] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/web/wx/shoppingCartEmpty.html] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/apg/boot] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/apg/boot/controller] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/apg/boot/config] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.926 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/apg/boot/common] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache26-Jul-2018 15:29:27.934 WARNING [localhost-startStop-1] org.apache.catalina.webresources.Cache.getResource Unable to add the resource at [/WEB-INF/classes/] to the cache for web application [] because there was insufficient free space available after evicting expired cache entries - consider increasing the maximum size of the cache1234567891011手动执行发布脚本是正常的。百度关键词：after evicting expired cache entries - consider increasing the maximum size of the cache网上的解决办法在tomcat的/conf/context.xml中的&lt;Context&gt;中添加```xml&lt;Resources cachingAllowed=&quot;true&quot; cacheMaxSize=&quot;100000&quot; ----&gt;这里单位是 KB/&gt; 当然，这个办法解决的是内存分配的问题，我这里的问题与内存分配无关。这里的真正原因是 Jenkins 在执行任务结束的时候会关掉所有子进程，导致 tomcat 启动过程中被强制停掉，才会出现上面的现象。 最开始我是以 root 的身份启动 Jenkins，在执行脚本的时候，切换到 utomcat 下去执行，执行脚本如下：1su - utomcat -lc &quot;sh /home/utomcat/shell/autoDeploy.sh&quot; 这种方式，没有问题，因为执行进程已经切换至另外一个用户了。 后来我把 Jenkins 的启动用户以及相应的目录权限全部设置为 utomcat 之后，才有这种现象。 解决在 autoDeploy.sh 前面添加：1export BUILD_ID=dontKillMe # for jenkins 另外，网上有添加配置节点来解决的，没有深入研究。 原因分析Jenkins 默认会在 Build 结束后 Kill 掉所有的衍生进程。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Maven","slug":"CentOS/Maven","permalink":"https://www.lovesofttech.com/categories/CentOS/Maven/"},{"name":"jenkins","slug":"CentOS/Maven/jenkins","permalink":"https://www.lovesofttech.com/categories/CentOS/Maven/jenkins/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Maven","slug":"Maven","permalink":"https://www.lovesofttech.com/tags/Maven/"},{"name":"jenkins","slug":"jenkins","permalink":"https://www.lovesofttech.com/tags/jenkins/"}]},{"title":"CentOS 7，tomcat 监控脚本","slug":"linux/centOS7TomcatMonitor","date":"2018-06-05T16:00:00.000Z","updated":"2020-09-01T02:53:13.029Z","comments":true,"path":"linux/centOS7TomcatMonitor.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7TomcatMonitor.html","excerpt":"如题","text":"如题 监控脚本以下均以 root 身份操作。1vi ~/tomcatMonitor.sh 内容如下123456789101112131415161718192021222324#!/bin/bashsource /etc/profiletomcatMonitorLog=/root/logs/tomcatMonitor.logcheckTomcat() &#123; tomcatPath=$1; now=`date +%Y%m%d%H%M%S` echo &quot;$now start check $tomcatPath ...&quot; tomcatPid=`ps aux|grep &quot;java&quot;|grep $tomcatPath|awk &apos;&#123;printf $2&#125;&apos;` if test -z $&#123;tomcatPid&#125; then echo &quot;stoped&quot; su - utomcat -lc &quot;sh $tomcatPath/bin/startup.sh&quot; # 以 utomcat 的身份运行 tomcat 实例 echo &quot;starting...&quot; else echo &quot;running, pid: $tomcatPid&quot; fi&#125;checkTomcat &quot;/home/utomcat/tomcat/web/&quot; &gt;&gt; $tomcatMonitorLogcheckTomcat &quot;/home/utomcat/tomcat/backend/&quot; &gt;&gt; $tomcatMonitorLogecho &apos;--------------&apos; &gt;&gt; $tomcatMonitorLog 如果有多个 tomcat 实例需要监控，则调用多次 checkTomcat 函数，传入对应的 tomcat 目录名即可。 记得要以 / 结束，否则如果目录名前面部分有相同的，则会不准确，如目录 web，webv1，在 web 已经停止，而 webv1 运行的情况下，将会取到 webv1 这个实例的信息。 设置可执行权限1chmod +x tomcatMonitor.sh 添加定时执行任务1crontab -e 增加一条定时任务，以下脚本表示每 3 分钟执行1*/3 * * * * /root/tomcatMonitor.sh &gt; /dev/null 2&gt;&amp;1 如果专门为 tomcat 配置了用户，如用户名：utomcat，则建议以 utomcat 的身份创建和定时运行脚本。需要做的修改如下： 将上述脚本中的 su - utomcat -lc “sh $tomcatPath/bin/startup.sh” 替换成：sh $tomcatPath’bin/startup.sh’ 将脚本保存到 utomcat 的目录下，如：/home/utomcat/shell/。 以 utomcat 的身份执行 crontab -e 创建定时任务。1*/3 * * * * /home/utomcat/shell/tomcatMonitor.sh &gt; /dev/null 2&gt;&amp;1 运行日志1234567891011121314151620180717142701 start check /home/utomcat/tomcat/web/ ...running, pid: 1325120180717142701 start check /home/utomcat/tomcat/backend/ ...running, pid: 18496--------------20180717142801 start check /home/utomcat/tomcat/web/ ...running, pid: 1325120180717142801 start check /home/utomcat/tomcat/backend/ ...stopedstarting...--------------20180717142901 start check /home/utomcat/tomcat/web/ ...running, pid: 1325120180717142901 start check /home/utomcat/tomcat/backend/ ...running, pid: 15051-------------- tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"tomcat","slug":"CentOS/tomcat","permalink":"https://www.lovesofttech.com/categories/CentOS/tomcat/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本","slug":"linux/centOSTomcatAutoDeploy","date":"2018-06-05T16:00:00.000Z","updated":"2020-09-01T02:53:13.037Z","comments":true,"path":"linux/centOSTomcatAutoDeploy.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSTomcatAutoDeploy.html","excerpt":"如题","text":"如题 手工发布步骤 获取最新代码。 编译打包。 上传到服务器，替换文件。 停止 tomcat。 启动 tomcat。 半自动化，一键发布可做到手工一键发布，有两种方式。 用脚本来实现把以下脚本保存为 deploy.sh 并设置可执行权限。每次需要发布的时候，只需要执行该脚本即可。12345# cd source fildergit pull # 前提是要配置好 git 环境，设置 ssh key 免密码方式访问 git 服务器mvn clean package -Dmaven.test.skip=true # 前提：配置好 maven。如果是多模块项目，一定要在项目的根目录执行# cd shell script foldersh autoDeploy.sh # 脚本内容，见下面 autodeploy.sh 节点。负责发布工作，包括：备份当前版本、停止 tomcat、替换文件、启动 tomcat 多模块的 pom.xml 大概如下所示 123456789101112131415161718&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;apg&lt;/groupId&gt; &lt;artifactId&gt;domain.com&lt;/artifactId&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;modules&gt; &lt;module&gt;domain.boot&lt;/module&gt; &lt;module&gt;domain.biz&lt;/module&gt; &lt;module&gt;domain.common&lt;/module&gt; &lt;module&gt;domain.config&lt;/module&gt; &lt;/modules&gt;&lt;/project&gt; 脚本结合 Jenkins在服务器上配置好 Jenkins，根据 Jenkins 的配置，每次需要发布时，更新代码到 Jenkins 配置的版本库对应的【版本/分支/tag】，之后的事情，就交给 Jenkins 来处理。 CentOS 7.5 安装配置 jenkins CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布 Jenkins 的操作分三步 获取配置的源码最新版本。 执行 mvn 构建操作： clean package -Dmaven.test.skip=true 执行服务器上自动部署脚本：autoDeploy.sh 配置 Jenkins 的好处 可以省掉本地打包再上传服务器的步骤。 只要能上网即可操作，无须配置本地环境。 这个工作可以交给运维去做。 每次构建日志可查。 构建情况自动发送到管理员邮箱，方便管理。 每次代码更新日志可查，方便运维和测试开展相关工作。 autoDeploy.sh负责发布工作，包括：备份当前版本、停止 tomcat、替换文件、启动 tomcat1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#!/bin/bashuploadPath=/home/utomcat/uploadwebPath=/home/utomcat/apps/webnow=`date +%Y%m%d%H%M%S`tomcatPath=/home/utomcat/tomcat/webbackupPath=/home/utomcat/apps/backup/webscriptPath=/home/utomcat/shell-scriptecho &quot;copy archive file to upload folder...&quot;sh $scriptPath/cpWarFile.shecho &quot;copy finished&quot;war=$1cd $uploadPathif [ -e &quot;$war.war&quot; ]; then echo -e &quot; war archive: $war.war&quot;else echo -e &quot;war archive &apos;$war.war&apos; not exists&quot; exit -1fi# change color#echo -e &quot;\\033[34m&quot;#create backup dirif [ ! -d &quot;$backupPath&quot; ]; then mkdir -p &quot;$backupPath&quot;fiecho &quot;tomcat home: $tomcatPath&quot;echo &quot;backup path: $backupPath&quot;echo &apos;try to stop tomcat...&apos;echo &quot;stop tomcat ...&quot;pid=`ps aux|grep &quot;java&quot;|grep $tomcatPath|awk &apos;&#123;printf $2&#125;&apos;`if [ -n $pid ]; then echo &quot;tomcat pid: $pid&quot;; kill -9 $pid;fiecho &apos;stop tomcat finished...&apos;echo &apos;backup current archive...&apos;if [ -f &quot;$uploadPath/$war.war&quot; ]; then cp -v &quot;$uploadPath/$war.war&quot; &quot;$backupPath/$1-$now.war&quot;;ficd $webPathrm -rf META-INF/ WEB-INF/echo &quot;unzip $war.war archive to webPath..&quot;unzip -q $uploadPath/$war.warecho &quot;unzip finished&quot;#sleep 3 #sleep 3s copy config filesecho &quot;chown...&quot;chown utomcat:gtomcat -R $webPathecho &quot;copy config files to classes ...&quot;cp configFiles/* WEB-INF/classes/#sleep 2echo &apos;copy finished&apos;#echo -e &quot;\\033[32m&quot;echo &apos;startup tomcat...&apos;su - utomcat -lc &quot;sh /home/utomcat/shell-script/start.sh&quot; # 以 utomcat 的身份运行 tomcatecho &quot;startup tomcat finished&quot;# 如果是手工执行发布任务，可以执行查看日志的脚本# tail -10f $tomcatPath/logs/catalina.out cpWarFile.sh可以直接添加到上面的脚本，单独写到一个文件，只是方便分步执行。123rm -rf /home/utomcat/upload/domain.boot-1.0.0.warcp /var/lib/jenkins/workspace/webSite/apg.boot/target/domain.boot-1.0.0.war /home/utomcat/upload/chown utomcat:gtomcat /home/utomcat/upload/domain.boot-1.0.0.war tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"tomcat","slug":"CentOS/tomcat","permalink":"https://www.lovesofttech.com/categories/CentOS/tomcat/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"linux shell 脚本","slug":"linux/shell","date":"2018-06-05T16:00:00.000Z","updated":"2020-09-01T02:53:13.048Z","comments":true,"path":"linux/shell.html","link":"","permalink":"https://www.lovesofttech.com/linux/shell.html","excerpt":"有关 linux 下 shell 的用法。","text":"有关 linux 下 shell 的用法。 Shell字符串比较相等、不相等12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485#!/bin/sh #测试各种字符串比较操作。#shell中对变量的值添加单引号，爽引号和不添加的区别：对类型来说是无关的，即不是添加了引号就变成了字符串类型，#单引号不对相关量进行替换，如不对$符号解释成变量引用，从而用对应变量的值替代，双引号则会进行替代#author:tenfyguo A=&quot;$1&quot;B=&quot;$2&quot; echo &quot;输入的原始值：A=$A,B=$B&quot; #判断字符串是否相等if [ &quot;$A&quot; = &quot;$B&quot; ];thenecho &quot;[ = ]&quot;fi #判断字符串是否相等，与上面的=等价if [ &quot;$A&quot; == &quot;$B&quot; ];thenecho &quot;[ == ]&quot;fi #注意:==的功能在[[]]和[]中的行为是不同的，如下 #如果$a以”a”开头(模式匹配)那么将为true if [[ &quot;$A&quot; == a* ]];thenecho &quot;[[ ==a* ]]&quot;fi #如果$a等于a*(字符匹配),那么结果为trueif [[ &quot;$A&quot; == &quot;a*&quot; ]];thenecho &quot;==/&quot;a*/&quot;&quot;fi #File globbing(通配) 和word splitting将会发生, 此时的a*会自动匹配到对应的当前以a开头的文件#如在当前的目录中有个文件：add_crontab.sh,则下面会输出ok#if [ &quot;add_crontab.sh&quot; == a* ];then #echo &quot;ok&quot;#fiif [ &quot;$A&quot; == a* ];thenecho &quot;[ ==a* ]&quot;fi #如果$a等于a*(字符匹配),那么结果为trueif [ &quot;$A&quot; == &quot;a*&quot; ];thenecho &quot;==/&quot;a*/&quot;&quot;fi #字符串不相等if [ &quot;$A&quot; != &quot;$B&quot; ];thenecho &quot;[ != ]&quot;fi #字符串不相等if [[ &quot;$A&quot; != &quot;$B&quot; ]];thenecho &quot;[[ != ]]&quot;fi #字符串不为空，长度不为0if [ -n &quot;$A&quot; ];thenecho &quot;[ -n ]&quot;fi #字符串为空.就是长度为0.if [ -z &quot;$A&quot; ];thenecho &quot;[ -z ]&quot;fi #需要转义&lt;，否则认为是一个重定向符号if [ $A /&lt; $B ];thenecho &quot;[ &lt; ]&quot; fi if [[ $A &lt; $B ]];thenecho &quot;[[ &lt; ]]&quot; fi #需要转义&gt;，否则认为是一个重定向符号if [ $A /&gt; $B ];thenecho &quot;[ &gt; ]&quot; fi if [[ $A &gt; $B ]];thenecho &quot;[[ &gt; ]]&quot; fi 字符串比较，注意的几点123if [ &quot;$A&quot; = &quot;$B&quot; ];thenecho &quot;[ = ]&quot;fi if 和 [ ] 之间要有空格 [ ] 和“ ”之间要有空格 “ ”和 = 之间要有空格否则都会报错 Shell分支语句 case···esac 语法123456789101112131415161718192021case 值 in模式1) command1 command2 command3 ;;模式2） command1 command2 command3 ;;*) command1 command2 command3 ;;esac# 匹配发现取值符合某一模式后，其间所有命令开始执行直至 ;;。# ;; 与其他语言中的 break 类似，意思是不执行接下来的语句而是跳到整个 case 语句的最后。# *)与default相似，如果上面没有匹配到的模式，则执行*)里的内容。 说明：case后为取值，值后为关键字 in，接下来是匹配的各种模式，每一模式最后必须以右括号结束。值可以为变量或常数。 模式支持正则表达式，可以用以下字符：12345* 任意字串? 任意字元[abc] a, b, 或c三字元其中之一[a-n] 从a到n的任一字元| 多重选择 举例：12345678910111213#!/bin/sh case $1 instart | begin) echo &quot;I am started!&quot; ;;stop | end) echo &quot;I am stopped!&quot; ;;*) echo &quot;Other command!&quot; ;;esac /bin/bash^M: bad interpreter: No such file or directory用 WebStorm 安装 shell 插件后，直接创建的 sh 文件，上传至服务器，执行时报错如下：1-bash: ./syncToGiteeAsUTomcat.sh: /bin/bash^M: bad interpreter: No such file or directory 删除第一行，则报错如下：12345./syncToGiteeAsUTomcat.sh: line 4: $&apos;\\r&apos;: command not found./syncToGiteeAsUTomcat.sh: line 6: $&apos;\\r&apos;: command not found./syncToGiteeAsUTomcat.sh: line 7: syntax error near unexpected token `$&apos;&#123;\\r&apos;&apos;&apos;/syncToGiteeAsUTomcat.sh: line 7: `pullLocalAndPushToGitee() &#123;&#125; 解决： 在终端 vim 一个文件，将代码粘贴进去，保存。 或者，在终端 vim 一个文件，sz 到本地，然后再将代码粘贴进去，上传。 root 用户，以另外一个用户的身份执行脚本123[root@centOS7BasicForTest source]# su - utomcat -lc &quot;git push hjz&quot;fatal: not a git repository (or any parent up to mount point /)Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set). su -utomcat 会切换到用户主目录，所以提示并不是 git 仓库。解决办法：把需要的脚本放到一个 shell 文件，在 shell 脚本文件中 cd 到项目目录，再执行相关操作指令。 特殊变量列表 变量 含义 $0 当前脚本的文件名 $n 传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。 $# 传递给脚本或函数的参数个数。 $* 传递给脚本或函数的所有参数。 $@ 传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $* 稍有不同，下面将会讲到。 $? 上个命令的退出状态，或函数的返回值。 $$ 当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。 查目录下的文件个数123456789#以下命令均不包含&quot;.&quot;，&quot;..&quot;目录，以及&quot;.&quot;开头的隐藏文件，如需包含，ll 需要加上 -a参数#当前目录下文件个数，不包含子目录ll |grep &quot;^-&quot;|wc -l#当前目录下目录个数，不包含子目录ll |grep &quot;^d&quot;|wc -l#当前目录下文件个数，包含子目录ll -R|grep &quot;^-&quot;|wc -l#当前目录下目录个数，包含子目录ll -R|grep &quot;^d&quot;|wc -l 变量变量名=变量值注意：变量名前面不应加美元“$”符号。（和PHP不同）等号“=”前后不可以有空格。和C语言不同，Shell中不需要显式的语法来声明变量。变量名不可以直接和其他字符相连，如果想相连，必须用括号：echo “this is $(he)llo!” linux下移动隐藏文件夹的操作1mv * .[^.]* directory 其中，directory 是要移到的目标文件夹。 命令解释： mv 命令的最后一个参数是要移动文件的目标位置。 第一个 * 匹配除了隐藏文件的所有文件。 隐藏文件使用 .[^.]* 匹配。 匹配隐藏文件用 .[^.]*，为什么不用 .*，因为 .* 会匹配目录 . 和 ..。 .[^.]* 的意思是：以 . 开头，加不是 . 的一个任意字符，再加其他任意字符。 如果知道隐藏文件夹名，则直接写就好了，比如：1mv * .git directory 逻辑非、逻辑与、逻辑或 逻辑非： ! 12if [ !表达式 ]if [ !-d $num ] 如果不存在目录$num 逻辑与：–aif [表达式1 –a 表达式2]1. 逻辑或：-oif [表达式1 –o 表达式2] linux shell 中的sleep命令 sleep 1 睡眠1秒 sleep 1s 睡眠1秒 sleep 1m 睡眠1分 sleep 1h 睡眠1小时","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"shell","slug":"CentOS/shell","permalink":"https://www.lovesofttech.com/categories/CentOS/shell/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"shell","slug":"shell","permalink":"https://www.lovesofttech.com/tags/shell/"}]},{"title":"本博客的所有文章列表","slug":"home","date":"2018-06-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.969Z","comments":true,"path":"home.html","link":"","permalink":"https://www.lovesofttech.com/home.html","excerpt":"所有文章均列于此，方便检索。","text":"所有文章均列于此，方便检索。 友情提示：如果要在新窗口中打开以下链接，请按住 Ctrl 键再点相关链接。 关于 关于我 关于本博客 工作感言/经验，文章目录 软件工程师个人品质、团队精神，你都做到了哪些？ 在工作中，如何能更好的与他人协作 从【技术岗位】招聘的用人方视角，看求职这件事–想要有效且高效求职，就应该了解一下 给刚入职场同学的建议 如何在更少的时间内完成更多的工作 火炉原则 高效能人士的七个习惯–定义 工作中的一些小经验 团队在开发中应该遵循的一些规则，以及部分经验总结 提问的智慧 聊聊工程师的影响力 React 技术栈（全家桶）学习心得分享，文章目录 Ant Design Pro v4 从后端下载 excel，后端返回的是文件流 react 技术栈学习，相关知识储备 React 技术栈学习，js 知识点 React 技术栈学习，redux 知识点 React 项目调试技巧 像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码 redux 官方示例 todomvc 中的 todoList 过滤事件解析 redux 官方示例 todomvc 两个警告修复 React+Redux工程目录结构，最佳实践 react 项目，在生产环境去掉 propTypes 检查代码，打包时自动去除 WebStorm + React 项目，配置 ESLint ESLint 配置文件 .eslintrc 示例及说明 react开发，日常经验汇总 结合例子代码学习 《React进阶之路》第九章示例 bbs-redux-reselect 解读 《深入浅出React和Redux》一书的部分章节例子代码演练及相关知识点 Java开发，文章目录工作规范 java/js 代码规约 java 开发，适用于团队的代码规范及某些约定 spring boot spring boot 配置静态资源 关于 Spring Boot，以及学习 Spring Boot 的一个 Demo spring boot 阿里云发送邮件，使用 qq 邮箱的 SMTP 服务，端口由 25 换成 465 spring boot 支持通过 ajax 跨域请求的设置 spring boot1.5以上版本@ConfigurationProperties取消location注解后的替代方案 springBoot 集成百度富文本框 UEditor，多模块方式 spring 官方例子-&gt;宠物医院，数据库改成 MySQL，数据库连接池改成 druid Spring cron 表达式 spring boot，404，502 错误转向定制页面 tomcat 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优 其他 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 Java 利用 LibreOffice/OpenOffice 将 Office 文档（.doc/.docx .ppt/.pptx ）转换成 PDF，进而转图片，实现在线预览功能 Java 利用 pdfbox 将 PDF 转换为图片 Maven 项目 jar 包依赖冲突导致运行期错误的排查方法 CRM 项目，api 部分的开发规则，仅供参考 BigDecimal 运算与比较 Java 基本类型与对象类型 windows java 开发环境配置，以及一些常用网址收藏s java 字符串的替换 replace、replaceAll、replaceFirst 的区别 Java 特定版本的帮助文档下载方法 Json-lib 将 Json 转换成 Java Bean 时报警 … does not exist. SKIPPED，解决办法 java 开发中的一些小经验 lombok 以及 IDEA lombok 插件 git 文章目录 在两个 git server 之间同步项目的代码 CentOS 7.5 安装配置 git CentOS 7.5 借助 Gitolite 管理 Git 项目 CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码 git 在工作中的基本用法 Git 用户名邮箱的全局配置和单仓库配置 github pages 绑定自己的域名 修改 github 项目的程序语言 git 回车换行在 windows 与 unix 下不一致的解决方案 使用 git 在码云上进行项目协作开发 本地仓库代码，定时同步更新至远程仓库 git 仓库从一个用户下迁移到另外一个用户下，包含提交历史 CentOS/linux，文章目录安装CentOS U 盘安装 CentOS7.5 Jenkins CentOS 7.5 jenkins + Maven + Git + Tomcat 一键发布 CentOS 7.5 安装配置 jenkins CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 ElasticSearch BAT大牛亲授基于ElasticSearch的搜房网实战，项目配置记录 ElasticSearch demo 以及辅助开发工具 CentOS 7 配置 ElasticSearch-6.5.4 CentOS 7 配置 ElasticSearch-6.4.1 JIRA 在 CentOS7 上安装 JIRA 手记 secureCRT secureCRT 显示不换行且完全显示 SecureCRT 连接 CentOS，用 sz 与 rz 命令，下载、上传文件 解决 SecureCRT 超时自动断开 java 应用环境配置 在 CentOS 上安装配置 Java 运行环境 CentOS 7.5 安装配置 Maven CentOS 7，tomcat 监控脚本 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 Tomcat 配置调优 CentOS7 安装中文字体 Arial 端口、内存占用、进程内存占用 linux 内存占用情况查询 CentOS6 查看端口占用、杀死进程，防火墙端口开启/关闭 查看 linux 进程内存占用情况 定时任务 CentOS 7.5 利用 crontab 定时执行任务 CentOS 7.5 查看 crontab 的日志 开机启动 CentOS下开机启动查看管理命令:chkconfig 用法 CentOS 系统下设置自己安装的程序开机自动启动 shell CentOS 常用命令 linux shell 脚本 其他 CentOS7 安装配置 LibreOffice 6.3.4.2 以及安装 windows 自带中文字体 CentOS7，一键远程部署 spring boot 项目和 react 项目 CentOS7，使用 scp 命令, ssh 连接方式，免密码传输文件到远程服务器，免密执行远程服务器上的 shell 脚本 CentOS 7 安装配置 Node CentOS 7 修改网卡参数 CentOS 7.2 安装配置 Samba 服务器 CentOS 7 安装设置 vsftpd 及多用户登录 Linux下使用 curl 命令发送 GET 请求时多个参数但只能接收到一个参数 CentOS 下 RPM 软件包的安装及卸载 如何查看已安装的 CentOS 版本信息 linux 下 zip/unzip 命令详解 CentOS 6.3安装设置 vsftpd 及多用户登录 linux 工作中的一些小经验 MyBatis，文章目录 基于spring 切面（AOP）实现动态多数据源切换，基于 MyBatis 插件方式实现动态分表查询 MyBatis 项目中，有关 MySQL 命名规范，用驼峰命名法与下划线命名法的取舍 解决 mybatis generator 使用 mysql 驱动 8.x 版本时会生成多个库里的同名表的问题 MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 MBG 生成的 mapper 支持写入记录后返回主键值的配置 MyBatis 开发中，善用通过 MBG 生成的 *Example 类 MyBatis 普通知识点记录 日常开发中有关 MySQL 的一些经验总结 MySQL 配置项 lower_case_table_names，数据库命名规则 MySQL 加密的插件方式 caching_sha2_password 引发的应用程序错误 CentOS7 时区与 MySQL 连接参数 serverTimezone 的关系，以及与保存到数据库的 timestamp 字段值（比实际少13小时）的关系 借助 MySQL Workbench 工具生成 MySQL 修改脚本 CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22 CentOS7 安装 MySQL-5.7.20 mysql-5.7.20 编码由 utf8 改为 utf8mb4 mysqldump 用法及示例 用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议 CentOS 服务器上的 MySql 服务名既不是 mysql，也不是 mysqld win10 MySQL 8.0.11 绿色免安装配置 MySQL 慢查询 在 centOS 6.5 上安装 mysql 客户端 MySQL 常用脚本，日常经验 PowerDesigner PowerDesigner 逆向生成数据库物理模型，以 MySQL 为例 PowerDesigner 样式设置，以及样式参考值 MongoDB CentOS7 下 安装配置 MongoDB redis redis5.0.5 在 CentOS7 上的安装和使用 前端相关，文章目录 Ant Design Pro v4 开发备忘，TypeScript 版本 CentOS 7.5 安装配置 Node ES6 循环之 iterator 和 yield JS 开发链接 Nodejs React Native 已死？被Airbnb抛弃之后，Udacity也弃用了 Airbnb 宣布放弃使用 React Native，回归使用原生技术 Udacity也弃用React Native了！ JS 笔记 前端开发–好记性不如“烂文档” windows 环境下的日常工作，文章目录php 开发环境配置 windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache 在 win10 下配置 PHP7.2.6 + Discuz! X3.4 在 win10 下配置 Apache2.4.33 + PHP7.2.6 在 win10 下配置 nginx1.14.0 + PHP7.2.6 在 Windows 将 Memcached 安装为服务 把 nginx 安装为 Windows 的一个服务 在 windows7 下配置 nginx 支持 php windows 共享 win10 共享遇到的两个问题 windows 10 访问 CentOS 7 的 SMB 共享文件 windows 用户凭据管理 windows 10，Word 2016 打开共享文件时，提示：在试图打开文件时遇到错误 C# + Entity Framework 开发 EF6 写入数据，调用 SaveChanges() 时异常：Validation failed for one or more entities office 安装与卸载 office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活 卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016） 作为码农的 windows 操作经验 windows10 版本查看以及升级到最新版本 windows10 多桌面 MBR、GPT/GUID 分区格式 记一次用 ghost 还原镜像，调换两台电脑系统盘的操作 windows 控制台 cmd/PowerShell 中文显示乱码，解决方法 批处理文件遍历所有子目录批量移除文件名和目录名中特殊字符 在 win10 下修改 hosts 文件 删除 Windows 服务 windwos 查看端口占用、查找进程、杀死进程的命令 使用 tree 命令导出 windows 的【文件夹/文件】目录树 windows 远程桌面的坑 U盘刻录后如何恢复原来容量大小，以及 FAT32 转化为 NTFS 在 windows 下，工作中的一些小经验 Linux + Nginx + MySQL + PHP 文章目录 Nginx 配置 https 后，http 强制跳转到 https，主域名跳转至带 www 的二级域名 CentOS7 安装 Nginx 并设置开机自启动 CentOS7 以源码方式安装 php7 nginx 配置相关 Nginx 反向代理、负载均衡 php 内存分配占用超限，解决办法 php5.4 php-fpm 重启、关闭 discuzX3.4 网站迁移，备忘录 discuzX3.4 数据库由阿里云自建 MySQL 转移至 RDS，填坑日志 php 开发–好记性不如“烂文档” python，文章目录 在 CentOS7 安装最新版 Python（v3.7.1），并与系统自带 Python2.7.5 共存，不影响 yum 正常使用 Java 和 Python 中的整数除法，取余，舍入 c++ 文章目录 windows10 64位+vs2017+CMake 编译 opencv-4.0.1 和 opencv_contrib-4.0.1 软件测试，文章目录 testLink 1.9.17 安装配置，环境：CentOS 7.5 + PHP 7.2.7 + nginx 1.14.0 测试 &amp; 开发 软件测试方法，等价类划分法 日常经验汇总，文章目录hexo 博客改动日志 CentOS 7.5 通过源码自动发布 hexo 博客 Hexo + gitee 免费个人博客搭建 hexo 使用经验汇总 本博客已于2019年3月7日开启统计功能 hexo 标签、分类，大小写问题导致404错误，原因分析和解决 Hexo 个人博客使用 github pages 和 coding.net 静态网站，同时兼顾国内外访问以及 google 和 baidu 爬虫 IDE IntelliJ IDEA，使用心得汇总 sts（Spring Tool Suite）/Eclipse 使用 svn svn递归添加目录、子目录和文件 svn 在 CentOS6 安装以及项目管理 JIRA JIRA 精选插件 日常经验 日常经验–好记性不如烂文档 其他 i5 7200u，核显（集成显卡） Intel HD 620，win7 64 位系统安装折腾记录 软件产品版本号制定规则 Byte KB MB GB的转换关系 MarkDown 使用经验 正则表达式全部符号解释 阿里云，建站产品比较 github 访问加速 苹果系统（MacOS），文章目录 使用 iTunes 在电脑与 iOS 或 iPad 设备之间共享（传输）文件 MacOS 端口占用情况，其中 netstat 命令与 CentOS 略有出入 MacOS 编译安装 nginx 指定版本 i系列7代cpu，核显（集成显卡） Intel HD 630，MacOS 修改驱动指南 苹果系统（MacOS），日常经验 技术之外的话题，文章目录 分享正能量——《肖申克的救赎》 foobar2000，一款 Windows 平台下的高级音频播放器，免费","categories":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/categories/index/"}],"tags":[{"name":"index","slug":"index","permalink":"https://www.lovesofttech.com/tags/index/"}]},{"title":"CentOS 7.5 借助 Gitolite 管理 Git 项目","slug":"git/centOS7GitAsServer","date":"2018-06-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.958Z","comments":true,"path":"git/centOS7GitAsServer.html","link":"","permalink":"https://www.lovesofttech.com/git/centOS7GitAsServer.html","excerpt":"如题","text":"如题 Git 权限管理工具Git 仓库的权限管理，我们可以手动直接通过 ssh key 进行管理和配置，也可以通过其他辅助工具。在 Git 服务管理工具这个领域，主要有三种流行的方案，它们分别是: Gitosis - 轻量级， 开源项目，使用SSH公钥认证，只能做到库级的权限控制。目前项目已经停止开发，不再维护。 Gitolite - 轻量级，开源项目，使用SSH公钥认证，能做到分支级的权限控制。 Git + Repo + Gerrit - 超级重量级，集版本控制，库管理和代码审核为一身。可管理大型及超大型项目。 大名鼎鼎的 Android 平台就是使用的 Git + Repo + Gerrit。对于个人，中小型企业及一些开源项目而言，如果没有特殊的要求，其 Gitolite 提供的服务已经足够用了。 下面将详细讲解怎么搭建 Gitolite 服务器。 创建管理项目用的组 ggit 和用户 ugit建一个git用户组和用户，用来运行git服务ggit 前面的 g 代表 group, ugit 前面的 u 代表 user，组名和用户名都加前缀，以示区别。1234groupadd ggitmkdir -p /workuseradd ugit -g ggit -d /work/ugit # /work 为单独的分区，代码放到这个目录下更加安全，可避免由于操作系统出错导致的数据丢失passwd ugit 安装 Gitolite official web site reference 客户端：在管理员电脑 win10 上，生成 SSH key 备用 在管理员电脑上操作，以下为 win10 操作系统下的 Git Bash 12345678910111213141516171819202122$ ssh-keygen -t rsa -C &quot;1614923608@qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/AndyChen/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /c/Users/AndyChen/.ssh/id_rsa.Your public key has been saved in /c/Users/AndyChen/.ssh/id_rsa.pub.The key fingerprint is:SHA256:gLOgJmZI4T5Z769yTwiSee3Ig7O/9MbNn04L0MGN0nY 1614923608@qq.comThe key&apos;s randomart image is:+---[RSA 2048]----+| . ||. . .o o || o..o..* E ||+.=.oo+.o ||+@ o.+ .S ||= * = o || o =.+oo . || +.o+ooo o || ..o=oooo= |+----[SHA256]-----+$ 运行命令后，根据相关提示，输入路径和密码，如果用默认路径，如果不设置密码，则一路回车，直到生成 key。生成的 id_rsa.pub 文件备用。 服务器端：用管理员 SSH public key 来安装配置 gitolite 以 ugit 的身份登录。 确保在 ugit 用户根目录（登录之后默认就在用户根目录）。 上传上一步在 win10 下生成的公匙文件 id_rsa.pub，如我的位于：C:\\Users\\AndyChen\\.ssh，其中 AndyChen 是计算机用户名。上传之后更改为管理员用户名。 1[ugit@centOS7BasicForTest ~]$ mv id_rsa.pub andy.pub 拉取 gitolite 代码并安装 1234git clone https://github.com/sitaramc/gitolitemkdir -p ~/bin~/gitolite/install -to ~/bin./bin/gitolite setup -pk andy.pub 第一次执行，会提示： 123456Initialized empty Git repository in /work/ugit/repositories/gitolite-admin.git/Initialized empty Git repository in /work/ugit/repositories/testing.git/WARNING: /work/ugit/.ssh missing; creating a new one (this is normal on a brand new install)WARNING: /work/ugit/.ssh/authorized_keys missing; creating a new one (this is normal on a brand new install) &gt; 上面的警告，提示 .ssh 目录不存在并已经创建了，以及在该目录下不存在文件 authorized_keys，并创建了该文件。再次执行 `./bin/gitolite setup -pk andy.pub` ，因为已经存在目录和文件，所以不会再报警告。 ./bin/gitolite setup -pk andy.pub 命令执行之后，会在 repositories 目录生成两个默认的仓库，其中 gitolite-admin 为远程管理的仓库，下面的介绍会用到。123456[ugit@centOS7BasicForTest ~]$ cd repositories/[ugit@centOS7BasicForTest repositories]$ lltotal 8drwx------ 8 ugit ggit 4096 Jun 2 21:05 gitolite-admin.gitdrwx------ 7 ugit ggit 4096 Jun 2 21:05 testing.git[ugit@centOS7BasicForTest repositories]$ 到这里，安装就算完成了，下面是讲如何管理（配置）项目（仓库）。 项目权限管理（配置）clone gitolite-admin 项目 clone， 一定要用 Git Bash 来操作，我试图用 TortoiseGit 客户端可视化界面来操作，失败了，没做深入研究，如果有哪位看官知道如何才能用 TortoiseGit 操作成功，请不吝赐教（左上角有我的 QQ 邮箱）。可能用 http 协议才会成功。 接下来，管理员把远程管理仓库 gitolite-admin clone 到本地，用管理这个仓库的方式来管理 Git 项目（仓库），包括用户权限。 ugit@code.apg.com:gitolite-admin.git，仓库目录后面的 .git 可以省略，可写成：ugit@code.apg.com:gitolite-admin1234567891011121314# 下载远程管理仓库, 请把 code.apg.com 换成你自己服务器的域名或者 ip$ git clone ugit@code.apg.com:gitolite-admin.gitCloning into &apos;gitolite-admin&apos;...The authenticity of host &apos;code.apg.com (192.168.1.91)&apos; can&apos;t be established.ECDSA key fingerprint is SHA256:njf9IMbOojDSgS2lA2EEYxD2J5pPfPqaCDKIsO7iamA.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added &apos;code.apg.com,192.168.1.91&apos; (ECDSA) to the list of known hosts.Enter passphrase for key &apos;/c/Users/AndyChen/.ssh/id_rsa&apos;: # ssh key 生成时，设置了密码，所以，在 clone 时需要输入密码，否则不会。remote: Counting objects: 10, done.remote: Compressing objects: 100% (7/7), done.remote: Total 10 (delta 1), reused 0 (delta 0)Receiving objects: 100% (10/10), done.Resolving deltas: 100% (1/1), done.$ 注意，命令里的 ugit 是用户名。命令结构: git clone 用户名@ip/domain:项目名，一个项目对应一个以 .git 为后缀的目录名，clone 时，可不用写 .git 后缀。下面这张截图特意去掉项目名后面的 .git 作了测试。 添加其他开发小伙伴 其他开发小伙伴，打开 Git Bash，用命令 ssh-keygen -t rsa -C “&lt;邮箱&gt;” 生成 SSH key 后，将 key 文件发给管理员。建议把&lt;邮箱&gt;换成真实的。 管理员将各开发伙伴的 key 文件（id_rsa.pub）添加到 gitolite-admin 仓库的 keydir 目录下，并根据不同人员重新命名，注意文件名字格式为 userName.pub，userName 是配置权限时要用到的用户名。 管理员的 key 文件默认已经添加至该目录。 项目配置信息，通过文件 gitolite.conf 来配置（管理）。 第一次用 IDEA commit 代码时，会要求填写用户名和邮箱，写自己的账户名和邮箱即可，主要是为了方便代码管理，方便通过用户名或邮箱能识别到相应的开发人员。 通过文件 gitolite.conf 配置（管理）项目配置用户对仓库的读写权限，直接修改 conf 文件夹下的 gitolite.conf 文件。 repo：项目（仓库）名，如果新添加一个 repo，在 push 之后，服务端会自动新建一个对应的同名空仓库。 RW：可读可写。 @all：所有人。 master 和 dev 为相应的分支。 参考12345678910111213141516@admin = andy@dev = tom jeery rose repo gitolite-admin # 定义了版本库 gitolite-admin。 RW+ = andy # 指定只有用户 andy 才能够访问，并拥有读(R)写(W)和强制更新(+)的权限。 repo temp/.+ # 通过正则表达式定义了一组版本库，即在 temp/ 目录下的所有版本库。 C = @admin # 用户组 @admin 中的用户，可以在 temp/ 目录下创建版本库。创建版本库的用户，具有对版本库操作的所有权限。 RW = @all # 所有用户都可以读写 temp 目录下的版本库，但不能强制更新。repo projectName # 定义的 projectName 版本库授权使用了引用授权语法。 RW+ = @admin # 用户组 @admin 对所有的分支和里程碑拥有读写、重置、添加和删除的授权。 RW master = tom # 用户 tom 可以读写 master 分支。（还包括名字以 master 开头的其他分支，如果有的话）。 RW+ dev = @dev # 用户组 @dev 可以读写、强制更新、创建以及删除 dev 开头的分支。 RW test$ = jeery # 用户 jeery 可以读写 test 分支。 (仅此分支，精确匹配）。 RW refs/tags/v[0-9] = rose # 用户 rose 可以创建以 v+数字0到9的分支 更详细的请参考官方文档 注意事项 在 CentOS 上创建公钥，将 id_rsa.pub 改名，如改为 utomcat.pub，git clone，提示：fatal: Could not read from remote repository. 解决办法，重新生成名为 id_rsa.pub 的公钥，或者将 utomcat.pub 再改回成 id_rsa.pub。 如果需要在多台服务器上，以不同的用户提供 ssh key，那么，需要创建不同的用户，分别生成公钥，shell 脚本在执行的时候，可以指定用户，这样即可达到目的。 如，以 root 的身份执行的脚本，在脚本里再以 utomcat 的身份执行别的脚本文件，指令如下： 1su - utomcat -lc &quot;sh /home/utomcat/shell-script/startTomcat.sh&quot; 这可是血的教训，在测试环境上执行同步代码至 gitee 项目时，因为没配置好，让好几个同事等待了 10 多 20 分钟。 用 TortoiseGit clone 项目的坑因为 gitolite 配置的是 ssh 公钥认证的方式，而 TortoiseGit 走用户名密码的方式，所以会要求输入密码，而 gitolite 的机制天生就不是针对用户名密码认证方式，所以行不通。 *会失败，不过还是记录一下，以免看官走弯路。 以下提示框，点【yes】 123456789101112131415161718#---------------------------TortoiseGitPlink Security Alert#---------------------------The server&apos;s host key is not cached in the registry. Youhave no guarantee that the server is the computer youthink it is.The server&apos;s ssh-ed25519 key fingerprint is:ssh-ed25519 256 f7:4e:73:7b:fb:eb:4d:48:19:14:86:b0:16:3a:47:1eIf you trust this host, hit Yes to add the key toPuTTY&apos;s cache and carry on connecting.If you want to carry on connecting just once, withoutadding the key to the cache, hit No.If you do not trust this host, hit Cancel to abandon theconnection.#---------------------------Yes No Cancel #--------------------------- 接下来，输入密码，输入用户 ugit 的密码，但提示： 12345678910git.exe clone --progress -v &quot;ugit@code.apg.com:gitolite-admin.git&quot; &quot;C:\\workspace\\gitolite-admin&quot;Cloning into &apos;C:\\workspace\\gitolite-admin&apos;...fatal: &apos;gitolite-admin.git&apos; does not appear to be a git repositoryfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists.git did not exit cleanly (exit code 128) (109219 ms @ 2018-06-03 9:07:57 AM) 密码说明 此处确定是输入 ugit 的密码，而非 ssh 公匙的密码。 如果随便输入，会提示认证失败，需要再次输入，输入 ugit 的密码，则直接输入操作结果，不过，这个结果是 clone 失败。 同样的执行命令，即：git clone –progress -v “ugit@code.apg.com:testing” “C:\\workspace\\testing”，在 Git Bash 执行，能正常 clone，可能是 TortoiseGit 的某种机制导致了这种操作的失败，没有深入研究。 切换管理员 重新在管理员电脑上生成 SSH key 1234567891011121314151617181920212223$ ssh-keygen -t rsa -C &quot;552087293@qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/AndyChen/.ssh/id_rsa):/c/Users/AndyChen/.ssh/id_rsa already exists.Overwrite (y/n)? yEnter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /c/Users/AndyChen/.ssh/id_rsa.Your public key has been saved in /c/Users/AndyChen/.ssh/id_rsa.pub.The key fingerprint is:SHA256:F46f/NUi3nDqIpVhTnMsM224TeiXuksjttk+YLIe4Hw 552087293@qq.comThe key&apos;s randomart image is:+---[RSA 2048]----+| || || .= || o@.* || . S=o&amp; . || o .. o+*.+ . || o E+oo*oo + .|| ..o.*++ B . || .. oo=*= . |+----[SHA256]-----+ 将新生成的 SSH key 改成管理员的用户名，比如我的，改为：andy.pub，覆盖到 gitolite-admin 项目的 keydir 目录下的同名文件。 这时候直接 commit，push，会要求输入 ugit 的密码，而且 push 的时候，直接提示 push 失败。接着按下面的步骤操作。 以 ugit 的身份登录 Gitolite 所在服务器，删除之前的 SSH key，再上传上一步新生成的 id_rsa.pub，更名为管理员用户名（也许这一步非必须，感兴趣的童鞋自己试一下）mv id_rsa.pub andy.pub，再执行 ./bin/gitolite setup -pk andy.pub。因为之前执行该命令配置过项目，所以本次不会有任何提示，第一次会有提示，请看上面有关第一次配置的操作描述。 再次 push gitolite-admin 的更改，不会再要求输入 ugit 用户密码，push 成功。获取其它项目的最新，也成功了，说明管理员切换成功。 切换管理员之后记如果管理员邮箱变了，相当于重新设置管理员。切换管理员之后，将生成的 id_rsa.pub 文件替换到 Gitolite 所在服务器的 ugit 根目录下并执行 ./bin/gitolite setup -pk andy.pub 即可，不用更新到 keydir 下也可正常 push 和 pull。 以下提示，可不管：123456AndyChens-MacBook-Air-on-lenovo:temp andy$ git clone ugit@code.apg.com:examCloning into &apos;exam&apos;...The authenticity of host &apos;code.apg.com (192.168.1.91)&apos; can&apos;t be established.ECDSA key fingerprint is SHA256:njf9IMbOojDSgS2lA2EEYxD2J5pPfPqaCDKIsO7iamA.Are you sure you want to continue connecting (yes/no)? yes... 其实在本地搭建 git 服务端，邮箱的真实性是无关紧要的。但是，如果我们想要借助 gitee 上线至生产环境，就需要把项目同步到 gitee 上的私有项目，这样的话，可以在 gitee 上查看提交情况，配置 SSH key 时用的邮箱地址会与 gitee 账号的邮箱地址匹配，这样，就知道是谁在什么时候提交了什么代码了，同时也支持不在办公室的环境下也能提交代码并最终同步至办公室的 git 环境，非常方便远程项目协作和远程项目管理。 管理员 clone gitolite-admin 的坑git describe failed; cannot deduce version number运行 ~/gitolite/install -to ~/bin 时提示 git describe failed; cannot deduce version number git clone 的时候，我为了加快下载速度，用了参数 --depth 1 导致。1git clone --depth 1 https://github.com/sitaramc/gitolite 换成：1git clone https://github.com/sitaramc/gitolite 要求输入密码此错误发生在 2019-08-30，新创建 git server 的过程中。之前按上面说明操作，非常顺利，这次操作花费了一个周末的时间也没能找到原因，汗~~。我只是换了一种思路满足了我的需求。 在管理员的电脑上（workstation），clone gitolite-admin 项目时，要求输入密码123$ git clone ugit@192.168.1.168:gitolite-adminCloning into &apos;gitolite-admin&apos;...ugit@192.168.1.168&apos;s password: 相关官方文档：appendix 1: ssh daemon asks for a password 输入 ugit 用户密码进行尝试（看过官方文档才知道，这种尝试是多余的）在输入 ugit 用户密码后，提示：’gitolite-admin.git’ does not appear to be a git repository12345678$ git clone ugit@192.168.1.168:gitolite-admin.gitCloning into &apos;gitolite-admin&apos;...ugit@192.168.1.168&apos;s password:fatal: &apos;gitolite-admin.git&apos; does not appear to be a git repositoryfatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 继续搜索解决方案，将项目名带上路径：repositories/gitolite-admin.git123456789$ git clone ugit@192.168.1.168:repositories/gitolite-admin.gitCloning into &apos;gitolite-admin&apos;...ugit@192.168.1.168&apos;s password:remote: Enumerating objects: 10, done.remote: Counting objects: 100% (10/10), done.remote: Compressing objects: 100% (7/7), done.remote: Total 10 (delta 1), reused 0 (delta 0)Receiving objects: 100% (10/10), done.Resolving deltas: 100% (1/1), done. 可以 clone 了，但是，push 时会报错，看了官方文档，如果在管理员电脑上（上传 ssh key 的电脑） clone gitolite-admin 项目时，提示需要密码，那一定是不正常的，即使通过添加项目路径成功 clone，在 push 时一样会报错，所以，这并不是解决方案。 push 报错：123456789101112131415$ git pushugit@192.168.1.168&apos;s password:Counting objects: 6, done.Delta compression using up to 8 threads.Compressing objects: 100% (5/5), done.Writing objects: 100% (6/6), 811 bytes | 270.00 KiB/s, done.Total 6 (delta 0), reused 0 (delta 0)remote: Empty compile time value given to use lib at hooks/update line 6.remote: Use of uninitialized value in require at hooks/update line 7.remote: Can&apos;t locate Gitolite/Hooks/Update.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_per l /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .) at hooks/update line 7.remote: BEGIN failed--compilation aborted at hooks/update line 7.remote: error: hook declined to update refs/heads/masterTo 192.168.1.168:repositories/gitolite-admin ! [remote rejected] master -&gt; master (hook declined)error: failed to push some refs to &apos;ugit@192.168.1.168:repositories/gitolite-admin&apos; 官网相关错误的帮助说明：https://gitolite.com/gitolite/emergencies.html#ce摘抄如下： common errors WARNING: keydir/.pub duplicates a non-gitolite key, sshd will ignore it You used a key that is already set to give you shell access. You cannot use the same key to get shell access as well as access gitolite repos. Solution: use a different keypair for gitolite. There’s a wee bit more on this in the setup section of the install page. Also see why bypassing causes a problem and both the pages linked from ssh for background. Empty compile time value given to use lib at hooks/update line 6 (followed by Can’t locate Gitolite/Hooks/Update.pm in @INC a couple of lines later). You’re bypassing gitolite. You cloned the repo using the full path (i.e., including the repositories/ prefix), either directly on the server, or via ssh with a key that gives you shell access. Solution: same as for the previous bullet. NOTE: If you really must do it, and this is on the server and is a one-time thing, you can try gitolite push instead of git push. BUT… this defeats all gitolite access control, so if you’re going to do this often, maybe you don’t need gitolite! why bypassing causes a problem 不算解决方案的解决方案有关要求输入密码的官方文档：https://gitolite.com/gitolite/sts#appendix-1-ssh-daemon-asks-for-a-password 看了很蒙，照着可能的方案操作，均以失败告终。比如： 在 windows10 上新创建一个不同的管理员来生成密钥，用于管理 gitolite，失败。 在 CentOS7 上创建一个新用户 ugitadmin 来生成密钥，用于管理 gitolite，失败。 删除 ugit 用户，重新操作，失败。 反复检查操作步骤，重新操作多次，均以失败告终。 于是 我开始怀疑以前的操作步骤是否还适用于当前的 gitolite 版本。就差怀疑人生了~~ 反复看官方文档反复确认，为了验证文档的正确性，我在用于测试的虚拟机上按照文档操作，非常顺利，说明操作步骤是没有问题的，当然，文档本身也是没有问题的。 尝试到这里，想起并进一步深刻的体会到那句业内流行的话了：如果系统有问题，终极解决方案就是重装系统，如果一次不能解决，那就再来一次，还不行，那就再重装~~ 估计我操作的那台 CentOS7 服务器，重新安装后再操作，一定就象我在虚拟机上操作一样顺利。 不过，一想到重装，连带的软件以及项目环境都要从头配置，脑壳就开始痛了~~ 继续在服务器 CentOS7 上操作。后面的操作干脆彻底换一个用户名来安装 gitolite，管理 gitolite-admin 的用户也从 windows 上换到 CentOS7 上了，然后终于“大功告成”。 我的方案原因分析 也许是 ugit 这个用户本身的问题，哪怕删除再重新创建都不行，期间还重启之后再创建也不行。 也许是另外一个用户 utomcat 影响到了，这个用户设置了 ssh 密钥并上传到 gitee.com 上，用于自动部署 gitee.com 上的项目。 删除旧用户，用新用户来配置在 CentOS7 服务器上，删除用户 ugit 和 utomcat（删除前备份 utomcat home 目录下的文件），创建用户 git 用于安装 gitolite，创建用户 gitadmin 用来管理 gitolite-admin，成功！成功之后，再次创建用户 utomcat，用于管理 java 项目，创建之后，恢复该用户之前的文件，简单配置之后，utomcat 又重见天日了，就象未曾删除过一样，并且，重点是，对 gitolite 并无影响。 以下是操作步骤，用户目录采用默认配置：12useradd gituseradd gitadmin 以 gitadmin 身份登录，生成 ssh 密钥，不设置访问密码，一路回车，将 id_rsa.pub 存到 windows10，并重命名为 gitadmin.pub1ssh-keygen -t rsa 以 git 身份登录，上传 gitadmin.pub 到根目录1234git clone https://github.com/sitaramc/gitolitemkdir -p ~/bin~/gitolite/install -to ~/bin./bin/gitolite setup -pk gitadmin.pub 切换到 gitadmin，执行 git ls-remote git@127.0.0.1:gitolite-admin.git，没有要求输入密码，显示如下，则表示配置成功。123[gitadmin@localhost ~]$ git ls-remote git@127.0.0.1:gitolite-admin.gitdee261b6777ebd135be021f7d47ce41995a4a005 HEADdee261b6777ebd135be021f7d47ce41995a4a005 refs/heads/master 查看安装的 gitolite 版本12345[gitadmin@localhost ~]$ ssh git@127.0.0.1 infohello gitadmin, this is git@localhost running gitolite3 v3.6.11-4-gef9ab68 on git 2.22.1 R W gitolite-admin R W testing 进一步测试： 在 CentOS7 服务器上以 gitadmin 身份登录，clone gitolite-admin 项目，并修改 gitolite-admin/conf/gitolite.conf，添加内容： 12345repo mis-ui RW+ = @allrepo mis-api RW+ = @all 把 windows10 上的 id_rsa.pub 上传至 gitolite-admin/keydir 下，并重命名为 andy.pub。 提交修改（commit + push）。 在 windows10 上 clone 新配置的两个项目，均未要求输入密码，说明配置成功：123456789AndyChen@AndyChen MINGW64 /c/study/temp$ git clone git@192.168.1.168:mis-apiCloning into &apos;mis-api&apos;...warning: You appear to have cloned an empty repository.AndyChen@AndyChen MINGW64 /c/study/temp$ git clone git@192.168.1.168:mis-uiCloning into &apos;mis-ui&apos;...warning: You appear to have cloned an empty repository.","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"git","slug":"CentOS/git","permalink":"https://www.lovesofttech.com/categories/CentOS/git/"},{"name":"Gitolite","slug":"CentOS/git/Gitolite","permalink":"https://www.lovesofttech.com/categories/CentOS/git/Gitolite/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Gitolite","slug":"Gitolite","permalink":"https://www.lovesofttech.com/tags/Gitolite/"}]},{"title":"CentOS 7 安装配置 Node","slug":"linux/CentOS7Node","date":"2018-06-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.014Z","comments":true,"path":"linux/CentOS7Node.html","link":"","permalink":"https://www.lovesofttech.com/linux/CentOS7Node.html","excerpt":"如题","text":"如题 下载 nodejs download 以长期支持版本 10.16.3 为例，下载版本：Linux Binaries (x64) 下载、解压1234cd ~/soft/wget https://nodejs.org/dist/v10.16.3/node-v10.16.3-linux-x64.tar.xzmkdir /usr/local/lib/nodejstar -xJvf node-v10.16.3-linux-x64.tar.xz -C /usr/ 配置环境变量配置： vim /etc/profile向文件里追加如下内容：123NODE_HOME=/usr/node-v10.16.3-linux-x64PATH=$NODE_HOME/bin:$PATHexport NODE_HOME PATH 执行下面的命令，使修改立即生效1source /etc/profile 检查配置是否生效1234[root@localhost ~]# node -v v10.16.3[root@localhost ~]# npm -v6.9.0 npm 使用 taobao 镜像以加快依赖包下载速度 cnpm1npm install -g cnpm --registry=https://registry.npm.taobao.org","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Node","slug":"CentOS/Node","permalink":"https://www.lovesofttech.com/categories/CentOS/Node/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/tags/Node/"}]},{"title":"CentOS 7.5 安装配置 jenkins","slug":"linux/centOS7JenkinsInstall","date":"2018-06-02T16:00:00.000Z","updated":"2020-09-01T02:53:13.024Z","comments":true,"path":"linux/centOS7JenkinsInstall.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7JenkinsInstall.html","excerpt":"如题","text":"如题 下载并安装 jenkinsdownload page笔者下载的安装版本，用 rpm 可以安装为系统服务: wget https://pkg.jenkins.io/redhat-stable/jenkins-2.121.1-1.1.noarch.rpm你也可以直接下载 war 版本放 tomcat 下运行： wget http://mirrors.jenkins.io/war-stable/latest/jenkins.war 安装123456789101112131415[root@centOS7BasicForTest ~]# rpm -ivh jenkins-2.121.1-1.1.noarch.rpm warning: jenkins-2.121.1-1.1.noarch.rpm: Header V4 DSA/SHA1 Signature, key ID d50582e6: NOKEYPreparing... ################################# [100%]Updating / installing... 1:jenkins-2.121.1-1.1 ################################# [100%][root@centOS7BasicForTest ~]# rpm -ql jenkins/etc/init.d/jenkins # 启动文件/etc/logrotate.d/jenkins/etc/sysconfig/jenkins/usr/lib/jenkins/usr/lib/jenkins/jenkins.war/usr/sbin/rcjenkins/var/cache/jenkins/var/lib/jenkins/var/log/jenkins 安装目录及配置文件目录 Jenkins安装目录: /usr/lib/jenkins Jenkins工作目录: /var/lib/jenkins (对应于环境变量 JENKINS_HOME) 构建项目源码目录：/var/lib/jenkins/workspace （第一次构建之后才会生成该目录） 配置/日志文件 启动文件：/etc/init.d/jenkins 默认配置文件：/etc/sysconfig/jenkins 默认日志文件：/var/log/jenkins/jenkins.log 修改配置修改默认端口123vim /etc/sysconfig/jenkinsJENKINS_PORT=&quot;8090&quot;JENKINS_USER=&quot;utomcat&quot; ## 原值 &quot;jenkins&quot; 此处修改要注意，当配置 git 的时候，就必须使用当前配置用户的公/私钥 指定 jdk 安装目录启动失败，提示：Starting Jenkins bash: /usr/bin/java: No such file or directory123456789101112131415161718[root@centOS7BasicForTest vhosts]# systemctl start jenkinsJob for jenkins.service failed because the control process exited with error code. See &quot;systemctl status jenkins.service&quot; and &quot;journalctl -xe&quot; for details.[root@centOS7BasicForTest vhosts]# systemctl status jenkins.service● jenkins.service - LSB: Jenkins Automation Server Loaded: loaded (/etc/rc.d/init.d/jenkins; bad; vendor preset: disabled) Active: failed (Result: exit-code) since Fri 2018-06-22 16:54:18 HKT; 18s ago Docs: man:systemd-sysv-generator(8) Process: 2494 ExecStart=/etc/rc.d/init.d/jenkins start (code=exited, status=1/FAILURE)Jun 22 16:54:18 centOS7BasicForTest systemd[1]: Starting LSB: Jenkins Automation Server...Jun 22 16:54:18 centOS7BasicForTest runuser[2499]: pam_unix(runuser:session): session opened for user jenkins by (uid=0)Jun 22 16:54:18 centOS7BasicForTest jenkins[2494]: Starting Jenkins bash: /usr/bin/java: No such file or directoryJun 22 16:54:18 centOS7BasicForTest runuser[2499]: pam_unix(runuser:session): session closed for user jenkinsJun 22 16:54:18 centOS7BasicForTest jenkins[2494]: [FAILED]Jun 22 16:54:18 centOS7BasicForTest systemd[1]: jenkins.service: control process exited, code=exited status=1Jun 22 16:54:18 centOS7BasicForTest systemd[1]: Failed to start LSB: Jenkins Automation Server.Jun 22 16:54:18 centOS7BasicForTest systemd[1]: Unit jenkins.service entered failed state.Jun 22 16:54:18 centOS7BasicForTest systemd[1]: jenkins.service failed. 解决修改启动文件中对 java 目录的配置1vi /etc/init.d/jenkins 在 candidates=” 的下面添加上 java 在本机的位置，并且注释掉其它位置123456789candidates=&quot;/usr/jdk1.8.0_171/bin/java#/etc/alternatives/java#/usr/lib/jvm/java-1.8.0/bin/java#/usr/lib/jvm/jre-1.8.0/bin/java#/usr/lib/jvm/java-1.7.0/bin/java#/usr/lib/jvm/jre-1.7.0/bin/java#/usr/bin/java&quot; 再次启动1234[root@centOS7BasicForTest vhosts]# systemctl start jenkinsWarning: jenkins.service changed on disk. Run &apos;systemctl daemon-reload&apos; to reload units.[root@centOS7BasicForTest vhosts]# systemctl daemon-reload[root@centOS7BasicForTest vhosts]# systemctl start jenkins 添加 nginx 代理配置1vi /usr/local/nginx/vhosts/jenkins.conf 添加以下内容：123456789101112131415161718upstream jenkins &#123; ip_hash; server localhost:8090 weight=5 max_fails=1 fail_timeout=180;&#125;server &#123; access_log logs/jenkins.access.log; error_log logs/jenkins.error.log; listen 80; server_name jenkins.domain.com; location / &#123; proxy_pass http://jenkins; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; 使配置生效1/usr/local/nginx/sbin/nginx -s reload 如果是在局域网配置的 jenkins 服务，需要在 windows 本机添加域名 jenkins.domain.com 的指向，即可直接用域名访问。在 C:\\Windows\\System32\\drivers\\etc\\hosts 文件添加一行，服务器 IP 地址 jenkins.domain.com，如1192.168.1.3 jenkins.domain.com 设置开机启动失败的方式123[root@centOS7BasicForTest vhosts]# systemctl enable jenkinsjenkins.service is not a native service, redirecting to /sbin/chkconfig.Executing /sbin/chkconfig jenkins on 正确的“姿势”12[root@centOS7BasicForTest vhosts]# chkconfig --add jenkins[root@centOS7BasicForTest vhosts]# chkconfig --level 2345 jenkins on 配置 jenkins 输入页面指定文件的密码之后，选择插件，可以仅安装推荐的插件。 之后创建管理员账号。1234HTTP ERROR 403Problem accessing /setupWizard/configureInstance. Reason: No valid crumb was included in the request 估计是 session 过期了，因为到最后一步，保存域名，有事耽误，过了好久才操作的。重新登录，会再一次进入到刚才保存域名的界面，点击保存就好了。 登录之后白屏安装向导执行完成之后，以管理员身份登录，白屏。原因是 /var/lib/jenkins/hudson.model.UpdateCenter.xml 配置的地址无法访问导致。 解决修改 /var/lib/jenkins/hudson.model.UpdateCenter.xml1234567&lt;?xml version=&apos;1.1&apos; encoding=&apos;UTF-8&apos;?&gt;&lt;sites&gt; &lt;site&gt; &lt;id&gt;default&lt;/id&gt; &lt;url&gt;https://updates.jenkins.io/update-center.json&lt;/url&gt; &lt;/site&gt;&lt;/sites&gt; 改为：123456&lt;sites&gt; &lt;site&gt; &lt;id&gt;default&lt;/id&gt; &lt;url&gt;http://mirror.xmission.com/jenkins/updates/update-center.json&lt;/url&gt; &lt;/site&gt;&lt;/sites&gt; 修改之后，重启 jenkins，再次访问就正常了，如果用中文浏览器访问，默认就是中文界面。12[root@centOS7BasicForTest jenkins]# systemctl stop jenkins[root@centOS7BasicForTest jenkins]# systemctl start jenkins git 配置以 ssh 的方式访问本地服务器上的 git 服务，Credentials 选择【none】 页面上报错：Permission denied, please try again.123456789Failed to connect to repository : Command &quot;git ls-remote -h ugit@git.apg.com:source HEAD&quot; returned status code 128:stdout: stderr: Permission denied, please try again. Permission denied, please try again. Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password). fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. 解决1vim /etc/sysconfig/jenkins 将1JENKINS_USER=&quot;jenkins&quot; 改为1JENKINS_USER=&quot;utomcat&quot; 同时，修改以下目录属主123chown -R utomcat:gtomcat /var/lib/jenkinschown -R utomcat:gtomcat /var/cache/jenkinschown -R utomcat:gtomcat /var/log/jenkins 改完后，重启 jenkins 依然没有生效，最后重启 centOS 之后生效的。需要注意的是 Credentials 要选择【none】。最好先在服务器上用执行 git clone ugit@git.apg.com:source 成功之后，再去配置 jenkins。 在可以成功执行 git clone ugit@git.apg.com:source 之前，需要配置 ssh key1ssh-keygen -t rsa # 输入需要保存的 key 文件名（含路径），然后上传至 gitolite-admin 项目的 keydir 目录。 关于 gitolite，请看：CentOS 7.5 借助 Gitolite 管理 Git 项目 检查启动用户123[root@centOS7BasicForTest lib]# ps -ef | grep jenkinsroot 1180 1 0 07:00 ? 00:00:55 /usr/jdk1.8.0_171/bin/java -Dcom.sun.akuma.Daemon=daemonized -Djava.awt.headless=true -DJENKINS_HOME=/var/lib/jenkins -jar /usr/lib/jenkins/jenkins.war --logfile=/var/log/jenkins/jenkins.log --webroot=/var/cache/jenkins/war --daemon --httpPort=8090 --debug=5 --handlerCountMax=100 --handlerCountMaxIdle=20root 2291 1963 0 10:32 pts/0 00:00:00 grep --color=auto jenkins 待完善将 jenkins 用户，添加权限：可以执行 git clone，用于生产环境。 设置 jenkins 密码。 以用户 jenkins 登录服务器，运行 ssh-keygen -t rsa 恢复 jenkins 默认配置，即启动用户，还有恢复三个目录的属主。123chown -R jenkins:jenkins /var/lib/jenkinschown -R jenkins:jenkins /var/cache/jenkinschown -R jenkins:jenkins /var/log/jenkins 新加依赖，package 报错1234567891011Waiting for Jenkins to finish collecting data[ERROR] Failed to execute goal on project apg.boot: Could not resolve dependencies for project apg:apg.boot:war:1.0.0: Failed to collect dependencies at org.springframework.boot:spring-boot-starter-websocket:jar:1.5.10.RELEASE: Failed to read artifact descriptor for org.springframework.boot:spring-boot-starter-websocket:jar:1.5.10.RELEASE: Could not transfer artifact org.springframework.boot:spring-boot-starter-websocket:pom:1.5.10.RELEASE from/to alimaven (http://maven.aliyun.com/nexus/content/groups/public/): /usr/apache-maven-3.5.3/repo/org/springframework/boot/spring-boot-starter-websocket/1.5.10.RELEASE/spring-boot-starter-websocket-1.5.10.RELEASE.pom.part.lock (No such file or directory) -&gt; [Help 1][ERROR] [ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.[ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException[ERROR] [ERROR] After correcting the problems, you can resume the build with the command[ERROR] mvn &lt;goals&gt; -rf :apg.boot 分析最开始是以 root 身份运行 jenkins，新项目第一次打包，下载依赖正常。后来我把 jenkins 服务配置成以 utomcat 的身份运行，每次构建也都正常，上面的错误，是在添加了新依赖之后发生的。 原因首先想到的是依赖仓库的目录权限，一查，才恍然大悟，maven 的依赖仓库目录的属主是 root，所以，新依赖在下载的时候不可写，才会有问题。 解决把 Maven 的依赖仓库目录属主更改为 utomcat。12# 进入仓库目录的上一级目录chown utomcat:gtomcat -R repo/","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Maven","slug":"CentOS/Maven","permalink":"https://www.lovesofttech.com/categories/CentOS/Maven/"},{"name":"jenkins","slug":"CentOS/Maven/jenkins","permalink":"https://www.lovesofttech.com/categories/CentOS/Maven/jenkins/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Maven","slug":"Maven","permalink":"https://www.lovesofttech.com/tags/Maven/"},{"name":"jenkins","slug":"jenkins","permalink":"https://www.lovesofttech.com/tags/jenkins/"}]},{"title":"CentOS 7.5 安装配置 Maven","slug":"linux/centOS7Maven","date":"2018-06-02T16:00:00.000Z","updated":"2020-09-01T08:48:25.695Z","comments":true,"path":"linux/centOS7Maven.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7Maven.html","excerpt":"如题","text":"如题 下载official download page123wget http://mirrors.shu.edu.cn/apache/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gztar xzvf apache-maven-3.5.3-bin.tar.gzmv apache-maven-3.5.3 /usr/ 配置环境变量Maven 的运行依赖 Java 环境，所以，需要先配置好 Java。这里假设已经配置好 java 运行环境。1vim /etc/profile 添加 MAVEN_HOME，修改 PATH、export123MAVEN_HOME=/usr/apache-maven-3.5.3PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$PATHexport JAVA_HOME MAVEN_HOME PATH 使配置立即生效执行下面的命令1source /etc/profile 查看 Maven 版本，检查是否配置成功1234567[root@centOS7BasicForTest apache-maven-3.5.3]# mvn -versionApache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-25T03:49:05+08:00)Maven home: /usr/apache-maven-3.5.3Java version: 1.8.0_171, vendor: Oracle CorporationJava home: /usr/jdk1.8.0_171/jreDefault locale: en_US, platform encoding: UTF-8OS name: &quot;linux&quot;, version: &quot;3.10.0-862.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot; 配置 Maven 的镜像仓库源推荐使用阿里云镜像仓库，在配置文件 /conf/settings.xml 的 &lt;mirrors&gt; 节点添加如下镜像源：123456&lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;&lt;/mirror&gt; 修改 Maven 依赖下载目录 找到 /conf/settings.xml 配置项 localRepository，取消该配置的注释（从注释区域复制或剪切到注释区域之外）修改之。 1&lt;localRepository&gt;/usr/apache-maven-3.5.3/repo&lt;/localRepository&gt; 将 /conf/settings.xml 文件复制到用户根目录，windows 是：C:\\Users\\andy\\.m2，这样做的目的是，可以保持 idea 的默认配置。当然，这一步不是必须的，把 idea 的 maven 的配置改为自己安装的目录也是可以的。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Maven","slug":"CentOS/Maven","permalink":"https://www.lovesofttech.com/categories/CentOS/Maven/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Maven","slug":"Maven","permalink":"https://www.lovesofttech.com/tags/Maven/"}]},{"title":"CentOS 7.5 安装配置 Node","slug":"frontend/centOS7Node","date":"2018-05-30T16:00:00.000Z","updated":"2020-09-01T08:09:57.164Z","comments":true,"path":"frontend/centOS7Node.html","link":"","permalink":"https://www.lovesofttech.com/frontend/centOS7Node.html","excerpt":"介绍如何安装、配置 Node.js，以及如何使用淘宝的 npm 镜像 cnpm，以加快依赖下载速度。","text":"介绍如何安装、配置 Node.js，以及如何使用淘宝的 npm 镜像 cnpm，以加快依赖下载速度。 下载稳定版本进入官方下载页面。建议安装长期维护版本。123wget https://nodejs.org/dist/v8.11.2/node-v8.11.2-linux-x64.tar.xztar -xvf node-v8.11.2-linux-x64.tar.xzmv node-v8.11.2-linux-x64 /opt/ 配置环境变量1vim /etc/profile 添加如下内容与 NODE 有关的内容。 下面的配置有 java 和 maven 的，请根据实际情况配置。1234...NODE_HOME=/opt/node-v8.11.2-linux-x64PATH=$JAVA_HOME/bin:$MAVEN_HOME/bin:$NODE_HOME/bin:$PATHexport JAVA_HOME MAVEN_HOME NODE_HOME PATH 使配置立即生效执行下面的命令1source /etc/profile 查看 node 版本，检查是否配置成功1234[root@centOS7BasicForTest ~]# node -vv8.11.2[root@centOS7BasicForTest ~]# npm -v5.6.0 使用淘宝的 npm 镜像 cnpm执行：npm install -g cnpm --registry=https://registry.npm.taobao.org12345678910111213141516171819[root@centOS7BasicForTest ~]# npm install -g cnpm --registry=https://registry.npm.taobao.orgnpm WARN deprecated socks@1.1.10: If using 2.x branch, please upgrade to at least 2.1.6 to avoid a serious bug with socket data flow and an import issue introduced in 2.1.0/opt/node-v8.11.2-linux-x64/bin/cnpm -&gt; /opt/node-v8.11.2-linux-x64/lib/node_modules/cnpm/bin/cnpm+ cnpm@6.0.0added 928 packages in 52.936s ╭─────────────────────────────────────╮ │ │ │ Update available 5.6.0 → 6.1.0 │ │ Run npm i -g npm to update │ │ │ ╰─────────────────────────────────────╯[root@centOS7BasicForTest ~]# npm i -g npm/opt/node-v8.11.2-linux-x64/bin/npm -&gt; /opt/node-v8.11.2-linux-x64/lib/node_modules/npm/bin/npm-cli.js/opt/node-v8.11.2-linux-x64/bin/npx -&gt; /opt/node-v8.11.2-linux-x64/lib/node_modules/npm/bin/npx-cli.js+ npm@6.1.0added 247 packages, removed 41 packages and updated 129 packages in 9.938s 安装 yarn1npm install yarn -g NVM（Node version manager）Node.js 的版本管理软件，可以轻松的在 Node.js 各个版本间切换。Node Version Manager - Simple bash script to manage multiple active node.js versionsinstall","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"Node","slug":"CentOS/Node","permalink":"https://www.lovesofttech.com/categories/CentOS/Node/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/tags/Node/"}]},{"title":"CentOS 7.5 安装配置 git","slug":"git/centOS7Git","date":"2018-05-30T16:00:00.000Z","updated":"2020-09-01T02:53:12.957Z","comments":true,"path":"git/centOS7Git.html","link":"","permalink":"https://www.lovesofttech.com/git/centOS7Git.html","excerpt":"如题","text":"如题如果不想看笔者的安装过程（看安装过程，可以知道哪一个问题如何解决），直接按照以下步骤执行即可。 安装的正确姿势第一种安装方案：不安装 git 文档（推荐）安装依赖1yum install -y curl-devel zlib-devel gcc autoconf 下载最新版的 git 源码： 如果可以科学上网，访问 github 比较快：https://github.com/git/git/releases 否则，可从这里下载：https://mirrors.edge.kernel.org/pub/software/scm/git 安装 git123make configure./configure --prefix=/usr # 配置目录make &amp;&amp; make install 第二种安装方案：安装 git 的同时，安装 git 文档安装依赖1234yum install -y curl-devel perl-XML-SAX.noarch texinfo perl openjade dh-autoreconf autoconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev asciidoc xmlto docbook2xwget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/d/docbook2X-0.8.8-17.el7.x86_64.rpmrpm -ivh docbook2X-0.8.8-17.el7.x86_64.rpm ln -s /usr/bin/db2x_docbook2texi /usr/bin/docbook2x-texi 安装 gitgithub.com 上下载很慢，可以通过这里下载：https://mirrors.edge.kernel.org/pub/software/scm/git1234567wget https://github.com/git/git/archive/v2.17.1.tar.gztar -xzvf v2.17.1.tar.gzcd git-2.17.1/make configure./configure --prefix=/usrmake all doc infomake install install-doc install-html install-info 以下是在 CentOS 7.5 上安装，并记录了详细过程下载最新版到官方 github 下载最新的 git release 版本本教程下载的是 git-2.17.1 版本，下载之后，按照官方教程，依次执行以下命令。1234567891011wget https://github.com/git/git/archive/v2.17.1.tar.gzyum install -y dh-autoreconf autoconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev asciidoc xmlto docbook2xtar -xzvf v2.17.1.tar.gzcd git-2.17.1/make configure./configure --prefix=/usr # 配置目录make profix=/usr/git# 安装遇到问题，需要 docbook2x 依赖，请继续往下阅读。make all doc info# 先解决上一步的问题再执行。make install install-doc install-html install-info docbook2x 安装过程遇到的问题实际上，按照官方教程，docbook2x 并没有被安装上。同时，还需要安装别的依赖。 autoconf: command not found1234[root@centOS7BasicForTest git-2.17.1]# make configure GEN configure/bin/sh: autoconf: command not foundmake: *** [configure] Error 127 安装依赖：yum install -y autoconf docbook2x-texi: command not found123456make all doc info.../bin/sh: line 1: docbook2x-texi: command not foundmake[1]: *** [user-manual.texi] Error 127make[1]: Leaving directory `/root/soft/git-2.18.0/Documentation&apos;make: *** [info] Error 2 安装时，提示找不到 docbook2X 12345678910[root@centOS7BasicForTest git-2.17.1]# yum install -y asciidoc xmlto docbook2XLoaded plugins: fastestmirrorLoading mirror speeds from cached hostfile * base: mirrors.aliyun.com * extras: mirrors.aliyun.com * updates: mirrors.aliyun.comPackage asciidoc-8.6.8-5.el7.noarch already installed and latest versionPackage xmlto-0.0.25-7.el7.x86_64 already installed and latest versionNo package docbook2X available.Nothing to do 下载 docbook2X 的 rpm 包来安装 12345678wget http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/d/docbook2X-0.8.8-17.el7.x86_64.rpm[root@centOS7BasicForTest ~]# rpm -ivh docbook2X-0.8.8-17.el7.x86_64.rpm warning: docbook2X-0.8.8-17.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEYerror: Failed dependencies: /usr/bin/sgml2xml is needed by docbook2X-0.8.8-17.el7.x86_64 openjade is needed by docbook2X-0.8.8-17.el7.x86_64 perl(XML::SAX::ParserFactory) is needed by docbook2X-0.8.8-17.el7.x86_64 texinfo is needed by docbook2X-0.8.8-17.el7.x86_64 安装 docbook2X 的依赖 12345yum install -y texinfo perl openjade[root@centOS7BasicForTest ~]# rpm -ivh docbook2X-0.8.8-17.el7.x86_64.rpm warning: docbook2X-0.8.8-17.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEYerror: Failed dependencies: perl(XML::SAX::ParserFactory) is needed by docbook2X-0.8.8-17.el7.x86_64 继续安装 docbook2X 依赖 123456yum install -y perl-XML-SAX.noarch[root@centOS7BasicForTest ~]# rpm -ivh docbook2X-0.8.8-17.el7.x86_64.rpm warning: docbook2X-0.8.8-17.el7.x86_64.rpm: Header V3 RSA/SHA256 Signature, key ID 352c64e5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:docbook2X-0.8.8-17.el7 ################################# [100%] 依然有错误1/bin/sh: line 1: docbook2x-texi: command not found 执行 ln 链接 db2x_docbook2texi 为 docbook2x-texi1234[root@centOS7BasicForTest git-2.17.1]# find / -name db2x_docbook2texi/usr/bin/db2x_docbook2texi[root@centOS7BasicForTest git-2.17.1]# cd /usr/bin/[root@centOS7BasicForTest bin]# ln -s db2x_docbook2texi docbook2x-texi 再次依次执行编译安装，没再报错。1234make configure./configure --prefix=/usrmake all doc info # 漫长的等待...make install install-doc install-html install-info 检查 git 版本12[root@centOS7BasicForTest git-2.17.1]# git --versiongit version 2.17.1 安装官方教程 官方英文参考 官方中文参考 配置 git 作为服务端请移步：CentOS 7.5 借助 Gitolite 管理 Git 项目 后记no acceptable C compiler found in $PATH解决：1yum -y install gcc zlib.h: No such file or directory12345678910[root@localhost git-2.24.1]# make &amp;&amp; make install * new build flags CC fuzz-commit-graph.oIn file included from commit-graph.h:7:0, from fuzz-commit-graph.c:1:cache.h:21:18: fatal error: zlib.h: No such file or directory #include &lt;zlib.h&gt; ^compilation terminated.make: *** [fuzz-commit-graph.o] Error 1 解决：1yum install -y zlib-devel 2019-08-19 再一次需要安装 git，这次偷了个懒，没有安装 git 文档（make all doc info 换成了 make，make install install-doc install-html install-info 换成了 make install），遇到了问题，这次的安装过程如下：123make configure./configure --prefix=/usr # 配置目录make &amp;&amp; make install 这样安装不存在上文提到的诸多依赖问题，也能 clone gitee 上的项目。但是在 clone github 上的项目，就遇到了下面的错误。 fatal: unable to find remote helper for ‘https’123[utomcat@localhost ~]$ git clone https://github.com/ant-design/ant-design-pro --depth=1 /home/utomcat/other/ant-design-pro-tsCloning into &apos;/home/utomcat/other/ant-design-pro-ts&apos;...fatal: unable to find remote helper for &apos;https&apos; 遇到这个错误，搜索了一下，网上说什么的都有，原因千奇百怪，在我的虚拟机上，就是没安装全。解决办法就按照前面的步骤安装（参考了官网的安装说明）。 fatal: unable to find remote helper for ‘http’错误原因同上，只是在 clone github 上的项目时，用的 http 协议而已。 再一次后记 2019-09-01今天因为配置 gitolite，在一台新的虚拟机上操作，按照之前写的文档安装 git 的最新版 2.23.0，安装完成之后： 执行 git clone https://github.com/sitaramc/gitolite，提示:fatal: unable to find remote helper for &#39;https&#39; 执行 git clone http://github.com/sitaramc/gitolite，提示:fatal: unable to find remote helper for &#39;http&#39; 怀疑新版本与我之前使用的版本有差异，于是又重新安装了 2.17.1，问题依旧，我开始怀疑这个错误的原因并不一定是没有安装 doc 导致，至于之前的版本安装 doc 之后就好了，有点丈二和尚摸不着头脑，不过，可能跟下面的提示信息有关，是在执行 make all doc info 时比较可疑的信息：123456789make[2]: Leaving directory `/root/soft/git-2.17.1&apos; DB2TEXI user-manual.texidocbook2texi:/book: no description for directory entry MAKEINFO git.infouser-manual.texi:15: warning: empty menu entry name in `* : idm47715126121840.&apos;user-manual.texi:141: warning: @unnumbered missing argument DB2TEXI gitman.texi MAKEINFO gitman.infomake[1]: Leaving directory `/root/soft/git-2.17.1/Documentation&apos; 以下是安装 2.19.1 时的可疑提示信息：1234567docbook2texi:/book: no description for directory entry MAKEINFO git.infouser-manual.texi:15: warning: empty menu entry name in `* : idm47678928261200.&apos;user-manual.texi:141: warning: @unnumbered missing argument DB2TEXI gitman.texiutf8 &quot;\\x89&quot; does not map to Unicode at /usr/share/perl5/vendor_perl/XML/SAX/PurePerl/Reader/Stream.pm line 37. MAKEINFO gitman.info 在网上又参考了好多文章，最后问题解决。 在安装之前，需要先安装 curl-devel，执行命令 yum install -y curl-devel 安装，之后再重新安装 git，然后世界就清静了~~ 结论安装 git 的最新（简）步骤： 安装依赖 1yum install -y curl-devel zlib-devel gcc autoconf 下载最新版的 git 源码： 如果可以科学上网，访问 github 比较快：https://github.com/git/git/releases 否则，可从这里下载：https://mirrors.edge.kernel.org/pub/software/scm/git 安装 git123make configure./configure --prefix=/usr # 配置目录make &amp;&amp; make install","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"git","slug":"CentOS/git","permalink":"https://www.lovesofttech.com/categories/CentOS/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"CentOS 7 修改网卡参数","slug":"linux/centOS7NetworkScripts","date":"2018-05-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.026Z","comments":true,"path":"linux/centOS7NetworkScripts.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7NetworkScripts.html","excerpt":"如题","text":"如题 网卡配置文件目录/etc/sysconfig/network-scripts 查看网卡配置文件查看配置文件，每台电脑的配置文件名不尽相同，有的电脑有多个网卡，因此就有多个配置文件。网卡配置文件以 “ifcfg” 开头。1234cd /etc/sysconfig/network-scripts[root@centOS7BasicForTest network-scripts]# ll ifcfg*-rw-r--r--. 1 root root 372 May 18 15:10 ifcfg-enp0s31f6-rw-r--r--. 1 root root 254 Jan 3 00:29 ifcfg-lo 修改配置修改对应的网站配置文件即可123456789101112131415161718192021[root@centOS7BasicForTest network-scripts]# vi ifcfg-enp0s31f6 TYPE=EthernetPROXY_METHOD=noneBROWSER_ONLY=noBOOTPROTO=noneDEFROUTE=yesIPV4_FAILURE_FATAL=yesIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_FAILURE_FATAL=noIPV6_ADDR_GEN_MODE=stable-privacyNAME=enp0s31f6UUID=7ed9bd1c-51ea-4e1a-ba6f-e14e1631c165DEVICE=enp0s31f6ONBOOT=yesIPADDR=192.168.1.90PREFIX=24GATEWAY=192.168.1.1DNS1=192.168.1.1IPV6_PRIVACY=no 重启网络systemctl restart network","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"Install Docker CE on CentOS7","slug":"linux/centOS7InstallDocker","date":"2018-05-25T16:00:00.000Z","updated":"2020-09-01T02:53:13.021Z","comments":true,"path":"linux/centOS7InstallDocker.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7InstallDocker.html","excerpt":"如题","text":"如题 reference 设置仓库镜像源12yum install -y yum-utils device-mapper-persistent-data lvm2yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo","categories":[{"name":"docker","slug":"docker","permalink":"https://www.lovesofttech.com/categories/docker/"}],"tags":[{"name":"docker","slug":"docker","permalink":"https://www.lovesofttech.com/tags/docker/"}]},{"title":"U 盘安装 CentOS7.5","slug":"linux/uDiskInstallCentOS7","date":"2018-05-25T16:00:00.000Z","updated":"2020-09-01T02:53:13.048Z","comments":true,"path":"linux/uDiskInstallCentOS7.html","link":"","permalink":"https://www.lovesofttech.com/linux/uDiskInstallCentOS7.html","excerpt":"如题","text":"如题 下载 CentOS7生产环境或测试环境，建议仅安装最基础的版本，后期根据需要再安装必要的软件。笔者下载的是：Minimal ISO 1804 版本 U 盘刻录 下载的 CentOS-7-x86_64-Minimal-1804.iso 仅 906 MB，所以，只需要准备一个实际容量大于 906 MB 的 U 盘即可。 网上的教程，大多是用 UltraISO 来刻录的，好象在安装的时候还需要修改参数，看起来比较麻烦，我没有试，另外，UltraISO 需要安装。 下面是我找到的另外一款 U 盘刻录工具，绿色免安装，文件小，简单省事儿。点击进入 usb 刻录 iso 工具下载地址。 下载之后将 Minimal ISO 刻录至 U 盘。 物理机安装 主机只挂了一块固态硬盘，将电脑设置成从 U 盘启动。 从 U 盘启动之后，安装界面与用 Virtual Box 安装虚拟机的安装界面完全一样。 接下来的安装，跟在虚拟机上安装并无二致，也没遇到网上大多教程提到的需要修改启动参数的问题。 剩下的安装过程，网上一搜一大堆，在此不再赘述。 后记启动安装的时候，不需要修改参数，可能因为物理主机仅挂载了一块硬盘有关，或者跟安装介质（CentOS7 版本）有关，也或者，跟刻录工具有关。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"U盘刻录后如何恢复原来容量大小，以及 FAT32 转化为 NTFS","slug":"windows/winUDiskRestore","date":"2018-05-23T16:00:00.000Z","updated":"2020-09-01T02:53:13.122Z","comments":true,"path":"windows/winUDiskRestore.html","link":"","permalink":"https://www.lovesofttech.com/windows/winUDiskRestore.html","excerpt":"如题","text":"如题 恢复容量场景16G 的 U盘，刻录 CentOS7 安装系统之后，有一个大概 9 MB 的分区，还有 14 多个 G 未分区，用 win10 自带的磁盘管理工具创建分区，格式化后，提示格式化失败，被识别成 RAW 的格式了。 解决 以管理员身份运行 cmd，看下面的操作记录 12345678910111213141516171819202122232425262728293031C:\\Windows\\system32&gt;diskpartMicrosoft DiskPart version 10.0.16299.15Copyright (C) Microsoft Corporation.On computer: ANDYCHENDISKPART&gt; list disk Disk ### Status Size Free Dyn Gpt -------- ------------- ------- ------- --- --- Disk 0 Online 232 GB 0 B Disk 1 Online 14 GB 1024 KBDISKPART&gt; sel disk 1Disk 1 is now the selected disk.DISKPART&gt; cleanDiskPart succeeded in cleaning the disk.DISKPART&gt; create part primaryDiskPart succeeded in creating the specified partition.DISKPART&gt; exitLeaving DiskPart...C:\\Windows\\system32&gt; 关键操作步骤 12345diskpartlist disk sel disk 1cleancreate part primary 格式转化 把 X 盘转化 NTFS 格式此方法，不需软件，数据不丢失，不用重启，不可逆。不可逆的意思是，不能通过命令的方式再转化回去，只能用操作系统磁盘管理工具格式化，这种方式会丢失所有数据。不过，几乎不需要 FAT32 格式了。在 cmd 命令提示符输入1convert X: /fs:ntfs","categories":[{"name":"U盘恢复","slug":"U盘恢复","permalink":"https://www.lovesofttech.com/categories/U盘恢复/"}],"tags":[{"name":"U盘恢复","slug":"U盘恢复","permalink":"https://www.lovesofttech.com/tags/U盘恢复/"}]},{"title":"CentOS7 安装 MySQL-8.0.11，以及由 8.0.11 降级至 5.7.22","slug":"database/centOS7InstallMySQL8.0.11","date":"2018-05-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.915Z","comments":true,"path":"database/centOS7InstallMySQL8.0.11.html","link":"","permalink":"https://www.lovesofttech.com/database/centOS7InstallMySQL8.0.11.html","excerpt":"与 5.7.x 的安装类似，这里记录一些安装和配置过程中遇到的坑。","text":"与 5.7.x 的安装类似，这里记录一些安装和配置过程中遇到的坑。 后记 更新日期：2019-07-09 在 CentOS-7-x86_64-Minimal-1810 上安装 8.0.16 的正确顺序以 root 身份操作。123456yum install -y openssl-devel net-tools perl net-tools libaiorpm -ivh mysql-community-common-8.0.16-2.el7.x86_64.rpmrpm -ivh mysql-community-libs-8.0.16-2.el7.x86_64.rpmrpm -ivh mysql-community-devel-8.0.16-2.el7.x86_64.rpmrpm -ivh mysql-community-client-8.0.16-2.el7.x86_64.rpmrpm -ivh mysql-community-server-8.0.16-2.el7.x86_64.rpm 遇到的依赖问题1234pkgconfig(openssl) is needed by mysql-community-devel-8.0.16-2.el7.x86_64# 安装相关依赖：yum install -y openssl-develnet-tools is needed by mysql-community-server-8.0.16-2.el7.x86_64# 安装相关依赖：yum install -y net-tools 安装前，先卸载 mariadb12345678[root@localhost ~]# rpm -qa | grep mariadbmariadb-libs-5.5.41-2.el7_0.x86_64[root@localhost ~]# rpm -e mariadb-libs-5.5.41-2.el7_0.x86_64error: Failed dependencies: libmysqlclient.so.18()(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64 libmysqlclient.so.18(libmysqlclient_18)(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64[root@localhost ~]# rpm -e postfix-2:2.10.1-6.el7.x86_64 postfix-2:2.10.1-6.el7.x86_64[root@localhost ~]# rpm -e mariadb-libs-5.5.41-2.el7_0.x86_64 安装最新版 MySQL-8.0.11环境CentOS 1804 版本最小安装，下载的 CentOS 安装文件：CentOS-7-x86_64-Minimal-1804.iso 安装下载：wget https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.11-1.el7.x86_64.rpm-bundle.tar 截至 2019-03-30 最新版为 8.0.15wget https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.15-1.el7.x86_64.rpm-bundle.tar12345678910111213141516171819202122232425262728[root@localhost mysql]# rpm -qa | grep mariadbmariadb-libs-5.5.56-2.el7.x86_64[root@localhost mysql]# rpm -e mariadb-libs-5.5.56-2.el7.x86_64error: Failed dependencies: libmysqlclient.so.18()(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64 libmysqlclient.so.18(libmysqlclient_18)(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64[root@localhost mysql]# rpm -e postfix-2:2.10.1-6.el7.x86_64 postfix-2:2.10.1-6.el7.x86_64[root@localhost mysql]# rpm -e mariadb-libs-5.5.56-2.el7.x86_64[root@localhost mysql]# rpm -ivh mysql-community-devel-8.0.11-1.el7.x86_64.rpm warning: mysql-community-devel-8.0.11-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: pkgconfig(openssl) is needed by mysql-community-devel-8.0.11-1.el7.x86_64# yum install -y openssl-devel[root@localhost mysql]# rpm -ivh mysql-community-server-8.0.11-1.el7.x86_64.rpm warning: mysql-community-server-8.0.11-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: /usr/bin/perl is needed by mysql-community-server-8.0.11-1.el7.x86_64 libaio.so.1()(64bit) is needed by mysql-community-server-8.0.11-1.el7.x86_64 libaio.so.1(LIBAIO_0.1)(64bit) is needed by mysql-community-server-8.0.11-1.el7.x86_64 libaio.so.1(LIBAIO_0.4)(64bit) is needed by mysql-community-server-8.0.11-1.el7.x86_64 net-tools is needed by mysql-community-server-8.0.11-1.el7.x86_64 perl(Getopt::Long) is needed by mysql-community-server-8.0.11-1.el7.x86_64 perl(strict) is needed by mysql-community-server-8.0.11-1.el7.x86_64 # yum install -y perl net-tools libaio 启动123[root@centOS7BasicForTest mysql]# systemctl start mysqld[root@centOS7BasicForTest mysql]# grep &apos;temporary password&apos; /var/log/mysqld.log2018-05-23T10:36:55.296728Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: Bjs_PbXc)9R6 用临时密码登录1mysql -uroot -p&apos;Bjs_PbXc)9R6&apos; 然后修改初始密码12mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;Akd*89@!3a2Kkd2#@&apos;;Query OK, 0 rows affected (0.20 sec) 总结在安装 MySQL 之前需要安装以下依赖1yum install -y openssl-devel perl net-tools libaio 授权问题之前下面的语句不会报错，但是授权没有生效，一直提示不允许连接。12ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;your password&apos;;GRANT ALL PRIVILEGES ON *.* TO &apos;admin&apos;@&apos;%&apos; IDENTIFIED BY &apos;aAdDmMiInN1!1!0)3#&apos; WITH GRANT OPTION; 重启一次之后，授权开始报错了：123mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;admin&apos;@&apos;%&apos; IDENTIFIED BY &apos;aAdDmMiInN1!1!0)3#&apos; WITH GRANT OPTION;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;IDENTIFIED BY &apos;aAdDmMiInN1!1!0)3#&apos; WITH GRANT OPTION&apos; at line 1mysql&gt; 换成：1234mysql&gt; CREATE USER &apos;admin&apos;@&apos;%&apos; IDENTIFIED BY &apos;aAdDmMiInN1!1!0)3#&apos;;Query OK, 0 rows affected (0.11 sec)mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;admin&apos;@&apos;%&apos;;Query OK, 0 rows affected (0.04 sec) 客户端连接问题用 MySQL Workbench 连接，提示如下：1234567891011[Window Title]MySQL Workbench[Main Instruction]Failed to Connect to MySQL at 192.168.1.91:3306 with user admin[Content]Authentication plugin &apos;caching_sha2_password&apos; cannot be loaded: The specified module could not be found.[OK] 查询加密方式1234567891011mysql&gt; select user, host, plugin, authentication_string from user;+------------------+-----------+-----------------------+------------------------------------------------------------------------+| user | host | plugin | authentication_string |+------------------+-----------+-----------------------+------------------------------------------------------------------------+| admin | % | caching_sha2_password | $A$005$el:pBr\u001a6Z\u0006m]lPq\u0004+eznuC21bJF/13HhJpj3ZpNQksjeGjWllXMs/nve4gYeW4 || mysql.infoschema | localhost | mysql_native_password | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE || mysql.session | localhost | mysql_native_password | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE || mysql.sys | localhost | mysql_native_password | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE || root | localhost | caching_sha2_password | $A$005$&amp;7BX~rD1]HMMtFb_&#125;r\u0018-3eq0bH7XqiKfYs3dOS4VM53ET2pMYc4QElxU5ddkSR7 |+------------------+-----------+-----------------------+------------------------------------------------------------------------+5 rows in set (0.01 sec) 在创建用户的时候，用的是：CREATE USER ‘admin‘@’%’ IDENTIFIED BY ‘aAdDmMiInN1!1!0)3#’;修改成如下的加密方式授权：12mysql&gt; ALTER USER &apos;admin&apos;@&apos;%&apos; IDENTIFIED WITH mysql_native_password BY &apos;aAdDmMiInN1!1!0)3#&apos;;Query OK, 0 rows affected (0.05 sec) 再次连接，可以了！ 由 MySQL 8.0.11 降级到 5.7.22由于有软件还不支持最新版 8.0.11，不得已，还得降级至 5.7 版本。 仅执行 rpm -e mysql 删除 5 个组件，然后重新安装，启动失败 查看已安装的版本 123456[root@AndyCentOS7Basic ~]# rpm -qa | grep mysqlmysql-community-client-8.0.11-1.el7.x86_64mysql-community-libs-8.0.11-1.el7.x86_64mysql-community-devel-8.0.11-1.el7.x86_64mysql-community-server-8.0.11-1.el7.x86_64mysql-community-common-8.0.11-1.el7.x86_64 然后依次执行删除 12345rpm -e mysql-community-server-8.0.11-1.el7.x86_64rpm -e mysql-community-client-8.0.11-1.el7.x86_64rpm -e mysql-community-devel-8.0.11-1.el7.x86_64rpm -e mysql-community-libs-8.0.11-1.el7.x86_64rpm -e mysql-community-common-8.0.11-1.el7.x86_64 重新操作，彻底删除除了删除刚安装好的 5 个组件之外，还将 mysql 的其它文件及目录一并删除1234567891011[root@centOS7BasicForTest log]# cd /var/lib/ [root@centOS7BasicForTest lib]# rm -rf mysql/[root@centOS7BasicForTest lib]# whereis mysqlmysql: /usr/share/mysql[root@centOS7BasicForTest log]# cd /usr/share/[root@centOS7BasicForTest share]# rm -rf myslq/ mysql-8.0/[root@centOS7BasicForTest bin]# find / -name mysql/etc/selinux/targeted/active/modules/100/mysql/etc/selinux/targeted/tmp/modules/100/mysql/usr/share/mysql[root@centOS7BasicForTest share]# rm -rf /usr/share/mysql /etc/selinux/targeted/active/modules/100/mysql /etc/selinux/targeted/tmp/modules/100/mysql 再次安装之后，启动成功1234567891011121314151617181920212223242526272829303132333435363738394041[root@centOS7BasicForTest mysql]# rpm -ivh mysql-community-common-5.7.22-1.el7.x86_64.rpm warning: mysql-community-common-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-common-5.7.22-1.e################################# [100%][root@centOS7BasicForTest mysql]# rpm -ivh mysql-community-libs-5.7.22-1.el7.x86_64.rpm warning: mysql-community-libs-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-libs-5.7.22-1.el7################################# [100%][root@centOS7BasicForTest mysql]# rpm -ivh mysql-community-devel-5.7.22-1.el7.x86_64.rpm warning: mysql-community-devel-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-devel-5.7.22-1.el################################# [100%][root@centOS7BasicForTest mysql]# rpm -ivh mysql-community-client-5.7.22-1.el7.x86_64.rpm warning: mysql-community-client-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-client-5.7.22-1.e################################# [100%][root@centOS7BasicForTest mysql]# rpm -ivh mysql-community-server-5.7.22-1.el7.x86_64.rpm warning: mysql-community-server-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ################################# [100%]Updating / installing... 1:mysql-community-server-5.7.22-1.e################################# [100%][root@centOS7BasicForTest ~]# systemctl start mysqld[root@centOS7BasicForTest ~]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: active (running) since Thu 2018-05-24 18:38:36 HKT; 11s ago Docs: man:mysqld(8) http://dev.mysql.com/doc/refman/en/using-systemd.html Process: 2589 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS) Process: 2506 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS) Main PID: 2591 (mysqld) CGroup: /system.slice/mysqld.service └─2591 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/mysqld.pidMay 24 18:38:31 centOS7BasicForTest systemd[1]: Starting MySQL Server...May 24 18:38:36 centOS7BasicForTest systemd[1]: Started MySQL Server. 后记2019-04-03 安装最新版 8.0.15 报错123456rpm -ivh mysql-community-server-8.0.15-1.el7.x86_64.rpm warning: mysql-community-server-8.0.15-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: libnuma.so.1()(64bit) is needed by mysql-community-server-8.0.15-1.el7.x86_64 libnuma.so.1(libnuma_1.1)(64bit) is needed by mysql-community-server-8.0.15-1.el7.x86_64 libnuma.so.1(libnuma_1.2)(64bit) is needed by mysql-community-server-8.0.15-1.el7.x86_64 解决：安装依赖 numactl1yum install numactl -y 2019-12-26 安装 8.0.18 报错123456789101112[root@localhost mysql]# rpm -ivh mysql-community-libs-8.0.18-1.el8.x86_64.rpm warning: mysql-community-libs-8.0.18-1.el8.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: libc.so.6(GLIBC_2.28)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libcrypto.so.1.1()(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libcrypto.so.1.1(OPENSSL_1_1_0)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libssl.so.1.1()(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libssl.so.1.1(OPENSSL_1_1_0)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libssl.so.1.1(OPENSSL_1_1_1)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libstdc++.so.6(CXXABI_1.3.9)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libstdc++.so.6(GLIBCXX_3.4.20)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 libstdc++.so.6(GLIBCXX_3.4.21)(64bit) is needed by mysql-community-libs-8.0.18-1.el8.x86_64 我在 CentOS7 上安装，下载的是 mysql-8.0.18-1.el8.x86_64.rpm-bundle.tar，这是针对 CentOS8 的版本。版本不对，注定是会失败的，下载时注意要下载对应 OS 的版本。 换成 mysql-8.0.18-1.el7.x86_64.rpm-bundle.tar，再按照上面的步骤安装就非常顺利。","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"借助 MySQL Workbench 工具生成 MySQL 修改脚本","slug":"database/mySQLWorkbench","date":"2018-05-21T16:00:00.000Z","updated":"2020-09-01T02:53:12.922Z","comments":true,"path":"database/mySQLWorkbench.html","link":"","permalink":"https://www.lovesofttech.com/database/mySQLWorkbench.html","excerpt":"修改数据库的同时，需要留下修改脚本供项目上线和其他同事使用。本文介绍如何通过官方工具非常方便的得到 sql 修改脚本。当然，对修改脚本比较熟悉的情况下，没必要使用本工具，但是要保证充分和正确的测试，毕竟数据就是一切。","text":"修改数据库的同时，需要留下修改脚本供项目上线和其他同事使用。本文介绍如何通过官方工具非常方便的得到 sql 修改脚本。当然，对修改脚本比较熟悉的情况下，没必要使用本工具，但是要保证充分和正确的测试，毕竟数据就是一切。 官方、免费、强大的 mySQL 客户端，强烈推荐点击进入 workbench 下载地址 使用 MySQL Workbench 得到修改脚本 用该工具修改表结构之后，在执行前会提供修改脚本，将这个修改脚本复制到我们的修改日志文件里。 修改表结构和表数据都会提供修改脚本，强大、方便。 示例 选择某一张表，修改表结构 复制字段 粘贴字段，然后根据情况修改。添加新字段，或者修改已有字段，类似。 应用 在真正应用更新之前，会提供修改脚本，记得复制下来，粘贴至表脚本修改日志，然后再点【Apply】，因为有可能没有复制成功，Apply 之后，脚本没有了^_^ 修改表数据 如果需要修改线上数据，先在测试环境操作，提供修改脚本至 C:\\workspace\\source\\apg.doc\\sqlScripts\\sqlLog.sql 通过 select * from tableName where … 的方式查出的结果，可以直接修改字段值，同样，点击【Apply】之后，也有修改脚本。把我们需要的脚本复制下来… 在提交时，备注里写清楚需要执行哪几行脚本。","categories":[{"name":"MySQL Workbench","slug":"MySQL-Workbench","permalink":"https://www.lovesofttech.com/categories/MySQL-Workbench/"},{"name":"MySQL","slug":"MySQL-Workbench/MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL-Workbench/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"MySQL Workbench","slug":"MySQL-Workbench","permalink":"https://www.lovesofttech.com/tags/MySQL-Workbench/"}]},{"title":"修改 github 项目的程序语言","slug":"git/githubUpdateProjectLanguage","date":"2018-05-21T16:00:00.000Z","updated":"2020-09-01T02:53:12.965Z","comments":true,"path":"git/githubUpdateProjectLanguage.html","link":"","permalink":"https://www.lovesofttech.com/git/githubUpdateProjectLanguage.html","excerpt":"如题","text":"如题 前言github上的项目语言是自动识别的，也就是你某种语言的占比最多，就会自动识别为那种语言，这个方式显然不合适，比如这个项目：springBootIntegrationUEditor，明显应该是基于 Maven 的一个多模块的，基于 Java 语言的项目。但是上传之后，被识别成 JavaScript 的项目了。 修改成 Java 项目，其它语言类似在项目根目录添加 .gitattributes 文件，内容如下：1234*.css linguist-language=java*.less linguist-language=java*.js linguist-language=java*.html linguist-language=java push 之后，刷新即可看到结果。","categories":[{"name":"github","slug":"github","permalink":"https://www.lovesofttech.com/categories/github/"}],"tags":[{"name":"github","slug":"github","permalink":"https://www.lovesofttech.com/tags/github/"}]},{"title":"java 开发，适用于团队的代码规范及某些约定","slug":"java/codeSpecificationAdditional","date":"2018-05-21T16:00:00.000Z","updated":"2020-09-01T02:53:12.974Z","comments":true,"path":"java/codeSpecificationAdditional.html","link":"","permalink":"https://www.lovesofttech.com/java/codeSpecificationAdditional.html","excerpt":"包含 api 开发原则、代码风格、mapper 扩展等。","text":"包含 api 开发原则、代码风格、mapper 扩展等。 api 开发总则 遵循单一职责原则，一个类只做一件（类）事。 数据库表与业务类是 1:N 的关系。 简单业务表建议只有一个业务类，复杂业务表，建议有多个业务类。 扩展阅读：面各对象设计的七大原则：面向对象设计的七大原则 单一职责原则(Single Responsibility Principle, SRP) 开闭原则(Open-Closed Principle, OCP) 里氏代换原则(Liskov Substitution Principle, LSP) 依赖倒转原则(Dependence Inversion Principle, DIP) 接口隔离原则(Interface Segregation Principle, ISP) 合成复用原则(Composite Reuse Principle, CRP) 迪米特法则(Law of Demeter, LoD) 修改代码规范 不要影响以前代码的行为，不小心会带来新 bug。 随着新需求的引进，以前的代码可能已经不适用，要适当的重构。 不确定的，要及时与项目负责人沟通。 涉及到公共模板的修改，一般需要与项目负责人沟通之后才能修改，至少要让项目负责人知晓这件事。 代码风格，最基本的原则 与现在代码保持一致。 见名知义。 代码自解释。 对于不符合代码规约的，要在适当的时机重构。 为了代码的可读性和可维护性，牺牲实现功能的速度、牺牲运行性能也是有必要的，如果项目上线在即，可优先满足项目进度，但一定要及时重构。 悟出的命名规则 biz.dal.service 下的类，一定是表名（首字母大写）+ DalService biz.dal.mapper.extend 下的类，一定是表名（首字母大写）+ MapperExt biz\\dal\\mapper\\xml\\extend 下的 xml 文件名，一定跟 biz.dal.mapper.extend 下对应的 mapper 命名保持一致。 biz.service 下的类，一定是表名（首字母大写） + Service biz.model.view 下的类，一定是以 View 结尾，前面部分根据业务来命名，以见名知义为准。其余类似。 枚举定义注意事项项目习惯定义，枚举包含 index 和 name 两个属性。 index 是不能重复的。 index 一般的步进值为10，这样，方便在需要的时候往中间插入新枚举。 name 一般为中文，可以表述枚举项的含义和作用。 枚举的 index 由前往后递增。 字段与枚举带 flag 的字段，枚举用 YesOrNoEnum12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061/** * 成功 Or 失败 */public enum YesOrNoEnum &#123; no(0, \"否\"), yes(1, \"是\"); private int index; private String name; YesOrNoEnum(int index, String name) &#123; this.index = index; this.name = name; &#125; public int getIndex() &#123; return index; &#125; public void setIndex(int index) &#123; this.index = index; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125; public static YesOrNoEnum getEnumByIndex(int index) &#123; for (YesOrNoEnum result : YesOrNoEnum.values()) &#123; if (index == result.index) &#123; return result; &#125; &#125; return null; &#125; public static YesOrNoEnum getEnumByName(String name) &#123; for (YesOrNoEnum result : YesOrNoEnum.values()) &#123; if (result.getName().equals(name)) &#123; return result; &#125; &#125; return null; &#125; public static String getNameByIndex(int index) &#123; YesOrNoEnum enumItem = YesOrNoEnum.getEnumByIndex(index); if (enumItem != null) &#123; return enumItem.getName(); &#125; return \"\"; &#125;&#125; mapper 扩展MGG 项目在 github 上的地址，有详细说明。详细说明在本博客有副本：MyBatis Generator（MBG），写扩展类，以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名 用 MBG 生成的代码对应目录下的文件，禁止修改，因为 MBG 更新之后，会把修改的代码覆盖掉。 如何添加自定义的扩展 mapper 方法？参见下面两个目录下的文件，一个为 mapper 扩展，一个为对应的 xml 文件。 biz.dal\\src\\main\\java\\biz\\dal\\mapper\\extend biz.dal\\src\\main\\java\\biz\\dal\\mapper\\xml\\extend 需要注意 MBG 版本，有针对 5.x 和的 8.x的。 MyBatis sql 脚本sql 脚本里用到的表名，一定要用键盘横排【1 和 ！】键盘左边键的“单引号”引起来，用的是【`】，而不是平常用的真正的单引号【’】。目的：分表用。 表结构修改流程 修改 PowerDesigner 文档，同时将修改同步至目录 C:\\workspace\\source\\doc\\sqlScripts 下对应的文件。 sql 脚本提交之后，通过执行修改后的表脚本，将修改同步至数据库。 用 MBG 工具重新生成 mapper 相关文件，提交更新。 提交更新时，在备注里写上需要执行的表脚本。 在项目管理工具对应的任务或者 bug 修改状态为【完成】时，直接提供需要执行的脚本，或者指定需要执行的文件。 一定要注意，PowerDesigner 与 C:\\workspace\\source\\doc\\sqlScripts 下对应的脚本文件，还有数据库，三者一定是一致的。 针对某字段的枚举命名规范 总则：见名知义、类命名规范。 如果字段名已经能够做到见名知义，则字段名首字母大写之后，直接在其后添加 Enum。 如果字段名在多张表出现（当然，要尽量避免这种情况，可以适当添加前缀来避免），或者字段名不具备见名知义的特点，则可以是：表名+字段名 + enum，如果表名太长，可以酌情适当修改。 js 代码提交 如果有影响页面的 js 代码提交，需要在 html 文件引用的地方，修改 v 的值，最好修改成当前时间，如：1234&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/static/wx/css/style.css&quot; th:href=&quot;@&#123;/wx/css/style.css&#125; + &apos;?v=201803011459&apos;&quot;/&gt;&lt;script src=&quot;/static/public/js/apg.common.js&quot; th:src=&quot;@&#123;/public/js/apg.common.js&#125; + &apos;?v=201803030932&apos;&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/static/wx/js/cashDesk.js&quot; th:src=&quot;@&#123;/wx/js/cashDesk.js&#125; + &apos;?v=201803011459&apos;&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/static/wx/js/wxPay.js&quot; th:src=&quot;@&#123;/wx/js/wxPay.js&#125; + &apos;?v=201803011459&apos;&quot;&gt;&lt;/script&gt; 本条规范适用于非react项目 新加配置项放 newly 后面。目的：部署的时候，将 newly 后面的全部添加到线上，然后再将 newly 移至最后。1# newly","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"team","slug":"java/team","permalink":"https://www.lovesofttech.com/categories/java/team/"},{"name":"代码规约","slug":"java/team/代码规约","permalink":"https://www.lovesofttech.com/categories/java/team/代码规约/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"},{"name":"代码规约","slug":"代码规约","permalink":"https://www.lovesofttech.com/tags/代码规约/"}]},{"title":"springBoot 集成百度富文本框 UEditor，多模块方式","slug":"java/springBootIntegrationUEditor","date":"2018-05-20T16:00:00.000Z","updated":"2020-09-01T02:53:12.993Z","comments":true,"path":"java/springBootIntegrationUEditor.html","link":"","permalink":"https://www.lovesofttech.com/java/springBootIntegrationUEditor.html","excerpt":"项目为多模块方式。后台项目（ueditor.backend），在需要用到的项目引用即可，几乎无代码侵入。","text":"项目为多模块方式。后台项目（ueditor.backend），在需要用到的项目引用即可，几乎无代码侵入。 摘要 前端文件，包括 config.json，统一放到 static/uEditor，可以无视该目录，只管引用即可，配置文件一旦配置好，也基本上不需要修改。线上线下，根据情况，可分别配置。 上传目录，建议配置到非 web 目录之下，因为上传的图片需要保留。如果配置到 web 目录，在项目更新时，可能会被不小心清理掉。 在点击撤销、重试两个功能按键时，会有 js 脚本错误，官方原版即是如此，尝试修复无果，不影响使用，可无视之。 1ueditor.all.min.js:8 The given range isn&apos;t in document. 上效果图 后台项目关键依赖1234567891011121314151617181920212223242526&lt;dependency&gt; &lt;groupId&gt;org.json&lt;/groupId&gt; &lt;artifactId&gt;json&lt;/artifactId&gt; &lt;version&gt;20180130&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;commons-fileupload&lt;/groupId&gt; &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt; &lt;version&gt;1.3.3&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;commons-codec&lt;/groupId&gt; &lt;artifactId&gt;commons-codec&lt;/artifactId&gt; &lt;version&gt;1.11&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;javax.servlet&lt;/groupId&gt; &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt; &lt;version&gt;3.1.0&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt; &lt;groupId&gt;org.springframework&lt;/groupId&gt; &lt;artifactId&gt;spring-web&lt;/artifactId&gt; &lt;version&gt;5.0.6.RELEASE&lt;/version&gt; &lt;scope&gt;compile&lt;/scope&gt;&lt;/dependency&gt; 关键配置项ConfigManager.configFileName1private static final String configFileName = &quot;static/uEditor/config.json&quot;; 前台项目关键配置项static/uEditor/config.json12basePath&quot;:&quot;C:/temp&quot;,/* 上传文件的基本路径，需要与application.yml配置的【uEditor.upload.path】保持一致 */&quot;imagePathFormat&quot;: &quot;/uEditorUploadImages/&#123;yyyy&#125;&#123;mm&#125;&#123;dd&#125;/&#123;time&#125;&#123;rand:6&#125;&quot;, /* 上传保存路径,可以自定义保存路径和文件名格式 */ application.yml123uEditor.upload.path: C:/temp # 需要与 static/uEditor/config.json 的配置项【basePath】保持一致。spring.mvc.static-path-pattern: /**spring.resources.static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:$&#123;uEditor.upload.path&#125; Controller必须配置的路由是：@RequestMapping(“/uEditor/config”)12345678910111213141516171819202122232425262728293031323334package ueditor.frontend.Controller;import com.baidu.ueditor.ActionEnter;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.io.PrintWriter;@Controllerpublic class UEditorController &#123; @RequestMapping(\"/uEditorDemo\") public String uEditorDemo()&#123; return \"/uEditorDemo\"; &#125; @RequestMapping(\"/uEditor/config\") public void config(HttpServletRequest request, HttpServletResponse response) &#123; response.setContentType(\"application/json\"); String rootPath = request.getSession().getServletContext().getRealPath(\"/\"); try &#123; String exec = new ActionEnter(request, rootPath).exec(); PrintWriter writer = response.getWriter(); writer.write(exec); writer.flush(); writer.close(); &#125; catch (IOException e) &#123; e.printStackTrace(); &#125; &#125;&#125; Demo 页见 uEditorDemo.html 以及对应的 uEditorDemo.js获取文本框录入的数据，请见 uEditorDemo.js 文件下的 getContent 方法：123456789function getContent() &#123; // var arr = []; // arr.push(&quot;使用editor.getContent()方法可以获得编辑器的内容&quot;); // arr.push(&quot;内容为：&quot;); // arr.push(UE.getEditor(&apos;editor&apos;).getContent()); // alert(arr.join(&quot;\\n&quot;)); $(&quot;#divApiCallInfo&quot;).html(&quot;使用editor.getContent()方法可以获得编辑器的内容&quot;); $(&quot;#txtUEditorContent&quot;).val(UE.getEditor(&apos;editor&apos;).getContent())&#125; 源码springBootIntegrationUEditor 关于 spring boot 配置静态资源spring boot 配置静态资源","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"windows 远程桌面的坑","slug":"windows/winRemoteDesktop","date":"2018-05-17T16:00:00.000Z","updated":"2020-09-01T02:53:13.121Z","comments":true,"path":"windows/winRemoteDesktop.html","link":"","permalink":"https://www.lovesofttech.com/windows/winRemoteDesktop.html","excerpt":"如题","text":"如题 现象远程桌面，先排除用户名和密码不正确的情况。输入用户名和密码，提示：您的凭据不工作 解决服务器设置被远程的电脑，即作为服务器的电脑端设置。在网上有好多解决办法，最终发现需要在被远程的电脑上，作如下设置即可。 “Win+R” -&gt; “gpedit.msc”计算机配置” -&gt; “Window设置” -&gt; “安全设置” -&gt; “本地策略” -&gt; “安全选项” -&gt; “网络访问：本地账户的共享和安全模型” -&gt; 设置为“经典-对本地用户进行身份验证，不改变起本来身份” 英文 win10 界面如下 中文 win7 界面如下 客户机设置即运行远程桌面客户端的电脑的设置，这一步可能并不需要（电脑不同，情况有差异），如果上一步设置还未生效再操作这一步。 Win+R” -&gt; “gpedit.msc” 依次展开“计算机配置” -&gt; “管理模版” -&gt; “系统” -&gt; “凭据分配” -&gt; 找到“允许分配保存的凭据用于仅NTLM服务器身份验证” 单击“启用” -&gt; 继续单击“启用” -&gt; 输入“TERMSRV/*” -&gt; 确定 设置后，输入“Win+R” -&gt; 输入“gpupdate/force”，强制生效。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"RemoteDesktop","slug":"windows/RemoteDesktop","permalink":"https://www.lovesofttech.com/categories/windows/RemoteDesktop/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"RemoteDesktop","slug":"RemoteDesktop","permalink":"https://www.lovesofttech.com/tags/RemoteDesktop/"}]},{"title":"win10 MySQL 8.x.x 绿色免安装配置","slug":"database/win10MySQLConfig","date":"2018-05-09T16:00:00.000Z","updated":"2020-09-01T09:41:06.927Z","comments":true,"path":"database/win10MySQLConfig.html","link":"","permalink":"https://www.lovesofttech.com/database/win10MySQLConfig.html","excerpt":"介绍如何将官网下载的 MySQL zip 包配置成系统服务，以及 MySQL 的基本配置和初始化。","text":"介绍如何将官网下载的 MySQL zip 包配置成系统服务，以及 MySQL 的基本配置和初始化。 免安装版下载点击进入 MySQL 官网下载页面，选：Windows (x86, 64-bit), ZIP Archive 配置解压至：C:\\dev\\mysql-8.0.11-winx64，并在此目录添加一个空目录：data 配置文件在解压目录添加 my.ini，内容如下12345678910111213[mysqld]basedir = C:\\dev\\mysql-8.0.11-winx64datadir = C:\\dev\\mysql-8.0.11-winx64\\dataport = 3306lower_case_table_names = 1default_authentication_plugin=mysql_native_passwordcharacter-set-server = utf8mb4[mysql]default-character-set = utf8mb4[client]default-character-set = utf8mb4 my.ini 文件，网上文章也有说可以不用添加的，暂时未测试。 安装成系统服务以管理员身份运行 cmd，进入：C:\\dev\\mysql-8.0.11-winx64\\bin 运行：mysqld --install MySQL12C:\\dev\\mysql-8.0.11-winx64\\bin&gt;mysqld --install MySQLService successfully installed. 初始化数据库在MySQL安装目录的 bin 目录下执行初始化命令：mysqld --initialize --console1234C:\\dev\\mysql-8.0.11-winx64\\bin&gt;mysqld --initialize --console2018-05-10T09:06:15.354597Z 0 [System] [MY-013169] [Server] C:\\dev\\mysql-8.0.11-winx64\\bin\\mysqld.exe (mysqld 8.0.11) initializing of server in progress as process 116882018-05-10T09:06:19.145900Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: k,h&gt;nFBok8Hw2018-05-10T09:06:20.432456Z 0 [System] [MY-013170] [Server] C:\\dev\\mysql-8.0.11-winx64\\bin\\mysqld.exe (mysqld 8.0.11) initializing of server has completed 注意看提示：A temporary password is generated for root@localhost: k,h&gt;nFBok8Hw 我们先记住初始密码，一会儿会用上（每次初始化的密码都不一样，你要看自己的提示）：k,h&gt;nFBok8Hw 删掉 data 目录下的所有目录和文件，再执行一遍初始化命令，又会重新生成，相当于重新初始化。 启动cmd 执行：net start MySQL123C:\\dev\\mysql-8.0.11-winx64\\bin&gt;net start MySQLThe MySQL service is starting.The MySQL service was started successfully. 添加环境变量 新增 MySQL 环境变量：MYSQL_HOME = C:\\dev\\mysql-8.0.11-winx64 修改 Path 环境变量，Path变量下,末尾新增 %MYSQL_HOME%\\bin 修改默认密码初始化之后，必须修改默认密码，否则使用不了，如下，试着创建新数据库。 先用默认密码登录12345678910111213C:\\Users\\AndyChen&gt;mysql -uroot -pEnter password: ************Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 11Server version: 8.0.11Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement. 试着创建数据库123mysql&gt; create schema if not exists apg default character set utf8mb4;ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.mysql&gt; 修改默认密码12mysql&gt; ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED WITH mysql_native_password BY &apos;RoOtPaSs&apos;;Query OK, 0 rows affected (0.02 sec) 创建数据库并导入数据12345678910mysql&gt; create schema if not exists apg default character set utf8mb4;Query OK, 1 row affected (0.04 sec)mysql&gt; use apg;Database changedmysql&gt; set names utf8mb4;Query OK, 0 rows affected (0.00 sec)mysql&gt; source C:\\workspace\\apg20180509.sql... 检查导入的表1234567mysql&gt; show tables;+--------------------------+| Tables_in_apg |+--------------------------+...+--------------------------+38 rows in set (0.01 sec) 绿色版卸载以管理员身份执行：mysqld –remove重启，删除 mysql 根目录下 my.ini 配置的 data 目录，删除 mysql server 相关文件。 12345678C:\\WINDOWS\\system32&gt;mysqld --removeFailed to remove the service because the service is runningStop the service and try againC:\\WINDOWS\\system32&gt;net stop mysqlMySQL 服务正在停止..MySQL 服务已成功停止。C:\\WINDOWS\\system32&gt;mysqld --removeService successfully removed. 遇到的坑启动时报错1234C:\\dev\\mysql-8.0.11-winx64\\bin&gt;net start mysql发生系统错误 193。*** 不是有效的 Win32 应用程序。 解决办法：进入 Mysql 根目录下的 bin 目录，找到 mysqld 这个大小为 0 kb 的“二逼”文件，删除，然后就可以各种开心的玩耍了。并非每台电脑都如此。 再次 mysqld –install 时失败因为执行了 mysqld –remove 之后，系统服务显示“禁用“，再次 install 及 remove 均会提示失败，在重启系统之前，还有之前安装的残留，所以需要重启系统，重启之后就可以重新 install 了。 druid 连接报错12java.sql.SQLNonTransientConnectionException: Could not create connection to database server. Attempted reconnect 3 times. Giving up.java.sql.SQLException: Unknown system variable &apos;query_cache_size&apos; 原因是数据库驱动版本和数据库版本不匹配。解决：根据自己的数据库版本去这个地址选择合适的驱动版本比如我的数据库版本是 8.0.11，那么对应的驱动为:12345&lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;8.0.11&lt;/version&gt;&lt;/dependency&gt; 连接 MySQL 报错出现在中文操作系统 win10 上，英文操作系统 win10 正常1The server time zone value &apos;ÖÐ¹ú±ê×¼Ê±¼ä&apos; is unrecognized or represents more than one time zone. You must configure either the server or JDBC driver (via the serverTimezone configuration property) to use a more specifc time zone value if you want to utilize time zone support. 解决：数据库连接参数添加1&amp;serverTimezone=Hongkong 完整连接参数如下：1jdbc.url=jdbc:mysql://127.0.0.1:3306/apg?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;socketTimeout=20000&amp;serverTimezone=Hongkong MySQL Workbench官方、免费、强大的 mySQL 客户端，推荐使用workbench 下载 5.6.x 服务启动后，修改密码1set password for &apos;root&apos;@&apos;localhost&apos;= password(&apos;@#$kd3429DAnd&apos;); 配置 mysql-8.0.19-winx641mysqld --install MySQL 提示：12mysqld.exe - 系统错误由于找不到 VCRUNTIME140_1.dll，无法继续执行代码。重新安装程序可能会解决此问题。 链接: https://pan.baidu.com/s/1dQF8FTFWAjL_zEGjj57kkw 提取码: j2ty下载该文件放到 C:\\Windows\\System32，再次执行即可。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"MySQL","slug":"windows/MySQL","permalink":"https://www.lovesofttech.com/categories/windows/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"}]},{"title":"windows java 开发环境配置，以及一些常用网址收藏","slug":"java/javaDevConfig","date":"2018-05-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.981Z","comments":true,"path":"java/javaDevConfig.html","link":"","permalink":"https://www.lovesofttech.com/java/javaDevConfig.html","excerpt":"包含 java、maven、git、TortoiseGit","text":"包含 java、maven、git、TortoiseGit maven 下载 maven 最新版，当前版本，选：apache-maven-X-bin.zip，X 为版本号。 解压至：C:\\dev，并命名为：apache-maven java 下载 java sdk 安装至：C:\\dev\\Java\\jdkX （X为版本号） 环境变量 设置环境变量，窗口键 + Pause 键。 添加：MAVEN_HOME，值为：C:\\dev\\apache-maven 添加：JAVA_HOME，值为：C:\\dev\\Java\\jdk1.8.0_161 （注意修改成你自己安装的目录） 在 path 里添加：%MAVEN_HOME%\\bin，%JAVA_HOME%\\bin 测试测试 java 及 maven 是否配置妥当。 开发环境常用网址 java sdk download maven Git for Windows TortoiseGit for Windows，下载页面的下方有中文语文包可供下载。 IDEA 其他常用网址 JSON 在线解析及格式化验证 Unicode编码转换 - 站长工具 Unix时间戳(Unix timestamp)转换工具 - 站长工具","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"java/js 代码规约","slug":"java/codeSpecification","date":"2018-05-06T16:00:00.000Z","updated":"2020-09-01T02:53:12.974Z","comments":true,"path":"java/codeSpecification.html","link":"","permalink":"https://www.lovesofttech.com/java/codeSpecification.html","excerpt":"主要参考阿里出品的《码出高效 阿里巴巴java开发手册 终极版》","text":"主要参考阿里出品的《码出高效 阿里巴巴java开发手册 终极版》 前言 发现已有代码与本规约冲突的，需要重构，可逐步改进。 代码写出来，除了能够实现正确的功能，更多的，是给人阅读的，因为软件需要不停的维护。 本规约的 java 规范主要参考阿里出品的《码出高效 阿里巴巴java开发手册 终极版》，以下简称《码出高效》。 本规约的 js 规范Airbnb JavaScript Style Guide -&gt; js 编码规范参考 与该规范不一样的地方：缩进，保留 WebStorm 的默认行为，即一个 tab 对应 4 个空格。编码时使用 tab 键进行缩进即可。 关键目的 见名知义 代码自解释 易读 美女，秀色可餐，养眼，大家都爱看。 代码如人，干净利索，赏心悦目，读起来是一种享受。 易维护。不要一看就想骂 ^_^ 养成好的习惯，受益终生。 关键差异 条目 阿里 团队 备注 抽象类命名 使用 Abstratc 或 Base 开头 只用 Abstratc 开头 常量命名 全部大写，单词间用下划线隔开 lowerCamelCase 风格，驼峰形式 全部大写不利于阅读，但是跟一般的规范冲突，如果有理由，本条可修改 枚举成员名称 需要全大写，单词间用下划线隔开，枚举其实就是特殊的常量类 同上 同上 命名风格 代码中的命名不能包括特殊字符，如下划线、美元符号等。 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 例外：alibaba / taobao / youku / hangzhou 等国际通用的名称，可视同英文。 说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。 注意，即使纯拼音命名方式也要避免采用。 类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外：DO/BO/DTO/VO/AO。 方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，遵从驼峰形式。 html、js、css 文件，命名规则，统一使用 lowerCamelCase 风格，遵从驼峰形式。 常量命名使用 lowerCamelCase 风格，遵从驼峰形式。力求语义表达完整清楚，不要嫌名字长。注：本条与《码出高效》不一致。 包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。 中括号是数组类型的一部分，数组定义如下：String[] args; 抽象类命名使用 Abstract 开头；异常类命名使用 Exception 结尾；测试类命名以它要测试的类的名称开始，以 Test 结尾。 杜绝完全不规范的缩写，避免望文不知义。 为了达到代码自解释的目标，任何定义编程元素在命名时使用尽量完整单词组合来表达其意。正例：从远程仓库拉取代码的类命名为 PullCodeFromRemoteRepository。 POJO 类中布尔类型的变量，都不要加 is，否则部分框架解析会引起序列化错误。注：现有代码里有一部分与该规则冲突，需要重构。 如果模块、接口、类、方法使用了设计模式，在命名时体现出具体模式。说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计理念。 接口类中的方法和属性不要加任何修饰符号（public 也不要加），保持代码的简洁性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是与接口方法相关，并且是整个应用的基础常量。 接口和实现类的命名，对于Service和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部的实现类用Impl的后缀与接口区别。正例：CacheServiceImpl 实现 CacheService 接口。 枚举类名建议带上Enum后缀，枚举成员名称，统一使用 lowerCamelCase 风格，遵从驼峰形式，这样方便阅读。注：本条与《码出高效》不一致。 各层命名规约Service/DAO 层方法命名规约 获取单个对象的方法用 get 做前缀 获取多个对象的方法用 list 做前缀 获取统计值的方法用 count 做前缀 插入的方法用 save/insert 做前缀 删除的方法用 remove/delete 做前缀 修改的方法用 update 做前缀 领域模型命名规约 数据对象：xxxDO，xxx 即为数据表名 数据传输对象：xxxDTO，xxx 为业务领域相关的名称 展示对象：xxxVO，xxx 一般为网页名称 POJO 是 DO/DTO/BO/VO 的统称，禁止命名成 xxxPOJO 常量定义 常量定义不允许使用魔法值，（即未经定义的常量）直接出现在代码中。 123456//反例int priceTable[] = new int[16];//正例static final int PRICE_TABLE_MAX = 16;int priceTable[] = new int[PRICE_TABLE_MAX]; long或者Long初始赋值时，使用大写的L，不能是小写的l，小写容易跟数字1混淆，造成误解。说明：Long a = 2l; 写的是数字的21，还是Long型的2? 不要使用一个常量类维护所有常量，按常量功能进行归类，分开维护。 说明：大而全的常量类，非得使用查找功能才能定位到修改的常量，不利于理解和维护。正例： 缓存相关常量放在类 CacheConsts 下 系统配置相关常量放在类ConfigConsts下 代码格式 大括号的使用约定。如果是大括号内为空，则简洁地写成 {} 即可，不需要换行；如果是非空代码块则： 左大括号前不换行 左大括号后换行 右大括号前换行 右大括号后还有 else, catch 等代码则不换行 表示终止的右大括号后必须换行 左小括号和字符之间不出现空格；同样，右小括号和字符之间也不出现空格。反例：if (空格a == b空格) if/for/while/switch/do 等保留字与括号之间都必须加空格。 任何二目、三目运算符的左右两边都需要加一个空格。说明：运算符包括赋值运算符 =、逻辑运算符 &amp;&amp;、加减乘除符号等。 采用4个空格缩进，禁止使用 tab 字符。说明：如果使用 tab 缩进，必须设置 1 个 tab 为 4个空格。IDEA 设置 tab 为 4个空格时，请勿勾选 Use tab character；而在 eclipse 中，必须勾选 insert spaces for tabs。 正例：（涉及1-5点）123456789101112131415161718public static void main(String[] args) &#123; // 缩进4个空格 String say = \"hello\"; // 运算符的左右必须有一个空格 int flag = 0; // 关键词if与括号之间必须有一个空格，括号内的f与左括号，0与右括号不需要空格 if (flag == 0) &#123; System.out.println(say); &#125; // 左大括号前加空格且不换行；左大括号后换行 if (flag == 1) &#123; System.out.println(\"world\"); // 右大括号前换行，右大括号后有else，不用换行 &#125; else &#123; System.out.println(\"ok\"); // 在右大括号后直接结束，则必须换行 &#125;&#125; 注释的双斜线与注释内容之间有且仅有一个空格。 单行字符数限不超过 120 个（可适当放宽该约束），超出需要换行时，遵循如下原则： 第二行相对第一行缩进 4 个空格，或者遵从 IDEA Ctrl+Alt+L 的代码格式化结果（以下缩进了8个空格），从第三行开始不再继续缩进，即保持与第二行排列整齐，参考示例。 运算符与下文一起换行。 方法调用的点符号与下文一起换行。 方法调用时，多个参数，需要换行时，在逗号后进行。 在括号前不要换行，见反例。 12345678910111213141516private void test() &#123; StringBuffer sb = new StringBuffer(); // 正例： // 超过120个字符的情况下，换行缩进4个空格，点号和方法名称一起换行 sb.append(\"zi\").append(\"xin\")//... .append(\"huang\")//... .append(\"huang\")//... .append(\"huang\"); // 反例： // 超过120个字符的情况下，不要在括号前换行 sb.append(\"zi\").append(\"xin\")./*...*/append (\"huang\"); // 参数很多的方法调用可能超过120个字符，不要在逗号前换行 method(args1, args2, args3 /*,...*/ , argsX);&#125; 方法参数在定义和传入时，多个参数逗号后边必须加空格。 正例：下例中实参的”a”,后边必须要有一个空格。method(“a”, “b”, “c”); IDE的text file encoding 设置为 UTF-8; IDE中文件的换行符使用Unix格式，不要使用Windows格式。 没有必要增加若干空格来使某一行的字符与上一行对应位置的字符对齐。 正例： 1234int a = 3;long b = 4L;float c = 5F;StringBuffer sb = new StringBuffer(); 说明：增加 sb 这个变量，如果需要对齐，则给a、b、c都要增加几个空格，在变量比较多的情况下，是一种累赘的事情。 空行 方法体内的执行语句组、变量的定义语句组、不同的业务逻辑之间或者不同的语义之间插入一个空行。 相同业务逻辑和语义之间不需要插入空行。 没有必要插入多个空行进行隔开。 不要插入没有必要的空行，如方法结束前的返回语句后面。 to be continued做到以上规范是基本要求。后续还会添加剩下的规范。","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"team","slug":"java/team","permalink":"https://www.lovesofttech.com/categories/java/team/"},{"name":"代码规约","slug":"java/team/代码规约","permalink":"https://www.lovesofttech.com/categories/java/team/代码规约/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"},{"name":"代码规约","slug":"代码规约","permalink":"https://www.lovesofttech.com/tags/代码规约/"}]},{"title":"CentOS7 以源码方式安装 php7","slug":"lnmp/centOS7Php7","date":"2018-04-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.052Z","comments":true,"path":"lnmp/centOS7Php7.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/centOS7Php7.html","excerpt":"如题","text":"如题 准备工作，创建 unginx 用户放到组 gweb 下1234groupadd gwebuseradd -s /bin/bash -g gweb unginxpasswd unginxNew password: 下载最新的 php 7 php downloads china mirror 2018-07-11 最新版 安装必要的依赖1yum -y install libxml2 libxml2-devel curl-devel libjpeg-devel libpng-devel freetype-devel libicu-devel libxslt-devel openssl openssl-devel 配置 php7 安装参数，并运行 make 命令1234tar -xzvf php-7.2.7.tar.gzcd php-7.2.7./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --enable-fpm --with-fpm-user=unginx--with-fpm-group=gweb --enable-mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-iconv-dir --with-freetype-dir=/usr/local/freetype --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop --enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --enable-intl --enable-pcntl --enable-ftp --with-gd --with-ldap --with-openssl --with-mhash --enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --with-gettext --disable-fileinfo --enable-opcache --with-xslmake make &amp;&amp; make install 可一起执行 configure: error: C++ prep如果没有安装 gcc 和 gc++，会报这个错。1yum install -y gcc gcc++ configure: error: C++ preprocessor “/lib/cpp” fails sanity check1yum install -y glibc-headers gcc-c++ configure: error: Cannot find ldap.h1yum install -y openldap openldap-devel configure: error: Cannot find ldap libraries in /usr/lib.如果不需要 ldap 的话，将 ./configure 中的 –with-ldap 删除即可，否则，操作如下：1cp -frp /usr/lib64/libldap* /usr/lib/ collect2: error: ld returned 1 exit status在PHP源码目录下 vi Makefile 找到 EXTRA_LIBS 行，在行末添加 ‘ -llber ‘ 保存退出再次make即可1EXTRA_LIBS = -lcrypt -lz -lexslt -lresolv -lcrypt ... -llber 最终，看到了以下信息12Build complete.Don&apos;t forget to run &apos;make test&apos;. make test执行这一步需要很长时间，建议跳过123456789101112131415...You may have found a problem in PHP.This report can be automatically sent to the PHP QA team athttp://qa.php.net/reports and http://news.php.net/php.qa.reportsThis gives us a better understanding of PHP&apos;s behavior.If you don&apos;t want to send the report immediately you can chooseoption &quot;s&quot; to save it. You can then email it to qa-reports@lists.php.net later.Do you want to send this report now? [Yns]: Please enter your email address.(Your address will be mangled so that it will not go out on anymailinglist in plain text): sPosting to http://qa.php.net/buildtest-process.phpThank you for helping to make PHP better. make install12345678910111213141516171819202122232425262728293031[root@AndyCentOS7Basic php-7.2.5]# make installInstalling shared extensions: /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/Installing PHP CLI binary: /usr/local/php/bin/Installing PHP CLI man page: /usr/local/php/php/man/man1/Installing PHP FPM binary: /usr/local/php/sbin/Installing PHP FPM defconfig: /usr/local/php/etc/Installing PHP FPM man page: /usr/local/php/php/man/man8/Installing PHP FPM status page: /usr/local/php/php/php/fpm/Installing phpdbg binary: /usr/local/php/bin/Installing phpdbg man page: /usr/local/php/php/man/man1/Installing PHP CGI binary: /usr/local/php/bin/Installing PHP CGI man page: /usr/local/php/php/man/man1/Installing build environment: /usr/local/php/lib/php/build/Installing header files: /usr/local/php/include/php/Installing helper programs: /usr/local/php/bin/ program: phpize program: php-configInstalling man pages: /usr/local/php/php/man/man1/ page: phpize.1 page: php-config.1Installing PEAR environment: /usr/local/php/lib/php/[PEAR] Archive_Tar - installed: 1.4.3[PEAR] Console_Getopt - installed: 1.4.1[PEAR] Structures_Graph- installed: 1.1.1[PEAR] XML_Util - installed: 1.4.2[PEAR] PEAR - installed: 1.10.5Wrote PEAR system config file at: /usr/local/php/etc/pear.confYou may want to add: /usr/local/php/lib/php to your php.ini include_path/opt/php-7.2.5/build/shtool install -c ext/phar/phar.phar /usr/local/php/binln -s -f phar.phar /usr/local/php/bin/pharInstalling PDO headers: /usr/local/php/include/php/ext/pdo/ make &amp;&amp; make install也可以一次执行这两个指令make test 耗时比较久，可不执行，直接 make &amp;&amp; make install 即可。make 也比较耗时，但这是必要步骤。 添加配置文件1[root@AndyCentOS7Basic php-7.2.5]# cp php.ini-production /usr/local/php/etc/php.ini 将 php-fpm 控制脚本加入到 /etc/init.d/ 下，并给予可执行权限。12[root@AndyCentOS7Basic php-7.2.5]# cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm[root@AndyCentOS7Basic php-7.2.5]# chmod +x /etc/init.d/php-fpm 修改配置文件新建 php-fpm.conf 文件，加入以下内容123456789101112131415161718192021222324vim /usr/local/php/etc/php-fpm.conf[global]pid = /usr/local/php/var/run/php-fpm.piderror_log = /usr/local/php/var/log/php-fpm.loglog_level = notice[unginx]listen = /tmp/php-cgi.socklisten.backlog = -1listen.allowed_clients = 127.0.0.1listen.owner = unginxlisten.group = gweblisten.mode = 0666user = unginxgroup = gwebpm = dynamicpm.max_children = 10pm.start_servers = 3pm.max_spare_servers = 6pm.min_spare_servers = 3request_terminate_timeout = 300request_slowlog_timeout = 0slowlog = var/log/slow.log 参数说明 pm.max_children：静态方式下开启的 php-fpm 进程数量。 pm.start_servers：动态方式下的起始 php-fpm 进程数量。 pm.min_spare_servers：动态方式下的最小 php-fpm 进程数。 pm.max_spare_servers：动态方式下的最大 php-fpm 进程数量。 php-fpm 的两种执行方式 静态：static pm = static # 静态方式 只有 pm.max_children 这个参数生效。 动态：dynamic pm = dynamic # 动态方式 pm.max_children 参数失效，后面三个参数生效。 当 php-fpm 启动时会按照 pm.start_servers 的参数设置启动相应个数的进程，之后 php-fpm 的进程数量将维持在 pm.min_spare_servers 和 pm.max_spare_servers 指定的个数之间。 如何选择使用 php-fpm 的静态还是动态执行方式 动态 php-fpm 执行方式允许 php-fpm 释放多余进程，从而节约内存资源。 静态 php-fpm 执行方式不允许 php-fpm 释放多余进程，避免了频繁开启或停止 php-fpm 进程，从而降低了服务器在某些情况下的响应时间。 启动如果用户、用户组配置错误，以下启动命令会报错。12[root@AndyCentOS7Basic etc]# /etc/init.d/php-fpm startStarting php-fpm done 查看 php 版本1234[root@AndyCentOS7Basic etc]# /usr/local/php/bin/php -vPHP 7.2.5 (cli) (built: Apr 28 2018 15:28:25) ( NTS )Copyright (c) 1997-2018 The PHP GroupZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies PHP 的启动、停止和重启php-fpm 命令如下123/etc/init.d/php-fpm start #启动/etc/init.d/php-fpm stop #停止/etc/init.d/php-fpm restart #重启 开机启动1chkconfig php-fpm on 查看 php 进程12345678910111213[root@AndyCentOS7Basic tmp]# ps -ef | grep php-fpmroot 1002 1 0 07:33 ? 00:00:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)unginx 1005 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1007 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1008 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1009 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1010 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1011 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1012 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1013 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1014 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxunginx 1015 1002 0 07:33 ? 00:00:00 php-fpm: pool unginxroot 18584 17935 0 13:48 pts/0 00:00:00 grep --color=auto php-fpm 查看服务器上一共开了多少 php-cgi 进程1ps -fe |grep &quot;php-fpm&quot;|grep &quot;pool&quot;|wc -l 查看 nginx 启动用户123[root@AndyCentOS7Basic logs]# ps aux | grep &quot;nginx: worker process&quot; | awk &apos;&#123;print $1&#125;&apos;nobodyroot 修改 nginx 启动用户访问 php 页面会报权限错误，如下操作：12345vim /usr/local/nginx/conf/nginx.conf#user nobody;#改为：user root; 配置 nginx 支持 PHP以 unginx 登录，创建 web 目录1[unginx@AndyCentOS7Basic ~]$ mkdir -p apps 添加站点配置文件以下以配置 testlink 为例，将 testlink-code-1.9.17 移至 web 目录（/home/unginx/apps) 并改名为 testlink1vim /usr/local/nginx/vhosts/testlink.conf 配置文件内容如下：123456789101112131415server &#123; listen 80; server_name testlink.apg.com; charset utf-8; access_log logs/testlink.apg.com.access.log; error_log logs/testlink.apg.com.error.log; root /home/unginx/apps/testlink/; index index.php; location ~ [^/].php(/|$) &#123; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_index index.php; include fastcgi.conf; &#125;&#125; 重启一下 nginx，否则会报错：12018/07/12 07:28:36 [crit] 6518#0: *9268 connect() to unix:/tmp/php-cgi.sock failed (2: No such file or directory) while connecting to upstream, client: 192.168.1.89, server: testlink.apg.com, request: &quot;GET /phpinfo.php HTTP/1.1&quot;, upstream: &quot;fastcgi://unix:/tmp/php-cgi.sock:&quot;, host: &quot;testlink.apg.com&quot; 遇到的问题18059#0: *12 connect() to unix:/tmp/php-cgi.sock failed (2: No such file or directory)12018/05/02 13:39:23 [crit] 18059#0: *12 connect() to unix:/tmp/php-cgi.sock failed (2: No such file or directory) while connecting to upstream, client: 192.168.1.5, server: club.apg.com, request: &quot;GET / HTTP/1.1&quot;, upstream: &quot;fastcgi://unix:/tmp/php-cgi.sock:&quot;, host: &quot;club.apg.com&quot; 解决办法，重启 nginx，暂时解决了，待深入研究12[root@AndyCentOS7Basic tmp]# /usr/local/nginx/sbin/nginx -s stop[root@AndyCentOS7Basic tmp]# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf 权限问题12018/05/02 15:06:32 [error] 8541#0: *15 &quot;/home/unginx/apps/dz/index.php&quot; is forbidden (13: Permission denied), client: 117.139.199.91, server: club.aipeigo.com, request: &quot;GET / HTTP/1.1&quot;, host: &quot;club.aipeigo.com&quot; 解决，见本页：修改 nginx 启动用户 Ngnix DiscuzX 论坛 Upload Error 413 错误 php.ini 修改下面的配置参数，依然有问题 123# vim /usr/local/php/etc/php.iniupload_max_filesize = 20Mpost_max_size = 30M 继续修改 php.ini 修改如下配置： 12max_execution_time = 900max_input_time = 900 nginx.conf 在 http { } 中添加如下配置项： 12# vim /usr/local/nginx/conf/nginx.confclient_max_body_size 20m; 最后，重启 php 和 nginx 12345# /etc/init.d/php-fpm restartGracefully shutting down php-fpm . doneStarting php-fpm done# /usr/local/nginx/sbin/nginx -s stop# /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf 开启 OPcacheto be continue …","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"php","slug":"CentOS/php","permalink":"https://www.lovesofttech.com/categories/CentOS/php/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"}]},{"title":"win10 共享遇到的两个问题","slug":"windows/win10Share","date":"2018-04-30T16:00:00.000Z","updated":"2020-09-01T02:53:13.111Z","comments":true,"path":"windows/win10Share.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Share.html","excerpt":"如题","text":"如题 访问共享时，总是提示用户或密码不正确通过 win7 访问时，保证密码没有输入错误，但提示却是：指定的网络密码不正确。通过域/用户名的方式登录也还是一样的提示。 解决：Windows10 高级共享设置 -&gt; 关闭密码保护共享，如下： 更改高级共享设置 关闭密码保护共享，保存更改 win10 自动升级（打补丁）之后，恢复到了“启用密码保护共享”，导致之前可访问的共享目录不再能访问，重新设置为“关闭密码保护共享”即可。 你没有权限访问//IP/sharedFolder。请与网络管理员联系请求访问权限 在高级共享设置里添加访问权限，没用，这或许是 win10 的 BUG。 必须通过属性里的完全选项来添加用户访问权限才能解决这个问题。 有的文件夹，默认有权限访问的用户，并没有包括默认用户（安装 win10 时设置的用户），也没有 Everyone 这个用户。不手动添加，就会提示没有权限。 解决：手动添加 Everyone 或者 win10 默认用户即可。 但并非每个共享文件夹都是如此。 有的文件夹在共享设置好后，就已经有 Everyone 这个用户的权限了。可能跟我用的挂载硬盘有关，这个没有深究。 有的文件夹还有未知账户，可能跟重装之前也共享过有关。没深究。","categories":[{"name":"win10共享","slug":"win10共享","permalink":"https://www.lovesofttech.com/categories/win10共享/"}],"tags":[{"name":"win10共享","slug":"win10共享","permalink":"https://www.lovesofttech.com/tags/win10共享/"}]},{"title":"提问的智慧","slug":"job/howToAskQuestionsAndTheSmartWay","date":"2018-04-22T16:00:00.000Z","updated":"2020-09-01T02:53:13.005Z","comments":true,"path":"job/howToAskQuestionsAndTheSmartWay.html","link":"","permalink":"https://www.lovesofttech.com/job/howToAskQuestionsAndTheSmartWay.html","excerpt":"问问题，一定要问完成，把前后关系到的最好都说一说，我们编程也要讲究上下文的嘛，脱离上下文来问问题，会让人摸不着头脑，尤其是被问的人正在思考或者正专注于某件事的时候。","text":"问问题，一定要问完成，把前后关系到的最好都说一说，我们编程也要讲究上下文的嘛，脱离上下文来问问题，会让人摸不着头脑，尤其是被问的人正在思考或者正专注于某件事的时候。 提问的智慧-参考广为传颂的网上版本 下面是群里流传的一张图","categories":[{"name":"提问","slug":"提问","permalink":"https://www.lovesofttech.com/categories/提问/"},{"name":"job","slug":"提问/job","permalink":"https://www.lovesofttech.com/categories/提问/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"提问","slug":"提问","permalink":"https://www.lovesofttech.com/tags/提问/"}]},{"title":"Byte KB MB GB的转换关系","slug":"general/fileSize","date":"2018-04-19T16:00:00.000Z","updated":"2020-09-01T02:53:12.946Z","comments":true,"path":"general/fileSize.html","link":"","permalink":"https://www.lovesofttech.com/general/fileSize.html","excerpt":"如题","text":"如题 位 bit位是计算机中最小的数据单位。每一位的状态只能是0或1。 字节 Byte8个二进制位构成1个字节，它是存储空间的基本计量单位。 字字由若干个字节构成，字的位数叫做字长，不同档次的机器有不同的字长。8位机，它的1个字就等于1个字节，字长为8位。16位机，它的1个字就由2个字节构成，字长为16位。 KB1KB = 1024 Byte MB1MB=1024KB GB1GB=1024MB TB1TB=1024GB","categories":[{"name":"Byte","slug":"Byte","permalink":"https://www.lovesofttech.com/categories/Byte/"}],"tags":[{"name":"Byte","slug":"Byte","permalink":"https://www.lovesofttech.com/tags/Byte/"}]},{"title":"lombok 以及 IDEA lombok 插件","slug":"java/lombok","date":"2018-04-19T16:00:00.000Z","updated":"2020-09-01T02:53:12.989Z","comments":true,"path":"java/lombok.html","link":"","permalink":"https://www.lovesofttech.com/java/lombok.html","excerpt":"推荐使用 lombok，用 lombok，省得维护 POJO 的 setter 和 getter ，非常省事儿，配合 IDEA 的 lombok 插件，省心，用上了就离不开了。","text":"推荐使用 lombok，用 lombok，省得维护 POJO 的 setter 和 getter ，非常省事儿，配合 IDEA 的 lombok 插件，省心，用上了就离不开了。 lombok-intellij-plugin关于 setter 和 getter，其实 IDEA 有一个插件 lombok-intellij-plugin，可以让我们定义 POJO 的时候，不用写 setter 和 getter，这件插件会在需要的时候，就象是已经写了 setter 和 getter 一样。lombok github 项目 lombok 在 idea 中安装以及使用一个标准的java bean需要有getter和setter方法，有时候些代码很冗余，而lombok可以简化我们的代码，在源码中没有getter和setter方法，但是在编译生成的字节码文件中有getter和setter方法，这只是lombok其中的一个功能。Setting--&gt;Plugins，搜索lombok就会有提示，点击install即可，安装之后要重启idea安装重启之后，还需要设置Settings &gt; Build &gt; Compiler &gt; Annotation Processors，要不然会有lombok requires annotation processing提示。 参考 reference Lombok介绍及使用方法","categories":[{"name":"lombok","slug":"lombok","permalink":"https://www.lovesofttech.com/categories/lombok/"}],"tags":[{"name":"lombok","slug":"lombok","permalink":"https://www.lovesofttech.com/tags/lombok/"}]},{"title":"工作中的一些小经验","slug":"job/experience","date":"2018-04-19T16:00:00.000Z","updated":"2020-09-01T02:53:13.004Z","comments":true,"path":"job/experience.html","link":"","permalink":"https://www.lovesofttech.com/job/experience.html","excerpt":"只记录不好分类的日常经验。好分类的，如果 java，数据库，会在相应文章里记录。","text":"只记录不好分类的日常经验。好分类的，如果 java，数据库，会在相应文章里记录。 使用 Postman 以json形式往后台传递对象，后台接收不到数据 Postman download page postman 以 post 请求，将 Headers 的参数 KEY -&gt; Content-Type 的 VALUE 由 application/x-www-form-urlencoded 改为 application/json，如果需要指定编码为 utf-8，改成：application/json; charset=utf-8 默认是 application/x-www-form-urlencoded 修改为 application/json 后台 Controller 的方法参数前面加上 @RequestBody 就可以了。1234@RequestMapping(&quot;/api/login&quot;)public ApiResponse getApiResponse(@RequestBody(required=false) BaseRequest baseRequest, HttpServletResponse response, HttpServletRequest request) &#123; // some code&#125; 但是正常请求会出错：Uncaught TypeError: $.alert is not a function hosts locationc:\\windows\\system32\\drivers\\etc Plugin Alibaba Java Coding Guidelines was not installed: Invalid filename returned by a server暂时无解","categories":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/categories/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"在 windows 下，工作中的一些小经验","slug":"windows/experience","date":"2018-04-19T16:00:00.000Z","updated":"2020-09-01T02:53:13.104Z","comments":true,"path":"windows/experience.html","link":"","permalink":"https://www.lovesofttech.com/windows/experience.html","excerpt":"在 windows 下，与工作相关的一些经验，记录下来，在关键时刻能帮大忙，有可能节约的是非常重要的时间。","text":"在 windows 下，与工作相关的一些经验，记录下来，在关键时刻能帮大忙，有可能节约的是非常重要的时间。 Windows 强制删除文件及文件夹命令类似 linux 下的 rm -rf rd/s/q 盘符:\\某个文件夹 （强制删除文件文件夹和文件夹内所有文件） del/f/s/q 盘符:\\文件名 （强制删除文件，文件名必须加文件后缀名） 删除文件或目录BAT命令待验证新建.BAT批处理文件输入如下命令，然后将要删除的文件拖放到批处理文件图标上即可删除。12DEL /F /A /Q RD /S /Q 使用 Tracert 命令查看路由跳转命令：tracert domain可以用来排除网络问题 其中带有星号（*）的信息表示该次ICMP包返回时间超时tracert中还有如“-j”、“-r”、“-s”、“-4”、“-6”等命令，其用法都可以在命令行中输入命令“tracert”直接查到 win 10，移动的带宽，安装了 virtualBox 虚拟机，tracert baidu.com 需要等7秒左右才开始。访问网站的时候，也经常需要等 7 秒左右。 卸载 virtualBox 之后，恢复正常。 后记因为工作中需要使用 virtualBox，所以又安装了最新版，发现已经不存在之前的问题了。 windows 10 图片查看器jpg, png 图片，竟然默认不能用 windows 图片查看器，原来是被隐藏掉了，不晓得 microsoft 是咋想的，可能是要推广新软件吧，有一个叫 paint3D的软件，动则需要关闭，不好用。但又要照顾需要用旧软件的老用户，所以，还没有完全丢弃，只是隐藏了而已。那么，如何恢复呢？按窗口键（带 windows 视窗图标的那个，位于左下角 Ctrl 与 Alt 中间的那个键，叫窗口键） + R，会弹出运行窗口，输入 regedit，回车，打找注册表，在顶部输入：Computer\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Photo Viewer\\Capabilities\\FileAssociations，回车，直接定位，然后添加字符串，名字为想要用图片查看器打开的图片的后缀，如 .jpg，值为：PhotoViewer.FileAssoc.Tiff然后，选中要打开的图片，右键，打开方式中，就能看到经典的图片查看器了。 英文Win10原有的文档中文显示乱码的解决方案现象：powerdesigner 备注，在 Preview 中显示成乱码了。其实还在其它地方看到过乱码，不过基本不影响使用。也尝试过修改地区，不过，没有修改对，只修改了下面第一张图的，正确的是果修改成下面第二张图的。 修改方法： 打开控制面板，在地址栏直接输入：Control Panel\\Clock, Language, and Region 单击Change location，在Region对话框中单击Administrative选项卡。单击下面的Change system location。 在弹出的 Region Settings 对话框中的下拉列表中选择 Chinese (Simplified, China)，这个代表简体中文。 notepad++ 替换换行用 \\r\\n需要勾选：Extended 删除休眠文件操作方法以管理员权限运行CMD，打以下命令：POWERCFG -H OFF 即自动删除该文件。执行完成之后，C 盘的空间就会释放出来。 windowns 2012 计划任务控制面板-&gt;管理工具-&gt;任务计划程序-&gt;任务计划程序库，可看到任务列表，找到自动关机任务，右键-&gt;属性，可修改相关设置。 定时关机 控制面板-&gt;管理工具-&gt;任务计划程序-&gt;右键-&gt;创建基本任务… shutdown 参数： /s/f，其中，/f 强制关闭应用程序；/s 关机 关于 windows 字符集检查和修改字符集的方法是：➀【开始】→【运行】→输入cmd➁【确定】→输入chcp显示出活动的代码页是936。➂【开始】→【控制面板】→【日期、时间、语言和区域设置】→【区域和语言选项】➃【高级】→在代码页转换表中可找到936是简体中文GBK字符集，若不要它的话，可以点击前面小框中的勾，即把勾去掉。➄继续寻找简体中文GB2312字符集，即代码页是20936，点击前面的小框打上勾。【应用】→【确定】即可。 virtual box 虚拟化bios 里如果禁用了虚拟化技术，则安装虚拟机的时候不能选 64 位，只能选 32 位。 我在恢复其它电脑里安装好的 centos7 的时候，第一次提示，由于不支持虚拟化，所以无法启动，建议去 bios 里修改，具体提示不记得了，大致是这个意思。修改 bios 之后，由于之前只能选32位，我没改成64位，在启动的时候，提示：This kernel requires an X86-64 CPU,but only detected an i686 CPU然后，在虚拟机设置里将32位改为64位即可正常启动。 cmd 中文乱码cmd中的编码方式为ANSI，若中文不是此编码方式则会出现乱码。所以我们在编码的时候选择“ANSI” win10 英文版，80端口的网站服务在局域网不能访问因为被防火墙阻止了。 关闭防火墙。不过，不建议这么做，毕竟网络环境并不安全。 添加新入站规则，类型为tcp，端口号为80 网络属性 -&gt; Etherent -&gt; 最右边，点击 Windows Firewall -&gt; 底部倒数第二条 Advanced settings -&gt; Inbound Rules 右键 -&gt; new Rule… -&gt; 选第二项 Port -&gt; next -&gt; 默认为 TCP，填入 80 端口，再 next …","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"experience","slug":"windows/experience","permalink":"https://www.lovesofttech.com/categories/windows/experience/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"windows 10 访问 CentOS 7 的 SMB 共享文件","slug":"windows/win10SMBClient","date":"2018-04-16T16:00:00.000Z","updated":"2020-09-01T02:53:13.110Z","comments":true,"path":"windows/win10SMBClient.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10SMBClient.html","excerpt":"如题","text":"如题 环境 CentOS 7 安装配置 smba 服务，参见：CentOS 7.2 安装配置 Samba 服务器 客户端：win7旗舰版，win10 专业版，win10 教育版 现象 win7旗舰版，win10 专业版，均可顺利访问到共享文件夹。 win10 教育版，不可以。 解决 win10 教育版不可访问的问题在其中两台中文版 win10 电脑上，错误提示分别如下： 电脑A：请检查名称的拼写。否则，网络可能有问题。要尝试识别并解决网络问题，请单击“诊断”。错误代码: 0x80004005 电脑B：你不能访问此共享文件夹，因为你组织的安全策略阻止未经身份验证的来宾访问，这些策略可帮助保护你的电脑免受网络上不安全设备或者恶意设备的威胁。 解决修改 Win10 网络策略。按window+R键输入gpedit.msc 来启动本地组策略编辑器。依次找到“计算机配置-管理模板-网络-Lanman工作站”这个节点，在右侧内容区可以看到“启用不安全的来宾登录”这一条策略设置。状态是“未配置”，双击它，将其状态修改为“已启用”并单击确定按钮。 在其中一台中文版的 win10 上测试重现将上面提到的【Lanman工作站】-&gt;【启用不安全的来宾登录】设置为【未设置】，删除之前保存的用户凭据（参见windows 用户凭据管理)，重新访问虚拟机的共享目录，提示如下：1234567891011121314[Window Title]网络错误[Main Instruction]Windows 无法访问 \\\\192.168.1.88[Content]请检查名称的拼写。否则，网络可能有问题。要尝试识别并解决网络问题，请单击“诊断”。[^] 隐藏详细信息 [诊断(D)] [取消][Expanded Information]错误代码: 0x80070035找不到网络路径。 说明这一设置是必要的，但是，英文版的却并未解决。 另外一台 win10 英文版，按如上方法未解决 提示信息：1234567891011121314[Window Title]Network Error[Main Instruction]Windows cannot access \\\\192.168.1.88[Content]Check the spelling of the name. Otherwise, there might be a problem with your network. To try to identify and resolve network problems, click Diagnose.[^] Hide details [Diagnose] [Cancel][Expanded Information]Error code: 0x800704b3The network path was either typed incorrectly, does not exist, or the network provider is not currently available. Please try retyping the path or contact your network administrator. 明显有问题的现象尝试了网上很多办法，均无果。其中，明显有问题的情况 打开文件与打印机共享，选择【turn on file and printer sharing】之后，重新打开，还是【turn off file and printer sharing】状态 执行12sc.exe config lanmanworkstation depend= bowser/mrxsmb10/mrxsmb20/nsi sc.exe config mrxsmb10 start= auto 第一条命令执行成功，但第二条命令执行后提示：OpenService FAILED 1060 解决进入Control Panel\\Programs，点击【Turn Windows feautres on or off】，勾选 SMB 1.0/CIFS File Sharing Support 下的 SMB 1.0/CIFS Client 和 SMB 1.0/CIFS Server，点击【ok】,然后，重启电脑。 如此操作之后，之前打开文件与打印机共享的设置终于生效了，即【Turn Windows feautres on or off】终于保持到被选中状态了。 换了 IP 地址之后，出错，提示：not accessible1234567[Window Title]Open Folder[Content]\\\\192.168.1.90\\school-docs is not accessible. You might not have permission to use this network resource. Contact the administrator of this server to find out if you have access permissions.A device attached to the system is not functioning.[OK] 其它 还涉及到组策略，来宾账户设置之类的，这些是 windows 共享相关的，与本文无关，可网上搜索相关内容。 win10 无法访问samba，没有权限，登录会话解决 win key+R，输入“control userpasswords2”，打开“用户账户”。可直接添加用户凭据。 win10无法访问共享解决办法 错误提示：不允许一个用户使用一个以上用户名与一个服务器或共享资源的多重连接。中断与此服务器或共享资源的连接，然后在试一次 解决：windows 下 cmd，执行：net use * /del /y","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"win10","slug":"CentOS/win10","permalink":"https://www.lovesofttech.com/categories/CentOS/win10/"},{"name":"smb","slug":"CentOS/win10/smb","permalink":"https://www.lovesofttech.com/categories/CentOS/win10/smb/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"smb","slug":"smb","permalink":"https://www.lovesofttech.com/tags/smb/"},{"name":"win10","slug":"win10","permalink":"https://www.lovesofttech.com/tags/win10/"}]},{"title":"windows 用户凭据管理","slug":"windows/winCredentials","date":"2018-04-16T16:00:00.000Z","updated":"2020-09-01T02:53:13.113Z","comments":true,"path":"windows/winCredentials.html","link":"","permalink":"https://www.lovesofttech.com/windows/winCredentials.html","excerpt":"如题","text":"如题 问题现象 一开始同事将 git 安装到自定义的目录，然后安装的 tortoisegit，然后用 tortoisegit 的界面 clone 项目，出现登录提示框，输入用户名密码之后，提示 git.exe 找不到。然后同事又忘了将 git 安装到哪个目录了，悲催呀，然后我建议他全部重新安装，都安装到默认目录，并且重启电脑。 如此操作之后，找不到 git.exe 的问题没有了，但是认证失败依旧。彻底卸载之后，重启电脑，再重新安装，还是不行。确定 git 账号和权限都是可以的，在另外的电脑上操作，一切正常。 删除 tortoisegit 的认证数据也不行，其实这一步多余，因为都卸载了重装了的。 win7 解决win7 最终解决办法：进入控制面板-&gt;用户账户-&gt;用户凭据，删除 gitee 的凭据，然后再试就 OK 了。 win 10 用户凭据管理删除登录凭据的操作如下（二选一）： win key+R，输入“control userpasswords2”，打开【用户账户】-&gt; 高级-&gt; 管理密码-&gt;windows 凭据 进入【控制面板】-&gt;用户账户-&gt;管理 Windows 凭据通过以上方式打开如下界面，点开【普通凭据】，找到 gitee 的记录，删除。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"用户凭据","slug":"windows/用户凭据","permalink":"https://www.lovesofttech.com/categories/windows/用户凭据/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"用户凭据","slug":"用户凭据","permalink":"https://www.lovesofttech.com/tags/用户凭据/"}]},{"title":"windows 10，Word 2016 打开共享文件时，提示：在试图打开文件时遇到错误","slug":"windows/win10Word2016","date":"2018-04-16T16:00:00.000Z","updated":"2020-09-01T02:53:13.113Z","comments":true,"path":"windows/win10Word2016.html","link":"","permalink":"https://www.lovesofttech.com/windows/win10Word2016.html","excerpt":"如题","text":"如题 现象打开本地文件正常，打开共享的 word 文件时，提示错误。 解决打开 word 2016，文件-&gt;选项-&gt;信任中心-&gt;信任中心设置-&gt;受保护的视图，将【为来自Internet的文件启用受保护的视图】选项前的对钩取消，点击“确定”。 备注并非所有电脑都需要这样操作才能打开共享文件。","categories":[{"name":"Word2016","slug":"Word2016","permalink":"https://www.lovesofttech.com/categories/Word2016/"},{"name":"win10","slug":"Word2016/win10","permalink":"https://www.lovesofttech.com/categories/Word2016/win10/"}],"tags":[{"name":"win10","slug":"win10","permalink":"https://www.lovesofttech.com/tags/win10/"},{"name":"Word2016","slug":"Word2016","permalink":"https://www.lovesofttech.com/tags/Word2016/"}]},{"title":"JS 开发链接","slug":"frontend/jsLinks","date":"2018-04-15T16:00:00.000Z","updated":"2020-09-01T02:53:12.936Z","comments":true,"path":"frontend/jsLinks.html","link":"","permalink":"https://www.lovesofttech.com/frontend/jsLinks.html","excerpt":"工作中使用的 JS 开发规范，仅供参考，请根据团队情况适当变通。 ECMAScript 6 入门 开源电子书链接。","text":"工作中使用的 JS 开发规范，仅供参考，请根据团队情况适当变通。 ECMAScript 6 入门 开源电子书链接。 Airbnb JavaScript Style Guide -&gt; js 编码规范参考点击进入 与该规范不一样的地方： 缩进：保留 WebStorm 的默认行为，即一个 tab 对应 4 个空格。编码时使用 tab 键进行缩进即可。 ECMAScript 6 入门（开源书，第3版） ECMAScript 6 入门 ECMAScript 6 入门 相关介绍 github 开源地址 网页高度宽度JS获取浏览器窗口大小 获取屏幕，浏览器，网页高度宽度 网页可见区域宽：document.body.clientWidth 网页可见区域高：document.body.clientHeight 网页可见区域宽：document.body.offsetWidth (包括边线的宽) 网页可见区域高：document.body.offsetHeight (包括边线的宽) 网页正文全文宽：document.body.scrollWidth 网页正文全文高：document.body.scrollHeight 网页被卷去的高：document.body.scrollTop 网页被卷去的左：document.body.scrollLeft 网页正文部分上：window.screenTop 网页正文部分左：window.screenLeft 屏幕分辨率的高：window.screen.height 屏幕分辨率的宽：window.screen.width 屏幕可用工作区高度：window.screen.availHeight 屏幕可用工作区宽度：window.screen.availWidth HTML精确定位:scrollLeft,scrollWidth,clientWidth,offsetWidth scrollHeight: 获取对象的滚动高度。 scrollLeft:设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离 scrollTop:设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离 scrollWidth:获取对象的滚动宽度 offsetHeight:获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度 offsetLeft:获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置 offsetTop:获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置 event.clientX 相对文档的水平座标 event.clientY 相对文档的垂直座标 event.offsetX 相对容器的水平坐标 event.offsetY 相对容器的垂直坐标 document.documentElement.scrollTop 垂直方向滚动的值 event.clientX+document.documentElement.scrollTop 相对文档的水平座标+垂直方向滚动的量","categories":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/categories/js/"}],"tags":[{"name":"js","slug":"js","permalink":"https://www.lovesofttech.com/tags/js/"}]},{"title":"CentOS 7.2 安装配置 Samba 服务器","slug":"linux/centOS7Samba","date":"2018-04-10T16:00:00.000Z","updated":"2020-09-01T02:53:13.027Z","comments":true,"path":"linux/centOS7Samba.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7Samba.html","excerpt":"如题","text":"如题 检查是否安装1234[root@AndyCentOS7Basic ~]# rpm -qi sambapackage samba is not installed[root@AndyCentOS7Basic ~]# rpm -qa | grep samba[root@AndyCentOS7Basic ~]# 安装12[root@AndyCentOS7Basic ~]# yum -y install samba samba-client... 安装好后，再次查看12345678[root@AndyCentOS7Basic school-docs]# rpm -qa | grep sambasamba-common-libs-4.6.2-12.el7_4.x86_64samba-client-libs-4.6.2-12.el7_4.x86_64samba-libs-4.6.2-12.el7_4.x86_64samba-client-4.6.2-12.el7_4.x86_64samba-common-4.6.2-12.el7_4.noarchsamba-common-tools-4.6.2-12.el7_4.x86_64samba-4.6.2-12.el7_4.x86_64 另外一台电脑，没选择安装 samba-client123456789[root@AndyCentOS7Basic ~]# yum -y install samba...[root@AndyCentOS7Basic ~]# rpm -qa | grep sambasamba-common-libs-4.6.2-12.el7_4.x86_64samba-client-libs-4.6.2-12.el7_4.x86_64samba-libs-4.6.2-12.el7_4.x86_64samba-4.6.2-12.el7_4.x86_64samba-common-4.6.2-12.el7_4.noarchsamba-common-tools-4.6.2-12.el7_4.x86_64 配置123456789[root@AndyCentOS7Basic ~]# cd /etc/samba/[root@AndyCentOS7Basic samba]# lltotal 20-rw-r--r-- 1 root root 20 Nov 28 00:21 lmhosts-rw-r--r-- 1 root root 667 Nov 28 00:21 smb.conf-rw-r--r-- 1 root root 11327 Nov 28 00:21 smb.conf.example[root@AndyCentOS7Basic samba]# mv smb.conf smb.conf.origin[root@AndyCentOS7Basic samba]# vim smb.conf 写入如下内容1234567891011121314151617181920212223242526272829303132[global] workgroup = SAMBA security = user passdb backend = tdbsam printing = cups printcap name = cups load printers = no cups options = raw map to guest = Bad User[school-docs] path = /opt/school-docs public = no create mask = 0765 writable = yes valid users = apg printable = no[apgHome] path = /opt/apg public = no writable = yes valid users = apg printable = no create mask = 0765[anonymous] comment = anonymous path = /opt/anonymous public = yes writeable = yes create mask = 0644 设置开机启动12[root@AndyCentOS7Basic ~]# systemctl enable smbCreated symlink from /etc/systemd/system/multi-user.target.wants/smb.service to /usr/lib/systemd/system/smb.service. 创建用户123456789101112[root@AndyCentOS7Basic samba]# groupadd gsmb[root@AndyCentOS7Basic samba]# useradd aipeigo -g gsmb -s /sbin/nologin[root@AndyCentOS7Basic samba]# smbpasswd -a aipeigoNew SMB password:Retype new SMB password:Added user aipeigo.# 指定主目录的方式创建另外一个用户[root@AndyCentOS7Basic samba]# useradd -g gsmb -d /opt/apg -s /sbin/nologin apg[root@AndyCentOS7Basic samba]# smbpasswd -a apgNew SMB password:apgRetype new SMB password:apg 创建共享目录并设置权限1234567mkdir -p /opt/school-docscd /opt/chown aipeigo:gsmb -R school-docs/ chmod 777 school-docsmkdir -p /opt/anonymouschown nobody:nobody anonymous/ smb 启动、重启等命令 systemctl start smb # 启动 systemctl restart smb #重启 systemctl enable smb #修改为开机启动 systemctl status smb #查看状态 使用 testparm 测试 samba 配置是否正确 备注：win 7 与 win 10 专业版可正常访问，win 10 教育版无法访问解决办法，参见：windows 10 访问 CentOS 7 的 SMB 共享文件 遇到的操作错误Failed to add entry for user aipeigo1234[root@AndyCentOS7Basic samba]# smbpasswd -a aipeigoNew SMB password:Retype new SMB password:Failed to add entry for user aipeigo 这是因为没有加相应的系统账号12groupadd gsmbuseradd aipeigo -g gsmb -s /sbin/nologin You need permission to perform this action进入共享目录，创建文件或文件夹，提示没有权限1You need permission to perform this action 解决：禁用 SELinuxvim /etc/selinux/config设置 SELINUX 为：SELINUX=disabled然后重启服务器","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"smb","slug":"CentOS/smb","permalink":"https://www.lovesofttech.com/categories/CentOS/smb/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"smb","slug":"smb","permalink":"https://www.lovesofttech.com/tags/smb/"}]},{"title":"使用 git 在码云上进行项目协作开发","slug":"git/gitTeamWork","date":"2018-04-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.964Z","comments":true,"path":"git/gitTeamWork.html","link":"","permalink":"https://www.lovesofttech.com/git/gitTeamWork.html","excerpt":"如题","text":"如题 协作开发步骤 安装 git工具 点击进入 Git for Windows 官网下载最新版 点击进入 TortoiseGit for Windows 官网下载最新版 进入项目主页，如下所示，复制项目 git 地址。 进入项目工作目录，拉取（克隆）项目文件。 直接点 ok 如果出错，点【retry】，出现 gitee 登录框。 正常的话，显示 Success，表示 clone 成功 用 WebStorm 打开项目根目录 设置项目编码格式，全部为 utf-8 添加新文件。 第一种方式，文件夹操作。 第二种方式，用 WebStorm 操作。 提交更新，提交之前需要写备注，最好能体现当前修改的内容，如果无关紧要，仅仅是完善性的修改，建议填：improve 提交之后，需要推送变更至服务器，只有操作了这一步，其他同事才能获取到你提交的内容。 获取其他同事提交的变更。建议在修改之前先获取变更，否则，如果在提交时，你提交的文件已经有人更新过了，需要合并，在合并的时候如果有冲突，需要仔细核对。 有关 git 操作请移步：git 在工作中的基本用法","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"},{"name":"team","slug":"git/team","permalink":"https://www.lovesofttech.com/categories/git/team/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"}]},{"title":"从【技术岗位】招聘的用人方视角，看求职这件事--想要有效且高效求职，就应该了解一下","slug":"job/adviseForCandidates","date":"2018-04-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.001Z","comments":true,"path":"job/adviseForCandidates.html","link":"","permalink":"https://www.lovesofttech.com/job/adviseForCandidates.html","excerpt":"求职与招聘，对于大多数岗位来说，都接近于体力活，需要花大量时间。","text":"求职与招聘，对于大多数岗位来说，都接近于体力活，需要花大量时间。 对于招聘方希望通过简历找到差不多的应聘者，希望面试通过率很高，而不想要所谓的海选，毕竟还有工作要做。 尤其是对于技术岗位，更是如此。 首先，HR 对于技术岗位的需求并不是特别了解，初选交给 HR 会导致来面试的人比较多，这样，效率很低，会浪费大量的时间。其实很多都可以通过简历就可以过滤掉。 当然，这当中也可以通过改善招聘流程改变这种现状，但是对于大多数小企业来讲，本来各种制度都不是很健全，对于招聘流程的合理性，又能报多大的希望呢？ 其次，自己筛选简历，虽然提高了面试通过率，但是花在查看简历的时间也是不容忽视的。 对于求职者我也经历过求职，有时候一天上午下午都有面试，一般一天最多可以约两家公司面试，有时候周末还有面试。面试也都是比较累的，尤其在大夏天，上午面试过之后，匆匆的吃完中饭，就要从刚面试过的公司赶去下一家公司，那种个中滋味，只有经历过的人才能体会到。 在有过这种经历之后，相信大多数求职者都希望，面试效率高一些，尽量避免去这样的公司面试：觉得自己不合适，或者对公司不太感兴趣。 所以，在投简历的时候，要充分了解你所投的岗位，确实感兴趣了再投，如果等 HR 通知你面试了再去了解，然后发现不合适，去也不是，不去也不是，浪费大家的时间。 同时，你的简历是否反应了你的真实情况很重要，如果太过言过其实，被刷下来的可能性非常大，这样的面试对双方都是一种时间和精力上的浪费。 另一方面，你的简历如果并没有如实反应你的真实水平和实际的项目经验，那么肯定会失去很多对你而言有价值的面试机会。 综上所述，为了提高面试质量，为了减少不必要的面试，同时也是为了在求职中获得更多有价值的面试机会，写一份高质量的简历就显得非常重要了。 企业对人才的态度对于一个成熟的职业经理人，或者说，大多数企业，对待人才的态度，一般都是如此： 有能力，品德/人品不好，坚决不用。 有能力，态度/品德欠佳，慎用之。 有能力，有品德、态度好，重用之。 能力欠佳，有品德、态度好，学习能力、成长性好，属于可培养之人，企业一般愿意花成本培养这样的人，能力上去之后，重用之。 能力欠佳，有品德、态度好，但学习能力、成长性不好，属于不可培养之人，留在恰当的岗位。 能力欠佳，态度/品德欠佳，坚决不用。 如何有效且高效的找到自己中意的工作？当然，如果你足够牛B，就不需要看这篇文章了^_^。 高端人才从来不用愁找工作的事，只会发愁去哪家公司就职。 有资历有资源的人，一般也不用愁找工作，可能更多的是发愁如何找到志同道合的合作伙伴，如何招到和留住有用的人才，如何拉投资这些事儿。 那么，如果我们不是高端人才，也不具备创业的实力，就只能不断提高自己的竞争力、不断的往高端人才方向发展、不断的丰富自己的资历和积累有用的资源。 想要提高自己的竞争力，这就需要我们不断的成长，而成长的不二法则，就是要不断的学习，只是学习还不够，还要尽可能的让学习这件事保持高效率。 那么，问题又来了，如何才能保持高效率的学习呢？这又是一个比较大的话题，本文暂且不对此做讨论。 本文仅讨论在自身条件短时间内不可能有大的变化的前提下，找工作这件事儿。 高质量的简历收到的简历千差万别，好多人的简历都是不合格的，或者说，都可以做得更好。以下是我总结的可以把简历做得更好，可以获取更多有质量的面试机会的要点： 一定要表述清楚你的强项是什么，你的个性特点是什么，你在技术方面的兴趣是什么。 工作经历中，一定要写清楚你用过哪些技术选型，你在项目中承担的责任是什么，从项目中，你获得了哪些提升，或者说你通过项目学到了哪些。 如果有一段时间没有上班，最好在简历上体现一下，否则面试官可能会想：你这大半年（几个月）没有上班，是不是并不太需要一份工作呢？ 对于技术岗位，面试官一定对毕业院校和所学专业比较感兴趣，所以，一定要在简历上明确的体现出来，这也是对诚实的最起码要求。 从进入公司那一刻，面试就开始了。如果需要等几分钟，怎么打发无聊时间呢？玩手机？我认为玩手机是可以的，但是如果你的面试官都走到你跟前了，你还在玩手机的话，是不是会让面试官想，你工作的时候是不是也会一有空就玩手机，并且一发不可收拾呢？ 离职原因：如果有比较短（不满一年）的工作经历，最好在每一份工作经历的介绍下面写一下。如果经常换工作，更应该主动写一下，否则给人的感觉你是那种工作很不稳定的角色，经常跳槽的人，那么获得的面试机会肯定会大打折扣。 薪资要求，还是要写的，至少写一个范围，因为即使你各方面都达到要求甚至超出要求，但薪水要得比较高，超出公司肯给的职位薪资，公司还是不会考虑要你的。否则等你面试大半天之后，公司觉得你不错，最后问你薪水要求，被吓到了，给不起，这不浪费彼此的时间吗？ 简历中的“bug”，以及招聘方对此的判断 项目经验，时间跨度包含两个公司的就职时间，一看就不对，给人的印象是，写简历都不认真写，工作还能认真吗？或者直接判断为：简历不真实。 有错别字或者语句不通顺或者词语少字这类，面试官在众多简历中筛选时可能直接被淘汰掉，因为给人的感觉就是粗心大意。 虽然，本条并不一定真的说明你很粗心，也或者，你是有点粗心，但是其它方面都不错，粗心的毛病可以通过适当的管理手段督促其改变或者弥补，也是可以用的。 但是，因为面试还是挺花时间的，面试官不想把宝贵的时间浪费在可能不合适的求职者身上。 简历中出现错别字，说明你在写简历的时候，没有仔细检查，对应到工作中，由于粗心出现 bug 的机率就会比较大。 语句不通顺，说明你除了可能比较粗心之外，可能还是一个表达能力欠佳的人。 简历的项目经验中，出现开发环境中的硬件描述，个人认为这个是非常多余的，会显得经验不足，老司机一般都不会写这些。 居住地在外省，期望工作地区在其它城市，投递的意义不大，除非是那些高端职位，招聘方面向全国招聘的。 面试题 认真做，而且做得还不错，这类人一般是态度和能力都不错的人。 认真做，但大部分不会，这类人至少说明态度还不错。 没有耐心做面试题，往往表现在有两年以上工作经验的人身上。这本身就能说明你的性格特点。 拒绝做某类面试题。如果你确实很牛B，我认为是可以这样的，但是如此高调，可能只有更高调的人才肯要你，或者是需求实在非常紧急。 没耐心或做题不认真，面谈时随便问几个简单的问题，都不会，这类人属于态度和能力都欠佳型的。 没看答题要求，一上来就做题，比如没有在答题纸上写上姓名，或者直接在没有留空的面试题纸上画、写答案。说明比较粗心。 简历投递可以适当大胆一点。比如自身条件离要求有一点距离但差距不是很大，可以投。如果差距比较大，获取面试的机会应该要小一些，而且即使面试了，被选中的可能性也还是比较小。 如果招人单位是人事在挑选面试人员的话，那就比较糟糕，你即便面试了，可能也会被刷下来，耽误彼此的时间。当然，如果你希望在面试中获取一些经验，另当别论。 面对心仪的岗位，可能是公司比较好，也或许是离家比较近，建议你报着被刷下来的心态，也想要去试试，万一通过了呢。 实际上，有的职位描述，对工作的要求比较具体，要求也比较高，但是这类岗位往往好长时间都招不到合适的人。 如果你对该岗位感兴趣，你可以持续关注，如果过一段时间，比如半个月以上，该简历的发布时间还在更新，往往说明还没有招到合适的人，你可以投简历试试。 如果再过一段时间，比如一周，还在继续更新，你也可以再次投递简历。 没准儿，你的第二次甚至第三次投递会给你带来面试机会，甚至是该岗位的工作机会。 招聘、求职，跟谈恋爱找对象有点儿类似，一开始大家的要求都比较高，但是发现符合自己要求的人少之又少，时间长了，又想赶快找个对象的话，就会降低要求，甚至会一降再降。很有可能会回过头去重新考虑追求过自己的人。 如果你三番五次的主动约你喜欢的人，都被拒绝了，请不要放弃，因为很可能下一次恰当的时机，就是你的机会。 同理，你“厚着脸皮”的一次又一次简历投递，最终可能会迎来招聘方的“芳心”。 面试过程面试时，请把主导权交给面试官，是你在求职，要知道自己在干什么，摆正自己的位置，尊重任何一个你正在打交道的人。 也许你正在面试的这家公司正好是你想要去的，请不要错过任何一个可能的好机会。 面试过程中，不好的表现这里列举部分招聘过程中遇到的一些真实例子，如果你也这样，请思考一下，是不是因为这样失去过好的工作机会。 HR 说，请先坐一下，然后，坐下之后立马拿出手机来看。HR 过云问他应聘什么职位，手机也舍不得放下，也没有站起来，就直接回答了，象个来催债的大爷似的，谁敢要你？至少 HR 给的印象分就很低了。 做题的时候也在用手操作手机的，难免让人想，是不是在上网搜索答案，或者在群里请教高手。 还没聊几句，就迫不及待的问这问那，甚至问一些与工作不相关的问题。 问不该问的问题比较典型的例子，如下： 请问，如果是你招聘测试工程师，这样的求职者，你愿意让他来面试吗？ 做面试题的过程打电话如果有紧急电话需要接听，最好跟接待你的人说一声，然后到办公室外面接听。 曾经有一个面试者，在会议室做题的过程中，被听到在里面打电话，虽然无意打扰属于面试者的私人时间，但是跳过会议室门口就能听到，而且还持续了大于3分钟，甚至更久。 难免不让人怀疑面试者在打电话向朋友求助关于正在做的面试题。 如果不是向外求助，那么，占用着会议室接打私人电话，也是不对的，毕竟会议室资源一般都是比较紧张的。 本来可以早一点结束的面试，因为面试者的私人电话被推迟，如果是上午，很有可能被推迟到中午吃饭时间，影响面试官的正常作息时间。如果是下午，则可能会被推迟到下班以后，都是会影响到面试官对面试者的初步印象的。 投递简历之后如果没有及时收到面试通知，可能是筛选简历的人在众多简历中还没有选中你，你可以适时的主动沟通一下，在拉勾、智联上都有这功能。 如果有人回复要求加qq，那么，一般意味着愿意做进一步沟通，通过，这个qq的所有者往往就是用人部门，一般会根据简历作初步沟通。 有的同学，简历上没有薪水要求，即便你很优秀，也不一定能收到面试通知，也许也正是因为你足够优秀，用人单位才没有联系你，因为你的能力已经超出了用人单位的需求，用人单位不想花高价招一个超出自己需求的人。 所以，面对自己想要去的单位，主动联系，就可以获取没有被联系的原因。 爽约，放鸽子在招聘过程中，给应聘者打电话约好面试时间之后，一般还会发一条短信告之面试的具体时间和地点，并且要求收到请回复，这些人确实也回复短信了，但到了面试时间却不见人，也没有提前打招呼，这样的求职者，给招聘方留下的印象是非常糟糕的。 在 IT 这个圈子，其实说大不大，也许在不久的将来，你会在不同的公司遇到现在查看你简历并通知你面试的人，会遇到同一个本来要面试你的面试官。对于技术岗位，查看简历的人和面试官，恰恰又是同一个人。 爽约且没有事先通知招聘方是不道德的在这里，我想给求职者一个非常忠恳的建议，如果最终决定不去面试，要在第一时间回复，可以先短信回复，如果短信没有回音，要打电话，我认为这是做人最起码的原则，只有你尊重别人，别人才会尊重你。 说得严重点，如果你不去面试，没有在第一时间告之招聘方你的情况，是不道德的。因为，招聘方已经把约好的时间留给了你，结果你不去，会耽误招聘方的计划。 人而无信，不知其可也。 接到面试短信不回复一般面试邀请会先打电话，然后以短信的方式发送面试地址，一般人事都会在末尾来一句：收到请回复，谢谢。 可是就是有一些人，没有回复，这面试的第一道题，就得了零分。 简历上的奇葩，搞笑点 目前状况：目前暂无跳槽打算。我想说，你暂无跳槽打算，投什么简历呢？如果想换工作了，能先改一下简历再投吗？哈哈~~~粗心！ 期望工作地区：北京、上海、广州。我想说，你能不能看清楚这个岗位是在成都，看清楚了再投好吗？或者你也想来成都发展，就不能改一下简历再发吗？粗心！ 曾经收到一个测试小 MM 的简历，由于人事比较忙，我就自己打电话通知面试，在电话里约好时间之后，我说挂电话之后给她发面试地址。结果我没有发，再一次给她打过去，说加她qq发地址，顺便给截个地图告诉她我们的位置，她说加微信也可以，用手机号加，于是挂了电话加她微信。但是加了之后过了一会儿没有通过验证，于是又打过去，结果这个 MM 直接把电话挂了，我这真是丈二和尚摸不头脑呀，莫非把我当骗子了？ 其实还有很多，没来得及一一整理。","categories":[{"name":"求职","slug":"求职","permalink":"https://www.lovesofttech.com/categories/求职/"},{"name":"招聘","slug":"求职/招聘","permalink":"https://www.lovesofttech.com/categories/求职/招聘/"},{"name":"job","slug":"求职/招聘/job","permalink":"https://www.lovesofttech.com/categories/求职/招聘/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"求职","slug":"求职","permalink":"https://www.lovesofttech.com/tags/求职/"},{"name":"招聘","slug":"招聘","permalink":"https://www.lovesofttech.com/tags/招聘/"}]},{"title":"BigDecimal 运算与比较","slug":"java/bigDecimal","date":"2018-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.972Z","comments":true,"path":"java/bigDecimal.html","link":"","permalink":"https://www.lovesofttech.com/java/bigDecimal.html","excerpt":"如题","text":"如题BigDecimal 运算1234567891011121314151617181920212223242526272829303132333435363738394041424344/* * 构造方法: * public BigDecimal(String val): * * 金融相关的东西(例:银行钱的小数,商品价格小数,实验小数) * * 成员方法: * public BigDecimal add(BigDecimal augend):加 * public BigDecimal subtract(BigDecimal subtrahend):减 * public BigDecimal multiply(BigDecimal multiplicand):乘 * public BigDecimal divide(BigDecimal divisor):除 * public BigDecimal divide(BigDecimal divisor,int scale,int roundingMode):商,几位小数,如何舍取。 * */ public class BigDecimalDemo &#123; public static void main(String[] args) &#123; System.out.println(0.09 + 0.01); System.out.println(1.0 - 0.32); System.out.println(1.015 * 100); System.out.println(1.301 / 100); // public BigDecimal add(BigDecimal augend):加 BigDecimal bd1 = new BigDecimal(\"0.09\"); BigDecimal bd2 = new BigDecimal(\"0.01\"); System.out.println(\"add:\" + bd1.add(bd2)); System.out.println(\"----------------------\"); // public BigDecimal subtract(BigDecimal subtrahend):减 BigDecimal bd3 = new BigDecimal(\"1.0\"); BigDecimal bd4 = new BigDecimal(\"0.32\"); System.out.println(\"subtract:\" + bd3.subtract(bd4)); System.out.println(\"----------------------\"); // public BigDecimal multiply(BigDecimal multiplicand):乘 BigDecimal bd5 = new BigDecimal(\"1.015\"); BigDecimal bd6 = new BigDecimal(\"100\"); System.out.println(\"multiply:\" + bd5.multiply(bd6)); System.out.println(\"----------------------\"); // public BigDecimal divide(BigDecimal divisor):除 BigDecimal bd7 = new BigDecimal(\"1.301\"); BigDecimal bd8 = new BigDecimal(\"100\"); System.out.println(\"divide:\" + bd7.divide(bd8)); System.out.println(\"divide:\" + bd7.divide(bd8,3,BigDecimal.ROUND_HALF_UP)); System.out.println(\"divide:\" + bd7.divide(bd8,9,BigDecimal.ROUND_HALF_UP)); &#125; &#125; 比较123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112import org.apache.commons.lang3.math.NumberUtils;import java.math.BigDecimal;/** * 带小数的数字类型数据比较 * * @author AndyChen * @since 2017-1-18 */public class HaveDecimalsNumberCompareTool &#123; static double deviation = 10E-10; /** * 在给定精度范围内比较2个double类型值是否相等 */ public static boolean equals(double a, double b) &#123; if (Double.isNaN(a) || Double.isNaN(b) || Double.isInfinite(a) || Double.isInfinite(b)) &#123; return false; &#125; return a == b || Math.abs(a - b) &lt; deviation; &#125; /** * 等于 * BigDecimal.compareTo * -1 小于 * 0 等于 * 1 大于 */ public static boolean equals(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == 0; &#125; /** * 介于 * * @param a * @param b * @return a是否介于b与c */ public static boolean between(String a, String b, String c) &#123; int resultGreaterThanOrEqualBefore = getBigDecimalCompareResult(a, b); int lessGreaterThanOrEqualAfter = getBigDecimalCompareResult(a, c); return (resultGreaterThanOrEqualBefore == 0 || resultGreaterThanOrEqualBefore == 1) &amp;&amp; (lessGreaterThanOrEqualAfter == 0 || lessGreaterThanOrEqualAfter == -1); &#125; /** * 大于 * * @param a * @param b * @return */ public static boolean greaterThan(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == 1; &#125; /** * 小于 * * @param a * @param b * @return */ public static boolean lessThan(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == -1; &#125; /** * 大于等于 * * @param a * @param b * @return */ public static boolean greaterThanOrEqual(String a, String b) &#123; return getBigDecimalCompareResult(a, b) &gt;= 0; &#125; /** * 小于等于 * * @param a * @param b * @return */ public static boolean lessThanOrEqual(String a, String b) &#123; int result = getBigDecimalCompareResult(a, b); return (result == 0 || result == -1); &#125; /** * 得到两个浮点数的比较结果 * * @param a * @param b * @return -2: 至少有一个是非数值，0: 相等 -1: 小于 1: 大于 */ private static int getBigDecimalCompareResult(String a, String b) &#123; BigDecimal x = NumberUtils.createBigDecimal(a); BigDecimal y = NumberUtils.createBigDecimal(b); if (x == null || y == null) &#123; return -2; &#125; return x.compareTo(y); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"java 字符串的替换 replace、replaceAll、replaceFirst 的区别","slug":"java/javaReplace","date":"2018-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.985Z","comments":true,"path":"java/javaReplace.html","link":"","permalink":"https://www.lovesofttech.com/java/javaReplace.html","excerpt":"如题","text":"如题 String 的 replaceAll 跟 replaceFirst 用到了正则表达式1234567891011@Testpublic void replaceTest() &#123; String s = \"my-test-txt.my.test.string\"; System.out.println(s.replace(\"-\", \"#\")); System.out.println(s.replace(\".\", \"$\")); System.out.println(s.replaceAll(\"-\", \"@\")); System.out.println(s.replaceAll(\".\", \"*\")); System.out.println(s.replaceFirst(\".\", \"#\")); System.out.println(s.replaceFirst(\"-\", \"!\")); System.out.println(s.replaceFirst(\"\\\\.\", \"!\"));&#125; 运行结果1234567my#test#txt.my.test.stringmy-test-txt$my$test$stringmy@test@txt.my.test.string**************************#y-test-txt.my.test.stringmy!test-txt.my.test.stringmy-test-txt!my.test.string 关键知识点： “.”是正则表达式的元字符，匹配除换行符以外的任意字符。replaceAll、replaceFirst都用到了正则表达式。 replace没有用到正则表达式。但会把所有目标（即第一个参数）用第二个参数替换掉。 很多人可能会误解replace是替换单个，而replaceAll是替换全部，其实这是错的。replace 只是没有用到正则表达式，但会替换所有匹配的字符串。 不想用正则表达式去替换第一个“.” 字符串肿么办？ s.replaceFirst(“\\.”, “!”) String 的 split 也用到了正则表达式。","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"spring boot 支持通过 ajax 跨域请求的设置","slug":"java/springBootAjax","date":"2018-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.991Z","comments":true,"path":"java/springBootAjax.html","link":"","permalink":"https://www.lovesofttech.com/java/springBootAjax.html","excerpt":"如题","text":"如题 123456789@RequestMapping(\"/api\")public Object getResponse(BaseRequest baseRequest, HttpServletRequest request, HttpServletResponse response) &#123; //允许跨域访问的代码，开发时仅为了配合前端测试 if (ApgConfig.isDev == YesOrNoEnum.yes.getIndex()) &#123; response.setHeader(\"Access-Control-Allow-Origin\", \"*\"); &#125; return ApgAdapterService.getApiResponse(baseRequest, request);&#125; 否则会报错：1Failed to load http://doman/api: No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource. Origin &apos;null&apos; is therefore not allowed access.","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"修改 tomcat 默认网站指向的目录","slug":"java/tomcatDefaultWebSite","date":"2018-03-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.998Z","comments":true,"path":"java/tomcatDefaultWebSite.html","link":"","permalink":"https://www.lovesofttech.com/java/tomcatDefaultWebSite.html","excerpt":"如题","text":"如题 修改 conf 目录下的 server.xml，增加 Context 属性，docBase 指向需要设置为默认网站的目录。123456&lt;Host name=\"localhost\" appBase=\"webapps\" unpackWARs=\"true\" autoDeploy=\"true\"&gt; &lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\" prefix=\"localhost_access_log\" suffix=\".txt\" pattern=\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\" /&gt; &lt;Context path=\"\" docBase=\"/home/utomcat/webapps/apg/apg\" debug=\"0\"/&gt;&lt;/Host&gt; tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"tomcat","slug":"java/tomcat","permalink":"https://www.lovesofttech.com/categories/java/tomcat/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"mysql-5.7.20 编码由 utf8 改为 utf8mb4","slug":"database/mysql5.7ToUtf8mb4","date":"2018-03-01T16:00:00.000Z","updated":"2020-09-01T02:53:12.922Z","comments":true,"path":"database/mysql5.7ToUtf8mb4.html","link":"","permalink":"https://www.lovesofttech.com/database/mysql5.7ToUtf8mb4.html","excerpt":"MySQL数据库字符集由utf8修改为utf8mb4。 微信nickname乱码（emoji）及mysql编码格式（utf8mb4）设置解决的过程。","text":"MySQL数据库字符集由utf8修改为utf8mb4。 微信nickname乱码（emoji）及mysql编码格式（utf8mb4）设置解决的过程。 utf8mb4兼容utf8，且比utf8能表示更多的字符，是utf8字符集的超集。所以现在一些新的业务，比如ISO, Android等，会将MySQL数据库的字符集设置为utf8mb4。 123456789101112131415[root@localhost ~]# find / -name my.cnf/etc/my.cnf[root@localhost ~]# vim /etc/my.cnf# 添加如下配置后重启[client]default-character-set=utf8mb4[mysqld]character-set-server=utf8mb4collation-server=utf8mb4_unicode_ciinit_connect=&apos;SET NAMES utf8mb4&apos;skip-character-set-client-handshake=false[mysql]default-character-set=utf8mb4 重启：systemctl restart mysqld检查配置12345678910111213141516171819202122232425262728293031mysql&gt; SHOW VARIABLES LIKE &apos;collation%&apos;;+----------------------+--------------------+| Variable_name | Value |+----------------------+--------------------+| collation_connection | utf8mb4_unicode_ci || collation_database | utf8mb4_unicode_ci || collation_server | utf8mb4_unicode_ci |+----------------------+--------------------+3 rows in set (0.01 sec)mysql&gt; SHOW VARIABLES LIKE &apos;character_set%&apos;;+--------------------------+----------------------------+| Variable_name | Value |+--------------------------+----------------------------+| character_set_client | utf8mb4 || character_set_connection | utf8mb4 || character_set_database | utf8mb4 || character_set_filesystem | binary || character_set_results | utf8mb4 || character_set_server | utf8mb4 || character_set_system | utf8 || character_sets_dir | /usr/share/mysql/charsets/ |+--------------------------+----------------------------+8 rows in set (0.00 sec)mysql&gt; ALTER DATABASE apg CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;Query OK, 1 row affected (0.00 sec)mysql&gt; ALTER TABLE apg.member CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;Query OK, 7 rows affected (0.39 sec)Records: 7 Duplicates: 0 Warnings: 0 SHOW VARIABLES LIKE ‘character_set%’;SHOW VARIABLES LIKE ‘collation%’; 更改数据库编码：ALTER DATABASE apg CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;更改表编码：ALTER TABLE apg.member CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci; 查看数据库字符集：select * from information_schema.SCHEMATA where SCHEMA_NAME=’apg’; 查看表字段字符集：select TABLE_SCHEMA,TABLE_NAME,COLUMN_NAME,COLLATION_NAME from information_schema.COLUMNS where TABLE_SCHEMA=’apg’ and TABLE_NAME=’member’; 查看表字符集：select TABLE_SCHEMA,TABLE_NAME,TABLE_COLLATION from information_schema.TABLES where TABLE_SCHEMA=’apg’; 经测试，已经正确存入数据库了，因为取出来的时候是还原了的。只是在查询分析器里查出来是？，在 secureCRT 终端查询出来没有显示。 如果需要显示在页面上，参考：https://www.cnblogs.com/leechenxiang/p/6699724.html","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"Office 2016 系列： office(Word,Excel,PowerPoint)/visio/project 安装并激活","slug":"windows/winOffice2016Active","date":"2018-03-01T16:00:00.000Z","updated":"2020-09-01T02:53:13.118Z","comments":true,"path":"windows/winOffice2016Active.html","link":"","permalink":"https://www.lovesofttech.com/windows/winOffice2016Active.html","excerpt":"完全干净的卸载 office，请参考：卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016）","text":"完全干净的卸载 office，请参考：卸载 Office 2016 遇到的那些坑（完全干净的卸载 Office 2016） 创建批处理脚本文件：active.bat，备用将下列文本另存为 active.bat 文件，编码格式要选：ANSI，否则运行的时候中文会显示乱码。用 notepad 来保存，默认编码就是 ANSi 的。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960@ECHO OFF&amp;PUSHD %~DP0setlocal EnableDelayedExpansion&amp;color 3e &amp; cd /d &quot;%~dp0&quot;title office2016 retail转换vol版%1 %2mshta vbscript:createobject(&quot;shell.application&quot;).shellexecute(&quot;%~s0&quot;,&quot;goto :runas&quot;,&quot;&quot;,&quot;runas&quot;,1)(window.close)&amp;goto :eof:runasif exist &quot;%ProgramFiles%\\Microsoft Office\\Office16\\ospp.vbs&quot; cd /d &quot;%ProgramFiles%\\Microsoft Office\\Office16&quot;if exist &quot;%ProgramFiles(x86)%\\Microsoft Office\\Office16\\ospp.vbs&quot; cd /d &quot;%ProgramFiles(x86)%\\Microsoft Office\\Office16&quot;:WHclsecho.echo 选择需要转化的office版本序号echo.echo -------------------------------------------------------------------------------- echo 1. 零售版 Office Pro Plus 2016 转化为VOL版echo.echo 2. 零售版 Office Visio Pro 2016 转化为VOL版echo.echo 3. 零售版 Office Project Pro 2016 转化为VOL版echo.echo. --------------------------------------------------------------------------------set /p tsk=&quot;请输入需要转化的office版本序号【回车】确认（1-3）: &quot;if not defined tsk goto:errif %tsk%==1 goto:1if %tsk%==2 goto:2if %tsk%==3 goto:3:errgoto:WH:1clsecho 正在安装 KMS 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\proplusvl_kms*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulecho 正在安装 MAK 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\proplusvl_mak*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:2clsecho 正在安装 KMS 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\visio???vl_kms*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulecho 正在安装 MAK 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\visio???vl_mak*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:3clsecho 正在安装 KMS 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\project???vl_kms*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulecho 正在安装 MAK 许可证...for /f %%x in (&apos;dir /b ..\\root\\Licenses16\\project???vl_mak*.xrm-ms&apos;) do cscript ospp.vbs /inslic:&quot;..\\root\\Licenses16\\%%x&quot; &gt;nulset /p y=请输入激活密钥，按回车确定:cscript ospp.vbs /inpkey:%y%goto :e:eecho.echo 转化完成，按任意键退出！pause &gt;nulexit 下载并安装破解工具：KMSpico，备用下载 KMSpico，解压缩，双击文件“kmspico_setup.exe”安装软件；软件安装成功后，如果运行不了，请安装.net4.0组件；再打开 KMSpico 激活工具，点击左下角的红色按纽即可成功激活软件。 安装技巧office 系列产品的ISO文件，载入虚拟光驱之后，一般会询问你要做什么，如果你点了运行根目录的 setup.exe，则会自动运行安装程序，office 2016 版是傻瓜式安装，你没有机会选择安装哪些产品或者组件，几乎是完全安装。 自动安装，会默认安装 win32 版本，至少本文提到的 ISO 文件是这样。以下是我双击光驱目录之后自动运行安装程序的截图，因为我已经安装了64位的，所以会有如图所示的提示： 然而，现在一般都用 64 位操作系统，个人感觉安装 32 位一般也没什么大问题，不过，轻度强迫症的我，找到了安装 64 位版本的方式。在弹出对话框的时候，选择打开文件夹。 或者，进入【我的电脑】，在虚拟光驱盘符点右键-&gt;打开（如果右键的时候要等好久，那么直接在地址栏输入光驱盘符好了，如：e:，然后回车），然后进入 office 目录，会看到有 32 位的和 64 位的安装程序，运行 setup64.exe 即可。 激活office professional plus在 msdn.itellyou.cn 下载(en_office_professional_plus_2016_x86_x64_dvd_6962141.iso)，安装。下面是激活步骤。 先转换为 vol 版本。运行 active.bat，选 1，回车。 最后一步，需要输入激活码，输入：XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99 打开 KMSpico 激活工具，点击左下角的红色按纽即可成功激活软件。激活完成后打开 Word 2016 等系列，提示输入 key，可跳过。 visio 在 msdn.itellyou.cn 下载 visio（en_visio_professional_2016_x86_x64_dvd_6962139.iso），安装。下面是激活步骤。 先转换为 vol 版本。运行 active.bat，选 2，回车。 最后一步，需要输入激活码，输入：W9WC2-JN9W2-H4CBV-24QR7-M4HB8 打开 KMSpico 激活工具，点击左下角的红色按纽即可成功激活软件。激活完成后打开 Visio 2016，提示输入 key，可跳过。 project 在 msdn.itellyou.cn 下载 visio（en_project_professional_2016_x86_x64_dvd_6962236.iso），安装。下面是激活步骤。 先转换为 vol 版本。运行 active.bat，选 3，回车。 最后一步，需要输入激活码，输入：YG9NW-3K39V-2T3HJ-93F3Q-G83KT 打开 KMSpico 激活工具，点击左下角的红色按纽即可成功激活软件。激活完成后打开 project 2016，提示输入 key，可跳过。 office2016各版本激活密钥大全参考：office2016永久免费激活码-office2016所有版本密钥 Office Professional Plus 2016：XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99 Office Standard 2016：JNRGM-WHDWX-FJJG3-K47QV-DRTFM Pro1. ject Professional 2016：YG9NW-3K39V-2T3HJ-93F3Q-G83KT Project Standard 2016：GNFHQ-F6YQM-KQDGJ-327XX-KQBVC Visio Professional 2016：PD3-PC-RHNGV-FXJ29-8JK7D-RJRJK Visio Standard 2016：7WHWM-4T7MP-G96JF-G33KR-W8GF4 Access 2016：GNH9Y-D2J4T-FJHGG-QRVH7-QPFDW Excel 2016：9C2PK-NWTVB-JMPW8-BFT28-7FTBF OneNote 2016：DR92N-9HTF2-97XKM-XW2WJ-XW3J6 Outlook 2016：R69KK-NTPKF-7M3Q4-QYBHW-6MT9B PowerPoint 2016：J7MQP-HNJ4Y-WJ7YM-PFYGF-BY6C6 Publisher 2016：F47MM-N3XJP-TQXJ9-BP99D-8K837 SKype for Business 2016：869NQ-FJ69K-466HW-QYCP2-DDBV6 word 2016：WXY84-JN2Q9-RBCCQ-3Q3J3-3PFJ6","categories":[{"name":"office","slug":"office","permalink":"https://www.lovesofttech.com/categories/office/"}],"tags":[{"name":"office","slug":"office","permalink":"https://www.lovesofttech.com/tags/office/"}]},{"title":"分享正能量——《肖申克的救赎》","slug":"dailyLives/shawshank","date":"2018-02-07T16:00:00.000Z","updated":"2020-09-01T02:53:12.912Z","comments":true,"path":"dailyLives/shawshank.html","link":"","permalink":"https://www.lovesofttech.com/dailyLives/shawshank.html","excerpt":"《肖申克的救赎》读后感 + 经典台词欣赏分享。","text":"《肖申克的救赎》读后感 + 经典台词欣赏分享。我看过好多遍《肖申克的救赎》，每看一遍都会被剧中主人公安迪不屈不挠追求自由的行为所感动。看到“安迪”这两个字，想起片中的主人公安迪，我就能感受到满满的正能量！ 这是一部震撼心灵的经典之作，包含着深刻的人生哲学。作者成功塑造了一个在逆境中创造奇迹的人物形象，他带给我们精神震撼的同时也给了我们深刻的启示：当个人遭受苦难时，要努力保存自己的尊严，心存信念，充满希望，并积极的采取行动，这就是得救之道，亦即救赎。 安迪虽然身在监狱，一个强制剥夺自由、高度强调纪律的地方，但是，他的的灵魂一直是自由的。他说，不要忘了这个世界上还有可以穿透一切高墙的东西，它就在我们的内心深处，他们（这里的“他们”，应该指的是监狱里的那些狱警）无法达到，也触摸不到，那就是希望。 而瑞德却说，希望是危险的东西，是精神苦闷的根源。在重重挤压之下的牢狱里待了30年的瑞德，的确有资格这么说。因为从进监狱的那一天起，狱长就说过，“把灵魂交给上帝，把身体交给我。”除了他能弄来的香烟和印着裸女的扑克牌，任何其他异动在这个黑暗的高墙之内似乎都无法生长。 然而安迪告诉他，“记住，希望是好事——甚至也许是人间至善。而美好的事物永不消失。” 于是，安迪用二十年挖开瑞德认为六百年都无法凿穿的隧洞。当安迪终于爬出五百码恶臭的污水管道，站在瓢泼大雨中情不自禁的时候，我们仿佛看到信念刺穿重重黑幕，在暗夜中打了一道夺目霹雳。亮光之下，我们懦弱的灵魂纷纷在安迪张开的双臂下现形，并且颤抖。 庸常生活里的我们，似乎已经习惯了按部就班，习惯了先说“那不可能”，习惯了没有奇迹，习惯了身边发生着的一切。可是正如《飞越疯人院》（One Flew over the Cuckcoo’s Nest）中说的那样，“不试试，怎么知道呢？” 追求精神自由影片中有这样一个场景，安迪从监狱图书馆里翻到了一张唱片，他把自己反锁在肖申克大牢的播音室里，用扩音喇叭播放着这张唱片。高亢的女高音穿云裂帛，久被牢狱禁锢的人们呆住了。他们可能不知这是什么音乐，可是却从中感受到了美与自由。人们抬头望着碧蓝无垠的天空，美好的情愫随美妙的音韵四处飘荡，镜头缓缓升起，所有的囚犯就在广场上那么专注，那么深情地抬头仰望，没有十恶不赦的罪犯，没有暴虐无行的狱警，人们复归平等与和睦，人们找到生命生存的极致和本源，安迪也幸福地仰坐在椅子上闭目静听沉醉其中。即使典狱长的到来也没能阻止安迪，最后安迪乱放音乐的代价是禁闭两个星期。狱友问安迪为什么这么做？安迪指指脑袋回答：有音乐就有自由。 主人公安迪有着一颗非常坚强的心，更有着坚毅的信念和永恒不变的对自由的向往追求。无论是狱中的恶劣的生活环境、孤独寂寞的精神折磨，还是时间的消磨都未曾让他放弃过追求自由的信念。片中典狱长曾对他说：“把你的信念交给圣经，把你的贱命交给我”，而安迪一直坚信救赎之法就在其中，他把信念交给了非形式化的圣经，其表现的一种精神上给予万物的救赎，就是靠一把别人眼里要凿六百年的锤子，凿通了整堵墙面，挖出了一条隧道通向自由。但是他并没有急于逃离，相信机会有很多，但是他留了下来是为了给整个沙堡的每个人带来一点精神上的东西，那就是希望，通过帮助别人通过考试，图书馆，等等无不看出他所做的努力。 或许你可以禁锢我的躯体，但你不可能给我的灵魂套上枷锁，它向往自由，怀揣这梦想是你永远无法毁灭的，其实影片不在于他的布局越狱有多精密，他有多智慧，而是这些表层之后的东西，即一个人为了自由的活着，为了给人带来希望所能迸发出来的勇气和忍耐。 对于一个人来说，实际空间上的大小并非所谓自由的定义，真正的自由在你的心里，在于你敢去想敢有梦，有了希望就有你生存的空间，所以对于安迪来说心灵的自由让他无论身处何地都有追求的动力。而像老布，即使出了狱，但是长时间的囚禁让他彻底的绝望——那是用了一个人大半辈子的时间换来的绝望，一切服从制度，不再敢想，甚至不再有自己的想法。没有了梦想没有了追求没有了希望，这样的人即使已不禁锢住你的身躯，也已经没有了灵魂，所以他的心难以得到真正的救赎。 用信念支撑希望安迪是一个有着独特的人性光辉和魅力的形象。他沉默寡言，但沉默的外表下有一颗永不妥协的、一颗永不熄灭的希望之心。他是一个智者，看似柔弱的外表下，有一颗非常清醒的头脑。暗地里凿穿密道功成身退的鹤嘴锄，那本暗藏得救之道的圣经，所要告诉我们的是心存希望不懈努力，就能达成梦想， 日复一日，年复一年，无罪的安迪最后终于冲破了海华丝身后的那座三四米厚的高大迷墙。安迪的肉体和灵魂一起，终于在肖申克救赎了，救赎并不是从天而降的，而是安迪一毫米，一毫米地挖出来的。我们终于明白，人的心灵始终要有一种东西支撑，才能任凭风吹雨打、才能如磐石般纹丝不动，那就是——信念！有了它生命才有高度。安迪告诉我们有了信念，人们的精神就有了寄托，行动也有了意义，这样的生命体自会燃烧出勇气和希望。信念有时虽然只是一个简单的目标，但只要做到始终如一，它便成了力量的最高形式无往不胜。 这世上，有太多的不顺心，太多的困难，在很多绝望的时候，我们缺少的也许就是两个字——希望。而这两个字一直存在于安迪的脑海里，一直激励着他，将他慢慢地推向自由的边缘。他比别人承受了太多太多，他的那颗心早已被岁月打磨得越来越沧桑，他却始终心存信念和希望。安迪说过：“不要忘了这个世界上还有可以穿透一切高墙的东西，它就在我们的内心深处，他们无法达到，也触摸不到，那就是希望。” 安迪入狱后，尽管无力改变犯人受压迫受凌辱的事实，但他却至少带来了希望，这希望在于对恶势力坚决的反抗，在于牢房中充满生活情趣的雕刻，在于冒着生命的危险为同伴争取一个自由自在地喝酒的机会，在于他宁可得罪典狱长和狱警也要让囚犯感受音乐中的美好与自由，在于他数年努力最终建成最好的监狱图书室，在于他二十年坚持不懈地挖洞逃生，在于他通过约定避免瑞德重蹈老布的覆辙，我们不得不说安迪就是希望的化身，这一切告诉我们，不管在任何地方，只要在心里还有最后的一点希望，那就值得活下去，否则，安于麻木的现实也就同死亡没有什么区别了。 毅力铸造成功为寻求图书馆的资助，连续七年每周写一封信给州议会，每星期一封信，安迪写了六年，然后是每星期两封，从未间断，目的就是为了沙堡监狱建图书馆的事，然而他的恒心与毅力也终于帮助沙堡监狱建成了图书馆。用小锥子挖隧道挖了十九年，然而这十九年他却始终默默无闻，没人知道他在酝酿一个大工程，直到安迪成功的逃出监狱，人们才感叹他卧薪藏胆的毅力。在下水道的恶臭里爬行500码的距离，最终逃出鲨堡监狱，他的毅力注定了他即使在监狱里也能创造出属于自己的成功。只要他想离开，监狱是无论如何关不住他的。 人生中总是有太多太多的坎坷，一开始也许我们有足够的热情来解决各种问题，但是一旦需要长期坚持，败下阵来的人十之八九，行百里者半九十，一点点坎坷足以打败大多数人的热情，因而真正能走向成功的人只有少数，毅力，是成功的根本，而安迪就为我们很好的诠释了这一点。 永远不变的友谊安迪和瑞德在狱中相识，由一开始的陌生到最后成为了朋友，瑞德为安迪提供他逃离沙堡监狱的必备工具，平日里他们会聚在一起谈心，最后安迪在计划逃离沙堡监狱后，与瑞德口头约定，有朝一日能走出监狱一定要去找到他送给他的东西，并且在此期间为瑞德寄了明信片，直到影片最后瑞德找到安迪留给他的东西后，观众才发现，安迪留给瑞德的不是价值不菲的宝石，而是他们千年不变的友谊。 最后当安迪和瑞德在洒满阳光的沙滩上重逢时，镜头把绝大部分的画面给了那片平静安谧的海，在蓝天碧海之间，阳光撒满沙滩，安迪带着幸福自由的笑容迎接老朋友的到来，可以想象经历了几十年监狱生活的两人，再回到海阔天空的世界里时是怎样的心情。就在这个没有回忆的海洋边，生命的大意已经阐明：坦然地面对今天的太阳，微笑地迎接明天的生活。 安迪是睿智的，即使他并没有把他的计划告诉他的好朋友，但是他还是在临离开之前为自己的好友也制定好了他们日后重逢的计划，在安迪的眼中，这个在狱中相遇的朋友瑞德是值得他一生守护的朋友。 感动安迪让我们心中有一种畅快淋漓的感动，那是一种正义战胜邪恶、自由战胜牢笼、智慧战胜贪婪、希望战胜绝望的感动，那是一种挑战人生的感动，是一种看重友谊的感动。 感动之余是深思，当我们遭受无法忍受的痛苦与磨难时，只有充满智慧的思想才能指点方向、拯救人生。“记住，希望是好事——甚至也许是人间至善。而美好的事物永不消失。” 心存仁慈、胸怀希望让我们心存仁慈、胸怀希望，以平常之心去对待所有对我们公平或者不公平的事情，不管我们遇到的是一种什么样的状况，我们总能泰然处之并且找到通往救赎的天堂之路。 本文关于电影《肖申克的救赎》的参考资料部分内容参考了下面两篇文章。根据自己的理解，有修改。 百度文库：《肖申克的救赎》中安迪的性格分析 豆瓣影评：大头绿豆 《肖申克的救赎》经典台词欣赏 forget that there are … place … in the world that are not made out of stone, there is something … inside … that they can not get to … that is hope不要忘了这个世界上还有可以穿透一切高墙的东西，它就在我们的内心深处，他们无法达到，也触摸不到，那就是希望。 Remember, Hope is a good thing, maybe the best of things and no good thing ever dies！希望是美好的，也许是人间至善，而美好的事物永不消逝。 I guess it comes down to a simple choice: get busy living or get busy dying.生活可以归结为一种简单的选择：不是忙于真正的生活，就是一步步地走向死亡。 Fear can hold you prisoner, hope can set you free. A strong man can save himself, a great man can save another.懦怯囚禁人的灵魂，希望可以令你感受自由。强者自救，圣者渡人。 Prison life consists of routine, and then more routine.监狱生活充满了一段又一段的例行公事。 These walls are kind of funny like that. First you hate them, then you get used to them. Enough time passed, get so you depend on them. That’s institutionalized.监狱里的高墙实在是很有趣。刚入狱的时候，你痛恨周围的高墙；慢慢地，你习惯了生活在其中；最终你会发现自己不得不依靠它而生存。这就是体制化。 It takes a strong man to save himself, and a great man to save another.坚强的人只能救赎自己，伟大的人才能拯救他人。 I have to remind myself that some birds are’t meant to be caged. Their feathers are just too bright. And when they fly away, the part of you that knows it was a sin to lock hem up DOES rejoice. Still, the place you live in is that much more drab and empty that they’re gone. I guess I just miss my friend.我不得不提醒自己有些鸟是不能关在笼子里的，他们的羽毛太漂亮了，当他们飞走的时候。..你会觉得把他们关起来是种罪恶，但是，他们不在了你会感到寂寞，可是我只是想我的朋友了。.. I find I’m so excited. I can barely sit still or hold a thought in my head. I think it the excitement only a free man can feel, a free man at the start of a long journey whose conclusion is uncertain. I hope I can make it across the border, I hope to see my friend, and shake his hand. I hope the Pacific is as blue as it has been in my dreams. I hope.我发现自己是如此的激动，以至于不能静静地坐下来思考，我想只有那些重获自由即将踏上新征程的人们才能感受到这种即将揭开未来神秘面纱的激动心情。我希望跨越千山万水握住朋友的手；我希望太平洋的海水如同梦中的一样蓝；我希望。..。.. There’s not a day goes by I don’t feel regret. Not because I’m in here, or because you think I should. I look back on the way I was then. Then a young, stupid kid who committed that terrible crime. I want to talk to him. I want to try and talk some sense to him, tell him the way things are. But I can’t. That kid’s long gone and this old man is all that’s left. I got to live with that. Rehabilitated? It’s just a bull … word. So you go on and stamp your form, sonny, and stop wasting my time. Because to tell you the truth, I don’t give a ….我无时无刻不对自己的所作所为深感内疚， 这不是因为我在这里 （监狱），也不是讨好你们（假释官）。回首曾经走过的弯路，我多么想对那个犯下重罪的愚蠢的年轻人说些什么，告诉他我现在的感受，告诉他还可以有其他的方式解决问题。可是，我做不到了。那个年轻人早已淹没在岁月的长河里，只留下一个老人孤独地面对过去。重新做人？骗人罢了！小子，别再浪费我的时间了，盖你的章吧，我没有什么可说的了。 Red: Let me tell you something my friend: Hope is a dangerous thing. Hope can drive a man insane.瑞德：听我说，朋友，希望是件危险的事。希望能叫人发疯 Red narrating: I have no idea to this day what those two Italian ladies were singing about. Truth is, I don’t want to know. Some things are better left unsaid. I’d like to think they were singing about something so beautiful it can’t expressed in words and it makes you heartache because of it I tell you, those voices soared higher and farther than anybody in a great place dares to dream. It was as if some beautiful bird had flapped into our drab little cage an d made these walls dissolve away, and for the briefest of moments, every last man is Shawshank felt free.瑞德旁白：到今天我还不知道那两个意大利娘们在唱些什么，其实，我也不想知道。有 些东西还是留着不说为妙。我像她们该是在唱一些非常美妙动人的故事，美妙得难以用言语来表达，美妙的让你心痛。告诉你吧，这些声音直插云霄，飞得比任何一个人敢想的梦 还要遥远。就像一些美丽的鸟儿扑扇着翅膀来到我们褐色牢笼，让那些墙壁消失得无影无踪。就在那一刹那，鲨堡监狱的每一个人都感到了自由。 (On playing opera records in the prison)Andy Dufresne: Here’s where it makes the most sense. You need it so you don’t forget. Forget that there are palace in the world that aren’t made out of stone That there’s a—there’s a—there’s something inside that’s yours, that they can’t touch.（在监狱里放歌剧唱片）安迪.杜德兰：这就是意义所在。你需要它，就好像自己不要忘记。忘记世上还有不是用石头围起来的地方。忘记自己的内心还有你自己的东西，他们碰不到的东西。 Andy Dufresne: That’s the beauty of music. They can’t take that away from you.安迪.杜德兰：这就是音乐的美丽。他们无法把这种美丽从你那里夺去。 Red narrating: We sat and drank with the sun on our shoulders and felt like freemen…, we could have been tarring the roof of one of our own houses. We were the lords of all creation. As for Andy—-he spent that break hunkered in the shade, a strange little smile on his face watching us drink his beer.瑞德话外音：我们坐在太阳下，感觉就像自由人。见鬼，我好像就是在修自己家的房顶。我们是创造的主人。而安迪——他在这间歇中蹲在绿荫下，一丝奇特的微笑挂在脸上，看着我们喝他的啤酒。 Red narrating: You could argue he’d done it to curry favor with the guards. Or, maybe make a few friends among us cons. Me, I think he did it just to feel normal again, if only for a short while.瑞德旁白：你会说他做这些是为了讨好看守。或者也许是为了同我们搞好关系。而我则认为他只是为了再度体验一下正常人的感觉，哪怕只是为了短短的片刻。 Norton: Pleased to see you reading this. Any favorite passages? Andy: Watch ye, therefore, for ye know not when the master of the house cometh. Norton: Mark 13:35. I’ve always liked that one. But I prefer “I am the light of the world. He that followeth me shall have the light of life. Andy: John, chapter 8, verse 12. 诺顿：很高兴看到你在读它，喜欢哪段？ 安迪：所以汝当警醒，因不知屋主何时到来。 诺顿：路可福音，第13章35节。我一直很喜欢这段。但我更喜欢。“我是世界之光，跟随我的人不会行于黑暗，还会拥有生命之光”。 安迪：约翰福音，第八章12节。","categories":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/categories/dailyLives/"}],"tags":[{"name":"dailyLives","slug":"dailyLives","permalink":"https://www.lovesofttech.com/tags/dailyLives/"}]},{"title":"CentOS7 安装 Nginx 并设置开机自启动","slug":"lnmp/centOS7Nginx","date":"2018-02-07T16:00:00.000Z","updated":"2020-09-07T03:58:56.017Z","comments":true,"path":"lnmp/centOS7Nginx.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/centOS7Nginx.html","excerpt":"如题","text":"如题 down nginx Stable version12[root@jdu4e00u53f7 soft]# wget https://nginx.org/download/nginx-1.12.2.tar.gz[root@jdu4e00u53f7 soft]# tar -xzvf nginx-1.12.2.tar.gz 下载最新版本，请查看官网：https://nginx.org/记得需要下载源码版本，即 .tar.gz 版本，而不是针对 windows 的 .zip 版本。 安装依赖1yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel 编译依赖 gcc 环境 PCRE(Perl Compatible Regular Expressions) 是一个Perl库，包括 perl 兼容的正则表达式库。nginx 的 http 模块使用 pcre 来解析正则表达式，所以需要在 linux 上安装 pcre 库，pcre-devel 是使用 pcre 开发的一个二次开发库。nginx也需要此库。 zlib 库提供了很多种压缩和解压缩的方式， nginx 使用 zlib 对 http 包的内容进行 gzip ，所以需要在 Centos 上安装 zlib 库。 OpenSSL 是一个强大的安全套接字层密码库，囊括主要的密码算法、常用的密钥和证书封装管理功能及 SSL 协议，并提供丰富的应用程序供测试或其它目的使用。 nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http），所以需要在 Centos 安装 OpenSSL 库。 安装依赖时可能会遇到冲突 2019-03-31 追加提示：12Protected multilib versions: pcre-8.32-17.el7.x86_64 != pcre-8.32-15.el7_2.1.i686Error: Protected multilib versions: zlib-1.2.7-18.el7.x86_64 != zlib-1.2.7-15.el7.i686 解决加参数 --setopt=protected_multilib=false1yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel --setopt=protected_multilib=false ./configure123456789# tar -xzvf nginx-1.14.0.tar.gz# cd nginx-1.14.0[root@jdu4e00u53f7 nginx-1.12.2]# ./configurechecking for OS + Linux 3.10.0-514.el7.x86_64 x86_64checking for C compiler ... found + using GNU C compiler + gcc version: 4.8.5 20150623 (Red Hat 4.8.5-16) (GCC) ... 为了支持 ssl 需要如此安装1234./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_realip_modulenginx 站点配置rewrite ^(.*)$ https://$host$1 permanent; #用于将http页面重定向到https页面 make123[root@jdu4e00u53f7 nginx-1.12.2]# make &amp;&amp; make install...make[1]: Leaving directory `/soft/nginx-1.12.2&apos; 查看安装目录12[root@jdu4e00u53f7 nginx-1.12.2]# whereis nginxnginx: /usr/local/nginx 修改 nginx 配置文件12345678910mkdir -p /usr/local/nginx/vhostsvi /usr/local/nginx/conf/nginx.conf#user nobody;#改为：user root;# 在最后一行 &quot;&#125;&quot; 前面添加：# include ../vhosts/*.conf; # 相对路径include /usr/local/nginx/vhosts/*.conf; # 用全路径 配置站点vim /usr/local/nginx/vhosts/web.conf123456789101112server &#123; listen 80; server_name kq.saleonline.top; charset utf-8; access_log logs/kq.saleonline.top.access.log; error_log logs/kq.saleonline.top.error.log; location / &#123; root /soft-app/defaultsite/; index index.html; &#125;&#125; 启动以 root 身份操作，下同。1/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf 检查配置是否正确1/usr/local/nginx/sbin/nginx -t 重启 nginx（重新加载配置文件）1/usr/local/nginx/sbin/nginx -s reload 停止 nginx，快速关闭1/usr/local/nginx/sbin/nginx -s stop 停止 nginx，优雅的关闭1/usr/local/nginx/sbin/nginx -s quit 重启日志文件1/usr/local/nginx/sbin/nginx -s reopen 开机启动编辑服务文件1vim /lib/systemd/system/nginx.service 内容如下12345678910111213[Unit]Description=nginxAfter=network.target [Service]Type=forkingExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.confExecReload=/usr/local/nginx/sbin/nginx -s reloadExecStop=/usr/local/nginx/sbin/nginx -s quitPrivateTmp=true [Install]WantedBy=multi-user.target 设置开机启动12[root@AndyCentOS7Basic ~]# systemctl enable nginx.serviceCreated symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service. 常用命令设置 nginx 开机启动1systemctl enable nginx.service 停止开机自启动1systemctl disable nginx.service 启动 nginx 服务1systemctl start nginx.service 查看服务当前状态1systemctl status nginx.service 重新启动服务1systemctl restart nginx.service 查看所有已启动的服务1systemctl list-units --type=service 权限问题12018/05/02 15:06:32 [error] 8541#0: *15 &quot;/home/unginx/apps/dz/index.php&quot; is forbidden (13: Permission denied), client: 117.139.199.91, server: club.aipeigo.com, request: &quot;GET / HTTP/1.1&quot;, host: &quot;club.aipeigo.com&quot; 修改 nginx 启动用户按如下操作：12345vim /usr/local/nginx/conf/nginx.conf#user nobody;#改为：user root; 301 302 重定向30112345server &#123; listen 80; server_name aipeigo.com www.aipeigo.com; rewrite ^(.*)$ http://www.hellojiazhang.com$1 permanent;&#125; 30212345server &#123; listen 80; server_name www.hellojiazhang.net hellojiazhang.net; rewrite ^/(.*) http://www.hellojiazhang.com$1 redirect;&#125; 测试 301 重定向是否成功1234567891011121314151617[root@izwz97mqm1h3u2vxe4kesjz siteConfigs]# curl -I aipeigo.comHTTP/1.1 301 Moved PermanentlyServer: nginx/1.12.2Date: Thu, 28 Jun 2018 06:33:55 GMTContent-Type: text/htmlContent-Length: 185Connection: keep-aliveLocation: http://www.hellojiazhang.com/[root@izwz97mqm1h3u2vxe4kesjz siteConfigs]# curl -I www.aipeigo.comHTTP/1.1 301 Moved PermanentlyServer: nginx/1.12.2Date: Thu, 28 Jun 2018 06:34:07 GMTContent-Type: text/htmlContent-Length: 185Connection: keep-aliveLocation: http://www.hellojiazhang.com/ 也可以直接访问需要重定向的域名，成功之后会跳转至新域名。还可以在站长工具上做测试：站长工具 &gt; HTTP状态查询 查看 nginx 版本12[utomcat@centOS7BasicForTest ~]$ /usr/local/nginx/sbin/nginx -vnginx version: nginx/1.14.0 设置超时时间123456789101112131415161718server &#123; listen 80; server_name domain.com; charset utf-8; access_log logs/domain.com.access.log; error_log logs/domain.com.error.log; root /appHome/; index index.php; location ~ [^/].php(/|$) &#123; fastcgi_pass unix:/tmp/php-cgi.sock; fastcgi_index index.php; include fastcgi.conf; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; &#125;&#125; 配置使用 IP 地址访问时的默认站点只需要在 listen 80 后添加 default，如：1234567891011121314151617181920212223242526272829server &#123; listen 80 default; # gzip config gzip on; gzip_min_length 1k; gzip_comp_level 9; gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png; gzip_vary on; gzip_disable &quot;MSIE [1-6]\\.&quot;; server_name dev.mis.com; charset utf-8; access_log logs/dev.mis.com.access.log; error_log logs/dev.mis.com.error.log; root /home/utomcat/apps/dev/frontend; location / &#123; index index.html; # 用于配合 browserHistory使用 try_files $uri $uri/ /index.html; &#125; location /api &#123; proxy_pass http://localhost:8080/api; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; &#125;&#125; 以上是以 ant design pro 为模板开发的一个项目打包后的网站配置文件。 默认站点只允许设置一个否则重新启动会报错12[root@localhost vhosts]# /usr/local/nginx/sbin/nginx -s reloadnginx: [emerg] a duplicate default server for 0.0.0.0:80 in /usr/local/nginx/vhosts/web-dev.conf:2 检查配置也会提示相应错误信息：123[root@localhost vhosts]# /usr/local/nginx/sbin/nginx -tnginx: [emerg] a duplicate default server for 0.0.0.0:80 in /usr/local/nginx/vhosts/web-dev.conf:2nginx: configuration file /usr/local/nginx/conf/nginx.conf test failed","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"nginx","slug":"CentOS/nginx","permalink":"https://www.lovesofttech.com/categories/CentOS/nginx/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"在 CentOS7 上安装 JIRA 手记","slug":"linux/centOSJIRA","date":"2018-01-15T16:00:00.000Z","updated":"2020-09-01T02:53:13.034Z","comments":true,"path":"linux/centOSJIRA.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSJIRA.html","excerpt":"如题","text":"如题 JIRA Software是 Atlassian公司开发的课题管理工具（项目管理工具）。 通过高度的自定义性，不仅是bug管理工具，还有任务管理，工数管理，进度管理，日程管理等整个项目的管理。统一管理多个项目的进度和任务。 JIRA Software 是整合旧JIRA和旧JIRA Agile的敏捷开发工具。不是敏捷开发方面的熟手也可以很快上手。 JIRA Software 可以很方便的实现团队任务的可视化。 通过操作Scrum板、看板。 参考链接 Jira 官方网站 基于JIRA的Scrum敏捷开发的项目管理 JIRA - 使用指南(项目跟踪管理工具) 初识Atlassian downloading Jira Software Server Administering JIRA applications 7.5 敏捷团队专用的开发工具 管理 My Atlassian 安装参考 烂泥：jira7.3/7.2安装、中文及破解(20170829更新) 正式安装卸载旧版，如果有的话备份旧版数据，然后删除数据库并重建。1rm -rf /var/atlassian/ /opt/atlassian/ /etc/init.d/jira 环境准备jira 的运行是依赖java环境的，也就是说需要安装 jdk，本文安装的是 7.5.2，需要安装 1.8 以上的 jdk 版本除此之外，我们还需要为 jira 创建对应的数据库、用户名和密码，如下：123456789mysql -uroot -p&apos;password&apos;mysql&gt; create schema if not exists jira default character set utf8mb4;Query OK, 1 row affected (0.00 sec)mysql&gt; grant all on jira.* to &apos;jira&apos;@&apos;%&apos; identified by &apos;jiraSoftPWD&apos;;Query OK, 0 rows affected (0.00 sec)mysql&gt; FLUSH PRIVILEGES;Query OK, 0 rows affected (0.00 sec) 安装以下安装过程，一路回车，用默认设置即可。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152[root@192 ~]# chmod 755 atlassian-jira-software-7.5.2-x64.bin [root@192 ~]# ./atlassian-jira-software-7.5.2-x64.bin Unpacking JRE ...Starting Installer ...Nov 12, 2017 3:07:51 PM java.util.prefs.FileSystemPreferences$2 runINFO: Created system preferences directory in java.home.This will install JIRA Software 7.5.2 on your computer.OK [o, Enter], Cancel [c]Choose the appropriate installation or upgrade option.Please choose one of the following:Express Install (use default settings) [1], Custom Install (recommended for advanced users) [2, Enter], Upgrade an existing JIRA installation [3]Where should JIRA Software be installed?[/opt/atlassian/jira]Default location for JIRA Software data[/var/atlassian/application-data/jira]Configure which ports JIRA Software will use.JIRA requires two TCP ports that are not being used by any otherapplications on this machine. The HTTP port is where you will access JIRAthrough your browser. The Control port is used to startup and shutdown JIRA.Use default ports (HTTP: 8080, Control: 8005) - Recommended [1, Enter], Set custom value for HTTP and Control ports [2]JIRA can be run in the background.You may choose to run JIRA as a service, which means it will startautomatically whenever the computer restarts.Install JIRA as Service?Yes [y, Enter], No [n]Details on where JIRA Software will be installed and the settings that will be used.Installation Directory: /opt/atlassian/jira Home Directory: /var/atlassian/application-data/jira HTTP Port: 8080 RMI Port: 8005 Install as service: Yes Install [i, Enter], Exit [e]Extracting files ...Please wait a few moments while JIRA Software is configured.Installation of JIRA Software 7.5.2 is completeStart JIRA Software 7.5.2 now?Yes [y, Enter], No [n]nInstallation of JIRA Software 7.5.2 is completeYour installation of JIRA Software 7.5.2 is now ready.Finishing installation ...[root@192 ~]# 复制破解文件（如果下载不到，请留言）把破解包里面的 atlassian-extras-3.1.2.jar 和 mysql-connector-java-5.1.39-bin.jar 两个文件复制到 /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/目录下。其中 atlassian-extras-3.1.2.jar 是用来替换原来的 atlassian-extras-3.1.2.jar 文件，用作破解 jira 系统的。而 mysql-connector-java-5.1.39-bin.jar 是用来连接 mysql 数据库的驱动软件包。因为我们没有正式的 license，所以需要我们在 jira 官网注册一个账号，然后利用这个账号申请一个可以试用 30 天的 license 启动 jira12345678910111213141516171819202122232425262728293031323334353637[root@192 jira]# service jira startTo run JIRA in the foreground, start the server with start-jira.sh -fgexecuting using dedicated user: jira1 ..... .... .NMMMD. ... .8MMM. $MMN,..~MMMO. .?MMM. .MMM?. OMMMMZ. .,NMMMN~ .IMMMMMM. .NMMMN. .MMMMMN, ,MMMMMM$..3MD..ZMMMMMM. =NMMMMMM,. .,MMMMMMD. .MMMMMMMM8MMMMMMM, .ONMMMMMMMMMMZ. ,NMMMMMMM8. .:,.$MMMMMMM .IMMMM..NMMMMMD. .8MMMMM: :NMMMMN. .MMMMMM. .MMMMM~. .MMMMMN .MMMMM?. Atlassian JIRA Version : 7.5.2 If you encounter issues starting or stopping JIRA, please see the Troubleshooting guide at http://confluence.atlassian.com/display/JIRA/Installation+Troubleshooting+GuideServer startup logs are located in /opt/atlassian/jira/logs/catalina.outUsing CATALINA_BASE: /opt/atlassian/jiraUsing CATALINA_HOME: /opt/atlassian/jiraUsing CATALINA_TMPDIR: /opt/atlassian/jira/tempUsing JRE_HOME: /opt/atlassian/jira/jre/Using CLASSPATH: /opt/atlassian/jira/bin/bootstrap.jar:/opt/atlassian/jira/bin/tomcat-juli.jarUsing CATALINA_PID: /opt/atlassian/jira/work/catalina.pidTomcat started.[root@192 jira]# 访问jira 的 web 服务器用的是 tomcat，其配置文件存放在 /opt/atlassian/jira/conf/server.xml 文件，默认端口是 8080。 浏览器输入：IP:8080用 chrome 访问，出于安全考虑，强制在 http 后加上了 s，就成了 https:IP:8080这样访问了，于是报错：1234567891011121312-Nov-2017 15:20:52.406 INFO [http-nio-8080-exec-2] org.apache.coyote.http11.Http11Processor.service Error parsing HTTP request header Note: further occurrences of HTTP header parsing errors will be logged at DEBUG level. java.lang.IllegalArgumentException: Invalid character found in method name. HTTP method names must be tokens at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:462) at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:667) at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802) at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410) at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:745) 换一个不加 s 的浏览器访问就 OK 了。 常用脚本123cd /opt/atlassian/jira/logs/&gt; /opt/atlassian/jira/logs/catalina.outtail -f /opt/atlassian/jira/logs/catalina.out 为 jira 配置域名用 nginx 反向代理达到访问 jira (用的 tomcat 作为 web 服务器) 的默认端口应用程序时，域名不加端口 8080，对外就象是使用默认的 80 端口一样12cd /usr/local/nginx/vhostsvim jira.conf 内容如下1234567891011121314server &#123; listen 80; server_name jira.domain.com; charset utf-8; access_log /opt/atlassian/jira/logs/jira.domain.com.access.log; error_log /opt/atlassian/jira/logs/jira.domain.com.error.log; location / &#123; proxy_pass http://localhost:8080; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; 使配置生效1/usr/local/nginx/sbin/nginx -s reload 局域网设置域名指向设置从 hosts 设置的域名访问时，如果是二级域名，用 chrome/firefox/edge 访问时，会强制用 https 访问，改成一级域名可避免这个问题。 java.net.UnknownHostException: jira.domain.com12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152java.net.UnknownHostException: ybdjira.com at java.net.InetAddress.getAllByName0(InetAddress.java:1280) at java.net.InetAddress.getAllByName(InetAddress.java:1192) at java.net.InetAddress.getAllByName(InetAddress.java:1126) at org.apache.http.impl.conn.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45) at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:112) at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:359) at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:381) at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:237) at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185) at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:111) at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83) at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108) at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) at com.atlassian.gadgets.renderer.internal.http.HttpClientFetcher.fetch(HttpClientFetcher.java:87) at org.apache.shindig.gadgets.http.ContentFetcherFactory.fetch(ContentFetcherFactory.java:50) at com.atlassian.gadgets.renderer.internal.http.TrustedAppContentFetcherFactory.fetch(TrustedAppContentFetcherFactory.java:44) at org.apache.shindig.gadgets.servlet.MakeRequestHandler.fetch(MakeRequestHandler.java:84) at org.apache.shindig.gadgets.servlet.MakeRequestServlet.doGet(MakeRequestServlet.java:55) at com.atlassian.gadgets.shindig.servlet.XsrfMakeRequestServlet.doGet(XsrfMakeRequestServlet.java:24) at org.apache.shindig.gadgets.servlet.MakeRequestServlet.doPost(MakeRequestServlet.java:65) at com.atlassian.gadgets.shindig.servlet.XsrfMakeRequestServlet.doPost(XsrfMakeRequestServlet.java:37) at javax.servlet.http.HttpServlet.service(HttpServlet.java:648) at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) at com.atlassian.plugin.servlet.DelegatingPluginServlet.service(DelegatingPluginServlet.java:37) at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) at com.atlassian.plugin.servlet.ServletModuleContainerServlet.service(ServletModuleContainerServlet.java:45) at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) ... 57 filtered at org.apache.shindig.auth.AuthenticationServletFilter.callChain(AuthenticationServletFilter.java:123) at org.apache.shindig.auth.AuthenticationServletFilter.doFilter(AuthenticationServletFilter.java:86) ... 3 filtered at com.atlassian.web.servlet.plugin.request.RedirectInterceptingFilter.doFilter(RedirectInterceptingFilter.java:21) ... 58 filtered at com.atlassian.jira.security.JiraSecurityFilter.lambda$doFilter$0(JiraSecurityFilter.java:66) ... 1 filtered at com.atlassian.jira.security.JiraSecurityFilter.doFilter(JiraSecurityFilter.java:64) ... 36 filtered at com.atlassian.jira.servermetrics.CorrelationIdPopulatorFilter.doFilter(CorrelationIdPopulatorFilter.java:30) ... 10 filtered at com.atlassian.web.servlet.plugin.request.RedirectInterceptingFilter.doFilter(RedirectInterceptingFilter.java:21) ... 4 filtered at com.atlassian.web.servlet.plugin.LocationCleanerFilter.doFilter(LocationCleanerFilter.java:36) ... 26 filtered at com.atlassian.jira.servermetrics.MetricsCollectorFilter.doFilter(MetricsCollectorFilter.java:25) ... 23 filtered at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) at java.lang.Thread.run(Thread.java:745) 解决：123vi /etc/hosts#添加：127.0.0.1 jira.domain.com 或者（也许是并且，因为部署在局域网内，外部无法访问。系统有监控需要通过这个基本 URL 来访问），在系统设置页面，将基本 URL 改成：http://localhost:8080是在把基本 URL 改成： http://localhost:8080 之前抛的错。 查看 jira 历史版本Jira Software 下载特定版本将下面的链接的版本号改成上面列出的某一个即可，比如要下载 7.9.2linux 版本：https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-7.9.2-x64.bin windows 版本：https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-7.9.2-x64.exe dockerDockerized Atlassian Jira 破解版本，备份与恢复备份 备份安装文件 12rm -rf /opt/atlassian/jira/logs/*tar -czvf jira.tar.gz /var/atlassian/ /opt/atlassian/ /etc/init.d/jira 备份数据库 1mysqldump --default-character-set=utf8mb4 -uroot -p&apos;password&apos; jira &gt; /root/jiraBack.sql 恢复假设目标服务器没有安装过 jira。 下载相同版本并在目标服务器上安装，目的是让安装程序把 jira 服务以及运行用户创建好，之后的事情，只是简单的替换已经破解过的安装文件和数据库而已。 删除刚刚安装的文件。 1rm -rf /var/atlassian/ /opt/atlassian/ /etc/init.d/jira 将备份的 jira 安装文件 copy 至根目录 /，然后解压 1tar -xzvf jira.tar.gz 恢复备份的数据库 12345678mysql -uroot -p&apos;password&apos;mysql&gt; use jira;Database changedmysql&gt; set names utf8mb4;Query OK, 0 rows affected (0.00 sec)mysql&gt; source /root/jiraBack.sql... 修改数据库配置1vim /var/atlassian/application-data/jira/dbconfig.xml 启动用户，默认是 jira第一次安装，会创建 jira 的启动用户，用户名就是 jira如果安装过第二次，那么，会再创建一个用户 jira1所以，如果备份的是第二次安装的版本，那么，恢复之后，启动，会提示 jira1 这个用户不存在12345[root@AndyCentOS7Basic init.d]# service jira startTo run JIRA in the foreground, start the server with start-jira.sh -fgexecuting using dedicated user: jira1runuser: user jira1 does not exist 解决办法就是，安装两次，第二安装完毕再进行恢复操作。 查看 jira 日志1tail -f /opt/atlassian/jira/logs/catalina.out","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"jira","slug":"CentOS/jira","permalink":"https://www.lovesofttech.com/categories/CentOS/jira/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"jira","slug":"jira","permalink":"https://www.lovesofttech.com/tags/jira/"}]},{"title":"mysqldump 用法及示例","slug":"database/mysqldump","date":"2017-12-06T16:00:00.000Z","updated":"2020-09-01T02:53:12.926Z","comments":true,"path":"database/mysqldump.html","link":"","permalink":"https://www.lovesofttech.com/database/mysqldump.html","excerpt":"MySQL 备份与恢复命令 mysqldump 的使用介绍。","text":"MySQL 备份与恢复命令 mysqldump 的使用介绍。 语法默认不带参数的导出，导出文本内容大概如下：创建数据库判断语句-删除表-创建表-锁表-禁用索引-插入数据-启用索引-解锁表。123Usage: mysqldump [OPTIONS] database [tables]OR mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]OR mysqldump [OPTIONS] --all-databases [OPTIONS] 带 -B 的语句，会有创建库的语句，在导入的时候没办法指定其它数据库名。如果导出的文件并不大，可以打开编辑。1mysqldump --default-character-set=utf8 -h192.168.0.88 -uadmin -p1243421 -B db1 &gt; c:/dev/db1.sql 自动生成的创建库的语句123CREATE DATABASE /*!32312 IF NOT EXISTS*/ `db1` /*!40100 DEFAULT CHARACTER SET utf8 */;USE `db1`; 如果想要在导入的时候指定其它数据库名，则把参数 -B 去掉，导入的时候，这样： 12345mysqldump --default-character-set=utf8 -h192.168.0.88 -uadmin -p1243421 db1 &gt; c:/dev/db1.sqlmysql -uroot -pcreate schema dbName default character set utf8;use dbName;source c:/dev/db1.sql 该命令会导出包括系统数据库在内的所有数据库 1mysqldump -uroot -proot --all-databases &gt;/tmp/all.sql 导出db1、db2两个数据库的所有数据 1mysqldump -uroot -proot --databases db1 db2 &gt;/tmp/user.sql 导出db1中的a1、a2表注意导出指定表只能针对一个数据库进行导出，且导出的内容中和导出数据库也不一样，导出指定表的导出文本中没有创建数据库的判断语句，只有删除表-创建表-导入数据 1mysqldump -uroot -proot --databases db1 --tables a1 a2 &gt;/tmp/db1.sql 条件导出，导出db1表a1中id=1的数据如果多个表的条件相同可以一次性导出多个表字段是整形 1mysqldump -uroot -proot --databases db1 --tables a1 --where=&apos;id=1&apos; &gt;/tmp/a1.sql 字段是字符串,并且导出的sql中不包含drop table,create table1mysqldump -uroot -proot --no-create-info --databases db1 --tables a1 --where=&quot;id=&apos;a&apos;&quot; &gt;/tmp/a1.sql 生成新的binlog文件,-F 1mysqldump -uroot -proot --databases db1 -F &gt;/tmp/db1.sql 只导出表结构不导出数据，–no-data 1mysqldump -uroot -proot --no-data --databases db1 &gt;/tmp/db1.sql 跨服务器导出导入数据将h1服务器中的db1数据库的所有数据导入到h2中的db2数据库中，db2的数据库必须存在否则会报错 1mysqldump --host=h1 -uroot -proot --databases db1 |mysql --host=h2 -uroot -proot db2 加上-C参数可以启用压缩传递。1mysqldump --host=192.168.80.137 -uroot -proot -C --databases test |mysql --host=192.168.80.133 -uroot -proot test 将主库的binlog位置和文件名追加到导出数据的文件中，–dump-slave 注意：–dump-slave命令如果当前服务器是从服务器那么使用该命令会执行stop slave来获取master binlog的文件和位置，等备份完后会自动执行start slave启动从服务器。但是如果是大的数据量备份会给从和主的延时变的更大，使用–dump-slave获取到的只是当前的从服务器的数据执行到的主的binglog的位置是（relay_mater_log_file,exec_master_log_pos),而不是主服务器当前的binlog执行的位置，主要是取决于主从的数据延时。 该参数在在从服务器上执行，相当于执行show slave status。当设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。 该选项将会打开–lock-all-tables，除非–single-transaction被指定。 在执行完后会自动关闭–lock-tables选项。–dump-slave默认是11mysqldump -uroot -proot --dump-slave=1 --databases db1 &gt;/tmp/db1.sql 将当前服务器的binlog的位置和文件名追加到输出文件，–master-data 该参数和–dump-slave方法一样，只是它是记录的是当前服务器的binlog，相当于执行show master status，状态（file,position)的值。 注意：–master-data不会停止当前服务器的主从服务 –opt等同于–add-drop-table, –add-locks, –create-options, –quick, –extended-insert, –lock-tables, –set-charset, –disable-keys 该选项默认开启, 可以用–skip-opt禁用. 1mysqldump -uroot -p --host=localhost --all-databases --opt 保证导出的一致性状态–single-transaction该选项在导出数据之前提交一个BEGIN SQL语句，BEGIN 不会阻塞任何应用程序且能保证导出时数据库的一致性状态。它只适用于多版本存储引擎（它不显示加锁通过判断版本来对比数据），仅InnoDB。本选项和–lock-tables 选项是互斥的，因为LOCK TABLES 会使任何挂起的事务隐含提交。要想导出大表的话，应结合使用–quick 选项。–quick, -q不缓冲查询，直接导出到标准输出。默认为打开状态，使用–skip-quick取消该选项。 –lock-tables, -l 开始导出前，锁定所有表。用READ LOCAL锁定表以允许MyISAM表并行插入。对于支持事务的表例如InnoDB和BDB，–single-transaction是一个更好的选择，因为它根本不需要锁定表。 请注意当导出多个数据库时，–lock-tables分别为每个数据库锁定表。因此，该选项不能保证导出文件中的表在数据库之间的逻辑一致性。不同数据库表的导出状态可以完全不同。 导出存储过程和自定义函数–routines, -R 1mysqldump -uroot -p --host=localhost --all-databases --routines 压缩备份 1234压缩备份mysqldump -uroot -proot --databases abc 2&gt;/dev/null |gzip &gt;/abc.sql.gz还原gunzip -c abc.sql.gz |mysql -uroot -proot abc --where 后面一定要用双引号否则会报错，以下语句，将where条件后面的过滤条件的头单引号改为双引号可正确执行。123C:\\dev\\mysql-8.0.11-winx64\\bin&gt;mysqldump --default-character-set=utf8mb4 -uroot -pRoOtPaSs --no-create-info --databases apg --tables sysArea --where=&apos;areaID=512081 or parentID=512081&apos; &gt; c:/workspace/sysAreaForJY.sqlmysqldump: [Warning] Using a password on the command line interface can be insecure.mysqldump: Couldn&apos;t find table: &quot;or&quot; 参数说明all-databases , -A导出全部数据库。mysqldump -uroot -p --all-databases--all-tablespaces , -Y导出全部表空间。mysqldump -uroot -p --all-databases --all-tablespaces--no-tablespaces , -y不导出任何表空间信息。mysqldump -uroot -p --all-databases --no-tablespaces--add-drop-database每个数据库创建之前添加drop数据库语句。mysqldump -uroot -p --all-databases --add-drop-database--add-drop-table每个数据表创建之前添加drop数据表语句。(默认为打开状态，使用--skip-add-drop-table取消选项)mysqldump -uroot -p --all-databases (默认添加drop语句)mysqldump -uroot -p --all-databases –skip-add-drop-table (取消drop语句)--add-locks在每个表导出之前增加LOCK TABLES并且之后UNLOCK TABLE。(默认为打开状态，使用--skip-add-locks取消选项)mysqldump -uroot -p --all-databases (默认添加LOCK语句)mysqldump -uroot -p --all-databases –skip-add-locks (取消LOCK语句)--allow-keywords允许创建是关键词的列名字。这由表名前缀于每个列名做到。mysqldump -uroot -p --all-databases --allow-keywords--apply-slave-statements在&apos;CHANGE MASTER&apos;前添加&apos;STOP SLAVE&apos;，并且在导出的最后添加&apos;START SLAVE&apos;。mysqldump -uroot -p --all-databases --apply-slave-statements--character-sets-dir字符集文件的目录mysqldump -uroot -p --all-databases --character-sets-dir=/usr/local/mysql/share/mysql/charsets--comments附加注释信息。默认为打开，可以用--skip-comments取消mysqldump -uroot -p --all-databases (默认记录注释)mysqldump -uroot -p --all-databases --skip-comments (取消注释)--compatible导出的数据将和其它数据库或旧版本的MySQL 相兼容。值可以为ansi、mysql323、mysql40、postgresql、oracle、mssql、db2、maxdb、no_key_options、no_tables_options、no_field_options等，要使用几个值，用逗号将它们隔开。它并不保证能完全兼容，而是尽量兼容。mysqldump -uroot -p --all-databases --compatible=ansi--compact导出更少的输出信息(用于调试)。去掉注释和头尾等结构。可以使用选项：--skip-add-drop-table --skip-add-locks --skip-comments --skip-disable-keysmysqldump -uroot -p --all-databases --compact--complete-insert, -c使用完整的insert语句(包含列名称)。这么做能提高插入效率，但是可能会受到max_allowed_packet参数的影响而导致插入失败。mysqldump -uroot -p --all-databases --complete-insert--compress, -C在客户端和服务器之间启用压缩传递所有信息mysqldump -uroot -p --all-databases --compress--create-options, -a在CREATE TABLE语句中包括所有MySQL特性选项。(默认为打开状态)mysqldump -uroot -p --all-databases--databases, -B导出几个数据库。参数后面所有名字参量都被看作数据库名。mysqldump -uroot -p --databases test mysql--debug输出debug信息，用于调试。默认值为：d:t,/tmp/mysqldump.tracemysqldump -uroot -p --all-databases --debugmysqldump -uroot -p --all-databases --debug=” d:t,/tmp/debug.trace”--debug-check检查内存和打开文件使用说明并退出。mysqldump -uroot -p --all-databases --debug-check--debug-info输出调试信息并退出mysqldump -uroot -p --all-databases --debug-info--default-character-set设置默认字符集，默认值为utf8mysqldump -uroot -p --all-databases --default-character-set=utf8--delayed-insert采用延时插入方式（INSERT DELAYED）导出数据mysqldump -uroot -p --all-databases --delayed-insert--delete-master-logsmaster备份后删除日志. 这个参数将自动激活--master-data。mysqldump -uroot -p --all-databases --delete-master-logs--disable-keys对于每个表，用/*!40000 ALTER TABLE tbl_name DISABLE KEYS */;和/*!40000 ALTER TABLE tbl_name ENABLE KEYS */;语句引用INSERT语句。这样可以更快地导入dump出来的文件，因为它是在插入所有行后创建索引的。该选项只适合MyISAM表，默认为打开状态。mysqldump -uroot -p --all-databases --dump-slave该选项将主的binlog位置和文件名追加到导出数据的文件中(show slave status)。设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。该选项将会打开--lock-all-tables，除非--single-transaction被指定。该选项会自动关闭--lock-tables选项。默认值为0。mysqldump -uroot -p --all-databases --dump-slave=1mysqldump -uroot -p --all-databases --dump-slave=2--master-data该选项将当前服务器的binlog的位置和文件名追加到输出文件中(show master status)。如果为1，将会输出CHANGE MASTER 命令；如果为2，输出的CHANGE MASTER命令前添加注释信息。该选项将打开--lock-all-tables 选项，除非--single-transaction也被指定（在这种情况下，全局读锁在开始导出时获得很短的时间；其他内容参考下面的--single-transaction选项）。该选项自动关闭--lock-tables选项。mysqldump -uroot -p --host=localhost --all-databases --master-data=1;mysqldump -uroot -p --host=localhost --all-databases --master-data=2;--events, -E导出事件。mysqldump -uroot -p --all-databases --events--extended-insert, -e使用具有多个VALUES列的INSERT语法。这样使导出文件更小，并加速导入时的速度。默认为打开状态，使用--skip-extended-insert取消选项。mysqldump -uroot -p --all-databasesmysqldump -uroot -p --all-databases--skip-extended-insert (取消选项)--fields-terminated-by导出文件中忽略给定字段。与--tab选项一起使用，不能用于--databases和--all-databases选项mysqldump -uroot -p test test --tab=”/home/mysql” --fields-terminated-by=”#”--fields-enclosed-by输出文件中的各个字段用给定字符包裹。与--tab选项一起使用，不能用于--databases和--all-databases选项mysqldump -uroot -p test test --tab=”/home/mysql” --fields-enclosed-by=”#”--fields-optionally-enclosed-by输出文件中的各个字段用给定字符选择性包裹。与--tab选项一起使用，不能用于--databases和--all-databases选项mysqldump -uroot -p test test --tab=”/home/mysql” --fields-enclosed-by=”#” --fields-optionally-enclosed-by =”#”--fields-escaped-by输出文件中的各个字段忽略给定字符。与--tab选项一起使用，不能用于--databases和--all-databases选项mysqldump -uroot -p mysql user --tab=”/home/mysql” --fields-escaped-by=”#”--flush-logs开始导出之前刷新日志。请注意：假如一次导出多个数据库(使用选项--databases或者--all-databases)，将会逐个数据库刷新日志。除使用--lock-all-tables或者--master-data外。在这种情况下，日志将会被刷新一次，相应的所以表同时被锁定。因此，如果打算同时导出和刷新日志应该使用--lock-all-tables 或者--master-data 和--flush-logs。mysqldump -uroot -p --all-databases --flush-logs--flush-privileges在导出mysql数据库之后，发出一条FLUSH PRIVILEGES 语句。为了正确恢复，该选项应该用于导出mysql数据库和依赖mysql数据库数据的任何时候。mysqldump -uroot -p --all-databases --flush-privileges--force在导出过程中忽略出现的SQL错误。mysqldump -uroot -p --all-databases --force--help显示帮助信息并退出。mysqldump --help--hex-blob使用十六进制格式导出二进制字符串字段。如果有二进制数据就必须使用该选项。影响到的字段类型有BINARY、VARBINARY、BLOB。mysqldump -uroot -p --all-databases --hex-blob--host, -h需要导出的主机信息mysqldump -uroot -p --host=localhost --all-databases--ignore-table不导出指定表。指定忽略多个表时，需要重复多次，每次一个表。每个表必须同时指定数据库和表名。例如：--ignore-table=database.table1 --ignore-table=database.table2 ……mysqldump -uroot -p --host=localhost --all-databases --ignore-table=mysql.user--include-master-host-port在--dump-slave产生的&apos;CHANGE MASTER TO..&apos;语句中增加&apos;MASTER_HOST=&lt;host&gt;，MASTER_PORT=&lt;port&gt;&apos; mysqldump -uroot -p --host=localhost --all-databases --include-master-host-port--insert-ignore在插入行时使用INSERT IGNORE语句.mysqldump -uroot -p --host=localhost --all-databases --insert-ignore--lines-terminated-by输出文件的每行用给定字符串划分。与--tab选项一起使用，不能用于--databases和--all-databases选项。mysqldump -uroot -p --host=localhost test test --tab=”/tmp/mysql” --lines-terminated-by=”##”--lock-all-tables, -x提交请求锁定所有数据库中的所有表，以保证数据的一致性。这是一个全局读锁，并且自动关闭--single-transaction 和--lock-tables 选项。mysqldump -uroot -p --host=localhost --all-databases --lock-all-tables--lock-tables, -l开始导出前，锁定所有表。用READ LOCAL锁定表以允许MyISAM表并行插入。对于支持事务的表例如InnoDB和BDB，--single-transaction是一个更好的选择，因为它根本不需要锁定表。请注意当导出多个数据库时，--lock-tables分别为每个数据库锁定表。因此，该选项不能保证导出文件中的表在数据库之间的逻辑一致性。不同数据库表的导出状态可以完全不同。mysqldump -uroot -p --host=localhost --all-databases --lock-tables--log-error附加警告和错误信息到给定文件mysqldump -uroot -p --host=localhost --all-databases --log-error=/tmp/mysqldump_error_log.err--max_allowed_packet服务器发送和接受的最大包长度。mysqldump -uroot -p --host=localhost --all-databases --max_allowed_packet=10240--net_buffer_lengthTCP/IP和socket连接的缓存大小。mysqldump -uroot -p --host=localhost --all-databases --net_buffer_length=1024--no-autocommit使用autocommit/commit 语句包裹表。mysqldump -uroot -p --host=localhost --all-databases --no-autocommit--no-create-db, -n只导出数据，而不添加CREATE DATABASE 语句。mysqldump -uroot -p --host=localhost --all-databases --no-create-db--no-create-info, -t只导出数据，而不添加CREATE TABLE 语句。mysqldump -uroot -p --host=localhost --all-databases --no-create-info--no-data, -d不导出任何数据，只导出数据库表结构。mysqldump -uroot -p --host=localhost --all-databases --no-data--no-set-names, -N等同于--skip-set-charsetmysqldump -uroot -p --host=localhost --all-databases --no-set-names--opt等同于--add-drop-table, --add-locks, --create-options, --quick, --extended-insert, --lock-tables, --set-charset, --disable-keys 该选项默认开启, 可以用--skip-opt禁用.mysqldump -uroot -p --host=localhost --all-databases --opt--order-by-primary如果存在主键，或者第一个唯一键，对每个表的记录进行排序。在导出MyISAM表到InnoDB表时有效，但会使得导出工作花费很长时间。 mysqldump -uroot -p --host=localhost --all-databases --order-by-primary--password, -p连接数据库密码--pipe(windows系统可用)使用命名管道连接mysqlmysqldump -uroot -p --host=localhost --all-databases --pipe--port, -P连接数据库端口号--protocol使用的连接协议，包括：tcp, socket, pipe, memory.mysqldump -uroot -p --host=localhost --all-databases --protocol=tcp--quick, -q不缓冲查询，直接导出到标准输出。默认为打开状态，使用--skip-quick取消该选项。mysqldump -uroot -p --host=localhost --all-databases mysqldump -uroot -p --host=localhost --all-databases --skip-quick--quote-names,-Q使用（`）引起表和列名。默认为打开状态，使用--skip-quote-names取消该选项。mysqldump -uroot -p --host=localhost --all-databasesmysqldump -uroot -p --host=localhost --all-databases --skip-quote-names--replace使用REPLACE INTO 取代INSERT INTO.mysqldump -uroot -p --host=localhost --all-databases --replace--result-file, -r直接输出到指定文件中。该选项应该用在使用回车换行对（\\\\r\\\\n）换行的系统上（例如：DOS，Windows）。该选项确保只有一行被使用。mysqldump -uroot -p --host=localhost --all-databases --result-file=/tmp/mysqldump_result_file.txt--routines, -R导出存储过程以及自定义函数。mysqldump -uroot -p --host=localhost --all-databases --routines--set-charset添加&apos;SET NAMES default_character_set&apos;到输出文件。默认为打开状态，使用--skip-set-charset关闭选项。mysqldump -uroot -p --host=localhost --all-databases mysqldump -uroot -p --host=localhost --all-databases --skip-set-charset--single-transaction该选项在导出数据之前提交一个BEGIN SQL语句，BEGIN 不会阻塞任何应用程序且能保证导出时数据库的一致性状态。它只适用于多版本存储引擎，仅InnoDB。本选项和--lock-tables 选项是互斥的，因为LOCK TABLES 会使任何挂起的事务隐含提交。要想导出大表的话，应结合使用--quick 选项。mysqldump -uroot -p --host=localhost --all-databases --single-transaction--dump-date将导出时间添加到输出文件中。默认为打开状态，使用--skip-dump-date关闭选项。mysqldump -uroot -p --host=localhost --all-databasesmysqldump -uroot -p --host=localhost --all-databases --skip-dump-date--skip-opt禁用–opt选项.mysqldump -uroot -p --host=localhost --all-databases --skip-opt--socket,-S指定连接mysql的socket文件位置，默认路径/tmp/mysql.sockmysqldump -uroot -p --host=localhost --all-databases --socket=/tmp/mysqld.sock--tab,-T为每个表在给定路径创建tab分割的文本文件。注意：仅仅用于mysqldump和mysqld服务器运行在相同机器上。注意使用--tab不能指定--databases参数mysqldump -uroot -p --host=localhost test test --tab=&quot;/home/mysql&quot;--tables覆盖--databases (-B)参数，指定需要导出的表名，在后面的版本会使用table取代tables。mysqldump -uroot -p --host=localhost --databases test --tables test--triggers导出触发器。该选项默认启用，用--skip-triggers禁用它。mysqldump -uroot -p --host=localhost --all-databases --triggers--tz-utc在导出顶部设置时区TIME_ZONE=&apos;+00:00&apos; ，以保证在不同时区导出的TIMESTAMP 数据或者数据被移动其他时区时的正确性。mysqldump -uroot -p --host=localhost --all-databases --tz-utc--user, -u指定连接的用户名。--verbose, --v输出多种平台信息。--version, -V输出mysqldump版本信息并退出--where, -w只转储给定的WHERE条件选择的记录。请注意如果条件包含命令解释符专用空格或字符，一定要将条件引用起来。mysqldump -uroot -p --host=localhost --all-databases --where=” user=’root’”--xml, -X导出XML格式.mysqldump -uroot -p --host=localhost --all-databases --xml--plugin_dir客户端插件的目录，用于兼容不同的插件版本。mysqldump -uroot -p --host=localhost --all-databases --plugin_dir=”/usr/local/lib/plugin”--default_auth客户端插件默认使用权限。mysqldump -uroot -p --host=localhost --all-databases --default-auth=”/usr/local/lib/plugin/&lt;PLUGIN&gt;” 错误处理unknown option ‘–no-beep’12第一种方法：删除my.ini[client]下的 no-beep 参数;第二种方法：在 mysqldump 后加--no-defaults参数 。 总结文章中列举了一些常用的导出操作，还有很多其它的参数也会经常用到，包括“–add-drop-database”，“–apply-slave-statements”，“–triggers”等。客户端的导入导出功能也是不错的选择，比如workbench、navicat;其中navicat的导出向导中可以有很多文件格式可以选择。–tab的快速导出导入数据是个不错的方法，它会在指定的目录下生成一个sql表结构文件和一个text数据文件","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"页面无法找到","slug":"404","date":"2017-11-12T16:00:00.000Z","updated":"2020-09-01T02:53:12.901Z","comments":true,"path":"404.html","link":"","permalink":"https://www.lovesofttech.com/404.html","excerpt":"","text":"抱歉，你访问的页面无法找到。 你可以进入博客首页，也许有你感兴趣的文章。","categories":[],"tags":[]},{"title":"CentOS7 安装 MySQL-5.7.20","slug":"database/centOS7InstallMySQL5.7.20","date":"2017-11-07T16:00:00.000Z","updated":"2020-09-01T02:53:12.914Z","comments":true,"path":"database/centOS7InstallMySQL5.7.20.html","link":"","permalink":"https://www.lovesofttech.com/database/centOS7InstallMySQL5.7.20.html","excerpt":"包含安装和简单的配置。","text":"包含安装和简单的配置。下载本文下载的是：mysql-5.7.20-1.el7.x86_64.rpm-bundle.tar123tar -xvf mysql-5.7.20-1.el7.x86_64.rpm-bundle.tar``` 释放如下 rpm 包： [root@AndyCentOS7Basic forCentOS]# lltotal 1158730-rwxrwx—. 1 root vboxsf 593274880 Nov 8 06:00 mysql-5.7.20-1.el7.x86_64.rpm-bundle.tar-rwxrwx—. 1 root vboxsf 25090196 Nov 8 07:12 mysql-community-client-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 278300 Nov 8 07:12 mysql-community-common-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 3778120 Nov 8 07:11 mysql-community-devel-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 46238924 Nov 8 07:11 mysql-community-embedded-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 24077232 Nov 8 07:11 mysql-community-embedded-compat-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 128440800 Nov 8 07:12 mysql-community-embedded-devel-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 2238604 Nov 8 07:11 mysql-community-libs-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 2115892 Nov 8 07:11 mysql-community-libs-compat-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 55538708 Nov 8 07:11 mysql-community-minimal-debuginfo-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 171597916 Nov 8 07:12 mysql-community-server-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 15256460 Nov 8 07:12 mysql-community-server-minimal-5.7.20-1.el7.x86_64.rpm-rwxrwx—. 1 root vboxsf 118609776 Nov 8 07:12 mysql-community-test-5.7.20-1.el7.x86_64.rpm1安装的时候，有顺序要求，同时，会与 mariadb 冲突，如下： [root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-server-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-server-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: mysql-community-client(x86-64) &gt;= 5.7.9 is needed by mysql-community-server-5.7.20-1.el7.x86_64 mysql-community-common(x86-64) = 5.7.20-1.el7 is needed by mysql-community-server-5.7.20-1.el7.x86_64 net-tools is needed by mysql-community-server-5.7.20-1.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-client-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-client-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: mysql-community-libs(x86-64) &gt;= 5.7.9 is needed by mysql-community-client-5.7.20-1.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-libs-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-libs-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: mysql-community-common(x86-64) &gt;= 5.7.9 is needed by mysql-community-libs-5.7.20-1.el7.x86_64 mariadb-libs is obsoleted by mysql-community-libs-5.7.20-1.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-common-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-common-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%] 各种冲突 …file /usr/share/mysql/charsets/swe7.xml from install of mysql-community-common-5.7.20-1.el7.x86_64 conflicts with file from package mariadb-libs-1:5.5.56-2.el7.x86_64 [root@AndyCentOS7Basic forCentOS]#1解决冲突，先卸载 mariadb 再操作 [root@AndyCentOS7Basic forCentOS]# rpm -qa | grep mariadbmariadb-libs-5.5.56-2.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -e mariadb-libs-5.5.56-2.el7.x86_64error: Failed dependencies: libmysqlclient.so.18()(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64 libmysqlclient.so.18(libmysqlclient_18)(64bit) is needed by (installed) postfix-2:2.10.1-6.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -e postfix-2:2.10.1-6.el7.x86_64 postfix-2:2.10.1-6.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -e mariadb-libs-5.5.56-2.el7.x86_64[root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-common-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-common-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%]Updating / installing… 1:mysql-community-common-5.7.20-1.e################################# [100%][root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-libs-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-libs-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%]Updating / installing… 1:mysql-community-libs-5.7.20-1.el7################################# [100%][root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-client-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-client-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%]Updating / installing… 1:mysql-community-client-5.7.20-1.e################################# [100%][root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-devel-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-devel-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%]Updating / installing… 1:mysql-community-devel-5.7.20-1.el################################# [100%][root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-server-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-server-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: net-tools is needed by mysql-community-server-5.7.20-1.el7.x86_64[root@AndyCentOS7Basic forCentOS]# yum install -y net-tools…Installed: net-tools.x86_64 0:2.0-0.22.20131004git.el7 Complete![root@AndyCentOS7Basic forCentOS]# rpm -ivh mysql-community-server-5.7.20-1.el7.x86_64.rpmwarning: mysql-community-server-5.7.20-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing… ################################# [100%]Updating / installing… 1:mysql-community-server-5.7.20-1.e################################# [100%][root@AndyCentOS7Basic forCentOS]# rpm -qa | grep mysqlmysql-community-client-5.7.20-1.el7.x86_64mysql-community-libs-5.7.20-1.el7.x86_64mysql-community-devel-5.7.20-1.el7.x86_64mysql-community-server-5.7.20-1.el7.x86_64mysql-community-common-5.7.20-1.el7.x86_64123456# 各项命令，与 CentOS 6 系列的 service mysqld start|restart|stop|status 不太一样。启动 mysql 服务 : systemctl start mysqld重启：systemctl restart mysqld停止：systemctl stop mysqld开机自启：systemctl enable mysqld查看MySQL的启动状态：systemctl status mysqld [root@AndyCentOS7Basic forCentOS]# systemctl start mysqld.service[root@AndyCentOS7Basic forCentOS]# systemctl status mysqld.service● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: active (running) since Wed 2017-11-08 09:28:22 CST; 6min ago Docs: man:mysqld(8) http://dev.mysql.com/doc/refman/en/using-systemd.html Main PID: 14818 (mysqld) CGroup: /system.slice/mysqld.service └─14818 /usr/sbin/mysqld –daemonize –pid-file=/var/run/mysqld/mysqld.pid [root@AndyCentOS7Basic forCentOS]# systemctl stop mysqld[root@AndyCentOS7Basic forCentOS]# systemctl status mysqld● mysqld.service - MySQL Server Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor preset: disabled) Active: inactive (dead) since Wed 2017-11-08 09:38:47 CST; 8s ago Docs: man:mysqld(8) http://dev.mysql.com/doc/refman/en/using-systemd.html Process: 14895 ExecStart=/usr/sbin/mysqld –daemonize –pid-file=/var/run/mysqld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS) Process: 14876 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0/SUCCESS) Main PID: 14897 (code=exited, status=0/SUCCESS) Nov 08 09:38:21 AndyCentOS7Basic systemd[1]: Starting MySQL Server…Nov 08 09:38:22 AndyCentOS7Basic systemd[1]: Started MySQL Server.Nov 08 09:38:45 AndyCentOS7Basic systemd[1]: Stopping MySQL Server…Nov 08 09:38:47 AndyCentOS7Basic systemd[1]: Stopped MySQL Server.[root@AndyCentOS7Basic forCentOS]#123# 修改root本地登录密码mysql 首次启动，在/var/log/mysqld.log 文件中给 root 生成了一个临时密码。通过下面的方式找到 root 临时密码，然后登录 mysql 进行修改： [root@AndyCentOS7Basic forCentOS]# grep ‘temporary password’ /var/log/mysqld.log2017-11-08T01:28:17.646798Z 1 [Note] A temporary password is generated for root@localhost: #L+rRHgQs2Oz1登录并修改 root 密码： [root@AndyCentOS7Basic forCentOS]# mysql -uroot -p#L+rRHgQs2Ozmysql&gt; ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘mypassword’;ERROR 1819 (HY000): Your password does not satisfy the current policy requirements12mysql5.7 默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示 ERROR 1819 (HY000): Your password does not satisfy the current policy requirements 错误必须先改默认密码，才能做别的操作。 mysql&gt; show variables like ‘%password%’;ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.mysql&gt; ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘mypassword’;Query OK, 0 rows affected (0.00 sec) mysql&gt; show variables like ‘%password%’;+—————————————+——–+| Variable_name | Value |+—————————————+——–+| default_password_lifetime | 0 || disconnect_on_expired_password | ON || log_builtin_as_identified_by_password | OFF || mysql_native_password_proxy_users | OFF || old_passwords | 0 || report_password | || sha256_password_proxy_users | OFF || validate_password_check_user_name | OFF || validate_password_dictionary_file | || validate_password_length | 8 || validate_password_mixed_case_count | 1 || validate_password_number_count | 1 || validate_password_policy | MEDIUM || validate_password_special_char_count | 1 |+—————————————+——–+14 rows in set (0.00 sec)1添加允许远程登录的账号，如果为 % 表示所有 IP，这里仅指定宿主主机的 IP mysql&gt; GRANT ALL PRIVILEGES ON . TO ‘admin‘@’192.168.1.89’ IDENTIFIED BY ‘password’ WITH GRANT OPTION;Query OK, 0 rows affected, 1 warning (0.00 sec) mysql&gt; FLUSH PRIVILEGES;Query OK, 0 rows affected (0.00 sec)12# windows 10 客户端，解压版，需要安装 vc 运行时。否则报错： The code execution cannot proceed because MSVCR120.dll was not found. Reinstalling the program may fix this problem.The code execution cannot proceed because MSVCP120.dll was not found. Reinstalling the program may fix this problem.1234[下载 Visual C++ Redistributable Packages for Visual Studio 2013](https://www.microsoft.com/en-US/download/details.aspx?id=40784)# ERROR 2003 (HY000): Can&apos;t connect to MySQL server on &apos;192.168.0.88&apos; (10060)关闭防火墙，或者配置例外。这里是本地开发环境，直接关闭即可。 [root@AndyCentOS7Basic ~]# systemctl stop firewalld[root@AndyCentOS7Basic ~]# systemctl disable firewalldRemoved symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.1234567891011121314# 2018-02-03 安装最新版手记（实际安装步骤）在阿里云上操作的。[root@izwz97mqm1h3u2vxe4kesjz ~]# rpm -qa | grep mariadbmariadb-libs-5.5.44-2.el7.centos.x86_64卸载 mariadb 之后，操作顺序如下：rpm -ivh mysql-community-common-5.7.21-1.el7.x86_64.rpm rpm -ivh mysql-community-libs-5.7.21-1.el7.x86_64.rpm rpm -ivh mysql-community-devel-5.7.21-1.el7.x86_64.rpm rpm -ivh mysql-community-client-5.7.21-1.el7.x86_64.rpm rpm -ivh mysql-community-server-5.7.21-1.el7.x86_64.rpm # 华夏主机 [root@localhost mysql]# rpm -ivh mysql-community-server-5.7.21-1.el7.x86_64.rpmwarning: mysql-community-server-5.7.21-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: /usr/bin/perl is needed by mysql-community-server-5.7.21-1.el7.x86_64 perl(Getopt::Long) is needed by mysql-community-server-5.7.21-1.el7.x86_64 perl(strict) is needed by mysql-community-server-5.7.21-1.el7.x86_64 yum install -y perl12# 阿里云主机 CentOS 7.5 64 bit，安装 5.7.22 [root@hjweb01 mysql]# rpm -ivh mysql-community-server-5.7.22-1.el7.x86_64.rpmwarning: mysql-community-server-5.7.22-1.el7.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: libaio.so.1()(64bit) is needed by mysql-community-server-5.7.22-1.el7.x86_64 libaio.so.1(LIBAIO_0.1)(64bit) is needed by mysql-community-server-5.7.22-1.el7.x86_64 libaio.so.1(LIBAIO_0.4)(64bit) is needed by mysql-community-server-5.7.22-1.el7.x86_64 需要安装这依赖包yum install -y libaio…Installed: libaio.x86_64 0:0.3.109-13.el7`然后再执行 rpm -ivh mysql-community-server-5.7.22-1.el7.x86_64.rpm 就可以了。","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"CentOS 7 安装设置 vsftpd 及多用户登录","slug":"linux/centOS7Vsftpd","date":"2017-10-31T16:00:00.000Z","updated":"2020-09-01T02:53:13.030Z","comments":true,"path":"linux/centOS7Vsftpd.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7Vsftpd.html","excerpt":"如题","text":"如题 安装 yum -y install vsftpd1234567[root@AndyCentOS7Basic sql.data]# yum -y install vsftpd...Installed: vsftpd.x86_64 0:3.0.2-22.el7Complete![root@AndyCentOS7Basic sql.data]# 添加用户并设置密码1234567[root@AndyCentOS7Basic ~]# useradd -d /home/uftp -s /sbin/nologin uftp[root@AndyCentOS7Basic ~]# passwd uftpChanging password for user uftp.New password: BAD PASSWORD: The password is shorter than 8 charactersRetype new password: passwd: all authentication tokens updated successfully. 开发环境，设置密码与用户名一致，方便管理。 常用命令/设置rpm -qa|grep vsftpd //查看是否安装了vsftpd12[root@AndyCentOS7Basic ~]# rpm -qa|grep vsftpd vsftpd-3.0.2-22.el7.x86_64 systemctl status vsftpd //查看状态，默认是关闭的systemctl start vsftpd //开启vsftpd服务systemctl enable vsftpd //设置为开机启动netstat -tulnp | grep 21 //查看是否启动了vsftpd服务systemctl restart vsftpd //重启 vsftpd1234567891011121314151617181920[root@AndyCentOS7Basic ~]# systemctl status vsftpd ● vsftpd.service - Vsftpd ftp daemon Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; disabled; vendor preset: disabled) Active: inactive (dead)[root@AndyCentOS7Basic ~]# systemctl start vsftpd[root@AndyCentOS7Basic ~]# systemctl status vsftpd● vsftpd.service - Vsftpd ftp daemon Loaded: loaded (/usr/lib/systemd/system/vsftpd.service; disabled; vendor preset: disabled) Active: active (running) since Wed 2017-11-08 15:59:48 CST; 4s ago Process: 1718 ExecStart=/usr/sbin/vsftpd /etc/vsftpd/vsftpd.conf (code=exited, status=0/SUCCESS) Main PID: 1719 (vsftpd) CGroup: /system.slice/vsftpd.service └─1719 /usr/sbin/vsftpd /etc/vsftpd/vsftpd.confNov 08 15:59:48 AndyCentOS7Basic systemd[1]: Starting Vsftpd ftp daemon...Nov 08 15:59:48 AndyCentOS7Basic systemd[1]: Started Vsftpd ftp daemon.[root@AndyCentOS7Basic ~]# systemctl enable vsftpd Created symlink from /etc/systemd/system/multi-user.target.wants/vsftpd.service to /usr/lib/systemd/system/vsftpd.service.[root@AndyCentOS7Basic ~]# netstat -tulnp| grep 21tcp6 0 0 :::21 :::* LISTEN 1719/vsftpd 修改配置vi /etc/vsftpd/vsftpd.conf123456789101112131415161718listen=YESlisten_port=21tcp_wrappers=YESwrite_enable=YESxferlog_enable=YESxferlog_file=/var/log/vsftpd.logxferlog_std_format=YESidle_session_timeout=600data_connection_timeout=120chown_uploads=YESchown_username=daemonftpd_banner=Welcome to andy.vbox.centos6.6 FTP serviceanonymous_enable=NOlocal_enable=yeschroot_local_user=yespam_service_name=vsftpduserlist_enable=YESallow_writeable_chroot=YES # 不添加该项，登录时会出错，见下面的描述 改好之后重启 vsftpd ：systemctl restart vsftpd 禁用 SELinuxvim /etc/selinux/config设置 SELINUX 为：SELINUX=disabled123[root@AndyCentOS7Basic ~]# setenforce 0[root@AndyCentOS7Basic ~]# getenforce Permissive 重启服务器之后，再检查，将会提示 Disabled12[root@AndyCentOS7Basic ~]# getenforceDisabled Response: 500 OOPS: vsftpd: refusing to run with writable root inside chroot()原因：从2.3.5之后，vsftpd增强了安全检查，如果用户被限定在了其主目录下，则该用户的主目录不能再具有写权限了！如果检查发现还有写权限，就会报该错误。解决：要修复这个错误，可以用命令chmod a-w /home/user 去除用户主目录的写权限，注意把目录替换成你自己的。但是，一般都需要有写权限，所以，寻求别的解决办法。修改配置文件，添加这一项：allow_writeable_chroot=YES重启 vsftpd（systemctl restart vsftpd）之后，再次登录，ok！","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"vsftpd","slug":"CentOS/vsftpd","permalink":"https://www.lovesofttech.com/categories/CentOS/vsftpd/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"vsftpd","slug":"vsftpd","permalink":"https://www.lovesofttech.com/tags/vsftpd/"}]},{"title":"CentOS 6.3安装设置 vsftpd 及多用户登录","slug":"linux/vsftpd","date":"2017-10-31T16:00:00.000Z","updated":"2020-09-01T02:53:13.049Z","comments":true,"path":"linux/vsftpd.html","link":"","permalink":"https://www.lovesofttech.com/linux/vsftpd.html","excerpt":"如题","text":"如题 安装 yum -y install vsftpd12345[root@192 ~]# yum -y install vsftpd...---&gt; Package vsftpd.x86_64 0:2.2.2-24.el6 will be installed--&gt; Finished Dependency Resolution... 添加用户并设置密码123456[root@192 ~]# useradd -d /home/javaftp -s /sbin/nologin javaftpuser[root@192 ~]# passwd javaftpuserChanging password for user javaftpuser.New password: Retype new password: passwd: all authentication tokens updated successfully. 作为开发环境，为了方便，用户 javaftpuser 的密码也设置成：javaftpuser 常用命令/设置rpm -qa|grep vsftpd //查看是否安装了vsftpd12[root@192 ~]# rpm -qa|grep vsftpd vsftpd-2.2.2-24.el6.x86_64 service vsftpd status //查看状态，默认是关闭的service vsftpd start //开启vsftpd服务chkconfig vsftpd on //设置为开机启动netstat -tulnp| grep 21 //查看是否启动了vsftpd服务123456[root@192 ~]# netstat -tulnp| grep 21tcp 0 0 0.0.0.0:11211 0.0.0.0:* LISTEN 1998/memcached tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN 3752/vsftpd tcp 0 0 :::11211 :::* LISTEN 1998/memcached udp 0 0 0.0.0.0:11211 0.0.0.0:* 1998/memcached udp 0 0 :::11211 :::* 1998/memcached 修改配置vi /etc/vsftpd/vsftpd.conf1234567891011121314151617listen=YESlisten_port=21tcp_wrappers=YESwrite_enable=YESxferlog_enable=YESxferlog_file=/var/log/vsftpd.logxferlog_std_format=YESidle_session_timeout=600data_connection_timeout=120chown_uploads=YESchown_username=daemonftpd_banner=Welcome to andy.vbox.centos6.6 FTP serviceanonymous_enable=NOlocal_enable=yeschroot_local_user=yespam_service_name=vsftpduserlist_enable=YES 改好之后重启 vsftpd ：service vsftpd restart 禁用 SELinuxvim /etc/selinux/config设置 SELINUX 为：SELINUX=disabled12[root@192 javaftp]# getenforceDisabled java 连接 ftp 服务器，遇到的问题通过 FTPClient.rename，报：550 RNFR command failed.尝试了好几种方式，也参考了网上的方案，都没对。最后通过 filezilla client 把一个文件从一个目录移动到另外一个目录，从日志得到了启发，日志是这样的：1Renaming &apos;/completed/cacea8dd-27e3-4ba7-bf9b-2d66db8e1acc.png&apos; to &apos;/pending/cacea8dd-27e3-4ba7-bf9b-2d66db8e1acc.png&apos; 问题的关键是指定 rename 的 from 和 to 参数，需要指定相对于 ftp 用户的默认目录来指定， “/“即代表 ftp 用户的默认目录，并非操作系统的根目录。如下，最后一种方式为正确的调用方式。前面两种方式大概是初用 FTPClient 者常犯的错误。123456//失败ftpClient.rename(\"/\" + FtpConfig.ftpUploadPath + \"/\" + fileName, \"/\" + FtpConfig.ftpCompletedPath + \"/\")//失败ftpClient.rename(FtpConfig.ftpUploadPath + \"/\" + fileName, FtpConfig.ftpCompletedPath + \"/\" + fileName)//成功，_replyString=250 Rename successful.ftpClient.rename(\"/\" + FtpConfig.ftpUploadPath + \"/\" + fileName, \"/\" + FtpConfig.ftpCompletedPath + \"/\" + fileName) 需要注意的是：当需要移动的文件不存在时，也会报：550 RNFR command failed.","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"vsftpd","slug":"CentOS/vsftpd","permalink":"https://www.lovesofttech.com/categories/CentOS/vsftpd/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"vsftpd","slug":"vsftpd","permalink":"https://www.lovesofttech.com/tags/vsftpd/"}]},{"title":"nginx 配置相关","slug":"lnmp/nginxConfig","date":"2017-10-24T16:00:00.000Z","updated":"2020-09-01T02:53:13.058Z","comments":true,"path":"lnmp/nginxConfig.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/nginxConfig.html","excerpt":"如题","text":"如题 host not found in upstream1234567C:\\nginx-1.12.0&gt;nginx -tnginx: [emerg] host not found in upstream &quot;p.weblb.com:8180&quot; in C:\\nginx-1.12.0/conf/../vhosts/crm.web.load.balance.conf:3nginx: configuration file C:\\nginx-1.12.0/conf/nginx.conf test failedC:\\nginx-1.12.0&gt;nginx -tnginx: [emerg] host not found in upstream &quot;p.rate.com&quot; in C:\\nginx-1.12.0/conf/../vhosts/tb.conf:26nginx: configuration file C:\\nginx-1.12.0/conf/nginx.conf test failed 上面两个错误的原因，是域名解析失败，在 hosts 文件添加这两个域名即可 12127.0.0.1 p.weblb.com127.0.0.1 p.rate.com 附：配置文件 crm.web.load.balance.conf 1234567891011121314151617181920upstream crm-webs &#123; ip_hash; server p.weblb.com:8180 weight=5 max_fails=1 fail_timeout=180; #server p.javaweb.com:18081 weight=1 max_fails=1 fail_timeout=180; #server p.javaweb.com:18082 backup;&#125;server &#123; access_log logs/crm.web.access.log; error_log logs/crm.web.error.log; listen 81; server_name p.weblb.com; location / &#123; proxy_pass http://crm-webs; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; 附：配置文件 tb.conf 123456789101112131415161718192021222324252627282930313233343536373839404142server &#123; listen 80; server_name p.tb.com; charset utf-8; access_log logs/p.tb.com.access.log; error_log logs/p.tb.com.error.log; root c:/dev.workspace/php/tb/trunk/web/; index index.php; location ~ \\.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_read_timeout 1d; #新增，xdebug调试时长 &#125; location / &#123; if (!-e $request_filename) &#123; rewrite ^(.*)$ /index.php last; break; &#125; &#125; #rate 是另外一个项目，独立部署，这里通过代理访问 location ^~ /rate &#123; proxy_pass http://p.rate.com; proxy_redirect http://p.rate.com/ http://d5.51fakd.com/rate/; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; #crm 是 java web 应用，通过代理直接访问，并且代理做了负载均衡 location ^~ /crm &#123; proxy_pass http://p.weblb.com:8180/crm; proxy_redirect http://p.weblb.com:8180/crm/ http://tb.qn.com/crm/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; 用 nginx 反向代理达到访问 tomcat 的默认端口应用程序时，域名不加端口 8080，对外就象是使用默认的 80 端口一样 1234567891011121314server &#123; listen 80; server_name myjira.com; charset utf-8; access_log /opt/atlassian/jira/logs/ybdjira.com.access.log; error_log /opt/atlassian/jira/logs/ybdjira.com.error.log; location / &#123; proxy_pass http://localhost:8080; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; proxy_set_header 这句配置是改变 http 的请求头。而 Host 是请求的主机名，X-Real-IP 是请求的真实 IP，X-Forwarded-For 表示请求是由谁发起的。如果不需要获取真实 IP 的业务时，仅需要如下简单配置即可：1234567891011server &#123; listen 80; server_name myjira.com; charset utf-8; access_log /opt/atlassian/jira/logs/ybdjira.com.access.log; error_log /opt/atlassian/jira/logs/ybdjira.com.error.log; location / &#123; proxy_pass http://localhost:8080; &#125;&#125;","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"sts（Spring Tool Suite）/Eclipse 使用","slug":"general/sts","date":"2017-10-10T16:00:00.000Z","updated":"2020-09-01T02:53:12.954Z","comments":true,"path":"general/sts.html","link":"","permalink":"https://www.lovesofttech.com/general/sts.html","excerpt":"本文讲解的是 sts，但同样适用于 Eclipse，因为 sts 就是基于 Eclipse 的，相对 Eclipse，就是多了 spring 官方的插件而已。","text":"本文讲解的是 sts，但同样适用于 Eclipse，因为 sts 就是基于 Eclipse 的，相对 Eclipse，就是多了 spring 官方的插件而已。 关于 sts(Spring Tool Suite)的介绍，这里 copy 一段官网的 The Spring Tool Suite is an Eclipse-based development environment that is customized for developing Spring applications. It provides a ready-to-use environment to implement, debug, run, and deploy your Spring applications, including integrations for Pivotal tc Server, Pivotal Cloud Foundry, Git, Maven, AspectJ, and comes on top of the latest Eclipse releases. Included with the Spring Tool Suite is the developer edition of Pivotal tc Server, the drop-in replacement for Apache Tomcat that’s optimized for Spring. With its Spring Insight console, tc Server Developer Edition provides a graphical real-time view of application performance metrics that lets developers identify and diagnose problems from their desktops. The Spring Tool suite supports application targeting to local, virtual and cloud-based servers. It is freely available for development and internal business operations use with no time limits, fully open-source and licensed under the terms of the Eclipse Public License. 更详细的，请到官网查看 随着 spring5.0 的发布，官网 spring.io 改版了以前在首页的大概中间部分，能看到 sts 的介绍并可以导航到下载页面，现在改版之后，没有了，不过，通过搜索 sts 关键字，立即搜索到下载页面链接了。下载页面 关于 JDK 安装的经验在安装 JDK 的时候，选择的安装目录最好不要包含空格和中文，这样可以避免很多不必要的麻烦。笔者一般安装到 C 盘根目录下的 java 目录，如果项目需要，可以安装不同的版本。 用 sts 导入项目，不能正确识别 web 工程的解决办法 问题描述：用 sts 导入普通的、非 maven 管理的、基于 spring4.3.2 的 sts(eclipse) web 工程，设置 tomcat server 启动的时候，没有可选的启动项目。 问题原因：据我分析，可能是之前的 sts(eclipse) 版本跟我用的不一样，或者即使是一样的，由于 sts(eclipse) 自身的原因，导入时没有正确的加载已经存在的项目配置信息。 问题解决： 删除目录：【.settings】、【bin】、【Servers】 删除文件：【.classpath】、【.project】 重新导入。 引用 tomcat 组件的问题项目中用到了 tomcat 的组件：tomcat-util.jar，该文件在 tomcat 根目录下的 lib 目录下。 可以将 tomcat-util.jar copy 至 Web/lib 目录下，在用 sts 导入工程的时候，该目录默认会当作 lib 来引用。 如果你的这个项目最终是要发布到 tomcat 下运行，那么，可以不用 copy 这个文件至 Web/lib 下，按下面的操作设置即可。 项目右键 -&gt; 属性 -&gt; Project Facets 在 sts 中，在 Project Facets 的 Runtimes 中添加 tomcat 并勾选之后，在项目中可直接引用，如： 1import org.apache.tomcat.util.codec.XXX sts 新 workspace 设置，以及导入一个旧项目相关的操作。需要用 sts 打开旧项目调试，自从用 IDEA 之后，没再用 sts 差不多已经超过一年了，今天再次需要用，发现好多地方都已经不熟悉了，其实 sts 也还是蛮优秀蛮好用的。现在把一些常用设置以及需导入旧项目的一些操作整理了一下，方便自己同时也方便有同样需求的人。 字体设置。推荐并提供下载： YaHei Consolas Hybrid（雅黑编程字体），非常适合编程的一款字体，支持中文。如下图，安装好字体之后，在下拉列表中可以找到，不过，将”YaHei Consolas Hybrid“粘贴到 Font 下面的输入框里可以快速定位，不用在下拉列表中翻来翻去的找了。 设置雅黑编程字体 修改代码编辑区背景配色有两种方法 去官方网站（http://eclipsecolorthemes.org/）上下载自己想要的配色方案。但是这个方法一次只能添加一个配色方案。 打开 sts，help-&gt;Install new software, 输入 http://eclipse-color-theme.github.com/update，next -&gt; next 等待安装完成即可。然后 window -&gt; Preferences -&gt; General -&gt; Appearance-&gt; Color Theme，选择自己喜欢的。其实软件有自带多个可选主题，在 window -&gt; Preferences -&gt; General -&gt; Appearance，点击就能看到。本人认为默认的主题就挺，黑色主题不如 IDEA 自带的黑色主题顺眼，包括通过上面两步得到的主题。可能是用 IDEA 自带的黑色主题太久，已经深入我心的原因吧。 创建/导入 maven 项目时 eclipse默认 jdk 版本配置maven 的 conf\\setting.xml 文件中找到 jdk 注释的地方，打开修改即可，如下12345678910111213141516171819202122232425&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt; &lt;localRepository&gt; D:\\maven\\repository &lt;/localRepository&gt; &lt;profiles&gt; &lt;profile&gt; &lt;id&gt;jdk-1.8&lt;/id&gt; &lt;activation&gt; &lt;jdk&gt;1.8&lt;/jdk&gt; &lt;/activation&gt; &lt;properties&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt; &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt; &lt;/properties&gt; &lt;/profile&gt; &lt;/profiles&gt; &lt;/settings&gt; Maven 配置文件目录 一般改得最多的，就是依赖下载的保存目录和依赖仓库国内镜像。 而在 sts 的新 workspace，一般会默认到用户目录，所以，配置好下载的依赖保存目录之后，直接 copy 一份儿到这个默认目录，省得每次都手动修改。IDEA 也一样，新项目的 Maven 配置目录，默认也指向用户目录了。 Maven 文件在 sts 之外被修改，sts 实时更新。 sts 默认是不会实时更新的，这其实很不方便，因为有时候需要用其它编辑器修改一下如 html 文件，或者团队开发时，从源代码管理服务器获取到最新的文件。一般的做法是刷新（F5）一下，但是实际情况是多个文件有修改，刷新一下并不能全部重新加载。 可以通过设置，让 sts 自动刷新。 修改快捷键使用过程中，我最想改的就是文件切换快捷键，sts 默认是 Ctrl+F6，而 IDEA 默认的是 Ctrl+tab，IDEA 的快捷键更加文件，仅用左手就可以很容易的做到，而且跟 windows 的软件切换比较接近。sts 的 Ctrl+F6，只有那些拥有超级大的手的人可以单手操作~~~以下，为修改方法。 其次是代码格式化的快捷键，sts 默认是 Ctrl+Shift+F，而 IDEA 的是 Ctrl+Alt+L。 其它的，自己探索吧… 代码显示方式 按 package 分或者按文件夹分个人觉得，按 package 分太多了，还是按文件夹显示更符合 windows 的操作习惯。IDEA 默认就是这种方式，而 sts 默认是按 package 显示的。 默认是 Flat，即按 package 显示 选 Hierarchical 按文件夹显示","categories":[{"name":"STS","slug":"STS","permalink":"https://www.lovesofttech.com/categories/STS/"},{"name":"Eclipse","slug":"STS/Eclipse","permalink":"https://www.lovesofttech.com/categories/STS/Eclipse/"},{"name":"experience","slug":"STS/Eclipse/experience","permalink":"https://www.lovesofttech.com/categories/STS/Eclipse/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"STS","slug":"STS","permalink":"https://www.lovesofttech.com/tags/STS/"},{"name":"Eclipse","slug":"Eclipse","permalink":"https://www.lovesofttech.com/tags/Eclipse/"}]},{"title":"MarkDown 使用经验","slug":"general/markdown","date":"2017-10-05T16:00:00.000Z","updated":"2020-09-01T02:53:12.952Z","comments":true,"path":"general/markdown.html","link":"","permalink":"https://www.lovesofttech.com/general/markdown.html","excerpt":"如题","text":"如题 换行 使用回车换行，不能达到目的，可以使用html的标签： 1&lt;/br&gt; 可以在需要换行的地方空一行（两个回车）。 在需要换行的地方，输入两个到多个空格（半角）。 注释123456789101112131415161718192021222324# 下面的注释都是可用的，重点是 [] 里面要有内容，大致试了以下几种。其次，[comment]: 后面的文字，不要带 Markdown 语法，否则不会被注释。[comment]: &lt;&gt; (This is a comment, it will not be included)[comment]: &lt;&gt; (in the output file unless you use it in)[comment]: &lt;&gt; (a reference style link.)[//]: &lt;&gt; (This is also a comment.)[//]: # (This may be the most platform independent comment)[abc]: asfasf[^_^]: aaaa[&gt;_&lt;]: aaa[&gt;_&gt;]: bef# 下面这种格式，1 这一行可以被注释，但是 2 这一行不会被注释[comment]: 1 2# 下面这些带了 Markdown 的格式的文字，都不会被注释[comment]: 1. abc 1. efg [comment]: * efg[comment]: 1. def[comment]: [baidu](http://baidu.com) 表格注：冒号【:】代表对齐方式，: 与 | 之间不要有空格，否则对齐会有些不兼容。1234| a | b | c ||:-------:|:------------- | ----------:|| 居中 | 左对齐 | 右对齐 ||abc|def|ggh| a b c 居中 左对齐 右对齐 abc def ggh 简约写法1234a|b|c :-:|:- |-:居中|左对齐|右对齐 abc|def|ggh a b c 居中 左对齐 右对齐 abc def ggh 列宽度调整-表示列的宽度权重，比如如下，–、-，表示第一列的宽度是第二列的俩倍。需要注意的是，有些 markdwon 编辑器并不能解析这个语法，比如 hexo，在 hexo 里面，所有列的宽度都是一样的。123|2x|1x||:--|:-||2|1| 2x 1x 2 1 语义标记 描述 效果 代码 斜体 斜体 *斜体* 加粗 加粗 **加粗** 加粗+斜体 加粗+斜体 ***加粗+斜体*** 加粗+斜体 加粗+斜体 **_加粗+斜体_** 删除线 删除线 ~~删除线~~ 缩进 轻轻的我走了， 正如我轻轻的来； 我轻轻的招手， 作别西天的云彩。那河畔的金柳， 是夕阳中的新娘； 波光里的艳影， 在我的心头荡漾。软泥上的青荇， 油油的在水底招摇； 在康河的柔波里， 我甘心做一条水草！ 那榆荫下的一潭， 不是清泉， 是天上虹； 揉碎在浮藻间， 沉淀着彩虹似的梦。寻梦？撑一支长篙， 向青草更青处漫溯； 满载一船星辉， 在星辉斑斓里放歌。但我不能放歌， 悄悄是别离的笙箫； 夏虫也为我沉默， 沉默是今晚的康桥！悄悄的我走了， 正如我悄悄的来； 我挥一挥衣袖， 不带走一片云彩。 页面添加锚点，跳到本页指定位置 添加锚点: 在需要跳转到的标题位置添加链接 &lt;a name=&quot;锚点名称&quot;&gt;标题一&lt; /a&gt; 添加链接: &lt;a href=&quot;#锚点名称&quot;&gt;标题一&lt; /a&gt;","categories":[{"name":"MarkDown","slug":"MarkDown","permalink":"https://www.lovesofttech.com/categories/MarkDown/"},{"name":"experience","slug":"MarkDown/experience","permalink":"https://www.lovesofttech.com/categories/MarkDown/experience/"}],"tags":[{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"},{"name":"MarkDown","slug":"MarkDown","permalink":"https://www.lovesofttech.com/tags/MarkDown/"}]},{"title":"CentOS7 下 安装配置 MongoDB","slug":"database/centOS7MongoDB","date":"2017-10-04T16:00:00.000Z","updated":"2020-09-01T02:53:12.916Z","comments":true,"path":"database/centOS7MongoDB.html","link":"","permalink":"https://www.lovesofttech.com/database/centOS7MongoDB.html","excerpt":"介绍安装、远程连接以及基本操作。","text":"介绍安装、远程连接以及基本操作。环境：CentOS7-1708MongoDB:3.4.9 安装并设置为开机启动看官网教程，很详细，按照文档操作即可 安装过程，简单记录如下 添加 yum 源 123456789cd /etc/yum.repos.d/vim /etc/yum.repos.d/mongodb-org-3.4.repo# 添加如下内容[mongodb-org-3.4]name=MongoDB Repositorybaseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/gpgcheck=1enabled=1gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc 添加 yum 源后，通过 yum 安装 1yum install -y mongodb-org Disable SELinux by setting the SELINUX setting to disabled in /etc/selinux/config 123vi /etc/selinux/config# 将原来的注释掉，添加：SELINUX=disabled 设置为开机启动 12chkconfig mongod on# 或者 systemctl enable mongod.service 重启，检测是否已经启动 1234567891011121314151617[root@192 ~]# service mongod statusRedirecting to /bin/systemctl status mongod.service● mongod.service - High-performance, schema-free document-oriented database Loaded: loaded (/usr/lib/systemd/system/mongod.service; enabled; vendor preset: disabled) Active: active (running) since Thu 2017-10-05 21:59:36 HKT; 2min 7s ago Docs: https://docs.mongodb.org/manual Process: 1436 ExecStartPre=/usr/bin/chmod 0755 /var/run/mongodb (code=exited, status=0/SUCCESS) Process: 1426 ExecStartPre=/usr/bin/chown mongod:mongod /var/run/mongodb (code=exited, status=0/SUCCESS) Process: 1415 ExecStartPre=/usr/bin/mkdir -p /var/run/mongodb (code=exited, status=0/SUCCESS) Main PID: 1702 (mongod) CGroup: /system.slice/mongod.service └─1702 /usr/bin/mongod -f /etc/mongod.confOct 05 21:59:35 192.168.1.18 systemd[1]: Starting High-performance, schema-free document-oriented database...Oct 05 21:59:36 192.168.1.18 systemd[1]: Started High-performance, schema-free document-oriented database.Oct 05 21:59:47 192.168.1.18 mongod[1443]: about to fork child process, waiting until server is ready for connections.Oct 05 21:59:47 192.168.1.18 mongod[1443]: forked process: 1702 查看日志 123456789101112[root@192 ~]# cd /var/log/mongodb/[root@192 mongodb]# tail -f mongod.log 2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is &apos;always&apos;.2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** We suggest setting it to &apos;never&apos;2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.635+0800 I FTDC [initandlisten] Initializing full-time diagnostic data capture with directory &apos;/var/lib/mongo/diagnostic.data&apos;2017-10-05T21:59:50.784+0800 I INDEX [initandlisten] build index on: admin.system.version properties: &#123; v: 2, key: &#123; version: 1 &#125;, name: &quot;incompatible_with_version_32&quot;, ns: &quot;admin.system.version&quot; &#125;2017-10-05T21:59:50.784+0800 I INDEX [initandlisten] building index using bulk method; build may temporarily use up to 500 megabytes of RAM2017-10-05T21:59:50.788+0800 I INDEX [initandlisten] build index done. scanned 0 total records. 0 secs2017-10-05T21:59:50.789+0800 I COMMAND [initandlisten] setting featureCompatibilityVersion to 3.42017-10-05T21:59:50.790+0800 I NETWORK [thread1] waiting for connections on port 27017 注意事项。 The MongoDB instance stores its data files in /var/lib/mongo and its log files in /var/log/mongodb by default, and runs using the mongod user account. You can specify alternate log and data file directories in /etc/mongod.conf. See systemLog.path and storage.dbPath for additional information. If you change the user that runs the MongoDB process, you must modify the access control rights to the /var/lib/mongo and /var/log/mongodb directories to give this user access to these directories. 实现远程连接 修改配置 1234567vi /etc/mongod.conf# 注释掉下面这行，备注也有说明。# bindIp: 127.0.0.1 # Listen to local interface only, comment to listen on all interfaces.# 将 #security:中的#去掉，并在其下加一行，空两个空格，加上authorization: enabled，如下security: authorization: enabled# 注意：authorization: enabled中冒号后加一个空格，这是 yaml 语法格式 防火墙开放 27017 端口CentOS 7中防火墙是一个非常的强大的功能，在CentOS 6.5中在iptables防火墙中进行了升级了。名字也变了，叫：firewall 12345[root@192 ~]# firewall-cmd --permanent --add-port=27017/tcpsuccess[root@192 ~]# firewall-cmd --reloadsuccess[root@192 ~]# systemctl restart firewalld.service 参数含义 firwall-cmd：是Linux提供的操作firewall的一个工具； –permanent：表示设置为持久； –add-port：标识添加的端口； –zone=public：指定的 zone 为 public；上面的参数没用这个，zone 默认为 public 如果 –zone=dmz 这样设置的话，会在 dmz.xml 文件中新增一条。 执行上面的命令之后，被修改的配置文件为: /etc/firewalld/zones/public.xml12345678&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;zone&gt; &lt;short&gt;Public&lt;/short&gt; &lt;description&gt;For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.&lt;/description&gt; &lt;service name=\"ssh\"/&gt; &lt;service name=\"dhcpv6-client\"/&gt; &lt;port protocol=\"tcp\" port=\"27017\"/&gt;&lt;/zone&gt; 其中最后一行就是新添加进去的。 附 firewall常用命令 firewall常用命令 功能 service firewalld restart 重启 service firewalld start 开启 service firewalld stop 关闭 systemctl status firewall 或 firewall-cmd –state 查看firewall服务状态 firewall-cmd –list-all 查看防火墙规则 systemctl disable firewalld.service 禁止firewall开机启动 firewall常用命令，测试123456789101112131415161718192021222324252627282930313233343536[root@192 zones]# firewall-cmd --staterunning[root@192 zones]# systemctl status firewalld.service ● firewalld.service - firewalld - dynamic firewall daemon Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled) Active: active (running) since Thu 2017-10-05 23:49:12 HKT; 13s ago Docs: man:firewalld(1) Main PID: 4325 (firewalld) CGroup: /system.slice/firewalld.service └─4325 /usr/bin/python -Es /usr/sbin/firewalld --nofork --nopidOct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete FORWARD --destination 192.168.122.0/24 --out-interface virbr0 --match conntrack --ctstate ESTABLISHED,RELATED --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete FORWARD --source 192.168.122.0/24 --in-interface virbr0 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete FORWARD --in-interface virbr0 --out-interface virbr0 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete FORWARD --out-interface virbr0 --jump REJECT&apos; failed: iptables: No chain/target/match by that name.Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete FORWARD --in-interface virbr0 --jump REJECT&apos; failed: iptables: No chain/target/match by that name.Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete INPUT --in-interface virbr0 --protocol udp --destination-port 53 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete INPUT --in-interface virbr0 --protocol tcp --destination-port 53 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete OUTPUT --out-interface virbr0 --protocol udp --destination-port 68 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete INPUT --in-interface virbr0 --protocol udp --destination-port 67 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).Oct 05 23:49:13 192.168.1.18 firewalld[4325]: WARNING: COMMAND_FAILED: &apos;/usr/sbin/iptables -w2 -w --table filter --delete INPUT --in-interface virbr0 --protocol tcp --destination-port 67 --jump ACCEPT&apos; failed: iptables: Bad rule (does a matching rule exist in that chain?).[root@192 zones]# firewall-cmd --list-all public (active) target: default icmp-block-inversion: no interfaces: enp0s3 sources: services: ssh dhcpv6-client ports: 27017/tcp protocols: masquerade: no forward-ports: source-ports: icmp-blocks: rich rules: 添加管理员账户启动 Mongo shell，并依次执行命令123456789101112131415161718192021222324252627282930313233343536373839404142434445[root@192 ~]# mongoMongoDB shell version v3.4.9connecting to: mongodb://127.0.0.1:27017MongoDB server version: 3.4.9Welcome to the MongoDB shell.For interactive help, type &quot;help&quot;.For more comprehensive documentation, see http://docs.mongodb.org/Questions? Try the support group http://groups.google.com/group/mongodb-userServer has startup warnings: 2017-10-05T21:59:50.254+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.254+0800 I CONTROL [initandlisten] ** WARNING: Access control is not enabled for the database.2017-10-05T21:59:50.254+0800 I CONTROL [initandlisten] ** Read and write access to data and configuration is unrestricted.2017-10-05T21:59:50.254+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/enabled is &apos;always&apos;.2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** We suggest setting it to &apos;never&apos;2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] 2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** WARNING: /sys/kernel/mm/transparent_hugepage/defrag is &apos;always&apos;.2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] ** We suggest setting it to &apos;never&apos;2017-10-05T21:59:50.255+0800 I CONTROL [initandlisten] &gt; show dbs;admin 0.000GBlocal 0.000GB&gt; use admin;switched to db admin&gt; db.createUser( &#123; user: &quot;mongoRoot&quot;, pwd: &quot;mongoRootPassword&quot;, roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ] &#125;)Successfully added user: &#123; &quot;user&quot; : &quot;mongoRoot&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;userAdminAnyDatabase&quot;, &quot;db&quot; : &quot;admin&quot; &#125; ]&#125;&gt; exit; 重启 mongodb 数据库123[root@192 ~]# service mongod restartRedirecting to /bin/systemctl restart mongod.service[root@192 ~]# service 是 CentOS 7 以前的命令，新的命令是 systemctl，旧命令还能执行，应该是为了兼容，或者说是照顾 CentOS7 以前的用户。 12[root@192 ~]# systemctl restart mongod.service[root@192 ~]# 开启认证之后，再用 mongo 进入 mongo shell，需要先认证才能执行管理命令。123456789101112131415161718192021222324[root@192 ~]# mongoMongoDB shell version v3.4.9connecting to: mongodb://127.0.0.1:27017MongoDB server version: 3.4.9&gt; show dbs;2017-10-06T00:13:40.276+0800 E QUERY [thread1] Error: listDatabases failed:&#123; &quot;ok&quot; : 0, &quot;errmsg&quot; : &quot;not authorized on admin to execute command &#123; listDatabases: 1.0 &#125;&quot;, &quot;code&quot; : 13, &quot;codeName&quot; : &quot;Unauthorized&quot;&#125; :_getErrorWithCode@src/mongo/shell/utils.js:25:13Mongo.prototype.getDBs@src/mongo/shell/mongo.js:62:1shellHelper.show@src/mongo/shell/utils.js:769:19shellHelper@src/mongo/shell/utils.js:659:15@(shellhelp2):1:1&gt; use adminswitched to db admin&gt; db.auth(&quot;mongoRoot&quot;, &quot;mongoRootPassword&quot;)1&gt; show dbsadmin 0.000GBlocal 0.000GB&gt; 创建数据库1234567891011121314151617181920212223242526&gt; use myDBswitched to db myDB&gt; db.createUser( &#123; user: &quot;myDBRoot&quot;, pwd: &quot;myDBRootPassword&quot;, roles: [ &#123; role: &quot;dbAdmin&quot;, db: &quot;myDB&quot; &#125; ] &#125;)Successfully added user: &#123; &quot;user&quot; : &quot;myDBRoot&quot;, &quot;roles&quot; : [ &#123; &quot;role&quot; : &quot;dbAdmin&quot;, &quot;db&quot; : &quot;myDB&quot; &#125; ]&#125;&gt; db.auth(&quot;myDBRoot&quot;, &quot;myDBRootPassword&quot;)1&gt; db.createCollection(myDBCollection)2017-10-06T00:43:44.050+0800 E QUERY [thread1] ReferenceError: myDBCollection is not defined :@(shell):1:1&gt; db.createCollection(&quot;myDBCollection&quot;)&#123; &quot;ok&quot; : 1 &#125;&gt; 创建超级管理员及普通的用户，修改用户密码。注意一点，帐号是跟着库走的，所以在指定库里授权，必须也在指定库里验证(auth)。 常用角色 角色 角色说明 Read 允许用户读取指定数据库。 readWrite 允许用户读写指定数据库。 dbAdmin 允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile。 userAdmin 允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户。 clusterAdmin 只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。 readAnyDatabase 只在admin数据库中可用，赋予用户所有数据库的读权限。 readWriteAnyDatabase 只在admin数据库中可用，赋予用户所有数据库的读写权限。 userAdminAnyDatabase 只在admin数据库中可用，赋予用户所有数据库的userAdmin权限。 dbAdminAnyDatabase 只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。 root 只在admin数据库中可用。超级账号，超级权限。 IDEA 插件方式连接 MongoDB超时才返回错误信息认证方式没有选最后一项，即：SCRAM-SHA-1，报错，前面两项都报错，而且需要超时才报错。1com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting for a server that matches ReadPreferenceServerSelector&#123;readPreference=primary&#125;. Client view of cluster state is &#123;type=UNKNOWN, servers=[&#123;address=192.168.1.18:27017, type=UNKNOWN, state=CONNECTING, exception=&#123;com.mongodb.MongoSecurityException: Exception authenticating MongoCredential&#123;mechanism=PLAIN, userName=&apos;myDBRoot&apos;, source=&apos;myDB&apos;, password=&lt;hidden&gt;, mechanismProperties=&#123;&#125;&#125;&#125;, caused by &#123;com.mongodb.MongoCommandException: Command failed with error 2: &apos;Unsupported mechanism PLAIN&apos; on server 192.168.1.18:27017. The full response is &#123; &quot;supportedMechanisms&quot; : [&quot;MONGODB-CR&quot;, &quot;MONGODB-X509&quot;, &quot;SCRAM-SHA-1&quot;], &quot;ok&quot; : 0.0, &quot;errmsg&quot; : &quot;Unsupported mechanism PLAIN&quot;, &quot;code&quot; : 2, &quot;codeName&quot; : &quot;BadValue&quot; &#125;&#125;&#125;] 立即返回错误信息认证方式选：SCRAM-SHA-1，如果用户名输入错误，会立即，注意，是立即返回错误信息。1com.mongodb.MongoCommandException: Command failed with error 13: &apos;not authorized on myDBmyDB to execute command &#123; listCollections: 1, cursor: &#123; batchSize: 0 &#125; &#125;&apos; on server 192.168.1.18:27017. The full response is &#123; &quot;ok&quot; : 0.0, &quot;errmsg&quot; : &quot;not authorized on myDBmyDB to execute command &#123; listCollections: 1, cursor: &#123; batchSize: 0 &#125; &#125;&quot;, &quot;code&quot; : 13, &quot;codeName&quot; : &quot;Unauthorized&quot; &#125;","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"MongoDB","slug":"CentOS/MongoDB","permalink":"https://www.lovesofttech.com/categories/CentOS/MongoDB/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"MongoDB","slug":"MongoDB","permalink":"https://www.lovesofttech.com/tags/MongoDB/"}]},{"title":"CentOS 7.5 通过源码自动发布 hexo 博客","slug":"general/centOS7HexoBlog","date":"2017-09-30T16:00:00.000Z","updated":"2020-09-01T02:53:12.943Z","comments":true,"path":"general/centOS7HexoBlog.html","link":"","permalink":"https://www.lovesofttech.com/general/centOS7HexoBlog.html","excerpt":"前提是有自己的服务器和域名。 如果没有服务器，也没有域名，建议使用 gitee 和 github 的 pages。 如果没有服务器，但是有已经备案的域名（备案时一定有服务器，这是备案前提条件，等备案下来后，通常情况下，服务器可以不用再续费），那么推荐使用 github 的 pages，可以绑定到自己的域名。 参考：github pages 绑定自己的域名","text":"前提是有自己的服务器和域名。 如果没有服务器，也没有域名，建议使用 gitee 和 github 的 pages。 如果没有服务器，但是有已经备案的域名（备案时一定有服务器，这是备案前提条件，等备案下来后，通常情况下，服务器可以不用再续费），那么推荐使用 github 的 pages，可以绑定到自己的域名。 参考：github pages 绑定自己的域名 前提条件 在服务器上安装配置 git，请参考：CentOS 7.5 安装配置 git 在服务器上安装配置 node，请参考：CentOS 7.5 安装配置 Node 源码项目，以码云为例，配置好 ssh 公钥，请参考：CentOS 7.5 配置 git SSH key 免密获取 gitee.com 个人项目最新代码 发布首先，全局安装 hexo1cnpm i hexo-cli -g 其次，安装依赖项目 clone 下来之后，运行 cnpm i 安装依赖 从源码发布最新版本，脚本要在服务器上自动部署博客，只需写好发布脚本，写定时执行脚本(crontab -e)，即可达到代码提交（push）之后，博客自动更新发布的目的。或者，在有更新的时候再手工执行该脚本即可。 发布脚本1[root@centOS7BasicForTest shell.script]# vi doc.tech.sh 添加以下内容123456#!/bin/shsource /etc/profilecd /home/unginx/apps/doc.techgit pull#hexo clean #根据需要添加，建议不要这条命令hexo g 定时执行发布脚本的脚本以下，每分钟检查一次更新，如果有更新则编译发布。12[root@centOS7BasicForTest shell.script]# crontab -e* * * * * /root/shell.script/doc.tech.sh 记得要在脚本 doc.tech.sh 的开头加上下面的脚本，否则不能正确执行脚本12#!/bin/shsource /etc/profile 配置 blog 独立域名以下以 nginx 为例12345678910111213141516171819server &#123; listen 80; server_name www.lovesofttech.com; charset utf-8; access_log logs/lovesofttech.access.log; error_log logs/lovesofttech.error.log; location / &#123; root /home/unginx/apps/elsafly/public; index index.html; &#125;&#125;# 以下为 301 跳转server &#123; listen 80; server_name lovesofttech.com www.saleonline.top saleonline.top; rewrite ^(.*)$ http://www.lovesofttech.com$1 permanent;&#125; 关于 nginx 配置，请参考：CentOS7 安装 Nginx 并设置开机自启动","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"hexo","slug":"CentOS/hexo","permalink":"https://www.lovesofttech.com/categories/CentOS/hexo/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"MBG 生成的 mapper 支持写入记录后返回主键值的配置","slug":"mybatis/MBGConfig","date":"2017-09-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.066Z","comments":true,"path":"mybatis/MBGConfig.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/MBGConfig.html","excerpt":"如题","text":"如题 下面的配置，不会返回刚写入记录的主键。1&lt;table tableName=&quot;rt_sms_orders&quot; domainObjectName=&quot;SmsOrders&quot;&gt;&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;&lt;/table&gt; 要改成下面这样：1&lt;table tableName=&quot;rt_sms_orders&quot; domainObjectName=&quot;SmsOrders&quot;&gt;&lt;property name=&quot;useActualColumnNames&quot; value=&quot;false&quot;/&gt;&lt;generatedKey identity=&quot;true&quot; type=&quot;post&quot; column=&quot;id&quot; sqlStatement=&quot;Mysql&quot;/&gt;&lt;/table&gt; 生成的 mapper.xml 文件中的 insert 方法，多了下面的内容123&lt;selectKey keyProperty=\"id\" order=\"AFTER\" resultType=\"java.lang.Long\"&gt; SELECT LAST_INSERT_ID()&lt;/selectKey&gt; 下面是 MyBatis 的配置文件，加了分页插件的。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;&lt;configuration&gt; &lt;settings&gt; &lt;setting name=\"callSettersOnNulls\" value=\"true\"/&gt; &lt;setting name=\"cacheEnabled\" value=\"true\"/&gt; &lt;setting name=\"lazyLoadingEnabled\" value=\"true\"/&gt; &lt;setting name=\"multipleResultSetsEnabled\" value=\"true\"/&gt; &lt;setting name=\"useColumnLabel\" value=\"true\"/&gt; &lt;setting name=\"useGeneratedKeys\" value=\"true\"/&gt; &lt;setting name=\"autoMappingBehavior\" value=\"PARTIAL\"/&gt; &lt;setting name=\"defaultExecutorType\" value=\"SIMPLE\"/&gt; &lt;setting name=\"defaultStatementTimeout\" value=\"25\"/&gt; &lt;setting name=\"safeRowBoundsEnabled\" value=\"false\"/&gt; &lt;setting name=\"mapUnderscoreToCamelCase\" value=\"false\"/&gt; &lt;setting name=\"localCacheScope\" value=\"SESSION\"/&gt; &lt;setting name=\"jdbcTypeForNull\" value=\"OTHER\"/&gt; &lt;setting name=\"lazyLoadTriggerMethods\" value=\"equals,clone,hashCode,toString\"/&gt; &lt;setting name=\"logImpl\" value=\"LOG4J2\"/&gt; &lt;/settings&gt; &lt;plugins&gt; &lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt; &lt;plugin interceptor=\"com.github.pagehelper.PageHelper\"&gt; &lt;!-- 4.0.0以后版本可以不设置该参数 --&gt; &lt;property name=\"dialect\" value=\"mysql\"/&gt; &lt;!-- 该参数默认为false --&gt; &lt;!-- 设置为true时，会将RowBounds第一个参数offset当成pageNum页码使用 --&gt; &lt;!-- 和startPage中的pageNum效果一样--&gt; &lt;property name=\"offsetAsPageNum\" value=\"true\"/&gt; &lt;!-- 该参数默认为false --&gt; &lt;!-- 设置为true时，使用RowBounds分页会进行count查询 --&gt; &lt;property name=\"rowBoundsWithCount\" value=\"true\"/&gt; &lt;!-- 设置为true时，如果pageSize=0或者RowBounds.limit = 0就会查询出全部的结果 --&gt; &lt;!-- （相当于没有执行分页查询，但是返回结果仍然是Page类型）--&gt; &lt;property name=\"pageSizeZero\" value=\"true\"/&gt; &lt;!-- 3.3.0版本可用 - 分页参数合理化，默认false禁用 --&gt; &lt;!-- 启用合理化时，如果pageNum&lt;1会查询第一页，如果pageNum&gt;pages会查询最后一页 --&gt; &lt;!-- 禁用合理化时，如果pageNum&lt;1或pageNum&gt;pages会返回空数据 --&gt; &lt;property name=\"reasonable\" value=\"false\"/&gt; &lt;!-- 3.5.0版本可用 - 为了支持startPage(Object params)方法 --&gt; &lt;!-- 增加了一个`params`参数来配置参数映射，用于从Map或ServletRequest中取值 --&gt; &lt;!-- 可以配置pageNum,pageSize,count,pageSizeZero,reasonable,orderBy,不配置映射的用默认值 --&gt; &lt;!-- 不理解该含义的前提下，不要随便复制该配置 --&gt; &lt;property name=\"params\" value=\"pageNum=pageHelperStart;pageSize=pageHelperRows;\"/&gt; &lt;!-- 支持通过Mapper接口参数来传递分页参数 --&gt; &lt;property name=\"supportMethodsArguments\" value=\"false\"/&gt; &lt;!-- always总是返回PageInfo类型,check检查返回类型是否为PageInfo,none返回Page --&gt; &lt;property name=\"returnPageInfo\" value=\"none\"/&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/configuration&gt;","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"MyBatis 普通知识点记录","slug":"mybatis/experience","date":"2017-09-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.070Z","comments":true,"path":"mybatis/experience.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/experience.html","excerpt":"只是遇到了才记录一下，主要是备忘。","text":"只是遇到了才记录一下，主要是备忘。 $ 与 # 的区别# 会当做参数处理，有安全检查，可有效防止恶意攻击，而 $ 则是直接替换。 Table Configuration apiCallLog matched more than one tableMyBatis Generator 生成器把其他数据库的同名表也生成的问题。 在 jdbc 连接配置添加属性：&lt;property name=&quot;nullCatalogMeansCurrent&quot; value=&quot;true&quot;/&gt;，如下：1234567&lt;!--数据库链接地址账号密码--&gt;&lt;jdbcConnection driverClass=\"com.mysql.cj.jdbc.Driver\" connectionURL=\"jdbc:mysql://localhost:3306/apg?useSSL=false&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf8&amp;amp;allowMultiQueries=true&amp;amp;autoReconnect=true&amp;amp;failOverReadOnly=false&amp;amp;socketTimeout=20000&amp;amp;serverTimezone=Hongkong\" userId=\"admin\" password=\"password\"&gt; &lt;property name=\"nullCatalogMeansCurrent\" value=\"true\"/&gt;&lt;/jdbcConnection&gt; 参考：http://www.mybatis.org/generator/usage/mysql.html MyBatis 查询某一整形字段，如果没有记录，返回什么？返回 null而且函数返回值应该是 Integer，如果是 int 则会引发转换异常。12select sms_remain_amount from rt_bizwhere biz_id = #&#123;sellerID,jdbcType=BIGINT&#125; mapper.xml 配置的包名如果不对，会提示相关的类找不到12Caused by: java.lang.ClassNotFoundException: Cannot find class: mis.api.biz.dal.fin.request.FinanceNewStudentRequestCaused by: org.apache.ibatis.type.TypeException: Could not resolve type alias &apos;mis.api.biz.dal.fin.request.FinanceNewStudentRequest&apos;. Cause: java.lang.ClassNotFoundException: Cannot find class: mis.api.biz.dal.fin.request.FinanceNewStudentRequest 原因是在 mapper.xml 里对应的 pojo 的包名改了，xml 没有同步修改。 将 xml 文件放到源码（src）下123452019-06-19 10:12:11.592 ERROR 10756 --- [p-nio-90-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): demo.domain.dal.mapper.original.SysDeptMapper.selectByExample] with root causeorg.apache.ibatis.binding.BindingException: Invalid bound statement (not found): demo.domain.dal.mapper.original.SysDeptMapper.selectByExample at org.apache.ibatis.binding.MapperMethod$SqlCommand.&lt;init&gt;(MapperMethod.java:235) ~[mybatis-3.5.1.jar:3.5.1] 解决在项目的 pom 文件中添加：1234567891011&lt;build&gt; &lt;resources&gt; &lt;resource&gt; &lt;directory&gt;src/main/java&lt;/directory&gt; &lt;includes&gt; &lt;include&gt;**/*.xml&lt;/include&gt; &lt;/includes&gt; &lt;filtering&gt;false&lt;/filtering&gt; &lt;/resource&gt; &lt;/resources&gt;&lt;/build&gt; 还有以下可能的情况导致 not found 的异常 mapper.xml中没有加入namespace mapper.xml中的方法和接口mapper的方法不对应 mapper.xml没有加入到mybatis-config.xml中(即总的配置文件)，例外：配置了mapper文件的包路径的除外 mapper.xml文件名和所写的mapper名称不相同。 后台任务，在查询相关任务表时，需要查询满足条件的限定行数而不是满足条件的全部记录后台任务一般每次查询固定的行数来处理数据，可以借助Example类和分页插件快速写出查询代码来，但是这样会牺牲性能，因为分页插件会去查询一次汇总。所以，还是要自己写一个扩展来查询，如：12345678910111213&lt;select id=\"getTradeListForMemberSummarizing\" parameterType=\"crm.model.view.in.TradeSearchView\" resultType=\"crm.model.entity.CrmTrade\"&gt; select &lt;include refid=\"Base_Column_List\" /&gt; from crmTrade &lt;where&gt; countStatus = #&#123;countStatus,jdbcType=INTEGER&#125; and tradeStatus in &lt;foreach item=\"tradeStatus\" index=\"index\" collection=\"tradeStatusList\" open=\"(\" separator=\",\" close=\")\"&gt; #&#123;tradeStatus,jdbcType=BIGINT&#125; &lt;/foreach&gt; &lt;/where&gt; limit 0, #&#123;limitCount,jdbcType=INTEGER&#125;&lt;/select&gt; MyBatis xml 文件里的条件判断单个的字符要写到双引号里面才行，改为&lt;if test=&#39;takeWay == &quot;1&quot;&#39;&gt;或者改为&lt;if test=&quot;takeWay == &#39;1&#39;.toString() &quot;&gt;把&lt;if test=&quot;takeWay == &#39;1&#39; and workday != null &quot;&gt; 改为&lt;if test=&#39;takeWay == &quot;1&quot; and workday != null &#39;&gt; 或改为&lt;if test=&quot;takeWay == &#39;1&#39;.toString() and workday != null &quot;&gt;即可。 原因是：mybatis是用OGNL表达式来解析的，在OGNL的表达式中，‘1’会被解析成字符，java是强类型的，char 和 一个string 会导致不等，所以if标签中的sql不会被解析。总结下使用方法：单个的字符要写到双引号里面或者使用.toString()才行！ MyBatis if test=验证的时候发生 There is no getter for property named &#39;parentID&#39; in &#39;class java.lang.Integer&#39;parameterType=”java.lang.Integer”123&lt;if test=\"parentID &gt; 0\"&gt; and parentID=#&#123;parentID,jdbcType=INTEGER&#125;&lt;/if&gt; 换成：123&lt;if test=\"_parameter &gt; 0\"&gt; and parentID=#&#123;parentID,jdbcType=INTEGER&#125;&lt;/if&gt; 如果 parameterType 对应的是 pojo 并且设置了 getter 即可正常访问属性。 mybatis 插件开发 （快速入门）MyBatis Generator源码分析修改和自定义插件 MyBatis Generator 基础扩展 MyBatis Generator 1.3.4 扩展，可以设置 Mapper（Dao）后缀 mybatis 日志级别ERROR, WARN, INFO, DEBUG or TRACE 解决mybatis动态传入order by 参数的时候不生效的问题字符串替换默认情况下，使用#{}格式的语法会导致MyBatis创建预处理语句属性并以它为背景设置安全的值（比如?）。这样做很安全，很迅速也是首选做法，有时你只是想直接在SQL语句中插入一个不改变的字符串。比如，像ORDER BY，你可以这样来使用：ORDER BY ${columnName}这里MyBatis不会修改或转义字符串。重要：接受从用户输出的内容并提供给语句中不变的字符串，这样做是不安全的。这会导致潜在的SQL注入攻击，因此你不应该允许用户输入这些字段，或者通常自行转义并检查。 总的来说，就是order by 传参的时候要用$符号，用#不生效（尽管你在控制台看到的生成语句是正确的，但是结果就是不对！！^_^，这个记住就好了。）。 PageHelper PageHelper 方法使用了静态的 ThreadLocal 参数，分页参数和线程是绑定的。 ThreadLocal 在分库分表中也有用到。 1PageInfo pageInfo = (PageInfo) studentQueryResponseList; 报错：1java.lang.ClassCastException: class com.github.pagehelper.Page cannot be cast to class com.github.pagehelper.PageInfo (com.github.pagehelper.Page and com.github.pagehelper.PageInfo are in unnamed module of loader &apos;app&apos;) 换一种姿势就对了~~：1PageInfo pageInfo = new PageInfo(studentQueryResponseList);","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"svn 在 CentOS6 安装以及项目管理","slug":"general/centOSSvnProjectManage","date":"2017-09-24T16:00:00.000Z","updated":"2020-09-01T02:53:12.944Z","comments":true,"path":"general/centOSSvnProjectManage.html","link":"","permalink":"https://www.lovesofttech.com/general/centOSSvnProjectManage.html","excerpt":"现在更多的公司已经转向 git 了，不过，svn 也是相当强大的，配置使用方面，比 git 要简单和容易上手一些。 强烈推荐使用 git，更强大更受欢迎，使用也越来越广泛。 关于 git 的使用，可以参考本博客的 git 系列文章。","text":"现在更多的公司已经转向 git 了，不过，svn 也是相当强大的，配置使用方面，比 git 要简单和容易上手一些。 强烈推荐使用 git，更强大更受欢迎，使用也越来越广泛。 关于 git 的使用，可以参考本博客的 git 系列文章。 安装 检查是否已安装 1rpm -qa subversion 卸载旧版本 1yum remove subversion 安装 1yum install subversion 检查是否安装成功 1svnserve --version 创建 svn 代码存放目录 /opt/svn 1mkdir -p /opt/svn 打开 svn 服务1svnserve -d -r /opt/svn 也可指定 svnserve 的目录执行1/usr/bin/svnserve -d -r /opt/svn checkout 项目路径：svn://[服务器 ip 或域名]/[项目名]，如：svn://192.168.1.123/projectName 结束 svn 服务进程killall svnserve centOS 开机自动启动SVN服务的方法1、编辑rc.local文件vi /etc/rc.d/rc.local2、加入如下启动命令12#/usr/bin/svnserve -d -r /opt/svnsvnserve -d -r /opt/svn 多项目管理创建一个项目，并编辑项目的配置文件，将认证信息和权限信息指向 svn 根目录下的两个公共文件。12svnadmin create /opt/svn/crm.apivi /opt/svn/crm.api/conf/svnserve.conf 改成如下123456[general]anon-access = noneauth-access = writepassword-db = /opt/svn/passwdauthz-db = /opt/svn/authzrealm = crm.api 用户及密码配置以及权限设置用户及密码设置1vi /opt/svn/passwd 按如如下格式添加/设置用户名及用户密码，等号后面即是密码1234567[users]adminAndy = adminAndyadminJack = adminJackdevTom = devTomdevJerry = devJerrytesterRose = testerRosetesterElsa = testerElsa 组设置及项目的权限配置1vi /opt/svn/authz 改成123456789[groups]admin = adminAndy,adminJackdev = devTom,devJerrytester = testerRose,testerElsa[crm.api:/]@dev = rw@admin = rw@tester = r 配置说明： [groups] 为组的配置，一个组可以有多个用户 [crm.api:/] 项目访问权限设置，r 代表可读，w 代表可写， @dev 代表 dev 这个组。多个项目就有多个这样的配置，冒号前面就是项目名。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"svn","slug":"CentOS/svn","permalink":"https://www.lovesofttech.com/categories/CentOS/svn/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"svn","slug":"svn","permalink":"https://www.lovesofttech.com/tags/svn/"}]},{"title":"Java 特定版本的帮助文档下载方法","slug":"java/jdkHelperDocument","date":"2017-09-18T16:00:00.000Z","updated":"2020-09-01T02:53:12.987Z","comments":true,"path":"java/jdkHelperDocument.html","link":"","permalink":"https://www.lovesofttech.com/java/jdkHelperDocument.html","excerpt":"如题","text":"如题 以下，以当前最新的 jdk 版本 8u144 为例。 进入常规的 java SE 下载页面 点击页面上的【Technologies】 点击【Jave SE Platform at a Glance】下面的图片，进入页面：Java Platform Standard Edition 8 Documentation [然后点击【Downloads】下的【JDK 8 Documentation】] ，进入到Java SE Development Kit 8 Documentation 的下载页面 点击【Accept License Agreement】前面的单选钮，即可下载。 下载到的文档，在 IDEA 或 Eclipse 下，可以加载，在遇到相应的 java 方法时，按 F1，即可进入对应的文档页面。下面以 IDEA 为例。 intellij api 在线文档","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"正则表达式全部符号解释","slug":"general/regularExpression","date":"2017-09-13T16:00:00.000Z","updated":"2020-09-01T02:53:12.953Z","comments":true,"path":"general/regularExpression.html","link":"","permalink":"https://www.lovesofttech.com/general/regularExpression.html","excerpt":"如题","text":"如题字符 | 描述:———–|:————————————————–\\ | 将下一个字符标记为一个特殊字符、或一个原义字符、或一个 向后引用、或一个八进制转义符。例如，’n’ 匹配字符 “n”。’\\n’ 匹配一个换行符。序列 ‘\\‘ 匹配 “\\” 而 “(“ 则匹配 “(“。^ | 匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 ‘\\n’ 或 ‘\\r’ 之后的位置。$ | 匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 ‘\\n’ 或 ‘\\r’ 之前的位置。 | 匹配前面的子表达式零次或多次。例如，zo 能匹配 “z” 以及 “zoo”。 等价于{0,}。 | 匹配前面的子表达式一次或多次。例如，’zo+’ 能匹配 “zo” 以及 “zoo”，但不能匹配 “z”。+ 等价于 {1,}。? | 匹配前面的子表达式零次或一次。例如，”do(es)?” 可以匹配 “do” 或 “does” 中的”do” 。? 等价于 {0,1}。{n} n | 是一个非负整数。匹配确定的 n 次。例如，’o{2}’ 不能匹配 “Bob” 中的 ‘o’，但是能匹配 “food” 中的两个 o。{n,} | n 是一个非负整数。至少匹配n 次。例如，’o{2,}’ 不能匹配 “Bob” 中的 ‘o’，但能匹配 “foooood” 中的所有 o。’o{1,}’ 等价于 ‘o+’。’o{0,}’ 则等价于 ‘o‘。{n,m} | m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。例如，”o{1,3}” 将匹配 “fooooood” 中的前三个 o。’o{0,1}’ 等价于 ‘o?’。请注意在逗号和两个数之间不能有空格。? | 当该字符紧跟在任何一个其他限制符 (, +, ?, {n}, {n,}, {n,m}) 后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串 “oooo”，’o+?’ 将匹配单个 “o”，而 ‘o+’ 将匹配所有 ‘o’。. | 匹配除 “\\n” 之外的任何单个字符。要匹配包括 ‘\\n’ 在内的任何字符，请使用象 ‘[.\\n]’ 的模式。(pattern) | 匹配 pattern 并获取这一匹配。所获取的匹配可以从产生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中则使用 $0…$9 属性。要匹配圆括号字符，请使用 ‘(‘ 或 ‘)‘。(?:pattern) | 匹配 pattern 但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用 “或” 字符 (&#124;) 来组合一个模式的各个部分是很有用。例如， ‘industr(?:y&#124;ies) 就是一个比 ‘industr&#124;industries’ 更简略的表达式。(?=pattern) | 正向预查，在任何匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，’Windows (?=95&#124;98&#124;NT&#124;2000)’ 能匹配 “Windows 2000” 中的 “Windows” ，但不能匹配 “Windows 3.1” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。(?!pattern) | 负向预查，在任何不匹配 pattern 的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如’Windows (?!95&#124;98&#124;NT&#124;2000)’ 能匹配 “Windows 3.1” 中的 “Windows”，但不能匹配 “Windows 2000” 中的 “Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始x&#124;y | 匹配 x 或 y。例如，’z&#124;food’ 能匹配 “z” 或 “food”。’(z&#124;f)ood’ 则匹配 “zood” 或 “food”。[xyz] | 字符集合。匹配所包含的任意一个字符。例如， ‘[abc]’ 可以匹配 “plain” 中的 ‘a’。[^xyz] | 负值字符集合。匹配未包含的任意字符。例如， ‘[^abc]’ 可以匹配 “plain” 中的’p’。[a-z] | 字符范围。匹配指定范围内的任意字符。例如，’[a-z]’ 可以匹配 ‘a’ 到 ‘z’ 范围内的任意小写字母字符。[^a-z] | 负值字符范围。匹配任何不在指定范围内的任意字符。例如，’[^a-z]’ 可以匹配任何不在 ‘a’ 到 ‘z’ 范围内的任意字符。\\b | 匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。\\B | 匹配非单词边界。’er\\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。\\cx | 匹配由 x 指明的控制字符。例如， \\cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 ‘c’ 字符。\\d | 匹配一个数字字符。等价于 [0-9]。\\D | 匹配一个非数字字符。等价于 [^0-9]。\\f | 匹配一个换页符。等价于 \\x0c 和 \\cL。\\n | 匹配一个换行符。等价于 \\x0a 和 \\cJ。\\r | 匹配一个回车符。等价于 \\x0d 和 \\cM。\\s | 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \\f\\n\\r\\t\\v]。\\S | 匹配任何非空白字符。等价于 [^ \\f\\n\\r\\t\\v]。\\t | 匹配一个制表符。等价于 \\x09 和 \\cI。\\v | 匹配一个垂直制表符。等价于 \\x0b 和 \\cK。\\w | 匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。\\W | 匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]’。\\xn | 匹配 n，其中 n 为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，’\\x41’ 匹配 “A”。’\\x041’ 则等价于 ‘\\x04’ &amp; “1”。正则表达式中可以使用 ASCII 编码。.\\num | 匹配 num，其中 num 是一个正整数。对所获取的匹配的引用。例如，’(.)\\1’ 匹配两个连续的相同字符。\\n | 标识一个八进制转义值或一个向后引用。如果 \\n 之前至少 n 个获取的子表达式，则 n 为向后引用。否则，如果 n 为八进制数字 (0-7)，则 n 为一个八进制转义值。\\nm | 标识一个八进制转义值或一个向后引用。如果 \\nm 之前至少有 nm 个获得子表达式，则 nm 为向后引用。如果 \\nm 之前至少有 n 个获取，则 n 为一个后跟文字 m 的向后引用。如果前面的条件都不满足，若 n 和 m 均为八进制数字 (0-7)，则 \\nm 将匹配八进制转义值 nm。\\nml | 如果 n 为八进制数字 (0-3)，且 m 和 l 均为八进制数字 (0-7)，则匹配八进制转义值 nml。\\un | 匹配 n，其中 n 是一个用四个十六进制数字表示的 Unicode 字符。例如， \\u00A9 匹配版权符号 (?)。","categories":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://www.lovesofttech.com/categories/正则表达式/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://www.lovesofttech.com/tags/正则表达式/"}]},{"title":"用 PROCEDURE ANALYSE() 为 mysql 提高性能提供建议","slug":"database/mysqlPrcedureAnalyse","date":"2017-09-03T16:00:00.000Z","updated":"2020-09-01T02:53:12.925Z","comments":true,"path":"database/mysqlPrcedureAnalyse.html","link":"","permalink":"https://www.lovesofttech.com/database/mysqlPrcedureAnalyse.html","excerpt":"PROCEDURE ANALYSE() 通过分析 select 查询结果对现有的表的每一列给出优化的建议。","text":"PROCEDURE ANALYSE() 通过分析 select 查询结果对现有的表的每一列给出优化的建议。 语法说明PROCEDURE ANALYSE() 的语法如下：1SELECT ... FROM ... WHERE ... PROCEDURE ANALYSE([max_elements,[max_memory]]) max_elements （默认值256） analyze 查找每一列不同值时所需关注的最大不同值的数量。analyze 还用这个值来检查优化的数据类型是否该是ENUM,如果该列的不同值的数量超过了 max_elements 值 ENUM 就不做为建议优化的数据类型。max_memory （默认值8192） analyze 查找每一列所有不同值时可能分配的最大的内存数量。 示例查询一个字段1234567mysql&gt; select stepType from crmTradeSmsFlowStep procedure analyse(); .+----------------------------------+-----------+-----------+------------+------------+------------------+-------+-------------------------+----------+-------------------------------------------------------------------------------------------------------------------+| Field_name | Min_value | Max_value | Min_length | Max_length | Empties_or_zeros | Nulls | Avg_value_or_avg_length | Std | Optimal_fieldtype |+----------------------------------+-----------+-----------+------------+------------+------------------+-------+-------------------------+----------+-------------------------------------------------------------------------------------------------------------------+| crm.crmTradeSmsFlowStep.stepType | 10 | 450 | 2 | 3 | 0 | 0 | 284.0072 | 181.4181 | ENUM('10','40','60','110','130','140','160','220','250','270','320','330','340','360','400','420','450') NOT NULL |+----------------------------------+-----------+-----------+------------+------------+------------------+-------+-------------------------+----------+-------------------------------------------------------------------------------------------------------------------+1 row in set (0.17 sec) stepType 目前为 int 类型，上面的结果，建议改为 ENUM(‘10’,’40’,’60’,’110’,’130’,’140’,’160’,’220’,’250’,’270’,’320’,’330’,’340’,’360’,’400’,’420’,’450’) NOT NULL 全表查询123456789101112131415161718mysql&gt; select * from crmTradeSmsFlowStep procedure analyse();+---------------------------------------------+------------------+-------------------+------------+------------+------------------+--------+-------------------------+--------------+-------------------------------------------------------------------------------------------------------------------+| Field_name | Min_value | Max_value | Min_length | Max_length | Empties_or_zeros | Nulls | Avg_value_or_avg_length | Std | Optimal_fieldtype |+---------------------------------------------+------------------+-------------------+------------+------------+------------------+--------+-------------------------+--------------+-------------------------------------------------------------------------------------------------------------------+| crm.crmTradeSmsFlowStep.tradeSFSID | 1 | 376962 | 1 | 6 | 0 | 0 | 188481.5000 | 217740.6281 | MEDIUMINT(6) UNSIGNED NOT NULL || crm.crmTradeSmsFlowStep.shopID | 1 | 6 | 1 | 1 | 0 | 0 | 2.9401 | 1.6544 | ENUM('1','2','3','5','6') NOT NULL || crm.crmTradeSmsFlowStep.memberID | 1 | 388 | 1 | 3 | 0 | 148496 | 16.8742 | 12.7759 | SMALLINT(3) UNSIGNED || crm.crmTradeSmsFlowStep.tid | 7041333954030634 | 38963331550441785 | 16 | 17 | 0 | 0 | 17198890865242.2950 | 0.0000 | BIGINT(17) UNSIGNED NOT NULL || crm.crmTradeSmsFlowStep.messageTopicQueueID | 2 | 1402014 | 1 | 7 | 0 | 193 | 1562.5533 | 37735.0148 | MEDIUMINT(7) UNSIGNED || crm.crmTradeSmsFlowStep.smsType | 2 | 131 | 1 | 3 | 0 | 376769 | 3.6632 | 9.2437 | ENUM('2','4','131') || crm.crmTradeSmsFlowStep.stepType | 10 | 450 | 2 | 3 | 0 | 0 | 284.0072 | 181.4181 | ENUM('10','40','60','110','130','140','160','220','250','270','320','330','340','360','400','420','450') NOT NULL || crm.crmTradeSmsFlowStep.stepTime | 1499233308 | 1504141200 | 10 | 10 | 0 | 0 | 1499249509.7180 | 2122583.3568 | INT(10) UNSIGNED NOT NULL || crm.crmTradeSmsFlowStep.stepOutType | 1 | 2 | 1 | 1 | 0 | 0 | 1.9995 | 0.0226 | ENUM('1','2') NOT NULL || crm.crmTradeSmsFlowStep.stepOutID | 1 | 193 | 1 | 3 | 0 | 0 | 11.0440 | 2.3182 | TINYINT(3) UNSIGNED NOT NULL || crm.crmTradeSmsFlowStep.created | 1504088017 | 1504171900 | 10 | 10 | 0 | 0 | 1504142055.8102 | 4260253.8171 | INT(10) UNSIGNED NOT NULL || crm.crmTradeSmsFlowStep.modified | 1504171916 | 1504171916 | 10 | 10 | 0 | 376961 | 1504171916.0000 | 0.0000 | ENUM('1504171916') |+---------------------------------------------+------------------+-------------------+------------+------------+------------------+--------+-------------------------+--------------+-------------------------------------------------------------------------------------------------------------------+12 rows in set (0.42 sec) 根据实际数据来决定是否采用建议 PROCEDURE ANALYSE() 会让 MySQL 帮你去分析你的字段和其实际的数据，并会给你一些有用的建议。 只有表中有实际的数据，这些建议才会变得有用，而且具有代表性的数据越全越好。 例如上面的例子。 针对字段 stepType，给出建议是 ENUM(‘10’,’40’,’60’,’110’,’130’,’140’,’160’,’220’,’250’,’270’,’320’,’330’,’340’,’360’,’400’,’420’,’450’) NOT NULL, 如果这里列出的值还没有覆盖到业务的所有类型，那就是不准确的，这个需要自己根据业务数据做适当的修改，将不全的部分补上。 modified，这个字段保存记录修改时间。由于这个表需要修改的场景不多，所以，测试数据只有一条记录有值，没有修改的记录，modified 为空，所以，PROCEDURE ANALYSE() 给出的建议也是不准的。 一定要注意，PROCEDURE ANALYSE() 结果，只是建议，可以参考，只有当你的表里的数据越来越多时，这些建议才会变得准确。你自己要能判断哪些是准确的哪些是不准确的，最终，只有你自己才能做出更合理的判断。","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"linux 下 zip/unzip 命令详解","slug":"linux/centOSZip","date":"2017-08-31T16:00:00.000Z","updated":"2020-09-01T02:53:13.039Z","comments":true,"path":"linux/centOSZip.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSZip.html","excerpt":"如题","text":"如题 示例 把 folder 目录压缩为 folder.zip -r folder.zip folder```121. 把 folder.zip 解压到 folderNew 目录里面```unzip folder.zip -d folderNew 把 A 文件夹和 a.txt 文件压缩成为 Aa.zip -r Aa.zip A a.txt```121. 把 a1.zip、a2.zip、a3.zip 同时解压到当前目录里面```unzip a\\*.zip 查看 a.zip 里面的内容 -v a.zip```121. 验证 a.zip 是否完整```unzip -t a.zip 解压 a.zip 到第一级目录 -j a.zip```121. 解压 a.zip，不显示解压明细```unzip -q a.zip 主要参数-c：将解压缩的结果-l：显示压缩文件内所包含的文件-p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换-t：检查压缩文件是否正确-u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其它文件解压缩到目录中-v：执行是时显示详细的信息-z：仅显示压缩文件的备注文字-a：对文本文件进行必要的字符转换-b：不要对文本文件进行字符转换-C：压缩文件中的文件名称区分大小写-j：不处理压缩文件中原有的目录路径-L：将压缩文件中的全部文件名改为小写-M：将输出结果送到more程序处理-n：解压缩时不要覆盖原有的文件-o：不必先询问用户，unzip执行后覆盖原有文件-P&lt;密码&gt;：使用zip的密码选项-q：执行时不显示任何信息-s：将文件名中的空白字符转换为底线字符-V：保留VMS的文件版本信息-X：解压缩时同时回存文件原来的UID/GID","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"zip","slug":"CentOS/zip","permalink":"https://www.lovesofttech.com/categories/CentOS/zip/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"zip","slug":"zip","permalink":"https://www.lovesofttech.com/tags/zip/"}]},{"title":"Linux下使用 curl 命令发送 GET 请求时多个参数但只能接收到一个参数","slug":"linux/centOSCurl","date":"2017-08-27T16:00:00.000Z","updated":"2020-09-01T02:53:13.032Z","comments":true,"path":"linux/centOSCurl.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSCurl.html","excerpt":"如题","text":"如题 原因：连接多个参数的符号：&amp;，在 shell 脚本中有特殊的意义，&amp; 符号需要转义。 在 Linux 下在 &amp; 前加上反斜杠 \\ 转义一下。 1curl localhost:18081/initSpecialShopInfo?isInitSmsOrderConfigForNewShop=1\\&amp;strBizIDs=677 在 windows 下，则是用双引号将 &amp; 引起来。 1curl localhost:18081/initSpecialShopInfo?isInitSmsOrderConfigForNewShop=1&quot;&amp;&quot;strBizIDs=677","categories":[{"name":"curl","slug":"curl","permalink":"https://www.lovesofttech.com/categories/curl/"}],"tags":[{"name":"curl","slug":"curl","permalink":"https://www.lovesofttech.com/tags/curl/"}]},{"title":"ES6 循环之 iterator 和 yield","slug":"frontend/iteratorAndYild","date":"2017-08-21T16:00:00.000Z","updated":"2020-09-01T02:53:12.936Z","comments":true,"path":"frontend/iteratorAndYild.html","link":"","permalink":"https://www.lovesofttech.com/frontend/iteratorAndYild.html","excerpt":"本文同时还介绍了 java 的 Iterator。","text":"本文同时还介绍了 java 的 Iterator。 参考yield 关键字用来暂停和恢复一个生成器函数（(function* 或遗留的生成器函数）ES6详解七：循环的秘密 - iterator 和 yield js 的 Iterator在 Symbol.iterator 出现后，js中也可以自己定义一个迭代器。只要一个对象实现了正确的 Symbol.iterator 方法，那么它就可以被 for in 所遍历，如下所示：123456789101112function* fibs() &#123; let a = 0; let b = 1; while (true) &#123; yield a; [a, b] = [b, a + b]; &#125;&#125;//let [first, second, third, fourth, fifth, sixth] = fibs(); //会循环6次，first=0 ... sixth=5let [first, second] = fibs(); //会循环两次document.writeln(\"second value is: \" + second); //second=1 用过 Java 的应该知道迭代器（Iterator），复习一下 java 的 Iterator迭代器是一种设计模式，它是一个对象，它可以遍历并选择序列中的对象，而开发人员不需要了解该序列的底层结构。迭代器通常被称为“轻量级”对象，因为创建它的代价小。Java中的Iterator功能比较简单，并且只能单向移动： 使用方法iterator()要求容器返回一个Iterator。第一次调用Iterator的next()方法时，它返回序列的第一个元素。注意：iterator()方法是java.lang.Iterable接口,被Collection继承。 使用next()获得序列中的下一个元素。 使用hasNext()检查序列中是否还有元素。 使用remove()将迭代器新返回的元素删除。 迭代器应用：1234567891011121314151617181920212223public void iteratorTest()&#123; List&lt;String&gt; strArray = new ArrayList&lt;&gt;(); strArray.add(\"a\"); strArray.add(\"b\"); strArray.add(\"c\"); for (Iterator iterator = strArray.iterator(); iterator.hasNext(); ) &#123; String strValue = (String) iterator.next(); System.out.println(strValue); &#125; //迭代器用于while循环 Iterator iterator = strArray.iterator(); while (iterator.hasNext()) &#123; String strValue = (String) iterator.next(); System.out.println(strValue); &#125;&#125; 另外，Iterator是Java迭代器最简单的实现，为List设计的ListIterator具有更多的功能，它可以从两个方向遍历List，也可以从List中插入和删除元素。","categories":[{"name":"ES6","slug":"ES6","permalink":"https://www.lovesofttech.com/categories/ES6/"}],"tags":[{"name":"ES6","slug":"ES6","permalink":"https://www.lovesofttech.com/tags/ES6/"}]},{"title":"spring boot1.5以上版本@ConfigurationProperties取消location注解后的替代方案","slug":"java/springBootConfigurationProperties","date":"2017-08-17T16:00:00.000Z","updated":"2020-09-01T02:53:12.992Z","comments":true,"path":"java/springBootConfigurationProperties.html","link":"","permalink":"https://www.lovesofttech.com/java/springBootConfigurationProperties.html","excerpt":"需求：要将一个配置类的属性与配置文件中的一一对应，也就是说，拿配置文件中的配置给配置类的属性做初始化。","text":"需求：要将一个配置类的属性与配置文件中的一一对应，也就是说，拿配置文件中的配置给配置类的属性做初始化。 在 spring boot 1.5 以前的做法。 配置类：ScheduledTasksConfig.java 12345678910111213141516171819package com.mycompany.restful;import org.springframework.boot.context.properties.ConfigurationProperties;@ConfigurationProperties(locations = \"classpath:scheduled.properties\")public class ScheduledTasksConfig&#123; public static boolean isTopTmcMessageQueueShardingTableServiceProcess; public static boolean isIsTopTmcMessageQueueShardingTableServiceProcess() &#123; return isTopTmcMessageQueueShardingTableServiceProcess; &#125; public static void setIsTopTmcMessageQueueShardingTableServiceProcess(boolean isTopTmcMessageQueueShardingTableServiceProcess) &#123; ScheduledTasksConfig.isTopTmcMessageQueueShardingTableServiceProcess = isTopTmcMessageQueueShardingTableServiceProcess; &#125;&#125; 配置文件：scheduled.properties 1isTopTmcMessageQueueShardingTableServiceProcess=true spring boot 启动类添加注解：@EnableConfigurationProperties({ScheduledTasksConfig.class}) spring boot 1.5 以后的做法spring boot 1.5 以后，上面的方式已经失效，而且启动过程没有任何错误信息，总之是没有初始化成功。 配置类，与之前的相比，仅是注解部分不一样。 1234567891011121314151617181920212223package com.mycompany.restful;import org.springframework.boot.context.properties.ConfigurationProperties;import org.springframework.context.annotation.PropertySource;import org.springframework.stereotype.Component;@Component@ConfigurationProperties@PropertySource(\"classpath:scheduled.properties\")public class ScheduledTasksConfig&#123; public static boolean isTopTmcMessageQueueShardingTableServiceProcess; public static boolean isIsTopTmcMessageQueueShardingTableServiceProcess() &#123; return isTopTmcMessageQueueShardingTableServiceProcess; &#125; public static void setIsTopTmcMessageQueueShardingTableServiceProcess(boolean isTopTmcMessageQueueShardingTableServiceProcess) &#123; ScheduledTasksConfig.isTopTmcMessageQueueShardingTableServiceProcess = isTopTmcMessageQueueShardingTableServiceProcess; &#125;&#125; 配置文件与之前的完全一样。 spring boot 启动类，去掉 1.5 以前版本的注解：@EnableConfigurationProperties({ScheduledTasksConfig.class})，注意，是不要这个注解，否则会报错。 在 mvcConfig.xml 中添加 component-scan： 1234567891011121314&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd\"&gt; &lt;mvc:annotation-driven/&gt; &lt;context:annotation-config&gt;&lt;/context:annotation-config&gt; &lt;context:component-scan base-package=\"crm.task.sdk.common\"/&gt;&lt;/beans&gt; 在 spring boot 启动类添加注解：@ImportResource(locations = {“classpath*:mvcConfig.xml”}) 参考@ConfigurationProperties locations #6726","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"IntelliJ IDEA，使用心得汇总","slug":"general/IDEA","date":"2017-08-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.939Z","comments":true,"path":"general/IDEA.html","link":"","permalink":"https://www.lovesofttech.com/general/IDEA.html","excerpt":"好记性不如烂笔头，其实有好多使用心得，之前一直没有整理，导致好多都忘了，慢慢追加到这里。","text":"好记性不如烂笔头，其实有好多使用心得，之前一直没有整理，导致好多都忘了，慢慢追加到这里。 idea 设置默认设置 进入默认设置菜单 Maven 的默认设置，选中本机安装配置的 Maven 目录。如果不修改默认配置文件位置，则需要把 Maven 目录下的配置文件 copy 至下图画圈儿的位置。 修改配置目录为 Maven 在本机的配置目录。 默认项目配置 配置窗口，主要是配置 jdk 以及编译目标版本。 默认编码设置在默认设置里改，以后新建项目时，不需要修改项目设置。 项目编码设置如果项目是在修改默认编码设置之前就添加的，则需要单独设置。 其它用 idea 的默认设置即可。一般不要修改。 IDEA 本身（非编码区）字体设置 IDEA 编码区字体设置 IntelliJ IDEA，代码行宽度超出限制时设置自动换行当我们使用IDE写代码时，为了保证代码的可阅读性和优雅性，通常会借助IDE的代码风格设置功能，令IDE智能完成的代码部分或者格式化输入的代码，可以按照预期的格式输出。其中有一项设置就是限制一行代码的宽度，以IDEA举例，默认限制为120。那么如何在IDEA中修改这个限制数值呢？在File-&gt;settings-&gt;Editor-&gt;Code Style中，修改“Right margin (columns)”的值即可改变代码行宽度的限制。 如果输入的代码超出宽度界线时，如何让IDE自动将代码换行？有两种方式！第一种，在上述的“Right margin (columns)”的下方，有“Wrap when typing”选项，选中它。 第一种方式是在输入代码时触发，还有第二种方式，在File-&gt;settings-&gt;Code Style-&gt;Java中，选中“Wrapping and Braces”选项卡，在“Keep when reformatting”中有一个“Ensure rigth margin is not exceeded”，选中它，是什么效果呢？从配置项的字面意思很容易理解，在格式化Java代码时，确保代码没有超过宽度界线。即输入的代码超出界线后， 不要紧，按下“Ctrl+Alt+L”格式化代码。 IDE所给出的宽度界线是好的，但真正控制、优化代码宽度的格式需要我们编码时养成良好的习惯，避免单行代码过长，避免不了时自己手动找到合适的截点，进行换行处理，且更符合各自实际的编码格式需求。 .sql 文件自动换行问题项目中有一个 .sql 文件，里面的 update 语句比较长，总是自动换行，调整编辑区域时，会随时编辑区域的大小而自动调整每行显示的字符，相当于就是在自动换行。由于 sql 语句自动换行后，可读性变差，我不希望它自动换行。应用上面的参数，根本无效。只好放弃。 一开始这个文件是在一个 static web 模块下，这个模块仅用来保存文档。后来在另外一个 spring boot 项目，跟 scr 在同一目录下的 doc 目录下的 .sql 文件却不会自动换行。最开始怀疑是在 static web 下导致，于是 copy 至 spring boot 项目下，依旧。 最终解决办法：在 IDEA 新建一个 .sql 文件，然后把会自动换行文件里的内容原封不动的 copy 过来，在新的 .sql 文件里，就不会自动换行了。应该是文件的编码导致的，会自动换行的文件，之前是用 Notepad++ 创建的。提交 git，文件内容没有差异，显示的差异为：Contents have differences only in line separators根据提示，差异仅仅在换行符，但是我从不会自动换行的文件里 copy 过去，依然会换行，所以，是跟文件相关的，而不是跟文件内容相关。 Performing Code Analysis…IDEA 或者 WebStorm 提交代码时会分析代码以及查找 todo 事项，导致提交需要较长时间。如果不需要，以下配置项取消勾选即可： IDEA + Tomcat 调试 JavaScript 代码浏览器需要安装 JetBrains IDE Support 插件，请参考：像用 IDEA 调试 Java 代码一样，用 WebStorm 调试 react 代码 spring boot 项目的自动启动暂时没发现支持 IDEA 直接调试 javascript 代码，不过，可以用 Tomcat 来作为 Web 容器，这样可以直接调试 JavaScript 代码，配置如下： 将 with JavaScript debugger 项勾选上，启动调试即可。另外，On ‘Update’ action 一定要选 Update classes and resources，这样在修改 js 或 html 时，刷新页面即可应用最新代码，不用重启 Tomcat，否则调试起来，效率就太低了。需要注意的是：当且仅当在 Deployment 配置页，选的是 XXX exploded（XXX 为项目名），即开发模式，才会出现该选项。 至于 On frame deactivation，作用是：IDE失去焦点的情况下自动触发，建议设置为：Update classes and resources，这样前台页面获得更新的速度会快一些，不这可能会导致电脑资源占用过多，自己权衡。 Server returns invalid timezone. Go to ‘Advanced’ tab and set ‘serverTimezone’ property manually.serverTimezone 设置值：Asia/Shanghai IDEA 2017.2 中文输入法看不到输入窗口环境：IDEA：2017.2、2017.2.4JDK：jdk1.8.0_141，安装的时候没有选择安装公共的 jre，jdk 目录下默认就有，无须安装。OS：windows 7 64 位 原因：估计是安装目录下自带的 java 运行库 jre64 存在某种 bug。解决：先关掉打开的 IDEA，安全起见，先重命名安装目录下 jre64 目录为 jre64_bak，再次启动 IDEA，解决了此问题。如果一切运行正常，就可以直接删除那个目录了。看样子，这个目录直接删除也是可以的，没有这个目录，IDEA 会找到系统安装的 jdk（默认包含jre）。 JetBrains WebStorm 2017.2.4 x64 的解决方法也是一样的。 索引卡死的问题今天研究 spring 官方示例：React.js and Spring Data REST，在各个项目下执行 cnpm install 之后，再用 IDEA 打开项目，就卡死了。反复试了好几次都一样。正常情况下，打开普通的 react 项目，执行 cnpm install 下载依赖之前，为了避免 IDEA/WebStorm 索引 node_modules 目录下的文件导致卡死，我一般是先关掉项目，等 cnpm install 完成之后再打开，这样操作，IDEA/WebStorm 一般都会把 node_modules 自动识别为 library root，这样的话，是不会对这个目录索引的，所以，并不会卡死。从下面这个界面去看，可以确认这一点。被排除的目录，才能看到 Not Excluded 选项。 然而，多个非根目录下的 node_modules 可能不能被自动识别为 library root，于是我研究了一下已经把 node_modules 识别为 library root 的项目根目录下的 .idea 下的文件，找到了解决方案。 .idea 目录下的文件 workspace.xml，在节点 project 下添加如下内容： 1234567&lt;component name=\"NodeModulesDirectoryManager\"&gt; &lt;handled-path value=\"$PROJECT_DIR$/basic/node_modules\" /&gt; &lt;handled-path value=\"$PROJECT_DIR$/conditional/node_modules\" /&gt; &lt;handled-path value=\"$PROJECT_DIR$/events/node_modules\" /&gt; &lt;handled-path value=\"$PROJECT_DIR$/hypermedia/node_modules\" /&gt; &lt;handled-path value=\"$PROJECT_DIR$/security/node_modules\" /&gt;&lt;/component&gt; 再次打开项目，不再卡了，victory! Could not autowire. No beans of ‘XXX’eclipse 没有这个问题。 原因：bean 通过 @Autowired 自动注入，而 spring 配置文件中配置的自动扫描，而 idea 在编辑情况下，找不到对应的 bean，于是有 Could not autowire. No beans of ‘XXX’ 的错误提示。实际上，可以 build 项目且能正常运行的。 解决： 在 File -&gt; Settings -&gt; Editor -&gt; Inspections，使用搜索功能找到 Autowiring for Bean Class，将 Severity 的级别由之 Error 改成 Warning（或其它可以忽略的级别）。 不搜索的话，完整的设置路径在：File -&gt; Settings -&gt; Editor -&gt; Inspections -&gt; Spring -&gt; Spring Core -&gt; Code -&gt; Autowiring for Bean Class。不过，通过上图也可以看出来完整路径。 使用 Spring-boot-devTools 无效解决办法添加依赖123456&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt; &lt;!-- optional=true,依赖不会传递，该项目依赖devtools；之后依赖此项目的项目如果想要使用devtools，需要重新引入 --&gt; &lt;optional&gt;true&lt;/optional&gt;&lt;/dependency&gt; 设置:compiler-&gt;Build project automatically，打勾然后 Shift+Ctrl+Alt+/，选择Registry进去之后，找到如下图所示的选项(compiler.automake.allow.when.app.running)，打勾 重启一下项目，然后改一下类里面的内容，IDEA就会自动去make了。 编译缓存用 IDEA 的调度功能查看页面。分页组件：JQuery.datatables 一次做一个新页面，有关分页的，该页面分页组件是在项目里很多地方用的，用法也跟其它一样，但是，第一页那【1】，点击之后就是没反应，重新查询，本来应该跳到第一页的，也不管用，每次都是上一次的页数。反复检查，看官方帮助，都无果，正痛苦的测试中，突然电脑死机了。让我万万没想到的是，重新开机之后，竟然完全正常了。没法儿解释呀！只能说，下次遇到这种从代码级别看明显没有问题的情况，可以考虑用 IDEA 的 Rebuild Project 功能试试。猜想应该是缓存导致的，是浏览器还是 IDEA 的，现在还说不清楚。先记录一下。 其实是使用了两个 table 导致的，只不过，死机之前，我正好注释掉了一个，本来也是要看是不是两个导致，汗… Cannot load project1com.intellij.ide.plugins.PluginManager$StartupAbortedException: Fatal error initializing &apos;com.intellij.xdebugger.XDebuggerManager&apos; 一次正调试程序的过程中，用的是 idea 启动的 web 项目，浏览器用的是 google 的 chrome 调试 js，正调试呢，死机了，屏幕黑屏，键盘类灭了，鼠标灯也灭了。再次开机，打开之前的项目，得到如上提示。但打开非 java 项目，则没有问题。照着输入法的方案把安装目录下的 jre64 目录删除，再打开，就 OK 了。 备注，新安装的 win10 pro, idea 为 2017.2.5，中文输入法没有问题。 网上的方案：解决办法：清空windows上c:\\Users.IntelliJIdea11&lt;版本&gt;\\config\\plugins\\这个目录，然后重启即可 spring boot 启动项目，打 war 包通过初始向导创建的项目，选 war 包，启动有问题，还没仔细研究。选了默认的 jar 项目，但又想打包。于是，直接将 pom.xml 时的 jar 改为 war，在 项目设置里，随便添加一个 war，指向 boot 项目，然后 Build artifacts…，注意，右下角提示需要 maven 依赖，启用之，会自动添加 boot 项目的 war 及 exploded,然后将手工添加的删除即可。总结，idea 强大！ Project Structure -&gt; Artifacts, delete allmodify pom.xml jar to war, pay attention, idea right down “Maven projects need to be …”, click “Import Changes” or click “Enable Auto-Import”, that’s ok! Maven 传递依赖排除、禁止传递依赖A 依赖 B, B 依赖 C, 那么，A 可以直接访问 C，如果不想这样，可以在依赖里排除。1234567891011&lt;dependency&gt; &lt;groupId&gt;open.isv&lt;/groupId&gt; &lt;artifactId&gt;alibaba.service&lt;/artifactId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;groupId&gt;open.isv&lt;/groupId&gt; &lt;artifactId&gt;dal&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; 但是问题来了，如果项目 A 调用 B 里某个类的方法 F，这个 F 又需要调用 C 的某个类，那么上面的排除会带来运行时错误。只有你能确保项目运行过程不会引用到 C 里的类，那么这种排除才是安全的。 如果要去掉全部的传递依赖1234567891011&lt;dependency&gt; &lt;groupId&gt;open.isv&lt;/groupId&gt; &lt;artifactId&gt;alibaba.service&lt;/artifactId&gt; &lt;version&gt;1.0.0&lt;/version&gt; &lt;exclusions&gt; &lt;exclusion&gt; &lt;artifactId&gt;*&lt;/artifactId&gt; &lt;groupId&gt;*&lt;/groupId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt; 多 module 组织方式ideaMoveModuleToGroup 给多个 module 分组告别 module 太多导致太乱影响开发效率 最佳实践：利用 pom.xml 的 modules 属性如果是新项目，或者你可以大刀阔斧的重新整理项目结构，那么，可以把相关 module 放到一个文件夹下，然后用一个 pom.xml 文件来组织，如：1234567891011121314151617181920&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;io.github.uncleAndyChen&lt;/groupId&gt; &lt;artifactId&gt;bbs-api-biz&lt;/artifactId&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;version&gt;0.0.1&lt;/version&gt; &lt;modules&gt; &lt;module&gt;bbs-api-biz-facade&lt;/module&gt; &lt;module&gt;bbs-api-biz-service&lt;/module&gt; &lt;module&gt;bbs-api-biz-model&lt;/module&gt; &lt;module&gt;bbs-api-biz-dal&lt;/module&gt; &lt;module&gt;bbs-api-biz-enumeration&lt;/module&gt; &lt;/modules&gt;&lt;/project&gt; 可以参考这个项目的多模块组织方式：https://github.com/uncleAndyChen/spring-boot-bbs-api 该项目的 module 目录结构如下：12345678910├─bbs-api-biz│ ├─bbs-api-biz-dal│ ├─bbs-api-biz-enumeration│ ├─bbs-api-biz-facade│ ├─bbs-api-biz-model│ └─bbs-api-biz-service├─bbs-api-common│ ├─bbs-api-common-lib│ └─bbs-api-common-model└─bbs-api-spring-boot 在 IDEA 中打开，是这个样子： 项目 rebuild 之后，依然有旧的代码影响，直接导致项目发布后，启动失败。初次解决这种问题可能会非常痛苦，因为本地运行正常，检查代码也是正常的，重新上传更新，问题依旧。121:29:31,671 &lt;org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext&gt; WARN [localhost-startStop-1]: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Unexpected exception parsing XML document from URL [file:/home/utomcat/webapps/apg/apg/WEB-INF/classes/mvcConfig.xml]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name &apos;apgConfig&apos; for bean class [apg.config.ApgConfig] conflicts with existing, non-compatible bean definition of same name and class [apg.boot.config.ApgConfig] 解决： mvn clean 或者直接到项目根目录搜索 target，然后全部删除。 然后 rebuild project (IDEA)，再然后 Build Artifacts…，上传打包好的文件，重新更新到服务器。搞定。 如果有循环依赖，则会报如下错误1Error:java: Annotation processing is not supported for module cycles. Please ensure that all modules from cycle [jos.service,boot.jos,biz.service] are excluded from annotation processing 查看依赖关系，IDEA 菜单：Analyze-&gt;Analyze Module Dependencies…“电路板”查看：右边 Maven 菜单，Show Dependences … (Ctrl+Alt+Shift+U) 传统 web 项目，tomcat 调试设置两步： idea设置tomcat虚拟路径上述第二步操作之后，显示如下： 红框处的虚拟目录名是根据项目的这个配置&lt;artifactId&gt;permission&lt;/artifactId&gt;自动生成，以artifactId 对应的值为前缀，在这里是 permission。 然而，通常 web 项目的根路径是 /，在项目中路径跳转都以 / 为默认根路径，所以，使用自动生成的虚拟路径名会有冲突。而解决办法也很简单，将自动生成的虚拟路径名改为 / 即可。 特别地，如果点【Fix】之后没有下拉选项，那么需要先在 Project Structure -&gt; Artifacts 去添加，如下图： IntelliJ IDEA2017 + tomcat 即改即生效 实现热部署点击 idea 中 tomcat 设置 Deployment 一项，需要选择 exploded。 将 server 的项 “On Update action”、”On frame deactivation” 都选择 update classes and resources idea 快捷键失效的问题Debug 时 F8 快捷键失效我的是被有道词典的【取词划词】-&gt;【开关热键】给占用了，如下图，删除或者换别的快捷键即可。 在项目范围内查找快捷键失效：Ctrl+Shift+F我的是被搜狗输入法给占用了，如下图，取消勾选即可。 Intellij idea 错误提示信息不能复制的问题 IDEA的错误提示问题，鼠标移动上去后会有黄色/红色框提示，鼠标一移动，提示信息就会消失。有时这个提示信息很有必要复制下来，但又不能及时复制下来。 在 Ctrl+F1 或者点击 “more” 之后，选中，Ctrl+C 不好使。 解决在鼠标停留在有提示信息的代码处，在 idea 的状态栏，点击右键，会出现 Copy 的按键，点击则可将警告信息复制。 警告信息 警告的全部信息 复制警告信息 变量的中文内容是乱码，解决方案：将所有地方的编码设置为 utf-8 环境：IDEA 2017.2.5 + spring 4.3.2 现象：restful api,变量赋值中文内容，输出的是乱码。 解决过程，非常曲折，下面简单的说一下，通过这次解决这个问题的过程，得到的结论是：在解决问题的过程中，不能想当然，要抱着怀疑一切的态度去尝试。 项目是一个 restful api。在 win7 英文版 64 位下正常。后来换到 win10 英文版 64 位后就出现输出的中文是乱码了。 IDEA 的配置跟在 win7 下是一样的，所有文件采用 utf-8 编码。新的 api 中文输出乱码，测试了一下之前在 win7 下正常的 api，中文输出也变成乱码了。 但是，api 在调用第三方 api 获取到的中文内容却没有变成乱码，只有自己赋值的中文内容才会输出乱码，真是汗呀。 这种背景下，最先能想到的，肯定就是项目配置了。几乎尝试了网上找到的所有关于中文输出乱码的解决方案，均以失败告终。 同样的代码，换到最新的 spring boot 项目里，正常。 同样的代码，在家里 win8.1 英文 64 位操作系统上测试，正常。 有网友说，先控制台直接输出变量，看是否为乱码，我当时想都没想，就说，那肯定是正常的。我的理由：api 返回的信息中，从第三方获取到的中文，从 excel 读取到的中文均是正常的，IDEA 的文件编码也全是 utf-8，没道理刚赋值就变乱码。 如果你也这么认为，恭喜你，你跟我都犯了想当然的错了。在一次调试过程中，我特意查看了一下，竟然刚赋值，变量的内容就是乱码。这就不得不怀疑文件编码了，于是专门用 notepad++ 打看，查看 encoding，确实是 utf-8 编码。 这个问题，看似已经无解了。本来已经想放弃了，不过还是有一点不甘心，于是又以关键词“idea 变量中文乱码”搜索，找到设置文件编码的一篇文章，这篇文章里介绍的设置编码的方式跟我平时在设置里设置的不一样，抱着死马当活马医的心态尝试了一下，竟然好了！ 网上看到的方案中，项目编码设置和 IDEA 的设置都差不多。 真正起作用的步骤是：在代码区域点右键，在弹出的菜单中选择 File Encode，将编码设置为 UTF-8。 后记：问题解决之后，想看一下到底是哪个文件的编码不对，于是在提交代码之前，从 git 上重新摘取一份儿代码，运行测试，竟然不能重现！汗！应该是 IDEA 在设置一次 File Encode 之后，全局生效了。 结论：之所以新项目（spring boot）没有乱码问题，应该是所有文件都是基于 IDEA 配置来生成的，即均为 utf8 格式，而出问题的项目，是一个老项目，之前是用 eclipse 编辑的，部分文件的编码影响到了。而 win7 正常，换 win10 不正常，这个，应该是跟 windows 的默认字符集（一般为 GBK）有关。 清理旧的已经不用了的包以及编译后的class文件 之前有一个包，已经编译过，后来重命名包，通过IDEA再次编译，旧包还存在于target下对应的目录，但直接运行或者调试项目均无问题。 解决：mvn clean","categories":[{"name":"IDEA","slug":"IDEA","permalink":"https://www.lovesofttech.com/categories/IDEA/"},{"name":"experience","slug":"IDEA/experience","permalink":"https://www.lovesofttech.com/categories/IDEA/experience/"}],"tags":[{"name":"IDEA","slug":"IDEA","permalink":"https://www.lovesofttech.com/tags/IDEA/"},{"name":"experience","slug":"experience","permalink":"https://www.lovesofttech.com/tags/experience/"}]},{"title":"Nodejs","slug":"frontend/nodejs","date":"2017-08-06T16:00:00.000Z","updated":"2020-09-01T08:06:40.538Z","comments":true,"path":"frontend/nodejs.html","link":"","permalink":"https://www.lovesofttech.com/frontend/nodejs.html","excerpt":"node 与 yarn 的使用。","text":"node 与 yarn 的使用。 yarn的安装与使用在 Nodejs 环境下，通过npm install -g yarn 命令进行全局安装123456yarn versionyarn inityarn installyarn add vueyarn add vue-routeryarn remove vue-router yarn 中文文档 windows 下安装 n 模块失败，直接下载最新版覆盖安装即可。123456789101112131415C:\\Windows\\system32&gt;npm install -g nnpm ERR! Windows_NT 6.3.9600npm ERR! argv &quot;C:\\\\nodejs\\\\node.exe&quot; &quot;C:\\\\nodejs\\\\node_modules\\\\npm\\\\bin\\\\npm-cli.js&quot; &quot;install&quot; &quot;-g&quot; &quot;n&quot;npm ERR! node v6.10.2npm ERR! npm v3.10.10npm ERR! code EBADPLATFORMnpm ERR! notsup Unsupported platform for n@2.1.8: wanted &#123;&quot;os&quot;:&quot;!win32&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)npm ERR! notsup Valid OS: !win32npm ERR! notsup Valid Arch: anynpm ERR! notsup Actual OS: win32npm ERR! notsup Actual Arch: x64npm ERR! Please include the following file with any support request:npm ERR! C:\\Windows\\system32\\npm-debug.log 下载最新版 安装最新版之后，安装 n 模块，还是一样，因为不支持 64 位的操作系统。12345678910C:\\Users\\andy&gt;npm install -g nnpm ERR! code EBADPLATFORMnpm ERR! notsup Unsupported platform for n@2.1.8: wanted &#123;&quot;os&quot;:&quot;!win32&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)npm ERR! notsup Valid OS: !win32npm ERR! notsup Valid Arch: anynpm ERR! notsup Actual OS: win32npm ERR! notsup Actual Arch: x64npm ERR! A complete log of this run can be found in:npm ERR! C:\\Users\\andy\\AppData\\Roaming\\npm-cache\\_logs\\2017-08-27T09_25_45_159Z-debug.log cnpm安装 cnpm -&gt; 淘宝 NPM 镜像淘宝 NPM 镜像1npm install -g cnpm --registry=https://registry.npm.taobao.org yarnyarn 中文比较简单的方式安装，不过，官方不推荐这种方式。1npm install -g yarn 建议通过推荐的方式安装，可下载 .msi 程序安装。Download Installer WebStorm 启动项设置影响运行的依赖版本如下图： 当我打开一个 react 项目时，添加一个启动配置项，选 npm ，结果在启动的时候，显示相关依赖版本为很早以前的版本，原来 Package manager 一项默认选中的红框，但我实际的安装路径其实为练功框标记的下面那个，修改之后就好了。","categories":[{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/categories/Node/"}],"tags":[{"name":"Node","slug":"Node","permalink":"https://www.lovesofttech.com/tags/Node/"}]},{"title":"Java 基本类型与对象类型","slug":"java/dataType","date":"2017-08-02T16:00:00.000Z","updated":"2020-09-01T02:53:12.975Z","comments":true,"path":"java/dataType.html","link":"","permalink":"https://www.lovesofttech.com/java/dataType.html","excerpt":"如题","text":"如题 一道题某个 POJO 定义了一个 Long 变量 fieldID，api 接收 Json 数据并将其转换成这个 POJO。 当在 Json 数据里没有 fieldID 的时候，转换得到的 fieldID 值为？ 如果将 fieldID 定义成 long，上面转换得到的 fieldID 的值又是什么？ 如果不知道答案，那么请往下看。 Java 的数据类型分两种 基本类型：long,int,byte,float,double,char 对象类型（类）： Long,Integer,Byte,Float,Double,Character,String，其它一切java提供的，或者你自己创建的类。 答案到这里，应该就知道上题的答案了。上题其实考的是 Long 变量与 long 变量的默认值问题，Long 是对象类型，其默认值是 null，而 long 是基本数据类型，默认值是 0. Long 叫 long 的包装类。包装类的名字，其首字母是基本类型名首字母的大写形式，后面部分，除 Character,Integer 之外，是一样的。Integer,Byte,Float,Double,Character 也都是对应基本类型 int,byte,float,double,char 的包装类。 那么问题来了，什么叫包装类呢？Java 语言是一个面向对象的语言，但是 Java 中的基本数据类型却是不面向对象的，这在实际使用时存在很多的不便，为了解决这个不足，在设计类时为每个基本数据类型设计了一个对应的类进行代表，这样八个和基本数据类型对应的类统称为包装类 (Wrapper Class)，有些地方也翻译为外覆类或数据类型类。 对象类型转换成基本类型如果将一个 Long 变量 赋值给 long 变量，当 Long 变量为 null 时，会出错。为了避免这种错误，需要判断 null 的情况。 结论POJO 在绝大多数应用场景，用基本类型足矣。 将 Integer 型转化为 Long 型12Integer a = 10;Long b = a.longValue(); 数据类型长度long 是长整型，在怎么长本身也是整型，12.10的整形部分是12，当然结果是12， byte: 八位整数 -128——127，可用来节省内存的使用。short: 16位整数 -32768——32,767，也比较省内存。int: 32位整数 -2,147,483,648——2,147,483,647，一般来说整数都够用了long: 64位整数 -9,223,372,036,854,775,808—— 9,223,372,036,854,775,807，一般不需要用float: 32位浮点，如果浮点需要节省内存用这个。Double: 64位浮点，一般非整数浮点可用这个。 浮点数据比较float 和 double 都不是精确的，如果要储存钱一类的数据必须用精确数据类型：java.math.BigDecimal本人封装了一个浮点数据比较类，供参考：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124package com.company.doman.common;import org.apache.commons.lang3.math.NumberUtils;import java.math.BigDecimal;/** * 带小数的数字类型数据比较 * * @author AndyChen * @since 2017-1-18 */public class HaveDecimalsNumberCompareTool&#123; static double deviation = 10E-10; /** * 在给定精度范围内比较两个double类型值是否相等 */ public static boolean equals(double a, double b) &#123; if (Double.isNaN(a) || Double.isNaN(b) || Double.isInfinite(a) || Double.isInfinite(b)) &#123; return false; &#125; return a == b || Math.abs(a - b) &lt; deviation; &#125; /** * 等于 * BigDecimal.compareTo * -1 小于 * 0 等于 * 1 大于 */ public static boolean equals(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == 0; &#125; /** * 介于 * * @param a * @param b * @return a是否介于b与c */ public static boolean between(String a, String b, String c) &#123; int resultGreaterThanOrEqualBefore = getBigDecimalCompareResult(a, b); int lessGreaterThanOrEqualAfter = getBigDecimalCompareResult(a, c); return (resultGreaterThanOrEqualBefore == 0 || resultGreaterThanOrEqualBefore == 1) &amp;&amp; (lessGreaterThanOrEqualAfter == 0 || lessGreaterThanOrEqualAfter == -1); &#125; /** * 大于 * * @param a * @param b * @return */ public static boolean greaterThan(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == 1; &#125; /** * 小于 * * @param a * @param b * @return */ public static boolean lessThan(String a, String b) &#123; return getBigDecimalCompareResult(a, b) == -1; &#125; /** * 大于等于 * * @param a * @param b * @return */ public static boolean greaterThanOrEqual(String a, String b) &#123; return getBigDecimalCompareResult(a, b) &gt;= 0; &#125; /** * 小于等于 * * @param a * @param b * @return */ public static boolean lessThanOrEqual(String a, String b) &#123; int result = getBigDecimalCompareResult(a, b); return (result == 0 || result == -1); &#125; /** * 得到两个浮点数的比较结果 * * @param a * @param b * @return -2: 至少有一个是非数值，0: 相等 -1: 小于 1: 大于 */ private static int getBigDecimalCompareResult(String a, String b) &#123; BigDecimal x = NumberUtils.createBigDecimal(a); BigDecimal y = NumberUtils.createBigDecimal(b); if (x == null || y == null) &#123; return -2; &#125; return x.compareTo(y); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"EF6 写入数据，调用 SaveChanges() 时异常：Validation failed for one or more entities. See 'EntityValidationErrors' property for more details.","slug":"windows/winEF","date":"2017-07-31T16:00:00.000Z","updated":"2020-09-01T02:53:13.115Z","comments":true,"path":"windows/winEF.html","link":"","permalink":"https://www.lovesofttech.com/windows/winEF.html","excerpt":"如题","text":"如题 异常信息123456789EntityFramework 在 System.Data.Entity.Internal.InternalContext.SaveChanges() 在 System.Data.Entity.Internal.LazyInternalContext.SaveChanges() 在 System.Data.Entity.DbContext.SaveChanges() 在 Maile360.Rate.DAL.BlacklistDAL.Add(rt_blacklist bl) 在 Maile360.Rate.DAL.BlacklistDAL.AddList(List`1 blacklistList) 在 Maile360.Rate.RealtimeService.NotifyService.DealNotGoodRateList(List`1 tradeRateViewList, List`1 notifyBizViewList) 在 Maile360.Rate.RealtimeService.NotifyService.TradeRatesDealPross(List`1 notifyBizViewList, String rateResult) 在 Maile360.Rate.RealtimeService.NotifyService.NotifyServiceProcess(Object o) 单从这个信息是看不出来具体原因的。需要在出错的代码上加 try 并捕获 DbEntityValidationException1234567891011121314151617181920212223242526272829303132333435363738394041private static void add(rt_blacklist bl)&#123; try &#123; using (RateEntityContext ctx = new RateEntityContext()) &#123; rt_blacklist_his blh = new rt_blacklist_his(); blh.biz_id = bl.biz_id; blh.buyer_nick = bl.buyer_nick; blh.sync_time = 0; blh.operate_type = 1; blh.is_sync = 0; blh.created = TimeHelper.GetNowTimeToStamp(); ctx.rt_blacklist_his.Add(blh); ctx.rt_blacklist.Add(bl); ctx.SaveChanges(); &#125; &#125; catch (DbEntityValidationException ex) &#123; string error = string.Empty; foreach (var eveItem in ex.EntityValidationErrors) &#123; foreach (var veItem in eveItem.ValidationErrors) &#123; error = string.Format(&quot;&#123;0&#125;:&#123;1&#125;\\r\\n&quot;, veItem.PropertyName, veItem.ErrorMessage); &#125; &#125; //Console.WriteLine(error); LogHelper.WriteLog(error, errLogFileName); &#125; catch (Exception e) &#123; string err = e.InnerException.InnerException.Message; //Console.WriteLine(err); LogHelper.WriteLog(err, errLogFileName); &#125;&#125; 捕获到的信息：buyer_nick:字段 buyer_nick 必须是最大长度为 45 的字符串。","categories":[{"name":"EF6","slug":"EF6","permalink":"https://www.lovesofttech.com/categories/EF6/"}],"tags":[{"name":"EF6","slug":"EF6","permalink":"https://www.lovesofttech.com/tags/EF6/"}]},{"title":"CentOS 常用命令","slug":"linux/centOSGeneralCommand","date":"2017-07-28T16:00:00.000Z","updated":"2020-09-01T02:53:13.033Z","comments":true,"path":"linux/centOSGeneralCommand.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSGeneralCommand.html","excerpt":"如题","text":"如题 组、用户操作 查看用户组 1cat /etc/group 查看系统中有哪些用户 1cut -d : -f 1 /etc/passwd 查看所有用户详细信息 1cat /etc/passwd 查看可以登录系统的用户 1cat /etc/passwd | grep -v /sbin/nologin | cut -d : -f 1 查看用户操作：w命令(需要root权限) 查看某一用户：w 用户名 查看登录用户：who 查看用户登录历史记录：last 查找用户 1cat /etc/passwd|grep tomcat 查找组 1cat /etc/group|grep tomcat 删除用户 123456#强制删除该用户的主目录和主目录下的所有文件和子目录[root@centos6 /]# userdel -rf tomcatuser userdel: user tomcatuser is currently used by process 3125# 退出客户端然后再删除[root@centos6 /]# userdel -rf tomcatuseruserdel: user &apos;tomcatuser&apos; does not exist 从组中删除用户编辑/etc/group 找到GROUP1那一行，删除 A或者用命令gpasswd -d A GROUP 删除用户组 1groupdel 用户和组常用命令 groups 查看当前登录用户的组内成员 groups tomcat 查看 tomcat 用户所在的组,以及组内成员 whoami 查看当前登录用户名 创建用户组 1groupadd group-java 创建用户 1useradd -s /bin/bash -g group-java utomcat 创建用户的主要参数 －c：加上备注文字，备注文字保存在passwd的备注栏中。 －d：指定用户登入时的启始目录。 －D：变更预设值。 －e：指定账号的有效期限，缺省表示永久有效。 －f：指定在密码过期后多少天即关闭该账号。 －g：指定用户所属的起始群组。 －G：指定用户所属的附加群组。 －m：自动建立用户的登入目录。 －M：不要自动建立用户的登入目录。 －n：取消建立以用户名称为名的群组。 －r：建立系统账号。 －s：指定用户登入后所使用的shell。 －u：指定用户ID号。 修改用户密码12345678#usertomcatfor130usertomcatfor198[root@centos6 /]# passwd utomcatChanging password for user utomcat.New password: Retype new password: passwd: all authentication tokens updated successfully. 关于删除用户的进一步说明：彻底删除用户以下以用户 gitadmin 为例。 彻底删除用户，要带参数 -r，否则，只是 userdel gitadmin 的话，只删除了以下四个文件里的该账户和组的信息1234/etc/passwd/etc/shadow/etc/group//etc/gshadow 默认情况下创建一个用户账号，还会创建一个 home 目录和一个用户邮箱（在/var/spool/mail目录以用户名命名） 查看用户信息：12345cat /etc/passwd | grep gitadmincat /etc/shadow | grep gitadmincat /etc/group | grep gitadmincat /etc/gshadow | grep gitadminfind / -name &quot;*gitadmin*&quot; 验证-&gt;真实执行情况：1234567891011121314151617181920[root@localhost ~]# find / -name &quot;*gitadmin*&quot;/home/gitadmin/var/spool/mail/gitadmin[root@localhost ~]# cat /etc/passwd | grep gitadmingitadmin:x:1001:1003::/home/gitadmin:/bin/bash[root@localhost ~]# cat /etc/shadow | grep gitadmingitadmin:$6$9v2xSWUA$wy5ZgD5HIj5FYlBkxX43a7zhMlRz2XinKAI1sQd9z7kjJthvArbZ7W7y9twKzrTI4Ug/JsqyvnsJ3t6O7Z6q60:18141:0:99999:7:::[root@localhost ~]# cat /etc/group | grep gitadmingitadmin:x:1003:[root@localhost ~]# cat /etc/gshadow | grep gitadmingitadmin:!::[root@localhost ~]# userdel gitadmin[root@localhost ~]# cat /etc/passwd | grep gitadmin[root@localhost ~]# cat /etc/shadow | grep gitadmin[root@localhost ~]# cat /etc/group | grep gitadmin[root@localhost ~]# cat /etc/gshadow | grep gitadmin[root@localhost ~]# find / -name &quot;*gitadmin*&quot;/home/gitadmin/var/spool/mail/gitadmin 重新添加该用户再执行带参数 -r 的删除：123456789101112[root@localhost ~]# useradd gitadminuseradd: warning: the home directory already exists.Not copying any file from skel directory into it.Creating mailbox file: File exists[root@localhost ~]# userdel -r gitadminuserdel: /var/spool/mail/gitadmin not owned by gitadmin, not removinguserdel: /home/gitadmin not owned by gitadmin, not removing[root@localhost ~]# rm -rf /var/spool/mail/gitadmin[root@localhost ~]# rm -rf /home/gitadmin[root@localhost ~]# useradd gitadmin[root@localhost ~]# userdel -r gitadmin[root@localhost ~]# find / -name &quot;*gitadmin*&quot; # 已经查不到相关目录了 再次useradd gitadmin 也不会有任何提示了。 Centos 查看硬盘空间df -hdu -ah –max-depth=1 目录深度为1-h：以人类可读的方式显示-a：显示目录占用的磁盘空间大小，还要显示其下目录和文件占用磁盘空间的大小-s：显示目录占用的磁盘空间大小，不要显示其下子目录和文件占用的磁盘空间大小-c：显示几个目录或文件占用的磁盘空间大小，还要统计它们的总和–apparent-size：显示目录或文件自身的大小-l ：统计硬链接占用磁盘空间的大小-L：统计符号链接所指向的文件占用的磁盘空间大小 linux 清除文本文件内容快速清空文件内容的几种方法:12345$ : &gt; filename $ &gt; filename $ echo &quot;&quot; &gt; filename $ echo &gt; filename $ cat /dev/null &gt; filename 防火墙关闭1systemctl stop firewalld 开启1systemctl start firewalld 关闭开机启动1systemctl disable firewalld 开启开机启动1systemctl enable firewalld Creating mailbox file: File existslinux下添加用户后,会在系统里自动加一个邮箱(系统邮箱),路径是:/var/spool/mail/用户名.可以直接用命令#rm -rf /var/spool/mail/用户名这样再次添加同一名字的用户时，就不会提示这个错误。 the home directory already exists.12useradd: warning: the home directory already exists.Not copying any file from skel directory into it. 在执行 userdel 时，用户目录没有被删除，所以，需要手工删除。删除之后再次创建，则不会出现这个错误提示。 cp: omitting directory目录下面还有目录，不能直接拷贝解决办法：递归拷贝命令：cp -r bbs ../backup/bbs解释:-r 这个 options 是递归的意思删除的时候也可能出现这种下面有文件不能删除的问题，也用 -r 级联删除如果确定不再需要目录或文件，直接用 rm -rf a # a 可是文件，也可以是一个目录 shell 脚本调用参数采用 $0,$1,$2..等方式获取脚本命令行传入的参数，值得注意的是，$0 获取到的是脚本路径以及脚本名，后面按顺序获取参数，当参数超过10个时(包括10个)，需要使用${10},${11}….才能获取到参数，但是一般很少会超过 10 个参数的情况。函数调用时，传递参数也是一样的用法。 shell 脚本里用 curl 会显示统计信息123% Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0 在 curl 后添加参数 -s 可以不显示统计信息 查看 CentOS 版本cat /etc/redhat-release 修改 CentOS7 IP 地址12cd /etc/sysconfig/network-scripts/ll *ifcfg* 找到要修改的文件。如果不是多网卡的主机，一般会有两个文件，如下，其中一个是 127.0.0.1 的，我们需要修改的是另外一个。123[root@AndyCentOS7Basic network-scripts]# ll *ifcfg*-rw-r--r-- 1 root root 405 Apr 25 16:06 ifcfg-enp0s3 # 普通网卡-rw-r--r--. 1 root root 254 May 3 2017 ifcfg-lo # 127.0.0.1 执行 vim ifcfg-enp0s3 以编辑各参数，具体参数如何修改，这里不讨论。 查看文件更新的详细时间ls --full-time","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"tomcat 虚拟目录实践","slug":"java/tomcatVirtualHost","date":"2017-07-14T16:00:00.000Z","updated":"2020-09-01T02:53:13.000Z","comments":true,"path":"java/tomcatVirtualHost.html","link":"","permalink":"https://www.lovesofttech.com/java/tomcatVirtualHost.html","excerpt":"如题","text":"如题 编辑 conf/server.xml将 localhost 的 Host 配置项替换成下面的。这样操作以后，tomcat 的默认页面不可访问，不过，一般的生产环境和开发环境也不需要自带的管理页面。1&lt;Host name=\"localhost\" appBase=\"/home/utomcat/webapps/crm-api/\" unpackWARs=\"true\" autoDeploy=\"true\" /&gt; 可以配置多个 Host。但 name 不能重复。配置为 localhost 的 Host 可以直接用 IP + 端口的方式访问。这种方式也可以配置域名访问，只要域名指向服务器 IP 即可。如果 name 是一个域名，则只能用域名访问（域名必须指向该服务器）。 网上的其它方案：在/conf/Catalina目录下建立目录“您要配置的域名的名称”,然后建立ROOT.xml文件，其格式和/conf/localhost目录下的ROOT.xml一致…貌似已经不适用于 tomcat-8.5 以后的版本了。大概是版本 6 的配置。 tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"tomcat","slug":"java/tomcat","permalink":"https://www.lovesofttech.com/categories/java/tomcat/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动","slug":"linux/centOS7TomcatUserConfig","date":"2017-07-14T16:00:00.000Z","updated":"2020-09-01T02:53:13.029Z","comments":true,"path":"linux/centOS7TomcatUserConfig.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS7TomcatUserConfig.html","excerpt":"如题","text":"如题 目标：以非 root 权限开机自启动。以用户 utomcat 为例。所有 apache-tomcat 均以用户 utomcat 的身份启动。这样的好处是，可以把跑在 tomcat 上的 java 程序（站点）的维护工作，相对放心的交给一个普通运维人员，而不用担心运维人员不小心执行只有 root 用户才能执行的危险命令。另外，以 root 用户运行 tomcat 意味着跑在 tomcat 下的程序默认具有 root 权限，这是非常危险的。 撸开袖子，准备好开干… 创建 tomcat 用户组1groupadd gtomcat 创建 utomcat 用户这个用户名中的“u”代表 user，在前面加一个“u”是为了跟组名 tomcat 区分开。下面的命令将创建用户 utomcat 并将其加入到 tomcat 组，创建的同时，会默认会创建 utomcat 的主目录到 /home/utomcat，如果你想让主目录放在其他位置，可以使用 -d 参数1useradd -s /bin/bash -g gtomcat utomcat 修改 utomcat 密码12345678910111213141516171819# passwd utomcatChanging password for user utomcat.You can now choose the new password or passphrase.A valid password should be a mix of upper and lower case letters,digits, and other characters. You can use an 8 character longpassword with characters from at least 3 of these 4 classes.An upper case letter that begins the password and a digit thatends it do not count towards the number of character classes used,unless disable_firstupper_lastdigit_check option is enabled.A passphrase should be of at least 3 words, 12 to 30 characterslong, and contain enough different characters.Alternatively, if noone else can see your terminal now, you canpick this as your password: &quot;wreck+Paul+night&quot;.Enter new password: your password 以新用户 utomcat 登陆服务器。下载最新的 apache-tomcatwget http://apache.fayea.com/tomcat/tomcat-8/v8.5.16/bin/apache-tomcat-8.5.16.tar.gz 也可以以 root 身份登陆，从已经有 apache-tomcat 的目录 copy 至 /hopme/utomcat，然后修改所有者。1chown -R utomcat:gtomcat /home/utomcat/ 创建启动、关闭 apache-tomcat 的脚本在用户 utomcat 所在目录添加 shell-script 目录，然后在 shell-script 目录添加如下两个 shell 脚本文件1234# ~/ 代表用户所在目录mkdir -p ~/shell-scriptcd ~/shell-script/vi start.sh start.sh 内容： 123456789101112cd /home/utomcat/apache-tomcat/crm-api/bin/./startup.shrm -rf /home/utomcat/apache-tomcat/crm-web/work/cd /home/utomcat/apache-tomcat/crm-web/bin/./startup.shcd /home/utomcat/apache-tomcat/gw/bin/./startup.shcd /home/utomcat/apache-tomcat/crm-task/bin/./startup.sh shutdown.sh 内容： 1234567891011cd /home/utomcat/apache-tomcat/crm-api/bin/./shutdown.shcd /home/utomcat/apache-tomcat/crm-web/bin/./shutdown.shcd /home/utomcat/apache-tomcat/gw/bin/./shutdown.shcd /home/utomcat/apache-tomcat/crm-task/bin/./shutdown.sh 修改执行权限1chmod +x *.sh 添加 tomcat 启动文件以下切换至root用户操作。12cd /etc/init.dvi tomcat 输入如下内容。 123456789101112131415#!/bin/bash#/etc/rc.d/init.d/tomcatservice#init script for tomcatservice precesses#processname: tomcatservice#chkconfig: 2345 86 16#description: tomcatservice is a j2se server， Start up | shutdown the Tomcat servlet engine.case $1 in start) su - utomcat -lc \"sh /home/utomcat/shell-script/start.sh\";; stop) su - utomcat -lc \"sh /home/utomcat/shell-script/shutdown.sh\";; *) echo \"parameter error, usage:(start|stop)\";;esac 什么？两个分号？是不是多写了一个？没看错吧？是的，你没看错，就是要写两个分号^_^。 如果不想以 utomcat 用户启动，要换成 root，则改成下面的脚本即可。 123456789101112131415#!/bin/bash#/etc/rc.d/init.d/tomcatservice#init script for tomcatservice precesses#processname: tomcatservice#chkconfig: 2345 86 16#description: tomcatservice is a j2se server， Start up | shutdown the Tomcat servlet engine.case $1 in start) su - root -lc \"sh /home/utomcat/shell-script/start.sh\";; stop) su - root -lc \"sh /home/utomcat/shell-script/shutdown.sh\";; *) echo \"parameter error, usage:(start|stop)\";;esac 设置权限 1chmod +x tomcat 添加启动 12chkconfig --add tomcatchkconfig tomcat on 查看 tomcat 启动属性。 12# chkconfig --list|grep tomcattomcat 0:off 1:off 2:on 3:on 4:on 5:on 6:off 上面 0-6 的含义，请看：chkconfig 用法 第8项。 可用如下命令启动/停止 12service tomcat start # 启动service tomcat stop # 停止 重启 OS，tomcat 服务会随 OS 一起启动。 关于非 root 用户启动 80 端口如果将 tomcat 的端口改为 80 并以 utomcat 启动时，会得到下面的错误，因为非 root 用户不能访问 1024 以下的端口。1Caused by: java.net.SocketException: Permission denied 可以通过 iptables 来中转，具体操作这里不细讲。 通常的做法，是用nginx来配置多个域名，每个域名可设置访问不同的端口，比如多个tomcat启动的应用。参考：nginx 配置相关 tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"tomcat","slug":"CentOS/tomcat","permalink":"https://www.lovesofttech.com/categories/CentOS/tomcat/"},{"name":"java","slug":"CentOS/tomcat/java","permalink":"https://www.lovesofttech.com/categories/CentOS/tomcat/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"MySQL 慢查询","slug":"database/logSlowQueries","date":"2017-07-13T16:00:00.000Z","updated":"2020-09-01T02:53:12.921Z","comments":true,"path":"database/logSlowQueries.html","link":"","permalink":"https://www.lovesofttech.com/database/logSlowQueries.html","excerpt":"介绍如何开启慢查询，以及相关分析工具。","text":"介绍如何开启慢查询，以及相关分析工具。 查看MySQL慢查询是否开启12345678910111213mysql&gt; show variables like &apos;%slow%&apos;;+---------------------+---------------------------------+| Variable_name | Value |+---------------------+---------------------------------+| log_slow_queries | ON || slow_launch_time | 2 || slow_query_log | ON || slow_query_log_file | /var/run/mysqld/mysqld-slow.log |+---------------------+---------------------------------+set global slow_query_log=ON; #开启MySQL慢查询功能show variables like &quot;long_query_time&quot;; #查看MySQL慢查询时间设置，默认10秒set global long_query_time=5; #修改为记录5秒内的查询 MySQL 官方慢查询工具 mysqldumpslow8.x 版本，官方文档 MySQL慢日志分析工具 mysqlsla是一个开源项目，git地址 hackmysql.com1mysqlsla -lt slow -sf &quot;+select&quot; -top 5 -sort t_sum /root/mysqld-slow.log","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"CentOS下开机启动查看管理命令:chkconfig 用法","slug":"linux/centOSChkconfig","date":"2017-07-13T16:00:00.000Z","updated":"2020-09-01T02:53:13.031Z","comments":true,"path":"linux/centOSChkconfig.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSChkconfig.html","excerpt":"如题","text":"如题 CentOS下开机启动查看管理的命令是：chkconfig 开机启动列表查看: chkconfig –list说明：输出所有服务列表，如果列表中没有你要启动的服务 添加服务：chkconfig –add servicename 删除服务：chkconfig –del servicename 查看具体启动服务信息：chkconfig –list servicename例如chkconfig –list httpd输出：httpd 0:off 1:off 2:off 3:off 4:off 5:off 6:off说明：上面的输出0-6都为off时表示没有自动启动。 开启自动启动服务：chkconfig httpd on 关闭自动服务：chkconfig httpd off Level选项：chkconfig –level 35 httpd on 将Level3和Level5设置成on 0-6 分别表示的意义0：表示关机1：单用户模式2：无网络连接的多用户命令行模式3：有网络连接的多用户命令行模式4：不可用5：带图形界面的多用户模式6：重新启动","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"Nginx 反向代理、负载均衡","slug":"lnmp/nginxLoadBalancingAndProxy","date":"2017-07-13T16:00:00.000Z","updated":"2020-09-01T02:53:13.059Z","comments":true,"path":"lnmp/nginxLoadBalancingAndProxy.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/nginxLoadBalancingAndProxy.html","excerpt":"如题","text":"如题 本文的配置同样适用于 CentOS6.5（好象是废话哈，Nginx 是跨平台的） 反向代理12345678910location / &#123; #设置主机头和客户端真实地址，以便服务器获取客户端真实IP proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; #禁用缓存 proxy_buffering off; #设置反向代理的地址 proxy_pass http://192.168.1.1; &#125; 配置示例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748server &#123; listen 80; server_name mysite.com; charset utf-8; access_log logs/mysite.com.access.log; error_log logs/mysite.com.error.log; root D:/dev.workspace/php/mysite/web/; index index.php; location ~ \\.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_read_timeout 1d; #xdebug调试时长 &#125; # 下面的配置需要根据你用的 php 框架灵活变更 # 我们的框架只有 index.php 一个 php 为后缀的文件，其它都是 html 为后缀的文件 # 我们的项目采用了 mvc 框架，配置路由来访问相关页面，url 没有文件后缀。 # 所以，必须这样配置，否则除了访问 index.php 之外，会报 404 错误。 location / &#123; if (!-e $request_filename) &#123; rewrite ^(.*)$ /index.php last; break; &#125; &#125; #下面是两个反向代理。通过路由 crm 和 rate 作为反向代理标志与 mysite 主站点整合到一起。让用户感觉不到是在访问多个站点。 #crm 为 java 开发的 web 应用站点，Session 是通过读取 Memcache 的关键信息，做了模拟登陆实现与主站统一用户信息的，实际上 session 是单独管理的。应该有更好的解决方案。 #生产环境可以把 IP 地址换成域名 location ^~ /crm &#123; proxy_pass http://127.0.0.1:8180/crm; # 直接在 IDEA 运行，需要设置 server.context-path: /crm，部署到 tomcat 则需要将应用目录命名为 crm proxy_redirect http://127.0.0.1:8180/crm/ http://mysite.com/crm/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; #rate 为另外一个 php 应用站点。 #都是 php 站点，可通过 Memcached 管理 session，轻松达到在多个站点之间共享 session 的目的。 location ^~ /rate &#123; proxy_pass http://p.rate.com; proxy_redirect http://p.rate.com/ http://mysite.com/rate/; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125;&#125; 示例2：1234567891011121314151617181920212223#负载均衡配置，这里可以添加多个server，weight为权重，如果添加多个，注意分布式session的处理upstream backend &#123; server localhost:8080 weight=1;&#125;server &#123; listen 80; server_name mysite.me; location / &#123; proxy_pass http://backend; #来自jsp请求交给tomcat处理 proxy_redirect off; proxy_set_header Host $host; #后端的Web服务器可以通过X-Forwarded-For&gt;获取用户真实IP proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; #允许客户端请求的最大单文件字节数 client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数 proxy_connect_timeout 90; #nginx跟后端服务器连接超时时间(代理连接超时) proxy_read_timeout 90; #连接成功后，后端服务器响应时间(代理接收超时) proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers 6 32k; #proxy_buffers缓冲区，网页平均在32k以下的话&gt;，这样设置 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2） proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传 &#125;&#125; 负载均衡内置负载策略 轮循（默认）Nginx根据请求次数，将每个请求均匀分配到每台服务器。可以通过其它参数来控制分配比例，后面有详细描述。 IP Hash绑定处理请求的服务器。第一次请求时，根据该客户端的IP算出一个HASH值，将请求分配到集群中的某一台服务器上。后面该客户端的所有请求，都将通过HASH算法，找到之前处理这台客户端请求的服务器，然后将请求交给它来处理。在配置上，与默认策略的区别在于，在 upstream 配置的第一行是否有：ip_hash; nginx 的 upstream默认是以轮询的方式实现负载均衡，这种方式中，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。另外一种方式是ip_hash：每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。示例：1234567891011121314upstream webs &#123; #ip_hash; #加上这一行，则为 IP Hash 模式 server 192.168.0.101; server 192.168.0.102; server example.com;&#125;server &#123; listen 80; location / &#123; proxy_pass http://webs; &#125;&#125; 解释： proxy_pass http://webs：表示将所有请求转发到 webs 服务器组中配置的某一台服务器上。 upstream 模块：配置反向代理服务器组，Nginx 会根据配置，将请求分发给组里的某一台服务器。webs 是服务器组的名称。 upstream 模块下的 server 指令：配置处理请求的服务器 IP 或域名，端口可选，不配置默认使用 80 端口。通过上面的配置，Nginx 默认将请求依次分配给101，102来处理。 可以通过修改下面这些参数来改变默认的分配策略： weight：默认为1，将请求平均分配给每台server。下面的配置，表示6次请求中，192.168.0.100 分配3次，192.168.0.101 分配2次，192.168.0.102 分配1次12345upstream tomcats &#123; server 192.168.0.100 weight=3; # 3/6次 server 192.168.0.101 weight=2; # 2/6次 server 192.168.0.102 weight=1; # 1/6次&#125; max_fails默认为1。某台Server允许请求失败的次数，超过最大次数后，在fail_timeout时间内，新的请求将不会分配给这台机器。如果设置为0，Nginx会将这台Server置为永久无效状态，然后将请求发给定义了proxy_next_upstream, fastcgi_next_upstream, uwsgi_next_upstream, scgi_next_upstream, and memcached_next_upstream指令来处理这次错误的请求。 fail_timeout默认为10秒。某台Server达到max_fails次失败请求后，在fail_timeout期间内，nginx会认为这台Server暂时不可用，不会将请求分配给它。12345upstream tomcats &#123; server 192.168.0.100:8080 weight=2 max_fails=3 fail_timeout=15; server 192.168.0.101:8080 weight=3; server 192.168.0.102:8080 weight=1;&#125; 192.168.0.100这台机器，如果有3次请求失败，nginx 在15秒内，不会将新的请求分配给它。 backup备份机，所有服务器挂了之后才会生效123456upstream tomcats &#123; server 192.168.0.100:8080 weight=2 max_fails=3 fail_timeout=15; server 192.168.0.101:8080 weight=3; server 192.168.0.102:8080 backup;&#125; 在 192.168.0.100 和 192.168.0.101 都挂了之前，192.168.0.102 为不可用状态，不会将请求分配给它。只有当 192.168.0.100 和 192.168.0.101 都挂了，192.168.0.102 才会被启用。 down标识某一台server不可用。个人理解，应该是用于临时配置，等服务器确认可用了之后再去掉 down 标志。否则，如果一直不启用，干脆不要配置这台服务器好了。 max_conns限制分配给某台Server处理的最大连接数量，超过这个数量，将不会分配新的连接给它。默认为0，表示不限制。注意：1.5.9之后的版本才有这个配置123upstream tomcats &#123; server 192.168.0.100:8080 max_conns=1000;&#125; 表示最多给100这台Server分配1000个请求，如果这台Server正在处理1000个请求，nginx将不会分配新的请求给到它。假如有一个请求处理完了，还剩下999个请求在处理，这时nginx也会将新的请求分配给它。 resolve将server指令配置的域名，指定域名解析服务器。需要在http模块下配置resolver指令，指定域名解析服务 123456789http &#123; resolver 10.0.0.1; upstream u &#123; zone ...; ... server example.com resolve; &#125;&#125; 表示example.com域名，由10.0.0.1服务器来负责解析。upstream模块server指令的其它参数和详细配置说明。请参考官方文档：Module ngx_http_upstream_module 开发环境可正常使用的配置示例负载均衡配置注意，本示例的监听端口 81 如果改为 80 端口，则在“嵌入”其它站点时，负载均衡 p.weblb.com 不能被正确的反向代理。1234567891011121314151617181920upstream crm-webs &#123; ip_hash; server p.javaweb.com:8180 weight=5 max_fails=1 fail_timeout=180; #server p.javaweb.com:18081 weight=1 max_fails=1 fail_timeout=180; #server p.javaweb.com:18082 backup;&#125;server &#123; access_log logs/crm.web.access.log; error_log logs/crm.web.error.log; listen 81; server_name p.weblb.com;#可选配置 location / &#123; proxy_pass http://crm-webs; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; &#125; web 页面访问http://p.weblb.com:81如果 listen 配置为 80 端口，则不用在域名后面带端口号。直接访问：http://p.weblb.com “嵌入”其它站点如果这个应用站点需要“嵌入”其它站点，让访问者感觉不到这是两个站点，可以使用反向代理，这样配置123456789101112131415161718192021222324252627282930313233server &#123; listen 80; server_name tb.qn.com; charset utf-8; access_log logs/tb.qn.com.access.log; error_log logs/tb.qn.com.error.log; root D:/dev.workspace/php/tb.qn/trunk/web/; index index.php; location ~ \\.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_read_timeout 1d; #xdebug调试时长 &#125; location / &#123; if (!-e $request_filename) &#123; rewrite ^(.*)$ /index.php last; break; &#125; &#125; location ^~ /crm &#123; proxy_pass http://p.javaweb.com:81/crm; proxy_redirect http://p.javaweb.com:81/crm/ http://tb.qn.com/crm/; proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125;&#125; 其中 p.javaweb.com、p.weblb.com，均在 hosts 指向本地 IP12127.0.0.1 tb.qn.com127.0.0.1 p.weblb.com","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"secureCRT 显示不换行且完全显示","slug":"linux/secureCRTLineWrap","date":"2017-07-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.046Z","comments":true,"path":"linux/secureCRTLineWrap.html","link":"","permalink":"https://www.lovesofttech.com/linux/secureCRTLineWrap.html","excerpt":"如题","text":"如题 SecureCRT download secureCRT 显示默认是换行的，如果设置了不换行，当一行字符比较多的时候，会显示不全。下面的设置就是解决这两个问题的。 Options -&gt; Global Options -&gt; Terminal -&gt; Appearance -&gt; Maximum columns 设置成1200（值越大，一行显示的字符越多，如果一行的字符大于这里设置的值，则多余的字符将不显示）。选上show horizontal scrollbar。 上面的数值会影响到每个 Session 对应的 Logical Columns 值，相应的 Logical Columns 值只能小于等于上面的值，不能大于，如果上面的值改小了，session 里相应的 Logical Columns 会自动改小。 Global Options -&gt; General -&gt; Default Session -&gt; Edit Default Session -&gt; Terminal -&gt; Emulation -&gt; Logical Rows，设置成 33。 这一项要根据你的显示器分辨率来设置，如果值太大了刚连接上终端时会滚动到最下面，可能需要向上滚动才能看到命令行。我的分辨率是1920*1080，设置成33正好。经过尝试，设置成36时，在编辑的时候，光标跳不到最前行。 Logical Columns 设置成第一项 Global 设置里的 Maximum columns 值，可以小于这个值，但不能大于 Maximum columns 值（设置成一个大于Maximum columns的值不能保存，会有提示），见第 2 项描述。 选上 Retain size and font（这一项很重要，不选这项将等同于没有水平滚动条）。 Scrollback buffer 设置成 5000（这样纵向滚动屏就可以缓存更多内容，但也更占内存）。 Terminal -&gt; Appearance -&gt; Window -&gt; 选上 Show horizontal scroll bar 和 Show vertical scroll bar。 上面的所有设置都是为这一步设置作准备的，万事具备，只欠东风。Terminal -&gt; Emulation -&gt; Modes -&gt; Initial modes -&gt; line wrap 取消勾选。勾选，则为换行。 重新打开secureCRT，连接终端。 后记对于折行，其实，还是需要的。当然，如果不需要显示全部的信息，如果觉得通过上面的设置，显示的内容已经足够应付日常工作需要了，也可以忽略下面的内容。 经过上面的设置，一行显示的长度已经足够普通脚本的显示了，也就是说，普通脚本，完全可以在一行显示完，所以，折不折行是无所谓的。但是，特殊情况下，比如通过 api 查询一张淘宝订单，显示的内容是很多的，一行根本显示不完，在不折行的情况下，显示不完的内容会被截断。折行设置：Terminal -&gt; Emulation -&gt; Modes -&gt; Initial modes -&gt; line wrap，将该选项勾选上即可。","categories":[{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/categories/SecureCRT/"}],"tags":[{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/tags/SecureCRT/"}]},{"title":"查看 linux 进程内存占用情况","slug":"linux/linuxMem","date":"2017-07-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.042Z","comments":true,"path":"linux/linuxMem.html","link":"","permalink":"https://www.lovesofttech.com/linux/linuxMem.html","excerpt":"如题","text":"如题 可以直接使用top命令后，查看%MEM的内容。可以选择按进程查看或者按用户查看，如想查看oracle用户的进程内存使用情况的话可以使用如下的命令： (1)top top命令是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器 可以直接使用top命令后，查看%MEM的内容。可以选择按进程查看或者按用户查看，如想查看oracle用户的进程内存使用情况的话可以使用如下的命令： $ top -u oracle 内容解释： PID：进程的ID USER：进程所有者 PR：进程的优先级别，越小越优先被执行 NInice：值 VIRT：进程占用的虚拟内存 RES：进程占用的物理内存 SHR：进程使用的共享内存 S：进程的状态。S表示休眠，R表示正在运行，Z表示僵死状态，N表示该进程优先值为负数 %CPU：进程占用CPU的使用率 %MEM：进程使用的物理内存和总内存的百分比 TIME+：该进程启动后占用的总的CPU时间，即占用CPU使用时间的累加值。 COMMAND：进程启动命令名称 常用的命令： P：按%CPU使用率排行 T：按MITE+排行 M：按%MEM排行 (2)pmap 可以根据进程查看进程相关信息占用的内存情况，(进程号可以通过ps查看)如下所示： $ pmap -d 14596 (3)ps 如下例所示： $ ps -e -o ‘pid,comm,args,pcpu,rsz,vsz,stime,user,uid’ 其中rsz是是实际内存 $ ps -e -o ‘pid,comm,args,pcpu,rsz,vsz,stime,user,uid’ | grep oracle | sort -nrk5 其中rsz为实际内存，上例实现按内存排序，由大到小","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"在 centOS 6.5 上安装 MySQL 客户端","slug":"database/centOSMySQLClient","date":"2017-07-04T16:00:00.000Z","updated":"2020-09-01T02:53:12.917Z","comments":true,"path":"database/centOSMySQLClient.html","link":"","permalink":"https://www.lovesofttech.com/database/centOSMySQLClient.html","excerpt":"在一台新的 centOS 6.5 服务器上，想要运行 MySQL 客户端，却被告之无法识别。本文介绍如何只安装 MySQL 客户端。","text":"在一台新的 centOS 6.5 服务器上，想要运行 MySQL 客户端，却被告之无法识别。本文介绍如何只安装 MySQL 客户端。12# mysql-bash: mysql: command not found 检查是否已经安装 mysql1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192# find / -name mysql/usr/lib64/mysql/usr/share/mysql[root@jstukte7a334ry mysql]# cd /usr/lib64/mysql/[root@jstukte7a334ry mysql]# lltotal 3108lrwxrwxrwx. 1 root root 26 Aug 14 2014 libmysqlclient_r.so.16 -&gt; libmysqlclient_r.so.16.0.0-rwxr-xr-x. 1 root root 1595240 Feb 13 2014 libmysqlclient_r.so.16.0.0lrwxrwxrwx. 1 root root 24 Aug 14 2014 libmysqlclient.so.16 -&gt; libmysqlclient.so.16.0.0-rwxr-xr-x. 1 root root 1584680 Feb 13 2014 libmysqlclient.so.16.0.0[root@jstukte7a334ry mysql]# cd /usr/share/mysql/[root@jstukte7a334ry mysql]# lltotal 96drwxr-xr-x. 2 root root 4096 Aug 14 2014 charsetsdrwxr-xr-x. 2 root root 4096 Aug 14 2014 czechdrwxr-xr-x. 2 root root 4096 Aug 14 2014 danishdrwxr-xr-x. 2 root root 4096 Aug 14 2014 dutchdrwxr-xr-x. 2 root root 4096 Aug 14 2014 englishdrwxr-xr-x. 2 root root 4096 Aug 14 2014 estoniandrwxr-xr-x. 2 root root 4096 Aug 14 2014 frenchdrwxr-xr-x. 2 root root 4096 Aug 14 2014 germandrwxr-xr-x. 2 root root 4096 Aug 14 2014 greekdrwxr-xr-x. 2 root root 4096 Aug 14 2014 hungariandrwxr-xr-x. 2 root root 4096 Aug 14 2014 italiandrwxr-xr-x. 2 root root 4096 Aug 14 2014 japanesedrwxr-xr-x. 2 root root 4096 Aug 14 2014 koreandrwxr-xr-x. 2 root root 4096 Aug 14 2014 norwegiandrwxr-xr-x. 2 root root 4096 Aug 14 2014 norwegian-nydrwxr-xr-x. 2 root root 4096 Aug 14 2014 polishdrwxr-xr-x. 2 root root 4096 Aug 14 2014 portuguesedrwxr-xr-x. 2 root root 4096 Aug 14 2014 romaniandrwxr-xr-x. 2 root root 4096 Aug 14 2014 russiandrwxr-xr-x. 2 root root 4096 Aug 14 2014 serbiandrwxr-xr-x. 2 root root 4096 Aug 14 2014 slovakdrwxr-xr-x. 2 root root 4096 Aug 14 2014 spanishdrwxr-xr-x. 2 root root 4096 Aug 14 2014 swedishdrwxr-xr-x. 2 root root 4096 Aug 14 2014 ukrainian[root@jstukte7a334ry mysql]# service mysqld statusmysqld: unrecognized service[root@jstukte7a334ry mysql]# service mysql status mysql: unrecognized service[root@jstukte7a334ry mysql]# cd /etc/init.d/[root@jstukte7a334ry init.d]# lltotal 256-rwxr-xr-x. 1 root root 1288 Nov 23 2013 abrt-ccpp-rwxr-xr-x. 1 root root 1628 Nov 23 2013 abrtd-rwxr-xr-x. 1 root root 1642 Nov 23 2013 abrt-oops-rwxr-xr-x. 1 root root 1725 Aug 19 2010 acpid-rwxr-xr-x 1 root root 2265 Jun 28 2016 aegis-r-xr-xr-x 1 root root 3726 Jun 2 2015 agentwatch-rwxrwxrwx 1 root root 3864 Jul 5 2016 ali_auditd_srv-rwxr-xr-x. 1 root root 2062 Jan 30 2012 atd-rwxr-xr-x. 1 root root 3378 May 28 2014 auditd-r-xr-xr-x. 1 root root 1340 Nov 24 2013 blk-availability-rwxr-xr-x. 1 root root 11355 Aug 13 2013 cpuspeed-rwxr-xr-x. 1 root root 2826 Nov 23 2013 crond-rw-r--r--. 1 root root 19175 Jul 10 2014 functions-rwxr-xr-x. 1 root root 1801 Jul 20 2011 haldaemon-rwxr-xr-x. 1 root root 5866 Oct 10 2013 halt-rwxr-xr-x. 1 root root 10804 Nov 23 2013 ip6tables-rwxr-xr-x. 1 root root 10688 Nov 23 2013 iptables-rwxr-xr-x. 1 root root 1938 May 5 2014 irqbalance-rwxr-xr-x. 1 root root 18133 Nov 23 2013 kdump-rwxr-xr-x. 1 root root 652 Oct 10 2013 killall-r-xr-xr-x. 1 root root 2134 Nov 24 2013 lvm2-lvmetad-r-xr-xr-x. 1 root root 2665 Nov 24 2013 lvm2-monitor-rwxr-xr-x. 1 root root 2571 Apr 7 2014 mdmonitor-rwxr-xr-x. 1 root root 2200 Sep 14 2012 messagebus-rwxr-xr-x. 1 root root 2989 Oct 10 2013 netconsole-rwxr-xr-x. 1 root root 5428 Oct 10 2013 netfs-rwxr-xr-x. 1 root root 6334 Oct 10 2013 network-rwxr-xr-x 1 root root 2515 Jan 28 2015 nscd-rwxr-xr-x 1 root root 1923 Dec 20 2014 ntpd-rwxr-xr-x 1 root root 2043 Dec 20 2014 ntpdate-rwxrwxrwx 1 root root 1459 Mar 10 20:35 openvpnsrv-rwxr-xr-x. 1 root root 3912 Feb 20 2014 postfix-rwxr-xr-x. 1 root root 1556 Jul 17 2012 psacct-rwxr-xr-x. 1 root root 2034 Mar 5 2014 quota_nld-rwxr-xr-x. 1 root root 1513 Sep 17 2013 rdisc-rwxr-xr-x. 1 root root 1822 Nov 23 2013 restorecond-rwxr-xr-x. 1 root root 1808 Dec 18 2011 rngd-rwxr-xr-x. 1 root root 2011 Aug 15 2013 rsyslog-rwxr-xr-x. 1 root root 1698 Nov 23 2013 sandbox-rwxr-xr-x. 1 root root 2056 Nov 20 2012 saslauthd-rwxr-xr-x. 1 root root 647 Oct 10 2013 single-rwxr-xr-x. 1 root root 3002 Feb 22 2013 smartd-rwxr-xr-x. 1 root root 4534 Nov 23 2013 sshd-rwxr-xr-x. 1 root root 2276 Feb 12 2014 svnserve-rwxr-xr-x 1 root root 1144 Oct 16 2014 sysstat-rwxr-xr-x. 1 root root 2294 Nov 23 2013 udev-post[root@jstukte7a334ry init.d]# ll mysql*ls: cannot access mysql*: No such file or directory 通过以上检查，服务列表没有mysql，相关的目录下也没有mysql可执行程序，确保系统没有安装 mysql，那么，安装之。 下载最新的 MySQL Community Server centos 要选 Red Hat Enterprise Linux / Oracle Linux，然后，要选 el6 的版本。linux 版本号中 EL 代表 enterprise linux1234567What does el5, el6, and el7 mean?EL is short for Red Hat Enterprise Linux (EL).EL5 is the download for Red Hat 5.x, CentOS 5.x, CloudLinux 5.x.EL6 is the download for Red Hat 6.x, CentOS 6.x, and CloudLinux 6.x.EL7 is the download for Red Hat 7.x, CentOS 7.x, and CloudLinux 7.x.The UNIXy Varnish Plugins run on all the above platforms. 我下载的最新版本是：mysql-5.7.18-1.el6.x86_64.rpm-bundle.tar下载后，解压：1tar -xvf mysql-5.7.18-1.el6.x86_64.rpm-bundle.tar 得到以下文件列表：123456789101112# lltotal 918984-rw-r--r-- 1 root root 470507520 Mar 20 18:52 mysql-5.7.18-1.el6.x86_64.rpm-bundle.tar-rw-r--r-- 1 7155 31415 23618836 Mar 20 17:40 mysql-community-client-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 335496 Mar 20 17:40 mysql-community-common-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 3747352 Mar 20 17:40 mysql-community-devel-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 39086508 Mar 20 17:40 mysql-community-embedded-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 135869292 Mar 20 17:40 mysql-community-embedded-devel-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 2177064 Mar 20 17:40 mysql-community-libs-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 1723180 Mar 20 17:40 mysql-community-libs-compat-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 159060212 Mar 20 17:41 mysql-community-server-5.7.18-1.el6.x86_64.rpm-rw-r--r-- 1 7155 31415 104881084 Mar 20 17:41 mysql-community-test-5.7.18-1.el6.x86_64.rpm 安装client 需要先安装 libs1234# rpm -ivh mysql-community-client-5.7.18-1.el6.x86_64.rpmwarning: mysql-community-client-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: mysql-community-libs(x86-64) &gt;= 5.7.9 is needed by mysql-community-client-5.7.18-1.el6.x86_64 而安装 libs 需要先安装 common1234# rpm -ivh mysql-community-libs-5.7.18-1.el6.x86_64.rpm warning: mysql-community-libs-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYerror: Failed dependencies: mysql-community-common(x86-64) &gt;= 5.7.9 is needed by mysql-community-libs-5.7.18-1.el6.x86_64 所以，最先被安装的，应该是 common1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# rpm -ivh mysql-community-common-5.7.18-1.el6.x86_64.rpmwarning: mysql-community-common-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ########################################### [100%] file /usr/share/mysql/czech/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/danish/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/dutch/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/english/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/estonian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/french/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/german/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/greek/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/hungarian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/italian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/japanese/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/korean/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/norwegian-ny/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/norwegian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/polish/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/portuguese/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/romanian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/russian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/serbian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/slovak/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/spanish/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/swedish/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/ukrainian/errmsg.sys from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/Index.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/armscii8.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/ascii.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp1250.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp1256.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp1257.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp850.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp852.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/cp866.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/dec8.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/geostd8.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/greek.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/hebrew.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/hp8.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/keybcs2.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/koi8r.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/koi8u.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/latin1.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/latin2.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/latin5.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/latin7.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/macce.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/macroman.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 file /usr/share/mysql/charsets/swe7.xml from install of mysql-community-common-5.7.18-1.el6.x86_64 conflicts with file from package mysql-libs-5.1.73-3.el6_5.x86_64 安装过程中，提示与 centos6.5 自带的旧版本冲突。 解决：123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081# yum -y remove mysql-libs-5.1.73*Loaded plugins: securitySetting up Remove ProcessResolving Dependencies--&gt; Running transaction check---&gt; Package mysql-libs.x86_64 0:5.1.73-3.el6_5 will be erased--&gt; Processing Dependency: libmysqlclient.so.16()(64bit) for package: 2:postfix-2.6.6-6.el6_5.x86_64--&gt; Processing Dependency: libmysqlclient.so.16(libmysqlclient_16)(64bit) for package: 2:postfix-2.6.6-6.el6_5.x86_64--&gt; Processing Dependency: mysql-libs for package: 2:postfix-2.6.6-6.el6_5.x86_64--&gt; Running transaction check---&gt; Package postfix.x86_64 2:2.6.6-6.el6_5 will be erased--&gt; Processing Dependency: /usr/sbin/sendmail for package: redhat-lsb-core-4.0-7.el6.centos.x86_64--&gt; Processing Dependency: /usr/sbin/sendmail for package: cronie-1.4.4-12.el6.x86_64--&gt; Running transaction check---&gt; Package cronie.x86_64 0:1.4.4-12.el6 will be erased--&gt; Processing Dependency: cronie = 1.4.4-12.el6 for package: cronie-anacron-1.4.4-12.el6.x86_64---&gt; Package redhat-lsb-core.x86_64 0:4.0-7.el6.centos will be erased--&gt; Running transaction check---&gt; Package cronie-anacron.x86_64 0:1.4.4-12.el6 will be erased--&gt; Processing Dependency: /etc/cron.d for package: crontabs-1.10-33.el6.noarch--&gt; Processing Dependency: /etc/cron.d for package: sysstat-9.0.4-27.el6.x86_64--&gt; Restarting Dependency Resolution with new changes.--&gt; Running transaction check---&gt; Package crontabs.noarch 0:1.10-33.el6 will be erased---&gt; Package sysstat.x86_64 0:9.0.4-27.el6 will be erased--&gt; Finished Dependency Resolutionbase | 3.7 kB 00:00 epel | 4.3 kB 00:00 epel/primary_db | 5.9 MB 00:05 extras | 3.4 kB 00:00 updates | 3.4 kB 00:00 Dependencies Resolved=================================================================================================================================== Package Arch Version Repository Size===================================================================================================================================Removing: mysql-libs x86_64 5.1.73-3.el6_5 @updates 4.0 MRemoving for dependencies: cronie x86_64 1.4.4-12.el6 @anaconda-CentOS-201311291202.x86_64/6.5 174 k cronie-anacron x86_64 1.4.4-12.el6 @anaconda-CentOS-201311291202.x86_64/6.5 43 k crontabs noarch 1.10-33.el6 @anaconda-CentOS-201311291202.x86_64/6.5 2.4 k postfix x86_64 2:2.6.6-6.el6_5 @updates 9.7 M redhat-lsb-core x86_64 4.0-7.el6.centos @anaconda-CentOS-201311291202.x86_64/6.5 22 k sysstat x86_64 9.0.4-27.el6 @base 825 kTransaction Summary===================================================================================================================================Remove 7 Package(s)Installed size: 15 MDownloading Packages:Running rpm_check_debugRunning Transaction TestTransaction Test SucceededRunning Transaction Erasing : redhat-lsb-core-4.0-7.el6.centos.x86_64 1/7 Erasing : sysstat-9.0.4-27.el6.x86_64 2/7 /var/tmp/rpm-tmp.WcRV33: line 1: lsb_release: command not found Erasing : cronie-1.4.4-12.el6.x86_64 3/7 Erasing : cronie-anacron-1.4.4-12.el6.x86_64 4/7 Erasing : crontabs-1.10-33.el6.noarch 5/7 Erasing : 2:postfix-2.6.6-6.el6_5.x86_64 6/7 Erasing : mysql-libs-5.1.73-3.el6_5.x86_64 7/7 Verifying : cronie-anacron-1.4.4-12.el6.x86_64 1/7 Verifying : mysql-libs-5.1.73-3.el6_5.x86_64 2/7 Verifying : redhat-lsb-core-4.0-7.el6.centos.x86_64 3/7 Verifying : sysstat-9.0.4-27.el6.x86_64 4/7 Verifying : crontabs-1.10-33.el6.noarch 5/7 Verifying : cronie-1.4.4-12.el6.x86_64 6/7 Verifying : 2:postfix-2.6.6-6.el6_5.x86_64 7/7 Removed: mysql-libs.x86_64 0:5.1.73-3.el6_5 Dependency Removed: cronie.x86_64 0:1.4.4-12.el6 cronie-anacron.x86_64 0:1.4.4-12.el6 crontabs.noarch 0:1.10-33.el6 postfix.x86_64 2:2.6.6-6.el6_5 redhat-lsb-core.x86_64 0:4.0-7.el6.centos sysstat.x86_64 0:9.0.4-27.el6 Complete! 再次安装1234# rpm -ivh mysql-community-common-5.7.18-1.el6.x86_64.rpmwarning: mysql-community-common-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ########################################### [100%] 1:mysql-community-common ########################################### [100%] 然后是 libs1234# rpm -ivh mysql-community-libs-5.7.18-1.el6.x86_64.rpm warning: mysql-community-libs-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ########################################### [100%] 1:mysql-community-libs ########################################### [100%] 最后是 client1234# rpm -ivh mysql-community-client-5.7.18-1.el6.x86_64.rpm warning: mysql-community-client-5.7.18-1.el6.x86_64.rpm: Header V3 DSA/SHA1 Signature, key ID 5072e1f5: NOKEYPreparing... ########################################### [100%] 1:mysql-community-client ########################################### [100%] 再次查找 mysql1234# find / -name mysql/usr/lib64/mysql/usr/share/mysql/usr/bin/mysql 多了一个目录：/usr/bin/mysql12# cd /usr/bin/mysql-bash: cd: /usr/bin/mysql: Not a directory 哈哈，这不是一个目录，这就是刚刚安装好的 mysql client检查是否安装成功12# mysqlERROR 2002 (HY000): Can&apos;t connect to local MySQL server through socket &apos;/var/lib/mysql/mysql.sock&apos; (2) 看到上面的提示，说明 mysql 客户端已经安装成功了的。","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"在 CentOS 上安装配置 Java 运行环境","slug":"linux/centOSJava","date":"2017-07-03T16:00:00.000Z","updated":"2020-09-01T02:53:13.034Z","comments":true,"path":"linux/centOSJava.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSJava.html","excerpt":"如题","text":"如题 卸载已有版本将 linux 自带的 OpenJDK 卸载掉，然后安装 Oracle 的最新版 JDK 查看已有版本 1234[root@localhost ~]# rpm -qa|grep javajava-1.6.0-openjdk-1.6.0.41-1.13.13.1.el6_8.x86_64tzdata-java-2017b-1.el6.noarchjava-1.7.0-openjdk-1.7.0.141-2.6.10.1.el6_9.x86_64 卸载已有版本 123yum -y remove java-1.6.0-openjdk-1.6.0.41-1.13.13.1.el6_8.x86_64yum -y remove java-1.7.0-openjdk-1.7.0.141-2.6.10.1.el6_9.x86_64yum -y remove tzdata-java-2017b-1.el6.noarch 下载最新的 JDK我下载的是：jdk-8u131-linux-x64.tar.gz下载地址http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html直接复制页面的下载链接无效，需要点击同意协议(Accept License Agreement )才可以下载。如果在页面右键-&gt;复制下载链接，下载的不是真正的jdk，而是一个后缀为 tar.gz 的页面。这种方式不行：wget http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz正确的方式：用迅雷下载，然后在迅雷的下载界面复制下载链接，并且这个下载链接是有时效性的。wget http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz?AuthParam=1499073620_1611edcb02c2b23dd3df90734794c854 最新：wget http://download.oracle.com/otn-pub/java/jdk/8u144-b01/090f390dda5b47b9b721c7dfaa008135/jdk-8u144-linux-x64.tar.gz?AuthParam=1501237697_2ab75db8ba2ce2a86ea28fb9b624ec0c 解压：tar -xzvf jdk-8u131-linux-x64.tar.gz移至/usr/，得到目录：/usr/jdk1.8.0_1311[root@localhost soft]# mv jdk1.8.0_131 /usr/ 配置环境变量vim /etc/profile #vim编辑器执行写入操作需要先按“i”键，编辑完成之后需要先按esc键，然后输入“:x”回车即可保存并退出向文件里追加如下内容：123JAVA_HOME=/usr/jdk1.8.0_161PATH=$JAVA_HOME/bin:$PATHexport JAVA_HOME PATH 执行下面的命令，使修改立即生效source /etc/profile 检查是否配置成功1234# java -versionjava version &quot;1.8.0_161&quot;Java(TM) SE Runtime Environment (build 1.8.0_161-b12)Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"java","slug":"CentOS/java","permalink":"https://www.lovesofttech.com/categories/CentOS/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"CentOS 下 RPM 软件包的安装及卸载","slug":"linux/centOSRPMManage","date":"2017-07-03T16:00:00.000Z","updated":"2020-09-01T02:53:13.036Z","comments":true,"path":"linux/centOSRPMManage.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSRPMManage.html","excerpt":"如题","text":"如题 RPM 安装操作rpm -i 需要安装的包文件名 RPM 查询操作rpm -q 附加查询命令：a 查询所有已经安装的包i 显示安装包的信息；l 显示安装包中的所有文件被安装到哪些目录下s 显示安装版中的所有文件状态及被安装到哪些目录下p 查询的是安装包的信息f 查询的是已安装的某文件信息 举例如下：rpm -qa | grep tomcat4 查看 tomcat4 是否被安装；rpm -qip example.rpm 查看 example.rpm 安装包的信息；rpm -qif /bin/df 查看/bin/df 文件所在安装包的信息；rpm -qlf /bin/df 查看/bin/df 文件所在安装包中的各个文件分别被安装到哪个目录下； RPM 卸载操作rpm -e 需要卸载的安装包 RPM 升级操作rpm -U 需要升级的包 RPM 验证操作rpm -V 需要验证的包rpm 常用命令1.安装一个包 # rpm -ivh 2.升级一个包 # rpm -Uvh 3.卸载一个包 # rpm -e 4.安装参数 --force 即使覆盖属于其它包的文件也强迫安装 --nodeps 如果该RPM包的安装依赖其它包，即使其它包没装，也强迫安装。 5.查询一个包是否被安装 # rpm -q &lt; rpm package name&gt; 6.得到被安装的包的信息 # rpm -qi &lt; rpm package name&gt; 7.列出该包中有哪些文件 # rpm -ql &lt; rpm package name&gt; 8.列出服务器上的一个文件属于哪一个RPM包 #rpm -qf 9.可综合好几个参数一起用 # rpm -qil &lt; rpm package name&gt; 10.列出所有被安装的rpm package # rpm -qa 11.列出一个未被安装进系统的RPM包文件中包含有哪些文件？ # rpm -qilp &lt; rpm package name&gt;详细选项： -h (or --hash) 安装时输出hash记号 (``#&apos;&apos;) --test 只对安装进行测试，并不实际安装。 --percent 以百分比的形式输出安装的进度。 --excludedocs 不安装软件包中的文档文件 --includedocs 安装文档 --replacepkgs 强制重新安装已经安装的软件包 --replacefiles 替换属于其它软件包的文件 --force 忽略软件包及文件的冲突 --noscripts 不运行预安装和后安装脚本 --prefix 将软件包安装到由 指定的路径下 --ignorearch 不校验软件包的结构 --ignoreos 不检查软件包运行的操作系统 --nodeps 不检查依赖性关系 --ftpproxy 用 作为 FTP代理 --ftpport 指定FTP的端口号为 通用选项 -v 显示附加信息 -vv 显示调试信息 --root 让RPM将指定的路径做为&quot;根目录&quot;，这样预安装程序和后安 装程序都会安装到这个目录下 --rcfile 设置rpmrc文件为 --dbpath 设置RPM 资料库存所在的路径为 二、删除 命令格式： rpm -e ( or --erase) options pkg1 ... pkgN 参数 pkg1 ... pkgN ：要删除的软件包 详细选项 --test 只执行删除的测试 --noscripts 不运行预安装和后安装脚本程序 --nodeps 不检查依赖性 通用选项 -vv 显示调试信息 --root 让RPM将指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装 程序都会安装到这个目录下 --rcfile 设置rpmrc文件为 --dbpath 设置RPM 资料库存所在的路径为 三、升级 命令格式 rpm -U ( or --upgrade) options file1.rpm ... fileN.rpm 参数 file1.rpm ... fileN.rpm 软件包的名字 详细选项 -h (or --hash) 安装时输出hash记号 (``#&apos;&apos;) --oldpackage 允许&quot;升级&quot;到一个老版本 --test 只进行升级测试 --excludedocs 不安装软件包中的文档文件 --includedocs 安装文档 --replacepkgs 强制重新安装已经安装的软件包 --replacefiles 替换属于其它软件包的文件 --force 忽略软件包及文件的冲突 --percent 以百分比的形式输出安装的进度。 --noscripts 不运行预安装和后安装脚本 --prefix 将软件包安装到由 指定的路径下 --ignorearch 不校验软件包的结构 --ignoreos 不检查软件包运行的操作系统 --nodeps 不检查依赖性关系 --ftpproxy 用 作为 FTP代理 --ftpport 指定FTP的端口号为 通用选项 -v 显示附加信息 -vv 显示调试信息 --root 让RPM将指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下 --rcfile 设置rpmrc文件为 --dbpath 设置RPM 资料库存所在的路径为 四、查询 命令格式： rpm -q ( or --query) options 参数： pkg1 ... pkgN ：查询已安装的软件包 详细选项 -p (or ``-&apos;&apos;) 查询软件包的文件 -f 查询属于哪个软件包 -a 查询所有安装的软件包 --whatprovides 查询提供了 功能的软件包 -g 查询属于 组的软件包 --whatrequires 查询所有需要 功能的软件包 信息选项 显示软件包的全部标识 -i 显示软件包的概要信息 -l 显示软件包中的文件列表 -c 显示配置文件列表 -d 显示文档文件列表 -s 显示软件包中文件列表并显示每个文件的状态 --scripts 显示安装、卸载、校验脚本 --queryformat (or --qf) 以用户指定的方式显示查询信息 --dump 显示每个文件的所有已校验信息 --provides 显示软件包提供的功能 --requires (or -R) 显示软件包所需的功能 通用选项 -v 显示附加信息 -vv 显示调试信息 --root 让RPM将指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下 --rcfile 设置rpmrc文件为 --dbpath 设置RPM 资料库存所在的路径为 五、校验已安装的软件包 命令格式： rpm -V ( or --verify, or -y) options 参数 pkg1 ... pkgN 将要校验的软件包名 软件包选项 -p Verify against package file -f 校验所属的软件包 -a Verify 校验所有的软件包 -g 校验所有属于组 的软件包 详细选项 --noscripts 不运行校验脚本 --nodeps 不校验依赖性 --nofiles 不校验文件属性 通用选项 -v 显示附加信息 -vv 显示调试信息 --root 让RPM将指定的路径做为&quot;根目录&quot;，这样预安装程序和后安装程序都会安装到这个目录下 --rcfile 设置rpmrc文件为 --dbpath 设置RPM 资料库存所在的路径为 六、校验软件包中的文件 语法： rpm -K ( or --checksig) options file1.rpm ... fileN.rpm 参数： file1.rpm ... fileN.rpm 软件包的文件名 Checksig--详细选项 --nopgp 不校验PGP签名 通用选项 -v 显示附加信息 -vv 显示调试信息 --rcfile 设置rpmrc文件为 七、其它RPM选项 --rebuilddb 重建RPM资料库 --initdb 创建一个新的RPM资料库 --quiet 尽可能的减少输出 --help 显示帮助文件 --version 显示RPM的当前版本 telnet用法 测试端口号，注意 IP 与 端口之间需要用空格分开telnet IP 端口","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"rpm","slug":"CentOS/rpm","permalink":"https://www.lovesofttech.com/categories/CentOS/rpm/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"rpm","slug":"rpm","permalink":"https://www.lovesofttech.com/tags/rpm/"}]},{"title":"如何查看已安装的 CentOS 版本信息","slug":"linux/centOSVersion","date":"2017-07-03T16:00:00.000Z","updated":"2020-09-01T02:53:13.039Z","comments":true,"path":"linux/centOSVersion.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOSVersion.html","excerpt":"如题","text":"如题 12345678910111213141516171819202122232425262728# cat /proc/versionLinux version 2.6.32-431.23.3.el6.x86_64 (mockbuild@c6b8.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Thu Jul 31 17:20:51 UTC 2014# uname -aLinux jstukte7a334ry 2.6.32-431.23.3.el6.x86_64 #1 SMP Thu Jul 31 17:20:51 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux# uname -r2.6.32-431.23.3.el6.x86_64# lsb_release -aLSB Version: :base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarchDistributor ID: CentOSDescription: CentOS release 6.5 (Final)Release: 6.5Codename: Final# cat /etc/issueCentOS release 6.5 (Final)Kernel \\r on an \\m# cat /etc/redhat-releaseCentOS release 6.5 (Final)# getconf LONG_BIT64# file /bin/ls/bin/ls: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"MySQL 常用脚本，日常经验","slug":"database/experience","date":"2017-06-18T16:00:00.000Z","updated":"2020-09-01T02:53:12.919Z","comments":true,"path":"database/experience.html","link":"","permalink":"https://www.lovesofttech.com/database/experience.html","excerpt":"MySQL 高频脚本备忘录，以及日常经验备忘。","text":"MySQL 高频脚本备忘录，以及日常经验备忘。 在终端连接 MySQL假设 MySQL 的密码是：#mysqlPassword!#，主机 IP 是：192.168.1.230，用户名是：root。在 win10 的 cmd 窗口下，用以下脚本可直接连接。1mysql -h192.168.1.230 -uroot -p#mysqlPassword!# 把用户名用单引号引起来，密码不引，也可以直接连接。1mysql -h192.168.1.230 -u&apos;root&apos; -p#mysqlPassword!# 但是，如果把密码用单引号引起来，则会提示：1ERROR 1045 (28000): Access denied for user &apos;root&apos;@&apos;192.168.1.89&apos; (using password: YES) 没有权限时（换一个 IP：192.168.1.29 连接测试），会提示：1ERROR 1130 (HY000): Host &apos;192.168.1.29&apos; is not allowed to connect to this MySQL server SecureCRT 用以下脚本可直接连接，密码前后的单引号是必须的，否则会不识别密码，而用户名则可以引起来也可以不引。1mysql -u&apos;root&apos; -p&apos;#mysqlPassword!#&apos; 结论在终端连接 MySQL时，关于单引号的使用，win10 与 SecureCRT 是有区别的。 密码，win10 下不能用单引号引起来，而 SecureCRT 则必须要用单引号引起来。 主机 IP 地址，在 win10 下，不能用单引号引起来，否则报以下错误，而 SecureCRT 则可用单引号引起来，也可不用。123C:\\Users\\AndyChen&gt;mysql -h&apos;192.168.1.230&apos; -uroot -p#mysqlPassword!#mysql: [Warning] Using a password on the command line interface can be insecure.ERROR 2005 (HY000): Unknown MySQL server host &apos;&apos;192.168.1.230&apos;&apos; (2) sql_safe_updates用 MySQL Workbench，执行批量更新、删除时，报错。1Error Code: 1175. You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column To disable safe mode, toggle the option in Preferences -&gt; SQL Editor and reconnect. 0.000 sec MySQL Workbench 默认阻止这种批量修改删除操作，是为了防止我们由于误操作而导致的全表数据更新，因此强制我们必须使用有效的 where 语句来限制。 临时解决可在 MySQL Workbench 查询窗口执行以下语句临时支持批量修改和删除：1set sql_safe_updates = 0; 但重启 MySQL Workbench 后会失效。 永久解决修改配置，其配置项如下（edit -&gt; preference -&gt; SQL Editor -&gt; Safe Updates(rejects UPDATEs and DELETEs with no restrictions)）： 该项默认是勾选状态，取消勾选，重启 MySQLWorkbench 生效。不过，如此设置之后，建议 MySQL Workbench 只连接开发和测试环境，不要连接生产环境以避免灾难性失误。 时间函数 将时间戳格式化为能看懂的时间格式 1FROM_UNIXTIME(created, '%Y-%m-%d %H:%i:%s') as createdF 返回当前时间的UNIX时间戳 12select UNIX_TIMESTAMP(NOW()) from dual;select unix_timestamp() from dual; MYSQL 事件 查看 event_scheduler 状态 1show variables like &apos;%sche%&apos;; 修改 event_scheduler 状态 1set global event_scheduler=1; 这种方式开启后，重启 MySQL 后，JOB 功能又 OFF 了，所以，还需要修改配置文件，以开启 JOB 功能。开启方法：在 my.cnf 添加 mysqlid event_scheduler=ON 创建 MYSQL 事件12345678910DELIMITER $$CREATE event event_tb_push_data_backupON SCHEDULEEVERY 5 MINUTESTARTS NOW()DOBEGIN CALL event_tb_push_data_backup();END;DELIMITER ; mysql 修改自增列的起始值1alter table tableName AUTO_INCREMENT=100000066; mysql 超时时间设置设置全局变量 connect_timeout 为12小时（12*3600=43200）12MySQL [(none)]&gt; SET GLOBAL connect_timeout = 43200;Query OK, 0 rows affected (0.00 sec) 再次查看，确认参数是否修改成功12345MySQL [(none)]&gt; show global variables like &apos;%timeout%&apos;;+----------------------------------------+--------------+| Variable_name | Value |+----------------------------------------+--------------+| connect_timeout | 43200 | 关于 information_schema 库information_schema是一个虚拟数据库，并不物理存在，在select的时候，从其他数据库获取相应的信息。 以下是information_schema数据库中的表12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970mysql&gt; use information_schemaReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedmysql&gt; show tables;+---------------------------------------+| Tables_in_information_schema |+---------------------------------------+| CHARACTER_SETS || COLLATIONS || COLLATION_CHARACTER_SET_APPLICABILITY || COLUMNS || COLUMN_PRIVILEGES || ENGINES || EVENTS || FILES || GLOBAL_STATUS || GLOBAL_VARIABLES || KEY_COLUMN_USAGE || OPTIMIZER_TRACE || PARAMETERS || PARTITIONS || PLUGINS || PROCESSLIST || PROFILING || REFERENTIAL_CONSTRAINTS || ROUTINES || SCHEMATA || SCHEMA_PRIVILEGES || SESSION_STATUS || SESSION_VARIABLES || STATISTICS || TABLES || TABLESPACES || TABLE_CONSTRAINTS || TABLE_PRIVILEGES || TRIGGERS || USER_PRIVILEGES || VIEWS || INNODB_LOCKS || INNODB_TRX || INNODB_SYS_DATAFILES || INNODB_LOCK_WAITS || INNODB_SYS_TABLESTATS || INNODB_CMP || INNODB_METRICS || INNODB_CMP_RESET || INNODB_CMP_PER_INDEX || INNODB_CMPMEM_RESET || INNODB_FT_DELETED || INNODB_BUFFER_PAGE_LRU || INNODB_SYS_FOREIGN || INNODB_SYS_COLUMNS || INNODB_SYS_INDEXES || INNODB_FT_DEFAULT_STOPWORD || INNODB_SYS_FIELDS || INNODB_CMP_PER_INDEX_RESET || INNODB_BUFFER_PAGE || INNODB_CMPMEM || INNODB_FT_INDEX_TABLE || INNODB_FT_BEING_DELETED || INNODB_SYS_TABLESPACES || INNODB_FT_INDEX_CACHE || INNODB_SYS_FOREIGN_COLS || INNODB_SYS_TABLES || INNODB_BUFFER_POOL_STATS || INNODB_FT_CONFIG |+---------------------------------------+59 rows in set (0.00 sec) 在 information_schema 库中查看索引信息12select * from information_schema.INNODB_SYS_INDEXES where name='sellerID';show index from crmErrLogOuter; 在 information_schema 库中查看表信息1SELECT * FROM information_schema.TABLES WHERE table_name ='crmErrLogOuter' and table_schema='crm'; 查询表中数据超过 1000 行的表1234select table_schema,table_name,table_rows from information_schema.tables where table_rows &gt; 1000 and table_schema != 'performance_schema'order by table_rows desc; 查询所有没有主键的表123456SELECT t.table_schema, t.table_nameFROM information_schema.TABLES tLEFT JOIN information_schema.TABLE_CONSTRAINTS tc ON t.table_schema = tc.table_schema AND t.table_name = tc.table_name AND tc.constraint_type = 'PRIMARY KEY'WHERE tc.constraint_name IS NULLAND t.table_type = 'BASE TABLE'and t.table_schema !='performance_schema'; 查询 5 个最大表123SELECT table_schema, table_name, concat(round(data_length/(1024*1024),2),'M') data_length FROM information_schema.TABLESORDER BY data_length DESC LIMIT 5; 查看连接情况1select * from performance_schema.hosts; 可以肯定的是，版本 5.1.73 没有库：performance_schema，版本 5.6.26 有。 查看 MySQL 版本 登陆 mysql，进入命令模式 status; select version(); 利用 mysql –help 12# mysql --help | grep Distribmysql Ver 14.14 Distrib 5.1.73, for redhat-linux-gnu (x86_64) using readline 5.1 包管理工具（redhat 系列） 12# rpm -qa|grep mysql php-mysql-5.3.3-46.el6_6.x86_64 查看 mysql 现在已提供什么存储引擎1mysql&gt; show engines; 查看 mysql 当前默认的存储引擎1mysql&gt; show variables like &apos;%storage_engine%&apos;; 提升插入速度参考：MYSQLinsert速度过慢 MY SQL insert 速度过慢的解决方法最近在用MySQL做存储，测试中发现插入数据太慢了，插入速度只有20-30 条/秒，后来查资料后，将MySQL的1个参数：innodb_flush_log_at_trx_commit，从 1 改为了 0（修改方法，可以直接修改 my.ini(windows)/my.cnf(linux) 中的对应参数，似乎用命令直接设置没有效果），插入速度就提升到了3000+每S。 MySQL的文档，对这个参数的描述如下：If the value of innodb_flush_log_at_trx_commit is 0, the log buffer is written out to the log file once per second and the flush to disk operation is performed on the log file, but nothing is done at a transaction commit. When the value is 1 (the default), the log buffer is written out to the log file at each transaction commit and the flush to disk operation is performed on the log file. When the value is 2, the log buffer is written out to the file at each commit, but the flush to disk operation is not performed on it. However, the flushing on the log file takes place once per second also when the value is 2. Note that the once-per-second flushing is not 100% guaranteed to happen every second, due to process scheduling issues. 如果transaction commit的频率非常高，1秒钟内会进行很多次的话，可以考虑将其设置为0，但这样就要承担数据库Crash后，1秒内未存储到数据库数据丢失可能的风险。1set innodb_flush_log_at_trx_commit=0; decimal 精度decimal(4,2)，整数部分只能输入两位数，小数部分只能输入两位，也就是说，小数加整数的位数等于第一位精度，在这里是 4。 多表关联 update1234update courseDetail cd inner join course c on c.courseID = cd.courseIDinner join organization org on org.orgID = c.orgIDset cd.classPlace = org.address; 密码强度mysql5.7 默认安装了密码安全检查插件（validate_password），默认密码检查策略要求密码必须包含：大小写字母、数字和特殊符号，并且长度不能少于8位。否则会提示以下 错误1ERROR 1819 (HY000): Your password does not satisfy the current policy requirements 必须先改默认密码，才能做别的操作。参考：CentOS7 安装 MySQL-5.7.20 查看错误日志文件路径1234567mysql&gt; show variables like &apos;log_error&apos;;+---------------+---------------------+| Variable_name | Value |+---------------+---------------------+| log_error | /var/log/mysqld.log |+---------------+---------------------+1 row in set (0.00 sec) 查看表结构1desc mysql.user; mysql 8.x 查看存储过程查看存储过程的创建代码1show create procedure proc_name; 生成某个数据库的所有存储过程的【查看存储过程创建代码】，同时也就知道了该数据库一共有多少个存储过程。123SELECT CONCAT(&apos;show create &apos; ,ROUTINE_TYPE , &apos; `&apos;, ROUTINE_SCHEMA ,&apos;`.`&apos;, `SPECIFIC_NAME`,&apos;`;&apos;) showSql, ROUTINE_SCHEMA, ROUTINE_TYPE,SPECIFIC_NAME FROM information_schema.`ROUTINES`WHERE `ROUTINE_TYPE` =&apos;PROCEDURE&apos; and `ROUTINE_SCHEMA` =&apos;your_db_name&apos;; 查看函数的创建代码1show create function func_name; mysqldump 导出数据 导出某库中的多表，表结构和数据 1mysqldump --default-character-set=utf8 -h192.168.1.130 -uroot -proot schemaName tableName1 tableName2 tableName3 &gt; d:/schemaName.sql 某库中的全部表结构和数据 1mysqldump --default-character-set=utf8 -h127.0.0.1 -uroot -proot -B schemaName &gt; d:/schemaName.sql 导出某表，带条件 1mysqldump --default-character-set=utf8 -h127.0.0.1 -uroot -proot schemaName tableName1 --where=&quot;id=80&quot; &gt; d:/schemaName.sql 导入数据 用 source 命令导入数据 1234# 先连接上 mysql 再操作mysql&gt; use rate;mysql&gt; set names utf8mb4; -- 很重要，这样可以保证中文不会乱码mysql&gt; source D:\\dev.workspace\\sql.data\\rt_top_tmc_message_queue_crm_his_20170723.sql 用 &lt; 的方式直接导入数据 1mysql -hlocalhost -uroot -proot schemaName &lt; new.sql --default-character-set=utf8mb4 授权远程连接权限设置允许 IP 为 192.168.1.89 的主机以 jiraUser 的身份连接所有库（*），密码是 JiraUserAnDyDoCkEr12312mysql&gt; GRANT ALL PRIVILEGES ON *.* TO &apos;sjiraUer&apos;@&apos;192.168.1.89&apos; IDENTIFIED BY &apos;JiraUserAnDyDoCkEr123&apos; WITH GRANT OPTION;mysql&gt; flush privileges; 查看 MYSQL 数据库用户远程连接权限12345678910mysql&gt; SELECT DISTINCT CONCAT('User: ''',user,'''@''',host,''';') AS user FROM mysql.user;+-------------------------------+| user |+-------------------------------+| User: 'rate'@'%'; || User: 'root'@'127.0.0.1'; || User: 'root'@'192.168.0.168'; || User: 'redmine'@'localhost'; || User: 'root'@'localhost'; |+-------------------------------+ 2019-06-10 补充或者用以下语句更直接12345678910mysql&gt; select host,user from mysql.user;+---------------+---------------+| host | user |+---------------+---------------+| 192.168.0.101 | admin || 192.168.0.168 | admin || localhost | mysql.session || localhost | mysql.sys || localhost | root |+---------------+---------------+ 直接修改授权 IP123mysql&gt; update mysql.user set host=&apos;192.168.1.89&apos; where host=&apos;192.168.0.101&apos;;Query OK, 1 row affected (0.33 sec)Rows matched: 1 Changed: 1 Warnings: 0 删除授权1234Delete FROM mysql.user Where User=&quot;root&quot; and Host=&quot;192.168.0.168&quot;;``` # CentOS7 忘记 mysql5.7 root 密码，重置密码 vim /etc/my.cnf1234在 `[mysqld]` 节点的最后，添加：`skip-grant-tables`重启 mysql：`systemctl restart mysqld`登录并修改MySQL的 root 密码，直接输入 mysql 并回车： [root@AndyCentOS7Basic ~]# mysqlWelcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 3Server version: 5.7.20 MySQL Community Server (GPL) Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners. Type ‘help;’ or ‘\\h’ for help. Type ‘\\c’ to clear the current input statement. mysql&gt; USE mysql;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -A Database changedmysql&gt; update mysql.user set authentication_string=password(‘your new password’) where user=’root’;Query OK, 1 row affected, 1 warning (0.00 sec)Rows matched: 1 Changed: 1 Warnings: 1 mysql&gt; flush privileges;Query OK, 0 rows affected (0.00 sec)1234567891011其中- 修改密码：`update mysql.user set authentication_string=password(&apos;your new password&apos;) where user=&apos;root&apos;;`- 刷新权限：`flush privileges;`编辑mysql配置文件，将之前添加的skip-grant-tables去掉。重启 mysql：`systemctl restart mysqld`# mysql8 忘记密码跟 mysql5.7的操作步骤差不多，只是在修改密码的语句上有差别。mysql8 修改密码的语句为：`alter user &apos;root&apos;@&apos;%&apos; IDETIFIED BY &apos;新密码&apos;;`在修改之前，用`select host,user from user;`查一下已有用户。 mysql&gt;use mysql;mysql&gt;select host,user from user;+———–+——————+| host | user |+———–+——————+| % | root || localhost | mysql.infoschema || localhost | mysql.session || localhost | mysql.sys |+———–+——————+mysql&gt; flush privileges;mysql&gt; alter user ‘root‘@’%’ IDETIFIED BY ‘your new password’;mysql&gt; exit;12345# mysql8.0.11 导数据报错：Unknown table &apos;COLUMN_STATISTICS&apos; in information_schema (1109)## 现象- windows 10 的 mysql 版本为 8.0.11，导出服务器上的 5.7.20 版本的数据，得到这个错。- 换用 secureCRT 直接操作服务器上的 mysql（5.7.20），顺利导出。 C:\\Users\\AndyChen&gt;mysqldump –default-character-set=utf8mb4 -h192.168.1.88 -uadmin -paAdDmMiInN1!1!0)3# mysqlDatabase &gt; c:/workspace/mysqlDatabase.sqlmysqldump: [Warning] Using a password on the command line interface can be insecure.mysqldump: Couldn’t execute ‘SELECT COLUMN_NAME, JSON_EXTRACT(HISTOGRAM, ‘$.”number-of-buckets-specified”‘)FROM information_schema.COLUMN_STATISTICSWHERE SCHEMA_NAME = ‘mysqlDatabase’ AND TABLE_NAME = ‘sys_menu’;’: Unknown table ‘COLUMN_STATISTICS’ in information_schema (1109)123456在网上查了一下，原来 mysql8.0 之前的版本是没问题的。## 解决办法在导出语句添加：`--column-statistics=0`格式为： mysqldump –column-statistics=0 –default-character-set=utf8mb4 -h192.168.1.88 -uadmin -paAdDmMiInN1!1!0)3# mysqlDatabase &gt; c:/workspace/ginadmin.sql123456789101112测试无误~~# 阿里云数据库，RDS 不能保存微信特殊字符 emoji原因：数据库编码为utf-8不支持ios的emoji在 RDS 实例控制台 -&gt; 参数设置 , 的【character_set_server】项，将 utf8 改为：utf8mb4，改好后，点击【提交参数】。注意：* 如果在创建数据库之前没有设置该参数，即使创建数据库时指定为 utf8mb4，也无济于事。* 该参数修改后, 仅对开启高权限账号的实例后来创建的数据库有效. 对当前数据库无效。可对字段单独修改，如： ALTER TABLE member CHANGE wxNickname wxNickname varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;123456789101112# Mysql中字符串正确的连接方法在Mysql中，使用“+”进行字符连接时，mysql会尝试将字段值转换为数字类型（如果转换失败，就当做数字0处理）。如’1abc’+’22′，mysql将“1abc”转成数字1在进行运算；将“abc”当做0处理。 在MYSQL中进行字符串的拼接要使用CONCAT函数，CONCAT函数支持一个或者多个参数，参数类型可以为字符串类型也可以是非字符串类型，对于非字符串类型的参数MYSQL将尝试将其转化为字符串类型，CONCAT函数会将所有参数按照参数的顺序拼接成一个字符串做为返回值。参考：https://www.cnblogs.com/zhengah/p/5199843.html# 生成批量修改备注的语句mysql 批量清空字段的备注 comment里面有个TABLE_COMMENT，就是表的注释，想批量修改直接update这个表的这个字段；同理，字段的注释在information_schema.COLUMNS这个表中。 SELECTconcat( ‘alter table ‘, table_schema, ‘.’, table_name, ‘ modify column ‘, column_name, ‘ ‘, column_type, ‘ ‘, if(is_nullable = ‘YES’, ‘ ‘, ‘not null ‘), if(column_default IS NULL, ‘’, if( data_type IN (‘char’, ‘varchar’) OR data_type IN (‘date’, ‘datetime’, ‘timestamp’) AND column_default != ‘CURRENT_TIMESTAMP’, concat(‘ default ‘’’, column_default,’’’’), concat(‘ default ‘, column_default) ) ), if(extra is null or extra=’’,’’,concat(‘ ‘,extra)), ‘ comment ‘’’’;’ – 本句会将备注设置为空 – ‘ comment ‘’’, column_comment, ‘’’;’ – 本句会带出原来的备注) sFROM information_schema.columnsWHERE table_schema = ‘mis’ AND table_name = ‘news’;12# com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl日志，会不断的打印，如何屏蔽掉？ 14:35:48,944 &lt;com.alibaba.druid.pool.DruidDataSourceStatLoggerImpl&gt; INFO [Druid-ConnectionPool-Log-1351788685]: {“url”:”jdbc:mysql://localhost:3306/csist_mis?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=GMT%2b8&amp;useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;socketTimeout=20000”,”dbType”:”mysql”,”name”:”DataSource-1351788685”,”activeCount”:0,”poolingCount”:1,”connectCount”:0,”closeCount”:0}12345参见官网文档：https://www.bookstack.cn/read/Druid/70242a8b751bf5ca.md取消 timeBetweenLogStatsMillis 的配置即可取消定时打印日志# Caused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed连接 mysql 报错 Caused by: com.mysql.cj.exceptions.CJException: Public Key Retrieval is not allowed1234567891011121314151617181920212223连接数据库的url中，加上allowPublicKeyRetrieval=true参数，经过验证解决该问题。# MySQL Tinyint的取值范围是在 MySQL 的数据类型中，Tinyint的取值范围是：带符号的范围是-128到127。无符号的范围是0到255。[见官方《MySQL 5.1参考手册》](http://dev.mysql.com/doc/refman/5.1/zh/column-types.html#numeric-types)# MYSql 日期类型精度- TIMESTAMP(3)与 DATETIME(3)意思是保留3位毫秒数。- TIMESTAMP(6)与 DATETIME(6)意思是保留6位毫秒数。- 通过 MyBatis 更新带毫秒的时间，结果还是只到秒。- 手工更新，也还是只精确到秒。暂时通过添加字符类型的字段来保留到毫秒级的时间数据。# PowerDesigner 连接 MySQL下载 ODBC 驱动[oracle mysql ODBC driver](https://dev.mysql.com/downloads/connector/odbc/)MYSQL Connector/ODBC 提供了两个版本，一个是 ANSI driver 和 Unicode driver 两个版本。 Unicode driver 版本提供了更多字符集的支持，也就是提供了多语言的支持。而ANSI driver 版本是只针对有限的字符集的范围。# mysql 慢查询优化以下是 C# 里的 EF 查询表达式 // 不加 will_rate_time &gt;= willRateTimeStart，在有接近300万条记录时，查询非常慢，每次查询需要扫描大于一半的记录，达到160多万条。加上之后，跨度只有一天时间后，扫描行数变成5万左右。// 不加 will_rate_time &gt;= willRateTimeStart，直接在 MySqlWorkbench 上查询，花了144秒（加上limit 15000)，而在开发环境查询，仅需要不到5秒时间。// 不加之前，应用程序一直报错：An error occurred while reading from the store provider’s data reader. See the inner exception for details.// 这是超时导致。// will_rate_time 字段有索引var query = from om in ctx.rt_on_messages.AsNoTracking() where om.is_rate_switch_on == 1 &amp;&amp; om.is_seller_rate.Value == 0 &amp;&amp; om.is_session_key_null == 0 &amp;&amp; om.rate_failed_times &lt; MaxRateFailedTimes &amp;&amp; om.will_rate_time &gt;= willRateTimeStart &amp;&amp; om.will_rate_time &lt; willRateTimeEnd &amp;&amp; om.rate_result &gt; 0 //&amp;&amp; arrTid.Contains(om.tid) //&amp;&amp; om.will_rate_time &gt; -1 select om; //.OrderByDescending(o =&gt; o.publish_time)return query.Take(MessageTopRecords).ToList&lt;rt_on_messages&gt;();1查看是否开启慢查询 mysql&gt; show variables like ‘%log_slow_queries%’;+——————+——-+| Variable_name | Value |+——————+——-+| log_slow_queries | ON |+——————+——-+1 row in set (0.00 sec) mysql&gt;12开启慢查询非常简单, 操作如下:Linux下找到mysql的配置文件my.ini, 在mysqld下方加入慢查询的配置语句(注意:一定要在[mysqld]下的下方加入) log-slow-queries=/mnt/mysqlLog/slowQueries.loglong_query_time=10123456789101112131415log-slow-queries: 代表MYSQL慢查询的日志存储目录, 此目录文件一定要有写权限；long_query_time: 最长执行时间.MSYQL将记录下所有执行时间超过long_query_time秒的SQL语句, 此处为测试时间, 时间不应太小最好在5-10秒之内, 当然可以根据自己的标准而定MySQL 慢查询的相关参数解释：* slow_query_log ：是否开启慢查询日志，1表示开启，0表示关闭。* log-slow-queries ：旧版（5.6以下版本）MySQL数据库慢查询日志存储路径。可以不设置该参数，系统则会默认给一个缺省的文件host_name-slow.log* slow-query-log-file：新版（5.6及以上版本）MySQL数据库慢查询日志存储路径。可以不设置该参数，系统则会默认给一个缺省的文件host_name-slow.log* long_query_time ：慢查询阈值，当查询时间多于设定的阈值时，记录日志。* log_queries_not_using_indexes：未使用索引的查询也被记录到慢查询日志中（可选项）。* log_output：日志存储方式。log_output=&apos;FILE&apos;表示将日志存入文件，默认值是&apos;FILE&apos;。log_output=&apos;TABLE&apos;表示将日志存入数据库，这样日志信息就会被写入到mysql.slow_log表中。MySQL数据库支持同时两种日志存储方式，配置的时候以逗号隔开即可，如：log_output=&apos;FILE,TABLE&apos;。日志记录到系统的专用日志表中，要比记录到文件耗费更多的系统资源，因此对于需要启用慢查询日志，又需要能够获得更高的系统性能，那么建议优先记录到文件。慢查询日志配置默认情况下slow_query_log的值为OFF，表示慢查询日志是禁用的，可以通过设置slow_query_log的值来开启，如下所示： mysql&gt; show variables like ‘%slow_query_log%’;+———————+———————————+| Variable_name | Value |+———————+———————————+| slow_query_log | ON || slow_query_log_file | /var/run/mysqld/mysqld-slow.log |+———————+———————————+ mysql&gt; set global slow_query_log=1;mysql&gt; set global long_query_time=4;mysql&gt; show variables like ‘long_query_time%’;123# C# 连接 MySQL 异常原因是MySQL 压力太大，有慢查询，cpu 使用率接近100%。 以下是 C# 捕获的异常信息。 – ===================================时间: 2017/6/29 11:27:32错误号: 1000标题: An error occurred while reading from the store provider’s data reader. See the inner exception for details.内容: An error occurred while reading from the store provider’s data reader. See the inner exception for details.EntityFramework 在 System.Data.Entity.Core.Common.Internal.Materialization.Shaper1.HandleReaderException(Exception e) 在 System.Data.Entity.Core.Common.Internal.Materialization.Shaper1.StoreRead() 在 System.Data.Entity.Core.Common.Internal.Materialization.Shaper1.SimpleEnumerator.MoveNext() 在 System.Data.Entity.Internal.LazyEnumerator1.MoveNext() 在 System.Collections.Generic.List1..ctor(IEnumerable1 collection) 在 System.Linq.Enumerable.ToListTSource 在 Maile360.Rate.DAL.OnMessagesDAL.GetOnMessagesList() 在 Maile360.Rate.Logic.Common.OnMessagesDealLogic.Run() 在 Maile360.Rate.RealtimeService.OrdersToBeRateService.Go()出现错误的位置: OnMessagesWaitingUpdateService错误级别: urgency– =====================================12345678910111213141516171819# Windows 下 MySql 设置表名区分大小写windows 下，默认表名不区分大小写但字段大小写与创建时一致。在 mysql 主目录下修改 my.ini，在配置项 [mysqld] 下添加：lower_case_table_names=0换最新版本再试`mysql 5.6` 添加上面的配置后，启动失败，提示1067`lower_case_table_names`，参数含义如下：1. 0：使用`CREATE TABLE`或`CREATE DATABASE`语句指定的大小写字母在硬盘上保存表名和数据库名。名称比较对大小写敏感。在大小写不敏感的操作系统如windows或Mac OS x上我们不能将该参数设为0，如果在大小写不敏感的文件系统上将`--lowercase-table-names`强制设为0，并且使用不同的大小写访问MyISAM表名，可能会导致索引破坏。1. 1：表名在硬盘上以小写保存，名称比较对大小写不敏感。MySQL将所有表名转换为小写在存储和查找表上。该行为也适合数据库名和表的别名。该值为Windows的默认值。1. 2：表名和数据库名在硬盘上使用`CREATE TABLE`或`CREATE DATABASE`语句指定的大小写字母进行保存，但MySQL将它们转换为小写在查找表上。名称比较对大小写不敏感，即按照大小写来保存，按照小写来比较。注释：只在对大小写不敏感的文件系统上适用! innodb表名用小写保存。# PowerDesigner 生成数据库时的列中文注释乱码问题的设置方法`PowerDesinger-&gt;Database-&gt;Generate Database-&gt;Format-&gt;Encoding` 改成 utf8![][/img/powerDesignDatabaseGenerationFormatToUtf8.jpg]# mysql The server time zone value The server time zone value ‘ÖÐ¹ú±ê×¼Ê±¼ä’ is unrecognized or represents more than one time zone.`在连接后面加上：?useSSL=false&amp;serverTimezone=GMT&amp;useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;socketTimeout=20000 MySQL 获取当前年SELECT DATE_FORMAT(NOW(), &#39;%Y&#39;) as year; MySQL int 后面的数字与前导零填充字段加属性：zerofill，如：current_value int(6) unsigned zerofill comment &#39;当前值&#39;, ERROR 1273 (HY000): Unknown collation: ‘utf8mb4_0900_ai_ci’将 MySQL 8.X 的 mysqldump 文件导入 MySQL 5.7 报的错，8.x 的字符编码设置为 utf8mb4 了。 解决打开sql文件，将文件中的所有 utf8mb4_0900_ai_ci 替换为 utf8_general_ci，utf8mb4 替换为 utf8","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"}]},{"title":"MyBatis Generator (MBG)，修改源码以适应 MySQL 大小写敏感配置的各种情况、适应分表时动态替换表名","slug":"mybatis/MBGTableKeepOriginal","date":"2017-05-23T16:00:00.000Z","updated":"2020-09-01T02:53:13.070Z","comments":true,"path":"mybatis/MBGTableKeepOriginal.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/MBGTableKeepOriginal.html","excerpt":"如题","text":"如题 本文对应的项目 github: https://github.com/uncleAndyChen/mybatis-generator gitee: https://gitee.com/uncleAndyChen/mybatis-generator 备注：最新版，已经改为通过扩展的方式达到目的。 如果觉得不错，欢迎star以表支持。 通过本项目，可以学到的知识点 可以理解使用MBG的大致流程。 本文中用到的MBG配置可以作为一个标准配置的参考。 spring boot 2.1.1 获取 application.yml 配置信息，项目【create-table-property】是一个很好的参考。 通过MBG如何生成dal与model项目。 生成的代码，绝大部分可直接使用，比如简单的增、删、改、查。 对应数据库表的实体类，一张表一个实体类，可用于在各层传递基于表数据的业务数据。 通过 IDEA 管理多项目。 获取项目源码，用 IDEA 导入的时候，指向根目录的 pom.xml 即可。 先了解一下 lower_case_table_names 参数官方文档：Identifier Case Sensitivity lower_case_table_names是mysql一个大小写敏感设置的属性，此参数不可以动态修改，必须重启数据库。 unix,linux 下 lower_case_table_names默认值为 0。 Windows下默认值是 1 。 Mac OS X下默认值是 2。 参数说明 lower_case_table_names=0 表名存储为给定的大小写。比较时：区分大小写。大小写敏感（Unix，Linux默认）。 创建的库表将原样保存在磁盘上。如create database TeSt;将会创建一个TeSt的目录，create table AbCCC …将会原样生成AbCCC.frm。SQL语句也会原样解析。 lower_case_table_names=1 表名存储为小写。比较时：不区分大小写。大小写不敏感（Windows默认）。 创建的库表时，MySQL将所有的库表名转换成小写存储在磁盘上。SQL语句同样会将库表名转换成小写。如需要查询以前创建的Test_table（生成Test_table.frm文件），即便执行select from Test_table，也会被转换成select from test_table，致使报错表不存在。 lower_case_table_names=2 表名存储为给定的大小写。比较时：小写。 创建的库表将原样保存在磁盘上。但SQL语句将库表名转换成小写。 查看现有配置1234567mysql&gt; show variables like &apos;lower_case_table_names&apos;;+------------------------+-------+| Variable_name | Value |+------------------------+-------+| lower_case_table_names | 0 |+------------------------+-------+1 row in set (0.01 sec) 设置以 CentOS 为例，将 lower_case_table_names 设置为2，修改 /etc/my.cnf，在 [mysqld] 节点下添加1lower_case_table_names=1 重启 MySQL （systemctl restart mysqld）生效。 CentOS 下，MySQL 5.7.22 修改为 2 不生效修改为2后，查出来的值是0，修改为1则正常。todo: 查一下原因 不适用场景如果开发环境、生产环境均配置成1或者2，则本文中有关大小写敏感的修改都是无意义的。 但是如果分库时依赖表名替换，则又是适用的，见以下【适用场景】中的场景二。 适用场景最终目标：MBG 生成的xml文件中的sql脚本的表名，保持与对应表名在建表时的大小写一致，保持大小写敏感（表名可在MBG需要的配置文件中配置，以该配置为准）。这样可以适应以上lower_case_table_names的三种配置值。 为了达到以上目标，运行生成表配置内容的项目，一定要连接参数lower_case_table_names配置为0或者2的数据库服务器，并且是配置为0或者2之后才创建的数据表，否则，生成的表配置内容的表名，是以全部小写为基准的，并非驼峰式命名法。表配置内容生成好之后，重新生成 mapper 时连接的数据库服务器的lower_case_table_names配置值，对生成结果没有影响。 场景一 其中有数据库服务器被设置成大小写不敏感（比如阿里云的云数据库，截至目前2018年12月9号，还不支持配置成大小写敏感），即 lower_case_table_names=1，且该参数不能修改。 为了统一命名规范使用驼峰式命名法，包括：数据库名、数据库表名、数据库字段名、编程语言。这样的话，可以控制lower_case_table_names的linux服务器，就可以将该参数设置为0，即大小写敏感。 用 MGB 生成的 Mapper 类名，以及 xml 文件中的表名，需要与创建表名时的原始大小写一致，以适应在lower_case_table_names=0（linux）或者lower_case_table_names=2（windows）的情况。 当然，读到这里，你可能会觉得奇怪，数据库的库名、表名、字段名，业界都是用下划线分开的，其余字母全是小写，所以，该参数被配置成什么都不需要关心。 如果你也这么认为，那么，本文对你是没有价值的。 本文要解决的问题是，数据库的库名、表名、字段名，需要保持跟 Java 的编码规范一致的场景。如果都统一成一种编码规则，比如统一用驼峰式命名法，那么，不用在两种编码习惯上切换，可以提高编码效率和减少不必要的麻烦，且继续往下看。 场景二 分表，利用MyBatis插件，根据业务规则，对表名进行动态替换。 如erpTrade表分成了120个表，那么在某一次业务操作中，需要将erpTrade替换成erpTrade_xyz，其中xyz为从001到120的其中一个数字，则需要将MBG生成的xml里sql脚本中的表名用 `（左上角数字键1左边、Tab键上边、Esc键下边的键）引起来。 将会分享我的基于 MyBatis 插件分库分表项目。 需求场景 首先，我项目的 Java 代码规范是变量命名应用驼峰式命名法（Camel-Case）。数据库表名及字段名，则用下划线命名法（即用下划线分隔不同单词）。 我用 MBG 生成的代码，通过配置可以将下划线去掉，同时将下划线后的第一个字母转为大写，这样是符合驼峰式命名法的。 但是，问题来了。我们项目前后端分离，前端调用 Restful Api，在传递的参数中难免需要以表名来定义对象，而以字段名作为对象的属性来传递参数，而 Java 写的 Api 在接收参数时，是用 Pojo 来跟前端传的参数匹配的。 这样有两个问题，前端在传参数的时候需要将表名和字段名由下划线命名法转为驼峰式命名法，Java 代码也以同样的方式定义对应的类名以及属性字段，在这个过程中，容易出错，相对直接 copy 表名及字段名，需要做额外的工作，而且前后端都有。 如果数据库表名和字段名本身就是驼峰式命名法的话，写代码的时候直接 copy 表名或字段名，这样既不容易出错，还能节省时间。说干就干，改！表名及字段名遵循驼峰式命名法。 这样做的目的无非是让大家能偷偷懒，还减少出错的概率，同时也轻松的达到了统一代码规范的目的。 在windows环境下，如果遇到lower_case_table_names=1或者该参数未配置（未配置的时候默认为1），运行MBG，生成的sql脚本，全是小写，需要花费额外时间来解决环境问题。 为了一劳永逸，有了本文和对应的项目。 随着业务发展，到了需要分库分表的时候，本文所解决的问题，更是不可或缺。 解决办法 怎么破？查了很多资料，也看了官方文档，都没有找到相应的配置，也就是说，保持数据库表名大小写来生成对应的类和 mapper 文件，是不能通过配置来解决的。 只能看源码了。思路是：一步步跟踪，找到了真正取数据库表名的地方。 虽然过程比较痛苦，但是达到目的之后，还是小有成就感的。 其实改动很少，只是找到要改的地方才是关键。就象平时改 Bug 一样，修改可能很小，但是找到要修改的地方才是最花时间和精力的，每每这个时候，就非常渴求得力的测试人才。 废话少说，下面切入正题。 关于 MBG (MyBatis Generator)笔者写这篇文章的时候，Release 最新版本是1.3.5（2016年九月7号发布），该版本已经足够满足本文提到的需求了，作者主导的项目均采用该版本。 下载地址：MyBatis Generator Release 1.3.5 官方文档 关于 MBG 的介绍，看官网文档足够了，本文的重点是修改源代码，让 MBG 在生成的代码里，对应的类和 mapper 文件保持与对应的表名大小写不变。 备注，实现方式已经改为通过扩展来解决问题了，不过，如果需要研究一下源码，还是有必要往下读的。 作为研究，作者去mybatis/generator 官方 github 下载了最新版 V1.3.7（2018年7月5号发布），用最新版重新操作了一遍。 下载的源码文件是generator-mybatis-generator-1.3.7.zip，解压之后，找到目录 generator-mybatis-generator-1.3.7\\core\\mybatis-generator-core，这个目录就是我们需要的源码目录。该目录下，只保留 src 目录和 pom.xml，其余删除。 用 IDEA 导入项目，如果依赖下载很慢，建议添加阿里云仓库，在 pom.xml，倒数第二行&lt;/scm&gt;后面、最后一行&lt;/project&gt;前面，插入以下内容：1234567891011121314&lt;repositories&gt; &lt;repository&gt; &lt;id&gt;maven-ali&lt;/id&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;releases&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;/releases&gt; &lt;snapshots&gt; &lt;enabled&gt;true&lt;/enabled&gt; &lt;updatePolicy&gt;always&lt;/updatePolicy&gt; &lt;checksumPolicy&gt;fail&lt;/checksumPolicy&gt; &lt;/snapshots&gt; &lt;/repository&gt;&lt;/repositories&gt; 修改源码才下操作，均针对最新版 v1.3.7。 一共需要修改 org.mybatis.generator.api.IntrospectedTable 这个类的两个方法。 123456789101112131415161718192021 /** * Gets the fully qualified table name at runtime. * * @return the fully qualified table name at runtime */ public String getFullyQualifiedTableNameAtRuntime() &#123;// return internalAttributes// .get(InternalAttribute.ATTR_FULLY_QUALIFIED_TABLE_NAME_AT_RUNTIME); return this.getTableConfiguration().getTableName(); &#125; /** * Gets the aliased fully qualified table name at runtime. * * @return the aliased fully qualified table name at runtime */ public String getAliasedFullyQualifiedTableNameAtRuntime() &#123;// return internalAttributes// .get(InternalAttribute.ATTR_ALIASED_FULLY_QUALIFIED_TABLE_NAME_AT_RUNTIME); return this.getTableConfiguration().getTableName(); &#125; 这两个方法里面的前两行注释了的代码是官方的，最后那行代码是修改之后的。 生成对应的类和 mapper 文件对应的测试数据库脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445create schema if not exists mbg default character set utf8;use mbg;set names utf8;drop table if exists erpTrade;create table erpTrade( tradeID int not null auto_increment, tid bigint comment '订单号', shopID int, memberID bigint comment '针对的会员ID，同步会员时反写', buyerNick national varchar(50), sellerID bigint comment '店铺用户，主旺旺 ID', primary key (tradeID));drop table if exists erpEnterpriseMember;create table erpEnterpriseMember( memberID bigint not null auto_increment, shopID int, nickname varchar(50) comment '会员昵称', realName varchar(50) comment '真实姓名', sex int comment '性别 1.男 2.女 3.未知', created int, modified int, primary key (memberID));drop table if exists erpShopConfig;create table erpShopConfig( ID int not null auto_increment, shopID int, mobile varchar(200) comment '接收短信手机号，多个以逗号隔开', email varchar(200) comment '邮箱地址，多个以逗号隔开', isNotifyBalanceLess int comment '当短信账户余额为X条时，系统免费发送短信提醒您及时充值。', balanceLessValue int comment '余额不足提醒值', isNotifyBeforeExpire int comment '是否发送软件快到期提醒', beforeDaysExpire int comment '软件快到期提醒时间，提前天数', created int, modified int, primary key (ID)); 生成表配置信息的 Java 工具类MBG 基于一个 xml 配置文件，在这个配置文件里，有跟表相关的配置，为了达到我的需求，需要一张表对应一行配置信息，所以，我写了一个类来自动生成，这样，在增减表，或者别的项目里面，可以简单的运行这个类来生成，减少手工劳动。 更详细的，请看：https://github.com/uncleAndyChen/mybatis-generator/tree/master/create-table-property MBG需要的配置文件比较全面的，在工作中实际用到的文件内容如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\" \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;&lt;generatorConfiguration&gt; &lt;!--数据库驱动--&gt; &lt;classPathEntry location=\"mysql-connector-java-5.1.31.jar\"/&gt; &lt;!--&lt;context id=\"DB2Tables\" targetRuntime=\"MyBatis3\"&gt;--&gt; &lt;!--如果你希望不生成和Example查询有关的内容，那么可以按照如下进行配置:--&gt; &lt;!--&lt;context id=\"DB2Tables\" targetRuntime=\"MyBatis3Impl\"&gt;--&gt; &lt;context id=\"Mysql\" targetRuntime=\"MyBatis3\" defaultModelType=\"flat\"&gt; &lt;!--&lt;context id=\"Mysql\" targetRuntime=\"MyBatis3Simple\" defaultModelType=\"flat\"&gt;--&gt; &lt;commentGenerator&gt; &lt;property name=\"suppressDate\" value=\"true\"/&gt; &lt;property name=\"suppressAllComments\" value=\"true\"/&gt; &lt;/commentGenerator&gt; &lt;!--数据库链接地址账号密码--&gt; &lt;jdbcConnection driverClass=\"com.mysql.jdbc.Driver\" connectionURL=\"jdbc:mysql://192.168.0.130:3306/mbg?useUnivalue=true&amp;amp;characterEncoding=utf8&amp;amp;autoReconnect=true&amp;amp;failOverReadOnly=false\" userId=\"root\" password=\"root\"&gt; &lt;/jdbcConnection&gt; &lt;javaTypeResolver&gt; &lt;property name=\"forceBigDecimals\" value=\"false\"/&gt; &lt;/javaTypeResolver&gt; &lt;!--生成Model类存放位置--&gt; &lt;javaModelGenerator targetPackage=\"mybatis.generator.model.entity\" targetProject=\"mybatis.generator.model/src/main/java/\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;property name=\"trimStrings\" value=\"true\"/&gt; &lt;/javaModelGenerator&gt; &lt;!--生成映射文件存放位置--&gt; &lt;sqlMapGenerator targetPackage=\"mappers\\original\" targetProject=\"mybatis.generator.dal\\src\\main\\resources\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;/sqlMapGenerator&gt; &lt;!--生成Dao类存放位置 当type=XMLMAPPER时，会生成一个XXX.xml文件内有各种sql语句，是mapper的实现。 当type=ANNOTATEDMAPPER时，会直接在mapper接口上添加注释。 --&gt; &lt;!-- http://blog.csdn.net/qq_27376871/article/details/51360638 MyBatis3: ANNOTATEDMAPPER:基于注解的Mapper接口，不会有对应的XML映射文件 MIXEDMAPPER:XML和注解的混合形式，(上面这种情况中的)SqlProvider注解方法会被XML替代。 XMLMAPPER:所有的方法都在XML中，接口调用依赖XML文件。 MyBatis3Simple: ANNOTATEDMAPPER:基于注解的Mapper接口，不会有对应的XML映射文件 XMLMAPPER:所有的方法都在XML中，接口调用依赖XML文件。 --&gt; &lt;javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"mybatis.generator.dal.mapper\" targetProject=\"mybatis.generator.dal/src/main/java/\"&gt; &lt;property name=\"enableSubPackages\" value=\"true\"/&gt; &lt;/javaClientGenerator&gt; &lt;!--生成对应表及类名--&gt; &lt;table tableName=\"erpEnterpriseMember\" domainObjectName=\"EnterpriseMember\"&gt;&lt;property name=\"useActualColumnNames\" value=\"true\"/&gt;&lt;generatedKey identity=\"true\" type=\"post\" column=\"memberID\" sqlStatement=\"Mysql\"/&gt;&lt;/table&gt; &lt;table tableName=\"erpShopConfig\" domainObjectName=\"ShopConfig\"&gt;&lt;property name=\"useActualColumnNames\" value=\"true\"/&gt;&lt;generatedKey identity=\"true\" type=\"post\" column=\"ID\" sqlStatement=\"Mysql\"/&gt;&lt;/table&gt; &lt;table tableName=\"erpTrade\" domainObjectName=\"erpTrade\"&gt;&lt;property name=\"useActualColumnNames\" value=\"true\"/&gt;&lt;generatedKey identity=\"true\" type=\"post\" column=\"tradeID\" sqlStatement=\"Mysql\"/&gt;&lt;/table&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; 运行 MBG 以 IntelliJ IDEA 为例为了测试，除了从官网下载的 MBG 源码外，另外添加了两个模块。先创建一个空项目，然后导入 MBG，添加两个测试模块，或者直接从码云下载我的代码。注意模块的包路径要与配置文件里的一致，否则会提示路径找不到。创建一个空项目 导入模块 直接运行源码新建一个启动应用，选 MBG 下的 ShellRunner 作为启动入口 按下图所示，在参数一栏写：-configfile generatorConfig.xml -overwrite，选 mybatis-generator-1.3.5 模块 接下来，应该知道如何运行或者调试了吧。 生成 jar 包，一次生成，随处运行 将 MBG 打包成 jar 包，把该 jar 包和 mysql-connector-java-5.1.31.jar、generatorConfig.xml 一起放到项目的根目录下，在 dos 窗口，或者 IDEA 的 Terminal 窗口直接运行下面的命令。 1java -Dfile.encoding=UTF-8 -cp mybatis-generator-1.3.5.jar org.mybatis.generator.api.ShellRunner -configfile generatorConfig.xml -overwrite 推荐用这种方式。这样不需要将 MBG 项目添加到公司的具体项目，而且通常这项工作由某一个人做就行了，其它项目组成员，可以不知道该工具的存在。 下面是生成 MBG jar 包的步骤按 Ctrl+Alt+Shift+s，进入项目设置界面 生成 MBG jar 包第一步，配置 生成 MBG jar 包第二步，Build Artifacts… 注意事项 当表结构发生变化时，需要重新运行 MBG 生成新的代码，所以，生成的代码，不能有修改行为，否则下次重新生成后，改过的代码会被覆盖。 重新生成时，*Mapper.xml 文件会被改写错，MBG 没有重新生成该文件，而是改写，这种改写有问题，还没来得及深究。 针对第2点的问题，我的解决办法是，重新生成前，将对应的 *Mapper.xml 删掉。如果只生成一张表的代码，则只删除对应的 mapper 文件即可，Pojo 文件重新生成后是正确的，不用管。 也可以用下面的脚本简单粗暴的删除全部 xml 文件。反正会重新生成，如果文件内容跟原来一致，不会产生新的 svn/git 提交。需要注意的是，下面的脚本我是在 idea 的 Terminal 窗口执行的，这里的命令语法请保持 linux 风格。这样更省事儿，推荐这种方案，这样不用每次变更某一张表的时候找到对应的表配置，也不用单独去删除对应的 mapper.xml 文件，只要把所有表的配置都操持有效（即不要注释掉）就行，省时省力！123456# 注意：*Mapper.xml 文件，每次重新生成都需要先删除，否则部分内容会重复生成，导致错误del/f/s/q C:\\workspace\\mbg\\mybatis-generator\\demo-domain-dal\\src\\main\\java\\demo\\domain\\dal\\mapper\\original\\*.*del/f/s/q C:\\workspace\\mbg\\mybatis-generator\\demo-domain-model\\src\\main\\java\\demo\\domain\\model\\entity\\*.*del/f/s/q C:\\workspace\\mbg\\mybatis-generator\\demo-domain-dal\\src\\main\\resources\\mappers\\original\\*.xmljava -Dfile.encoding=UTF-8 -cp mybatis-generator-1.3.7.jar;mybatis-generator-enhance.jar org.mybatis.generator.api.ShellRunner -configfile generatorConfig.xml -overwrite","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"svn递归添加目录、子目录和文件","slug":"general/svnOperation","date":"2017-05-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.955Z","comments":true,"path":"general/svnOperation.html","link":"","permalink":"https://www.lovesofttech.com/general/svnOperation.html","excerpt":"如题","text":"如题 环境 客户端：windows 7 + TortoiseSVN 1.8.12 svn 服务器：CentOS 5 添加一个新项目的操作对于一个新项目，在 svn 仓库添加项目之后，Checkout，将项目文件 copy/remove 至项目文件夹，选中所有文件及目录-&gt;右键-&gt;TortoiseSVN-&gt;Add…，这样就能递归添加目录、子目录和文件至 svn server。 这似乎已经是默认的规则了，但是笔者今天遇到的情况却并非如此。 问题现象我遇到的现象是：在项目的一个模块下（一个模块，对于 svn 版本管理软件来说，就是一个目录），仅能将选中文件和目录添加到 svn，选中目录下的子目录及文件不能添加到 svn。 这样的话，如果目录下有很多嵌套子目录，每个子目录下又有文件的话，手动添加，那将是一个费力不一定讨好的体力活儿，一不小心就会少添加文件或者目录。 拿我今天添加的新版 Top.Api SDK 来说，一共有一千三百多个文件，四十六个目录，手动一层一层添加的话，耗时可想而知，作为一个资深 coder，对这种应对方法是绝对不能容忍的！ 怎么办？折腾呗。 失败的尝试 首先，排除 svn 的问题，将该签的代码全部签入，TortoiseSVN-&gt;Clean up…，再试，表现跟最初一样，尝试失败。 重新 Checkout 到另外一个文件夹，添加文件，再选中所有文件及目录-&gt;右键-&gt;TortoiseSVN-&gt;Add…，表现跟最初一样，尝试失败。 换用 svn 命令，在 dos 命令窗口，进入需要添加的文件夹目录，svn add * –force，表现跟最初一样，尝试失败。 在模块根目录将所有文件和目录全部删除，提交 svn，再将需要的文件添加到模块根目录，再选中所有文件及目录-&gt;右键-&gt;TortoiseSVN-&gt;Add…，表现跟最初一样，尝试失败。 成功的尝试将项目中需要添加的模块从 svn 项目的根目录直接删除，提交 svn，再把备份项目模块移到原来的位置，选中已经从 svn 删除的项目模块目录-&gt;右键-&gt;TortoiseSVN-&gt;Add…，表现跟添加新项目一样，尝试成功！ 注意，这里是在 svn 项目的根目录操作，相当于操作的是 svn 项目根目录下的一个一级文件夹。 结论至少我今天的尝试说明了一点，在 svn 项目的根目录下添加文件夹的话，是会递归添加其子目录和文件的，而在非根目录下添加文件夹，则不能。 如果哪位童鞋有更好的解决办法，请留言，将不胜感激。 补充后来，同样的操作，完全没有问题。差别是，svn 服务端运行在 CentOS 6.9 上，相对来说是目前（2017-05-25）6 系列的最新版本。 可能跟 svn 版本有关系，是通过 yum install subversion 来安装的。而之前在 CentOS 5 上的版本，已经无从查证了，因为已经升级服务器。 1234567891011121314151617181920[root@localhost svn]# svnserve --versionsvnserve, version 1.6.11 (r934486)compiled Aug 17 2015, 08:37:43Copyright (C) 2000-2009 CollabNet.Subversion is open source software, see http://subversion.tigris.org/This product includes software developed by CollabNet (http://www.Collab.Net/).The following repository back-end (FS) modules are available:* fs_base : Module for working with a Berkeley DB repository.* fs_fs : Module for working with a plain file (FSFS) repository.Cyrus SASL authentication is available.[root@localhost svn]# cat /proc/versionLinux version 2.6.32-696.el6.x86_64 (mockbuild@c1bm.rdu2.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ) #1 SMP Tue Mar 21 19:29:05 UTC 2017[root@localhost svn]# cat /etc/issueCentOS release 6.9 (Final)","categories":[{"name":"svn","slug":"svn","permalink":"https://www.lovesofttech.com/categories/svn/"}],"tags":[{"name":"svn","slug":"svn","permalink":"https://www.lovesofttech.com/tags/svn/"}]},{"title":"spring 官方例子->宠物医院，数据库改成 MySQL，数据库连接池改成 druid","slug":"java/springPetclinic","date":"2017-05-22T16:00:00.000Z","updated":"2020-09-01T02:53:12.994Z","comments":true,"path":"java/springPetclinic.html","link":"","permalink":"https://www.lovesofttech.com/java/springPetclinic.html","excerpt":"如题","text":"如题 spring-petclinic 公司内部分享时用到的一个 spring 官方的例子，为了更贴近实际项目，也是技术分享需要，作了一点点改造。 修改过的代码已经托管在 github 上。传送门-&gt;猛戳进入 修改部分 把默认数据源改成了mysql 数据库连接池改成了druid 修改web目录为webapp 运行 从git china上clone代码 1git clone https://gitee.com/uncleAndyChen/spring-petclinic.git 创建mysql数据库和初始化数据。执行resources/db/mysql/schema.sql，没有创建数据库petclinic的话，会自动创建，以下手动创建脚本与自动创建的等效。 1create schema petclinic default character set utf8; 执行resources/db/mysql/data.sql 修改application.yml文件中数据库连接参数，改为你的数据库服务器IP和用户名、密码： 1234datasource: url: jdbc:mysql://192.168.0.130:3306/petclinic?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;autoReconnect=true&amp;failOverReadOnly=false username: root password: root 执行如下命令： 12cd spring-petclinic #进入代码主目录mvn spring-boot:run #运行 如果通过上面的运行脚本，运行过程中有错误，则执行 mvn clean compile，会下载所需依赖，看到编译成功之后，再执行 mvn spring-boot:run 通过上面的步骤成功运行之后，也可以直接运行PetClinicApplication.main，IDEA会自动识别，可直接运行。 在执行mvn spring-boot:run 之前就直接通过IDEA运行spring-boot入口方法，即PetClinicApplication.main，css样式和js不会被加载，因为这个demo的css和js是动态生成的。 也可以通过 IDEA 的 Terminal 命令窗口执行 mvn spring-boot:run 还可以在运行配置里增加一项 maven 启动，在Commond line栏处输入：spring-boot:run，这种方式还可以利用 IDEA 的调试功能。 通过上面步骤成功运行之后，访问：http://localhost:8083 说明该demo来自spring官方，简单改了一下，要看官方原版，猛戳进入。","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"php5.4 php-fpm 重启、关闭","slug":"lnmp/centOSPHPFpmRestart","date":"2017-05-16T16:00:00.000Z","updated":"2020-09-01T02:53:13.053Z","comments":true,"path":"lnmp/centOSPHPFpmRestart.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/centOSPHPFpmRestart.html","excerpt":"如题","text":"如题 环境 CentOS 6 php 5.4 nginx 1.2 重启 php-fpm 命令php 5.3.3 以后的php-fpm 不再支持 php-fpm (start|stop|reload) 等命令，需要使用信号控制。kill master 进程，有如下参数： INT, TERM 立刻终止 QUIT 平滑终止 USR1 重新打开日志文件 USR2 平滑重载所有 worker 进程并重新载入配置和二进制模块 通过 ps aux|grep php-fpm 查看配置文件和 master 进程号12345678910111213141516[root@localhost ~]# ps aux|grep php-fpmroot 2832 0.0 0.2 148364 5432 ? Ss 08:39 0:00 php-fpm: master process (/home/etc/php-5.4.45/php-fpm.conf) nginx 2833 0.0 0.6 155920 12412 ? S 08:39 0:03 php-fpm: pool www nginx 2834 0.0 0.7 157256 14616 ? S 08:39 0:04 php-fpm: pool www nginx 2835 0.0 0.6 155920 12368 ? S 08:39 0:03 php-fpm: pool www nginx 2836 0.0 0.7 157192 14564 ? S 08:39 0:04 php-fpm: pool www nginx 2837 0.0 0.6 155920 12360 ? S 08:39 0:06 php-fpm: pool www nginx 2839 0.0 0.6 155748 12264 ? S 08:39 0:03 php-fpm: pool www nginx 2840 0.0 0.7 157232 14580 ? S 08:39 0:03 php-fpm: pool www nginx 2841 0.0 0.7 157256 14916 ? S 08:39 0:04 php-fpm: pool www nginx 2843 0.0 0.6 155920 12212 ? S 08:39 0:05 php-fpm: pool www nginx 2844 0.0 0.7 157256 14616 ? S 08:39 0:05 php-fpm: pool www nginx 3543 0.0 0.7 157260 14608 ? S 08:40 0:03 php-fpm: pool www nginx 5906 0.0 0.6 153852 12148 ? S 09:50 0:02 php-fpm: pool www nginx 11528 0.0 0.5 154640 11016 ? S 13:45 0:00 php-fpm: pool www root 13211 0.0 0.0 63444 800 pts/0 S+ 14:57 0:00 grep php-fpm 从上面可以看到，matster 进程 ID 是 2832，同时能看到，使用的配置文件是/home/etc/php-5.4.45/php-fpm.conf打开 php-fpm.conf，看以下配置12345[global]; Pid file; Note: the default prefix is /opt/soft/php-5.4.45/var; Default Value: nonepid = /opt/soft/php-5.4.45/php-fpm.pid php-fpm 重启、关闭注意，如果配置如上，则可以通过 php-fpm.pid 直接查看到进程ID123[root@localhost ~]# cat /opt/soft/php-5.4.45/php-fpm.pid2832[root@localhost ~]# kill -USR2 2832 pid 那一项如果是注释了的，如下：12345[global]; Pid file; Note: the default prefix is /opt/soft/php-5.4.45/var; Default Value: none;pid = /opt/soft/php-5.4.45/php-fpm.pid 这种配置不会生成 php-fpm.pid 文件，那么需要先通过【ps aux|grep php-fpm】命令查找到 php-fpm master 进程号，该命令在上面已经运行过了，查到 php-fpm 的 master 进程号为 2832 重启 php-fpm1kill -USR2 2832 关闭 php-fpm1kill -INT 2832","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"php","slug":"CentOS/php","permalink":"https://www.lovesofttech.com/categories/CentOS/php/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"}]},{"title":"php 内存分配占用超限，解决办法","slug":"lnmp/phpMemory","date":"2017-05-16T16:00:00.000Z","updated":"2020-09-01T02:53:13.060Z","comments":true,"path":"lnmp/phpMemory.html","link":"","permalink":"https://www.lovesofttech.com/lnmp/phpMemory.html","excerpt":"如题","text":"如题 #环境 CentOS 6 php 5.4 nginx 1.2 #报错信息Allowed memory size of 134217728 bytes exhausted (tried to allocate 47060581 bytes) #解决最直接的解决办法就是给 php 分配足够的内存，当然，增加内存分配也不能没有底线，还应该从程序性能、代码优化方面着手解决问题，这里只讲修改 php 配置增加内存分配来解决问题。php 默认内存限制是128M，这个限制是在 php.ini 中配置的，找到 memory_limit = 128M，改大一点，比如改为： memory_limit = 1024M #使配置生效重启 php-fpm，具体操作，请看另外一篇文章：php5.4 php-fpm 重启、关闭","categories":[{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/categories/php/"}],"tags":[{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"}]},{"title":"Json-lib 将 Json 转换成 Java Bean 时报警 ... does not exist. SKIPPED，解决办法","slug":"java/jsonToBeanWarn","date":"2017-05-15T16:00:00.000Z","updated":"2020-09-01T02:53:12.988Z","comments":true,"path":"java/jsonToBeanWarn.html","link":"","permalink":"https://www.lovesofttech.com/java/jsonToBeanWarn.html","excerpt":"如题","text":"如题 通过 net.sf.json.JSONObject.toBean 将Json 转换成 Java Bean 时报警，调用一次的警告信息还挺多。123456789101112131415161718192016:08:45,098 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.date' does not exist. SKIPPED.16:08:45,098 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.hours' does not exist. SKIPPED.16:08:45,098 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.seconds' does not exist. SKIPPED.16:08:45,098 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.month' does not exist. SKIPPED.16:08:45,098 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.timezoneOffset' has no write method. SKIPPED.16:08:45,099 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.year' does not exist. SKIPPED.16:08:45,099 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.minutes' does not exist. SKIPPED.16:08:45,099 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.time' does not exist. SKIPPED.16:08:45,099 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.class' has no write method. SKIPPED.16:08:45,099 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.day' has no write method. SKIPPED.16:08:45,115 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.date' does not exist. SKIPPED.16:08:45,115 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.hours' does not exist. SKIPPED.16:08:45,115 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.seconds' does not exist. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.month' does not exist. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.timezoneOffset' has no write method. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.year' does not exist. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.minutes' does not exist. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; WARN [pool-2-thread-1]: Property 'java.lang.String.time' does not exist. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.class' has no write method. SKIPPED.16:08:45,116 &lt;net.sf.ezmorph.bean.BeanMorpher&gt; INFO [pool-2-thread-1]: Property 'java.util.Date.day' has no write method. SKIPPED. Json-lib maven 依赖配置123456&lt;dependency&gt; &lt;groupId&gt;net.sf.json-lib&lt;/groupId&gt; &lt;artifactId&gt;json-lib&lt;/artifactId&gt; &lt;version&gt;2.4&lt;/version&gt; &lt;classifier&gt;jdk15&lt;/classifier&gt;&lt;/dependency&gt; Json-lib 官网：http://json-lib.sourceforge.net/Json-lib 是很老的工具了，最新的 2.4 版本还是2010年发布的，这里的classifier配置必须有，否则依赖异常。 java 代码我自己对该功能作了一次封装，之前的代码如下1234567/** * 将JSON转换成POJO,其中beanClz为POJO的Class */public static &lt;T&gt; T json2Object(String json, Class beanClz)&#123; return (T) JSONObject.toBean(JSONObject.fromObject(json), beanClz);&#125; 解决办法：在 JSONObject.toBean 之前添加 registerMorpher 方法，配置日期格式12345678/** * 将JSON转换成POJO,其中beanClz为POJO的Class */public static &lt;T&gt; T json2Object(String json, Class beanClz)&#123; JSONUtils.getMorpherRegistry().registerMorpher(new DateMorpher(new String[] &#123;\"yyyy-MM-dd HH:mm:ss\"&#125;)); return (T) JSONObject.toBean(JSONObject.fromObject(json), beanClz);&#125; 再查看运行日志，一下子清爽多了，之前满屏都是 …SKIPPED","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"}]},{"title":"给刚入职场同学的建议","slug":"job/adviseForNewcomer","date":"2017-05-11T16:00:00.000Z","updated":"2020-09-01T02:53:13.002Z","comments":true,"path":"job/adviseForNewcomer.html","link":"","permalink":"https://www.lovesofttech.com/job/adviseForNewcomer.html","excerpt":"如题","text":"如题 需要学习新技术来解决工作中的问题 这里提到的新技术，是对你来说，是新技术。 当预计到需要花很长时间时，就需要先跳过这个问题，如果不能跳过，请求团队成员帮助，或者换一种方式实现，否则，需要请示上级，或者说告之上级，让上级来决定下一步该如何做，一般来说，上级会根据项目进度和整个项目的计划，适当调整你的工作、或者让别的成员给予你帮助、或者做出别的安排–比如干脆让熟悉的人来做这个功能，给你安排别的任务等。 如果暂时跳过，则应该利用好业余时间来攻克技术难题或者学习新技术。 否则，你没有及时与上级沟通，时间花了，进度又落后了，那么，到了提交工作成果时，你无货可交，上级对你的初步印象只能是工作能力不足。 如果在你没有请示上级的情况下，花了时间去学习新技术导致进度落后，事后上级对进度落后原因进行跟踪了解，对你的印象可能会变成：沟通能力欠佳。 如果在这个过程中，进度落后了，你又没有加班加点的努力工作，那么上级对你的印象可能还会增加一条：工作不够努力、责任心欠佳。 如果这个过程中，你加班加点了，但是你一下班就把这事儿忘到了九霄云外，虽然加班但进度依然落后很多，上级也看到了你加班了，他（她）对你的印象可能是：学习能力不足。 所以，如果需要学习新技术，那么，一定要尽可能快的解决实际问题，先解决问题，然后等有时间了再去做进一步的扩展学习。 工作建议 利用好上班的工作时间（一般为 8 小时），在上班时间，不要做与工作无关的事情。 在理解相关代码与业务、完成工作任务之间需要掌握好度，不要因为学习相关代码和理解业务需求花太长时间而影响任务的进度，但是基本的了解是必须的。同时，还需要深入的了解，这个很重要，不过，时间上的安排需要自己掌握，初到一个公司，额外的付出肯定是需要的，只有肯多花时间才能更快的融入团队、才能更快的进入工作状态。 任务的进度，一定要保持在一个合理的范围，否则需要恰当的理由。 原则上，给出需求，你来实现，除非确实有特殊原因，否则上级一般是不关注过程的，除非上级比较闲。比较忙的上级，通常都只关注结果。 拿到需求，在动手之前，先要分析理解透彻，根据任务的不同，可能还需要做适当的设计、写文档、写测试用例、写单元测试，把疑问都搞清楚了，准备工作才算完成，然后再开始写代码，实现过程中如果遇到障碍，需要尽早沟通，如果不确定用哪种方案好，向上级反馈，指出供参考的方案（至少两种）的优劣，好让上级做出正确的决策。 进入一个新的环境，一定要先了解团队对于编码格式的要求，可能还会有别的要求，比如 sql 语句不允许写 like、不允许多表 inner join 之类。 一定要抽时间了解整个团队现有的工作成果，比如公共模块，很多通用功能在公共模块里可能都已经有了，不能自己造轮子。如果在公共模块里找不到你需要的功能，你又认为这应该是一个公共功能时，需要请示上级把该功能添加进去，如果上级忙，那么我认为直接添加进去也是可以的，这要根据团队的具体要求，有的团队的公共模块有专人维护，其它成员没有源代码修改权限。如果你因为上级忙而直接添加到公共模块了，至少要以恰当的方式让上级知道这事儿，可能是项目管理工具里的任务完成描述，可能是工作周报，也有可能是例会，还有可能是饭间时间。 请注意，上面一点，是“抽时间”而不是利用上班时间专门去做这件事，除非上级是这么安排的，即便有安排工作时间让你了解现有的工作成果，但我认为，一般来说这个时间是远远不够的。 工作上，不能仅仅满足完成任务，在完成任务之余，对技术也好、业务也好，如果能做到知其然且知其所以然，那么，我相信，你的成长将会很快，领导也会注意到这一点的，下次加薪、提拔，可能就有你的份儿了，一旦领导愿意对你委以重任，恭喜你，你已经获得领导认可了。 你承担团队的工作职责、业务职责越多，说明你对团队、对公司而言，越有价值，那么，通常，公司也愿意分享更多价值给你，最直接的，就是项目奖金、年底奖金、加薪，如果成为技术骨干、成为技术部带头人，还有可能获得公司期权、股份，等等。 所以，骚年，努力工作，利用好可利用的时间。付出才有收获，回报往往与努力程度成正比。 短期成长目标之所以说短期，是指，这个过程不能太长，要尽量缩短，如果你需要的工作时间（指工作日）太长，也许试用期都过不了就被 pass 掉了。在充分了解了公司业务和公司现有软件代码的基本上，至少可以达成以下目标： 需求分析的时候能更加准确，能够在需求阶段就识别风险、影响、难点。 因为相关的业务和代码都熟悉，能够快速的判断问题可能的原因并进行排查和处理。 由于有对全局业务的理解，方案设计的时候能够考虑周全，从而设计出合理的方案。 最后，请允许我引用一段毛主席的经典语录世界是你们的，也是我们的，但是归根结底是你们的。你们青年人朝气蓬勃，正在兴旺时期，好像早晨八九点钟的太阳。希望寄托在你们身上。","categories":[{"name":"求职","slug":"求职","permalink":"https://www.lovesofttech.com/categories/求职/"},{"name":"招聘","slug":"求职/招聘","permalink":"https://www.lovesofttech.com/categories/求职/招聘/"},{"name":"job","slug":"求职/招聘/job","permalink":"https://www.lovesofttech.com/categories/求职/招聘/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"求职","slug":"求职","permalink":"https://www.lovesofttech.com/tags/求职/"},{"name":"招聘","slug":"招聘","permalink":"https://www.lovesofttech.com/tags/招聘/"}]},{"title":"CentOS7 防火墙 firewalld","slug":"linux/CentOS7Port","date":"2017-05-11T16:00:00.000Z","updated":"2020-09-01T02:53:13.015Z","comments":true,"path":"linux/CentOS7Port.html","link":"","permalink":"https://www.lovesofttech.com/linux/CentOS7Port.html","excerpt":"在 centOS6，查看服务状态、启动服务、停止服务、重启服务，是用 service 服务名 status/start/stop/restart，到了 CentOS7，变成 systemctl status/start/stop/restart 服务名 了。 而防火墙，在 CentOS6 是 iptables，到了 CentOS7，则是：firewalld","text":"在 centOS6，查看服务状态、启动服务、停止服务、重启服务，是用 service 服务名 status/start/stop/restart，到了 CentOS7，变成 systemctl status/start/stop/restart 服务名 了。 而防火墙，在 CentOS6 是 iptables，到了 CentOS7，则是：firewalld 常用命令 启动服务：systemctl start firewalld 关闭服务：systemctl stop firewalld 重启服务：systemctl restart firewalld 显示服务状态：systemctl status firewalld 在开机时启用服务：systemctl enable firewalld 在开机时禁用服务：systemctl disable firewalld 查看服务是否开机启动：systemctl is-enabled firewalld firewalld-cmd 配置 firewalld 查看版本： firewall-cmd –version 查看帮助： firewall-cmd –help 显示状态： firewall-cmd –state 查看所有打开的端口： firewall-cmd –zone=public –list-ports 更新防火墙规则： firewall-cmd –reload 查看区域信息: firewall-cmd –get-active-zones 查看指定接口所属区域： firewall-cmd –get-zone-of-interface=eth0 拒绝所有包：firewall-cmd –panic-on 取消拒绝状态： firewall-cmd –panic-off 查看是否拒绝： firewall-cmd –query-panic 开启/删除端口以下以 MySQL 端口为例 开启端口1firewall-cmd --zone=public --add-port=3306/tcp --permanent –permanent永久生效，没有此参数重启后失效 重新载入firewall-cmd –reload 查看1firewall-cmd --zone=public --query-port=3306/tcp 删除一个端口1firewall-cmd --zone=public --remove-port=3306/tcp --permanent","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"port","slug":"CentOS/port","permalink":"https://www.lovesofttech.com/categories/CentOS/port/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"port","slug":"port","permalink":"https://www.lovesofttech.com/tags/port/"}]},{"title":"CentOS6 查看端口占用、杀死进程，防火墙端口开启/关闭","slug":"linux/centOS6Port","date":"2017-05-11T16:00:00.000Z","updated":"2020-09-01T02:53:13.017Z","comments":true,"path":"linux/centOS6Port.html","link":"","permalink":"https://www.lovesofttech.com/linux/centOS6Port.html","excerpt":"如题","text":"如题 在一台运行着 Nginx 的服务器上查看 80 端口占用情况123456[root@localhost ~]# lsof -i tcp:80COMMAND PID USER FD TYPE DEVICE SIZE NODE NAMEnginx 3266 root 30u IPv4 10391 TCP *:http (LISTEN)nginx 3267 nginx 30u IPv4 10391 TCP *:http (LISTEN)nginx 3270 nginx 30u IPv4 10391 TCP *:http (LISTEN)[root@localhost ~]# 如果提示：-bash: lsof: command not found安装即可1yum install lsof -y 杀死进程1kill -9 3266 # 3266 为上面查到的 PID 列出所有端口12345678910111213141516171819202122232425[root@localhost ~]# netstat -ntlpActive Internet connections (only servers)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 127.0.0.1:8005 0.0.0.0:* LISTEN 7212/java tcp 0 0 127.0.0.1:8006 0.0.0.0:* LISTEN 3313/java tcp 0 0 0.0.0.0:8009 0.0.0.0:* LISTEN 7212/java tcp 0 0 0.0.0.0:3690 0.0.0.0:* LISTEN 3420/svnserve tcp 0 0 0.0.0.0:3306 0.0.0.0:* LISTEN 3147/mysqld tcp 0 0 0.0.0.0:139 0.0.0.0:* LISTEN 3365/smbd tcp 0 0 0.0.0.0:11211 0.0.0.0:* LISTEN 3328/memcached tcp 0 0 0.0.0.0:11212 0.0.0.0:* LISTEN 3330/memcached tcp 0 0 0.0.0.0:111 0.0.0.0:* LISTEN 2534/portmap tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN 3266/nginx.conf tcp 0 0 0.0.0.0:8080 0.0.0.0:* LISTEN 3266/nginx.conf tcp 0 0 0.0.0.0:8081 0.0.0.0:* LISTEN 3266/nginx.conf tcp 0 0 0.0.0.0:8019 0.0.0.0:* LISTEN 3313/java tcp 0 0 0.0.0.0:21 0.0.0.0:* LISTEN 2888/vsftpd tcp 0 0 0.0.0.0:8086 0.0.0.0:* LISTEN 3266/nginx.conf tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 2858/sshd tcp 0 0 0.0.0.0:8088 0.0.0.0:* LISTEN 7212/java tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 3229/sendmail: acce tcp 0 0 0.0.0.0:8090 0.0.0.0:* LISTEN 3313/java tcp 0 0 0.0.0.0:443 0.0.0.0:* LISTEN 3266/nginx.conf tcp 0 0 0.0.0.0:445 0.0.0.0:* LISTEN 3365/smbd tcp 0 0 0.0.0.0:637 0.0.0.0:* LISTEN 2575/rpc.statd 防火墙端口开启/关闭，以下以操作以 80 端口为例开启端口方法一123/sbin/iptables -I INPUT -p tcp --dport 80 -j ACCEPT # 写入/etc/init.d/iptables save # 保存service iptables restart # 重启防火墙 方法二123vi /etc/sysconfig/iptables # 打开配置文件加入如下语句:-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPTservice iptables restart # 重启防火墙 关闭端口方法一123/sbin/iptables -I INPUT -p tcp --dport 80 -j DROP # 写入/etc/init.d/iptables save # 保存service iptables restart # 重启防火墙 方法二123vi /etc/sysconfig/iptables # 打开配置文件加入如下语句:-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j DROPservice iptables restart # 重启 查看防火墙端口状态1234567891011[root@centos6 ~]# service iptables statusTable: natChain PREROUTING (policy ACCEPT)num target prot opt source destination 1 REDIRECT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:80 redir ports 8080 Chain POSTROUTING (policy ACCEPT)num target prot opt source destination Chain OUTPUT (policy ACCEPT)num target prot opt source destination","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"},{"name":"port","slug":"CentOS/port","permalink":"https://www.lovesofttech.com/categories/CentOS/port/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"port","slug":"port","permalink":"https://www.lovesofttech.com/tags/port/"}]},{"title":"Spring cron 表达式","slug":"java/springTaskCron","date":"2017-05-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.996Z","comments":true,"path":"java/springTaskCron.html","link":"","permalink":"https://www.lovesofttech.com/java/springTaskCron.html","excerpt":"spring 版本： 4.0 以上","text":"spring 版本： 4.0 以上 Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义，Cron有如下两种语法格式： Seconds Minutes Hours DayofMonth Month DayofWeek Year Seconds Minutes Hours DayofMonth Month DayofWeek 按顺序依次为秒（0~59）分钟（0~59）小时（0~23）天（月）（0~31，但是你需要考虑你月的天数）月（0~11）天（星期）（1~7 1=SUN 或 SUN，MON，TUE，WED，THU，FRI，SAT）年份（1970－2099） 每一个域可出现的字符如下：Seconds: 可出现 “, - /“ 四个字符，有效范围为0-59的整数Minutes: 可出现 “, - /“ 四个字符，有效范围为0-59的整数Hours: 可出现 “, - /“ 四个字符，有效范围为0-23的整数DayofMonth:可出现 “, - / ? L W C” 八个字符，有效范围为0-31的整数Month: 可出现 “, - /“ 四个字符，有效范围为1-12的整数或JAN-DEcDayofWeek: 可出现 “, - / ? L C #” 八个字符，有效范围为1-7的整数或SUN-SAT两个范围。1表示星期天，2表示星期一， 依次类推Year: 可出现 “, - * /“ 四个字符，有效范围为1970-2099年 每一个域都使用数字，但还可以出现如下特殊字符，它们的含义是： *：表示匹配该域的任意值，假如在Minutes域使用 *, 即表示每分钟都会触发事件。 ?:只能用在 DayofMonth 和 DayofWeek 两个域。 它用来表示“没有指定值”。这对于需要指定一个或者两个域的值而不需要对其他域进行设置来说相当有用。 它也匹配域的任意值，但实际不会。因为 DayofMonth 和 DayofWeek 会相互影响。 -:表示范围，例如在Minutes域使用5-20，表示从5分到20分钟每分钟触发一次 /：例如, 如果 Minutes 域中放入’0/15’，它表示“每隔15分钟，从0开始”，如果在 Minutes 域中使用’3/20’，则表示“小时中每隔20分钟，从第3分钟开始”或者另外相同的形式就是’3,23,43’。 ,:表示列出枚举值。例如：在 Minutes 域使用5,20，则意味着在5和20分，分别触发一次。 L:表示最后，只能出现在 DayofWeek 和 DayofMonth 域，如果在 DayofWeek 域使用 5L，意味着在最后的一个星期四触发。 W: 表示有效工作日(周一到周五),只能出现在 DayofMonth 域，系统将在离指定日期的最近的有效工作日触发事件。例如：在 DayofMonth 使用 5W，如果 5 日是星期六，则将在最近的工作日：星期五，即4日触发。如果5日是星期天，则在6日(周一)触发；如果5日在星期一 到星期五中的一天，则就在5日触发。另外一点，W的最近寻找不会跨过月份 LW:这两个字符可以连用，表示在某个月最后一个工作日，即最后一个星期五。 #:用于确定每个月第几个星期几，只能出现在 DayofMonth 域。例如在 4#2，表示某月的第二个星期三。 举几个例子:0 0 2 1 ? 表示在每月的1日的凌晨2点调度任务0 15 10 ? * MON-FRI 表示周一到周五每天上午10：15执行作业0 15 10 ? 6L 2002-2006 表示2002-2006年的每个月的最后一个星期五上午10:15执行作 Example Cron Expressions ——Cron表达式的例子CronTrigger 例1 – 一个简单的每隔5分钟触发一次的表达式“0 0/5 ?”CronTrigger 例2 – 在每分钟的10秒后每隔5分钟触发一次的表达式(例如. 10:00:10 am, 10:05:10等.)。“10 0/5 ?”CronTrigger 例3 – 在每个周三和周五的10：30，11：30，12：30触发的表达式。“0 30 10-13 ? WED,FRI”CronTrigger 例4 – 在每个月的5号，20号的8点和10点之间每隔半个小时触发一次且不包括10点，只是8：30，9：00和9：30的表达式。“0 0/30 8-9 5,20 ?” 注意，对于单独触发器来说，有些日程需求可能过于复杂而不能用表达式表述，例如：9：00到10：00之间每隔5分钟触发一次，下午1：00到10点每隔20分钟触发一次。这个解决方案就是创建两个触发器，两个触发器都运行相同的任务。 其中每个元素可以是一个值(如6),一个连续区间(9-12),一个间隔时间(8-18/4)(/表示每隔4小时),一个列表(1,3,5),通配符。由于”月份中的日期”和”星期中的日期”这两个元素互斥的,必须要对其中一个设置? 0 0 10,14,16 ? 每天上午10点，下午2点，4点0 0/30 9-17 ? 朝九晚五工作时间内每半小时0 0 12 ? WED 表示每个星期三中午12点“0 0 12 ?” 每天中午12点触发“0 15 10 ? “ 每天上午10:15触发“0 15 10 ?” 每天上午10:15触发“0 15 10 ? “ 每天上午10:15触发“0 15 10 ? 2005” 2005年的每天上午10:15触发“0 14 ?” 在每天下午2点到下午2:59期间的每1分钟触发“0 0/5 14 ?” 在每天下午2点到下午2:55期间的每5分钟触发“0 0/5 14,18 ?” 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发“0 0-5 14 ?” 在每天下午2点到下午2:05期间的每1分钟触发“0 10,44 14 ? 3 WED” 每年三月的星期三的下午2:10和2:44触发“0 15 10 ? MON-FRI” 周一至周五的上午10:15触发“0 15 10 15 ?” 每月15日上午10:15触发“0 15 10 L ?” 每月最后一日的上午10:15触发“0 15 10 ? 6L” 每月的最后一个星期五上午10:15触发“0 15 10 ? 6L 2002-2005” 2002年至2005年的每月的最后一个星期五上午10:15触发“0 15 10 ? * 6#3” 每月的第三个星期五上午10:15触发 有些子表达式能包含一些范围或列表 例如：子表达式（天（星期））可以为 “MON-FRI”，“MON，WED，FRI”，“MON-WED,SAT” “*”字符代表所有可能的值 因此，“”在子表达式（月）里表示每个月的含义，“”在子表达式（天（星期））表示星期的每一天 “/”字符用来指定数值的增量例如：在子表达式（分钟）里的“0/15”表示从第0分钟开始，每15分钟在子表达式（分钟）里的“3/20”表示从第3分钟开始，每20分钟（它和“3，23，43”）的含义一样 “？”字符仅被用于天（月）和天（星期）两个子表达式，表示不指定值当2个子表达式其中之一被指定了值以后，为了避免冲突，需要将另一个子表达式的值设为“？” “L” 字符仅被用于天（月）和天（星期）两个子表达式，它是单词“last”的缩写但是它在两个子表达式里的含义是不同的。在天（月）子表达式中，“L”表示一个月的最后一天在天（星期）自表达式中，“L”表示一个星期的最后一天，也就是SAT 如果在“L”前有具体的内容，它就具有其他的含义了 例如：“6L”表示这个月的倒数第６天，“FRIL”表示这个月的最一个星期五注意：在使用“L”参数时，不要指定列表或范围，因为这会导致问题 字段 允许值 允许的特殊字符秒 0-59 , - /分 0-59 , - /小时 0-23 , - /日期 1-31 , - ? / L W C月份 1-12 或者 JAN-DEC , - /星期 1-7 或者 SUN-SAT , - ? / L C #年（可选） 留空, 1970-2099 , - * /","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]},{"title":"跑在 tomcat 容器下的 java 日志乱码，解决办法","slug":"java/tomcatEncode","date":"2017-05-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.999Z","comments":true,"path":"java/tomcatEncode.html","link":"","permalink":"https://www.lovesofttech.com/java/tomcatEncode.html","excerpt":"如题","text":"如题 idea 运行 tomcat 中文乱码修改 VM 选项，在后面添加一行：-Dfile.encoding=UTF-8，重启 idea 生效。 未打开项目时，Configure -&gt; Edit Custom VM Options … 已打开项目时，Help -&gt; Edit Custom VM Options … centOS 本方法同样适用于 tomcat 打印的控制台日志出现乱码的情况。 进入 tomcat bin 目录，找到 catalina.sh 的 JAVA_OPTS 配置项 123456[root@localhost /]# cd /home/java_env/tomcat8.5.13/bin[root@localhost bin]# vi catalina.sh# 按 esc 键，输入 :/JAVA_OPTS=\"$JAVA_OPTS $JSSE_OPTS，找到配置项 JAVA_OPTS=\"$JAVA_OPTS $JSSE_OPTS\"JAVA_OPTS=\"$JAVA_OPTS $JSSE_OPTS\"# 在后面加上 -Dfile.encoding=UTF8 -Dsun.jnu.encoding=UTF8，注意要用一个空格分开JAVA_OPTS=\"$JAVA_OPTS $JSSE_OPTS -Dfile.encoding=UTF8 -Dsun.jnu.encoding=UTF8\" 重启 tomcat 生效。 windows 下打开文件/tomcat/bin/catalina.batset “JAVA_OPTS= 的内容中添加选项-Dfile.encoding=GBK 后记，在另外一台 centos 服务器上，没有搞定现象乱码来自于 javamail 发邮件时抛的异常。下面的并不总是会有，多数情况下发邮件都是正常的，由于是乱码，不知道是哪儿出问题了。网上提到的用户名、密码、端口，这些都是正确的。而且在测试环境下发邮件也都是正常的。123456789101112131415161718192021222324252627282930313233343536TraceInfo:org.springframework.mail.MailAuthenticationException: Authentication failed; nested exception is javax.mail.AuthenticationFailedException: 535 Error: ÇëÊ¹ÓÃÊÚÈ¨ÂëµÇÂ¼¡£ÏêÇéÇë¿´: http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256 at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:424) at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:345) at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:340) at com.maile360.crm.common.JavaMailHelper.sendHtmlMail(JavaMailHelper.java:68) at crm.common.service.internal.ErrLogInnerService.emailErrInfo(ErrLogInnerService.java:103) at crm.common.service.internal.ErrLogInnerService.addErrLogToFile(ErrLogInnerService.java:78) at crm.common.service.internal.ErrLogInnerService.insertForScheduledTasks(ErrLogInnerService.java:46) at crm.common.service.internal.ErrLogInnerService.insertForScheduledTasks(ErrLogInnerService.java:36) at crm.task.order.internal.TBOrderSmsProcess.process(TBOrderSmsProcess.java:93) at crm.task.order.internal.TBOrderSmsProcess.run(TBOrderSmsProcess.java:56) at com.maile360.crm.task.boot.ScheduledTasks.tbOrderSmsProcess(ScheduledTasks.java:123) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:65) at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:81) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745)Caused by: javax.mail.AuthenticationFailedException: 535 Error: ÇëÊ¹ÓÃÊÚÈ¨ÂëµÇÂ¼¡£ÏêÇéÇë¿´: http://service.mail.qq.com/cgi-bin/help?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256 at com.sun.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:932) at com.sun.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:843) at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:748) at javax.mail.Service.connect(Service.java:366) at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:501) at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:421) ... 24 more 把异常写到文件里，下载文件，查看到的乱码是一致的。 尝试如下 在 catalina.sh 中加入： CATALINA_OPTS=-Dfile.encoding=”UTF-8” JAVA_OPTS=”$JAVA_OPTS -Djavax.servlet.request.encoding=UTF-8 -Dfile.encoding=UTF-8 -Duser.language=zh_CN -Dsun.jnu.encoding=UTF-8” 将 JAVA_OPTS 改为 JAVA_OPTS=”$JAVA_OPTS $JSSE_OPTS -Djavax.servlet.request.encoding=UTF-8 -Dfile.encoding=UTF-8 -Duser.language=zh_CN -Dsun.jnu.encoding=UTF-8” 将 server.xml 中的 Connector 加入 useBodyEncodingForURI 和 URIEncoding12345&lt;Connector port=\"18083\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" useBodyEncodingForURI=\"true\" URIEncoding=\"UTF-8\"/&gt; 结果以失败告终！暂时无解。 tomcat 相关文章 修改 tomcat 默认网站指向的目录 跑在 tomcat 容器下的 java 日志乱码，解决办法 tomcat 虚拟目录实践 Tomcat 占用内存以及 jvm 参数设置 在 CentOS 上以非 root 用户运行 tomcat，并配置成开机自启动 CentOS 7，tomcat 监控脚本 CentOS 项目发布 war 包到 tomcat web 服务器，配合 Jenkins 的自动化 shell 脚本 Tomcat 配置调优","categories":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/categories/java/"},{"name":"tomcat","slug":"java/tomcat","permalink":"https://www.lovesofttech.com/categories/java/tomcat/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"tomcat","slug":"tomcat","permalink":"https://www.lovesofttech.com/tags/tomcat/"}]},{"title":"解决 SecureCRT 超时自动断开","slug":"linux/secureCRTConnect","date":"2017-05-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.045Z","comments":true,"path":"linux/secureCRTConnect.html","link":"","permalink":"https://www.lovesofttech.com/linux/secureCRTConnect.html","excerpt":"如题","text":"如题 Options-&gt;Global Options-&gt;Default Session-&gt;Edit Default Settings-&gt;Terminal-&gt;Anti-idle-&gt;勾选 Send protocol NO-OP后面的设置时间默认的是60秒，只要小于自动断开连接的时限就可以了，我设置成了10秒。 设置自动连接时间间隔 将设置应用到所有Session","categories":[{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/categories/SecureCRT/"}],"tags":[{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/tags/SecureCRT/"}]},{"title":"windows7 + nginx + php + xdebug（搭配 PhpStorm 调试） + memcache","slug":"windows/winPHPXdebugMemcache","date":"2017-05-09T16:00:00.000Z","updated":"2020-09-01T02:53:13.120Z","comments":true,"path":"windows/winPHPXdebugMemcache.html","link":"","permalink":"https://www.lovesofttech.com/windows/winPHPXdebugMemcache.html","excerpt":"如题","text":"如题 前言之前介绍了跟本篇文章相关的、在 windows 下开发 php 的两个前提条件，即： 把 nginx 安装为 Windows 的一个服务 在 windows 下配置 nginx 支持 php 接下来介绍 php 开发中比较常用的另外两个元素的配置（姑且叫做元素吧）：xdebug 和 memcache。有的童鞋可能会问了，php 的开发怎么能少得了 MySql 呢？php 与 MySql 可是绝配呀！当然不能少了 MySql，它的安装和配置，网上一大把，请自行度娘。 xdebug php 的调试工具，笔者用这几款 IDE： netBeans、Zend Studio、eclipse、PhpStorm，同时测试了 xdebug 和 Zend Debugger，表现最好的是 PhpStorm + xdebug，这个不一定适用于你，这个结果取决于我当时的操作和相关软件的版本，不过，笔者强烈推荐使用 PhpStorm 作为开发 php 的 IDE，而用 xdebug 来调试。 至于 PhpStorm 是商业软件，普通老百姓不愿意花钱买、公司也不愿意掏钱买正版的问题，笔者的经验告诉我，只要你想用，一定是有办法的，包括我现在正在用的 IntelliJ IDEA、曾经用过的 PyCharm、还有 C# 插件 ReSharper，这些都是一个产品系列，同一产品系列，我试过的还有 WebStorm、DataGrip （这两款 IDE 在 IntelliJ IDEA、PhpStorm、PyCharm 中有集成），这些 IDE 都非常优秀，绝对值得一试，况且都是有办法免费用的哈，不过，如果你不差钱，还是希望你支持正版、支持 jetbrains.com。 php 的调试功能其实不是很强大，跟 C#/Java 的调试功能比起来，那就是小学生跟大学生的差别，不过，这跟语言的特点有很大关系，毕竟 php 人家是解释型的动态语言，它自有它自己的优势（php 是世界上最好的编程语言，没有之一 ^_^，嗯…，真的吗？）。 言归正传，php 在调试过程中经常中断或者说崩溃（表现就是调试断点还在，但变量值没有了），不过，有总比没有强，在排查问题的时候还是能帮上大忙，而且能比传统使用 print_r($obj) 或者 var_dump($obj) 的方式来”调试“来排查问题，效率高出 N 多倍。 不废话了，下面是干货。 hph xdebug 下载地址，注意，需要下载跟 php 对应的 xdebug 版本，比如 nts 版本 和 ts 版本，还有 php 的版本号，比如我电脑上用的是 php-5.4.45-nts-Win32-VC9-x86，我下载的是 php_xdebug-2.4.1-5.4-vc9-nts.dll。 把下载到的 php_xdebug-2.4.1-5.4-vc9-nts.dll 移到 php 下的 ext 目录，如我的是： C:/dev/dev.services/php-5.4.45-nts-Win32-VC9-x86/ext/ 修改 php.ini，添加 [xdebug] 配置节点1234567891011121314151617181920212223242526272829303132[xdebug];竟然要用32位版本才能正常加载;原来php就用的是32位版本，汗~~~;5.4.45只有32位可供下载zend_extension=&quot;C:/dev/dev.services/php-5.4.45-nts-Win32-VC9-x86/ext/php_xdebug-2.4.1-5.4-vc9-nts.dll&quot;;开启远程调试 xdebug.remote_enable=1xdebug.profiler_enable=1;xdebug.profiler_enable=offxdebug.profiler_enable_trigger=offxdebug.profiler_output_name=cachegrind.out.%t.%pxdebug.profiler_output_dir=&quot;tmp&quot;xdebug.show_local_vars=0xdebug.remote_connect_back=1;开启自动跟踪xdebug.auto_trace=1;开启异常跟踪xdebug.show_exception_trace=1;开启异常跟踪xdebug.remote_autostart=1;收集变量xdebug.collect_vars=1;收集参数xdebug.collect_params=1;trace输出路径xdebug.trace_output_dir=&quot;tmp/xdebug&quot;;以下三个分别是主机、端口、句柄xdebug.remote_host=&quot;localhost&quot;;注意，这里的端口不能跟 php-cgi 冲突，php-cgi 默认为 9000xdebug.remote_port=9001xdebug.remote_handler=&quot;dbgp&quot; memcachephp_memcache 扩展下载地址 windows 版本，5.3-5.6 linux 版本 在 windows 下将 memcache 配置成服务并设置为开机启动。 下载扩展 php_memcache.dll（注意要下载与 php 版本对应的文件）放到 php 的 ext 目录。 修改 php.ini，添加下面的配置内容1234567extension=php_memcache.dll[Memcache]memcache.allow_failover = 1memcache.max_failover_attempts=20memcache.chunk_size =8192memcache.default_port = 11211 在 [Session]节点下添加如下内容12session.save_handler = memcachesession.save_path = tcp://localhost:11211 将 session.save_handler = files 删除或注释掉 重新运行 php-cgi 停止 1taskkill /F /IM php-cgi.exe &gt; nul 启动运行在 windows 下配置 nginx 支持 php 中提到的批处理文件，或者简单粗暴的执行如下命令 123#请注意需要将路径替换成你自己的。cd C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86php-cgi.exe -b 127.0.0.1:9000 -c C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86\\php.ini 在现在的 php 站点中添加一个文件 phpInfo.php，文件内容： 123&lt;?php phpinfo();?&gt; 访问这个页面，检查配置是否生效。配置成功，将会看到下面的信息。 如果 php_memcache 扩展的版本与 php 不一致，在执行php-cgi.exe -b 127.0.0.1:9000 -c C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86\\php.ini，会得到类似下面的错误：1234PHP Startup: memcache: Unable to initialize moduleModule compiled with module API=20090626PHP compiled with module API=20100525These options need to match php-配置信息-xdebug php-配置信息-xdebug-zend php-配置信息-Memcache PhpStorm 配置 xdebug 端口PhpStorm 的默认值是 9000，要改为 9001，跟 php.ini 配置文件里配置的要一致。 PhpStorm 配置 xdebug 端口 xdebug 调试信息配置 debug-配置-编辑 debug-配置-添加站点 debug-配置-进入调试服务窗口-添加xdebug服务。注意：host 一定要跟实际在 Apache 中配置的一样 debug-配置-如果要停止调试，点这里","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"},{"name":"php","slug":"windows/nginx/php","permalink":"https://www.lovesofttech.com/categories/windows/nginx/php/"},{"name":"xdebug","slug":"windows/nginx/php/xdebug","permalink":"https://www.lovesofttech.com/categories/windows/nginx/php/xdebug/"},{"name":"memcache","slug":"windows/nginx/php/xdebug/memcache","permalink":"https://www.lovesofttech.com/categories/windows/nginx/php/xdebug/memcache/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"},{"name":"xdebug","slug":"xdebug","permalink":"https://www.lovesofttech.com/tags/xdebug/"},{"name":"memcache","slug":"memcache","permalink":"https://www.lovesofttech.com/tags/memcache/"}]},{"title":"在 Windows 将 Memcached 安装为服务","slug":"windows/winInstallMemcachedAsService","date":"2017-05-08T16:00:00.000Z","updated":"2020-09-01T02:53:13.116Z","comments":true,"path":"windows/winInstallMemcachedAsService.html","link":"","permalink":"https://www.lovesofttech.com/windows/winInstallMemcachedAsService.html","excerpt":"如题","text":"如题 安装以管理员身份运行。123C:\\Windows\\system32&gt;cd C:\\dev\\dev.services\\memcachedC:\\dev\\dev.services\\memcached&gt;memcached.exe -d installC:\\dev\\dev.services\\memcached&gt;memcached.exe -d start reference 卸载 以管理员身份运行 cmd 进入 memcached.exe 所在目录：cd C:\\dev\\dev.services\\memcached 停止 memcached: memcached.exe -d stop 卸载：memcached.exe -d uninstall 坑：windows 8, windows 10, memcached 通过 localhost 无法连接的问题。1234Notice: Memcache::connect(): Server localhost (tcp 11211, udp 0) failed with: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (10060) in ...Warning: Memcache::connect(): Can&apos;t connect to localhost:11211, A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (10060) in#中文Notice: Memcache::connect() [memcache.connect]: Server localhost (tcp 11211) failed with: 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。 (10060) windows 8, windows 10 默认启动了ipv6的系统，被ipv6干扰了，把localhost解析到ipv6了123456789101112C:\\Users\\AndyChen&gt;ping localhostPinging DESKTOP-LSMCK87 [::1] with 32 bytes of data:Reply from ::1: time&lt;1msReply from ::1: time&lt;1msReply from ::1: time&lt;1msReply from ::1: time&lt;1msPing statistics for ::1: Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),Approximate round trip times in milli-seconds: Minimum = 0ms, Maximum = 0ms, Average = 0ms 在 Windows 8/10 系统下，localhost 在系统内部会被解析成 ::1 （IPv6） 和 127.0.0.1（IPv4），其中 IPv6 这个地址优先级会更高一些。如果想让Windows 8/10 系统使用 IPv4 的前置策略代替 IPv6，请设置注册表，运行：regeditHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip6\\Parameters\\在这里编辑或者新建 DisabledComponents （32位DWORD）键，编辑键值为 0x20 （十六进制）。 重启系统生效。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"memcached","slug":"windows/memcached","permalink":"https://www.lovesofttech.com/categories/windows/memcached/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"memcached","slug":"memcached","permalink":"https://www.lovesofttech.com/tags/memcached/"}]},{"title":"把 nginx 安装为 Windows 的一个服务","slug":"windows/winInstallNginxAsService","date":"2017-05-08T16:00:00.000Z","updated":"2020-09-01T02:53:13.116Z","comments":true,"path":"windows/winInstallNginxAsService.html","link":"","permalink":"https://www.lovesofttech.com/windows/winInstallNginxAsService.html","excerpt":"更详细的说明，请参考文章末尾的参考链接，我这里只讲直接的操作步骤。","text":"更详细的说明，请参考文章末尾的参考链接，我这里只讲直接的操作步骤。 环境 windows 7 / win 8.1 / win 10 pro nginx v1.12.0 winsw v2.1.0 如果在 windows 7 下配置 nginx 为系统服务，启动报错（System error 1067 has occurred）的童鞋，请按我的配置文件配置。 步骤 下载最新版的 winsw，github 开源项目地址：传送门-&gt;猛戳进入，这是一个开源项目，求快的，直接进入下载页面：传送门-&gt;猛戳进入，笔者写该文时最新版为winsw-v2.1.0。 下载合适的 nginx 版本， 传送门-&gt;猛戳进入，笔者下载的是 nginx-1.12.0 stable version，解压到 C:\\nginx-1.12.0 将第一步下载到的 WinSW.NET4.exe copy 到 nginx 目录：C:\\nginx-1.12.0并改名为 winsw.exe 添加 winsw.xml，内容如下： 12345678910&lt;service&gt; &lt;id&gt;nginx&lt;/id&gt; &lt;name&gt;nginx&lt;/name&gt; &lt;description&gt;nginx&lt;/description&gt; &lt;logpath&gt;C:\\nginx-1.12.0\\logs&lt;/logpath&gt; &lt;logmode&gt;roll&lt;/logmode&gt; &lt;depend&gt;&lt;/depend&gt; &lt;executable&gt;c:\\nginx-1.12.0\\nginx.exe&lt;/executable&gt; &lt;stopexecutable&gt;C:\\nginx-1.12.0\\nginx.exe -s stop&lt;/stopexecutable&gt;&lt;/service&gt; 以管理员身份运行控制台（cmd），进入 nginx 主目录，运行 winsw install，即大功告成。 1234567C:\\nginx-1.12.0&gt;winsw install2017-05-09 19:17:49,419 INFO - Starting ServiceWrapper in the CLI mode2017-05-09 19:17:49,753 INFO - Completed. Exit code is 0C:\\nginx-1.12.0&gt;net start nginxThe nginx service is starting.The nginx service was started successfully. 在win 8.1 / win10 上安装按上面的方式，直接在运行窗口输入cmd 进入dos窗口执行命令，报错如下：12345678910111213C:\\nginx-1.12.0&gt;winsw install2017-06-17 11:40:10,216 INFO - Installing the service with id &apos;nginx&apos;2017-06-17 11:40:10,244 FATAL - WMI Operation failure: AccessDeniedWMI.WmiException: AccessDenied at WMI.WmiRoot.BaseHandler.CheckError(ManagementBaseObject result) at WMI.WmiRoot.ClassHandler.Invoke(Object proxy, MethodInfo method, Object[] args) at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args)WMI.WmiException: AccessDenied at WMI.WmiRoot.BaseHandler.CheckError(ManagementBaseObject result) at WMI.WmiRoot.ClassHandler.Invoke(Object proxy, MethodInfo method, Object[] args) at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args) 很明显是权限问题，到这个目录:C:\\Windows\\System32，找到cmd.exe，右键-&gt;以管理员身份运行，再次执行，成功。12C:\\nginx-1.12.0&gt;winsw.exe install2017-06-17 11:43:38,476 INFO - Installing the service with id &apos;nginx&apos; 需要注意的是，在 windows8.1 /win10 环境下，执行 net stop nginx 也会有权限问题。1234C:\\Users\\andy&gt;net stop nginxSystem error 5 has occurred.Access is denied. 也需要以管理员身份运行 cmd.exe，推荐将 cmd.exe 添加一个快捷键到桌面或开始页(Start)。1234567C:\\Windows\\system32&gt;net stop nginxThe nginx service is stopping.The nginx service was stopped successfully.C:\\Windows\\system32&gt;net start nginxThe nginx service is starting.The nginx service was started successfully. 注意，nginx默认配置端口为80，若本机80端口被其它程序占用，可能导致服务启动失败。 查看 windows 服务，将看到名为 nginx 的服务，其它操作如启动、重启、停止跟普通 windows 服务一样，在此不再赘述。 删除 nginx 服务执行 winsw uninstall 或者 sc delete nginx，然后关闭所有 windows service 控制面板。 备注 按照参考链接里的配置文件配置，启动时报错，原因是他用的 winsw 版本跟我的不一样。1234567891011&lt;service&gt; &lt;id&gt;nginx&lt;/id&gt; &lt;name&gt;nginx&lt;/name&gt; &lt;description&gt;nginx&lt;/description&gt; &lt;executable&gt;c:/nginx-1.12.0/nginx.exe&lt;/executable&gt; &lt;logpath&gt;C:/nginx-1.12.0/logs&lt;/logpath&gt; &lt;logmode&gt;roll&lt;/logmode&gt; &lt;depend&gt;&lt;/depend&gt; &lt;startargument&gt;-p C:/nginx-1.12.0&lt;/startargument&gt; &lt;stopargument&gt;-p C:/nginx-1.12.0 -s stop&lt;/stopargument&gt;&lt;/service&gt; 如上配置，启动时报错如下：123456789C:\\nginx-1.12.0&gt;net start nginxThe nginx service is starting.The nginx service could not be started.A system error has occurred.System error 1067 has occurred.The process terminated unexpectedly. 端口被占用报错信息1234C:\\nginx-1.12.0&gt;nginx -tnginx: the configuration file C:\\nginx-1.12.0/conf/nginx.conf syntax is oknginx: [emerg] bind() to 0.0.0.0:80 failed (10013: An attempt was made to access a socket in a way forbidden by its access permissions)nginx: configuration file C:\\nginx-1.12.0/conf/nginx.conf test failed 安装成服务后，nginx -s reload 不可用暂时还没有解决。替代方案是，net stop nginx，然后 net start nginx如果将服务停掉 net stop nginx，然后 nginx start则可以正常使用 nginx -s reload 另外，发现一个现象，就是 nginx 作为服务启动之后，有时候修改了配置，net stop nginx 再 net start nginx 并没有使配置生效，到任务管理器查看，发现后台有很多个 nginx 进程，逐一结束掉，然后再 net start nginx，或者进入 nginx 目录， start nginx 之后，配置才会生效。解决办法，呵呵，还未尝试，等空了再试，然后更新到这里。 todo ***12C:\\nginx-1.12.0&gt;nginx -s reloadnginx: [error] OpenEvent(&quot;Global\\ngx_reload_2076&quot;) failed (5: Access is denied) could not build server_names_hash当我在本地配置了第 13 个网站的时候，以管理员身份先停止 nginx，再启动 nginx，启动时报了如下错误：1234567891011121314C:\\nginx&gt;net stop nginxnginx 服务正在停止.nginx 服务已成功停止。C:\\nginx&gt;net start nginxnginx 服务正在启动 .nginx 服务无法启动。系统出错。发生系统错误 1067。进程意外终止。 于是检查配置：123C:\\nginx&gt;nginx -tnginx: [emerg] could not build server_names_hash, you should increase server_names_hash_bucket_size: 32nginx: configuration file C:\\nginx/conf/nginx.conf test failed 解决nginx 根目录下，conf/nginx.conf，在 server { 与 } 中间添加一行：server_names_hash_bucket_size 32;，如果再报这个错，则将 32 再增加到 32 的 N 倍，N 大于等于 2。123C:\\nginx&gt;nginx -tnginx: the configuration file C:\\nginx/conf/nginx.conf syntax is oknginx: configuration file C:\\nginx/conf/nginx.conf test is successful 参考链接 把 Nginx 创建为 Windows 的一个服务","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"在 windows7 下配置 nginx 支持 php","slug":"windows/winNginxSupportPhp","date":"2017-05-08T16:00:00.000Z","updated":"2020-09-01T02:53:13.118Z","comments":true,"path":"windows/winNginxSupportPhp.html","link":"","permalink":"https://www.lovesofttech.com/windows/winNginxSupportPhp.html","excerpt":"如题","text":"如题 如何在 windows 下安装和删除 nginx 服务，请看我的另外一篇文章：把 nginx 安装为 Windows 的一个服务 关于 nginx 与 Apache笔者所在的公司，开发环境用过 Apache 来支持 php（配置很容易），而线上用的是 nginx，为了与线上环境保持一致，笔者花了些时间把开发环境改成 nginx。在配置的过程中，遇到好多坑，特此记录下来，除了备忘、给新员工当教程，同时也希望能帮到需要的朋友。 在安装为系统服务之前，下面的命令，对于开发阶段，已经足够。123456nginx -t # 检查 nginx 的配置是否有效start nginx # 启动 nginxnginx -s stop # 快速关闭Nginx，可能不保存相关信息，并迅速终止web服务。（快速退出）nginx -s reload # 因改变了Nginx相关配置，需要重新加载配置而重载。（重新加载配置）nginx -s quit # 平稳关闭Nginx，保存相关信息，有安排的结束web服务。（平滑退出）nginx -s reopen # 重新打开日志文件。(重新加载日志) 注意，安装成服务之后，上面的命令不起作用了，如果修改了配置想要生效，只能 net stop nginx 然后 net start nginx。当然也可以 net stop nginx 之后（在 windows 服务管理窗口也可以操作），进入安装目录，重新用上面的命令。另外，如果上面的命令也没能使配置生效，那么，这时一般会有多于一个 nginx 进程，全部结束掉，然后再开启 nginx 就能解决。 配置 nginx 支持 phpphp 版本，我们需要下载 NTS 版本。nginx 下 php 是以 FastCGI 的方式运行，所以我们下载非线程安全也就是 nts 的 php 包。官方提供了两种版本，即线程安全和非线程安全。 TS：Thread Safe 线程安全， 执行时会进行线程（Thread）安全检查，以防止有新要求就启动新线程的CGI执行方式而耗尽系统资源。 NTS：Non Thread Safe 非线程安全， 在执行时不进行线程（Thread）安全检查。 php 所有版本下载地址，要下载 5.4 以前的童鞋有福音了，目前官网下载只能找到 5.5 以后的。 PHP 的两种执行方式：ISAPI 和 FastCGI CGI（通用网关接口/Common Gateway Interface）一般是可执行程序，例如 EXE 文件，和 WEB 服务器各自占据着不同的进程，而且一般一个 CGI 程序只能处理一个用户请求。这样，当用户请求数量非常多时，会大量占用系统的资源，如内存、CPU 时间等，造成性能低下。 FastCGI 是可伸缩架构的 CGI 开放扩展，其主要行为是将 CGI 解释器进程保持在内存中并因此获得较高的性能。传统的 CGI 解释器的反复加载是 CGI 性能低下的主要原因，如果 CGI 解释器保持在内存中并接受 FastCGI 进程管理器调度，则可以提供良好的性能、伸缩性等。nginx 下 php 是以 FastCGI 的方式运行，所以我们需要下载 Non Thread Safe 版本。 ISAPI（Internet Server Application Program Interface）是微软提供的一套面向 WEB 服务的 API 接口，它能实现 CGI 提供的全部功能，并在此基础上进行了扩展，如提供了过滤器应用程序接口。ISAPI 应用大多数以 DLL 动态库的形式使用，可以在被用户请求后执行，在处理完一个用户请求后不会马上消失，而是继续驻留在内存中等待处理别的用户输入。此外,ISAPI 的 DLL应用程序和 WEB 服务器处于同一个进程中，效率要显著高于 CGI。所以如果是以 ISAPI 来执行 PHP，建议选择 Thread Safe版本。 修改 php.ini 文件在 php 目录下，将 php.ini-production 改为 php.ini，按如下步骤修改。 搜索“extension_dir”，找到： e;xtension_dir = “ext” 先去前面的分号再改为 extension_dir = “C:\\dev\\dev.services\\php-5.4.45\\ext” 搜索“date.timezone”，找到：;date.timezone = 先去前面的分号再改为 date.timezone = Asia/Shanghai 搜索“enable_dl”，找到：enable_dl = Off 改为 enable_dl = On 搜索“cgi.force_redirect” ;cgi.force_redirect = 1 先去前面的分号再改为 cgi.force_redirect = 0 搜索“fastcgi.impersonate”，找到： ;fastcgi.impersonate = 1 去掉前面的分号 搜索“cgi.rfc2616_headers”，找到：;cgi.rfc2616_headers = 0 先去前面的分号再改为 cgi.rfc2616_headers = 1 搜索“php_mysql”，找到：”extension=php_mysql.dll和extension=php_mysqli.dll 去掉前面的“;”（支持MYSQL数据库） 配置 nginx 站点1234567891011121314151617181920212223242526272829server &#123; listen 80; server_name my.site.com; charset utf-8; access_log logs/my.site.com.access.log; error_log logs/my.site.com.error.log; root D:/dev.workspace/php/mysite/web/; index index.php; # 下面的配置需要根据你用的 php 框架灵活变更 # 我们的框架只有 index.php 一个 php 为后缀的文件，其它都是 html 为后缀的文件 # 我们的项目采用了 mvc 框架，配置路由来访问相关页面，url 没有文件后缀。 # 所以，必须这样配置，否则除了访问 index.php 之外，会报 404 错误。 location / &#123; if (!-e $request_filename) &#123; rewrite ^(.*)$ /index.php last; break; &#125; &#125; location ~ \\.php$ &#123; #root D:/dev.workspace/php/mysite/web/; #上面已经设置过，这里不用再设置，应该是二选一 fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; fastcgi_read_timeout 1d; #新增，xdebug调试时长 &#125;&#125; 注意这里面的 $document_root 变量，它对应的内容就是 root 参数值，如果我们没有定义 root 参数，在访问 php 页面的时候，会报错：“No input file specified.”。 配置完成后，需要重启 nginx123456# 如果安装成 windows 服务，用下面的命令net stop nginxnet start nginx# 否则，进入 nginx 目录，输入：nginx -s stopstart nginx 运行 php-cgi123# 请注意需要将路径替换成你自己的。cd C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86php-cgi.exe -b 127.0.0.1:9000 -c C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86\\php.ini 如果需要停止 php-cgi 按 ctrl + c 或者关闭窗口即可。注意，只有在开启 php-cgi 的情况下，nginx 才能正常解析 php 程序。当然，我们通常是需要一直保持 php-cgi 运行的，甚至是开机自动运行。那么，如果用这种方式运行，dos 窗口不能关，不太方便，怎么破？我们可以借助一个小工具 RunHiddenConsole（感谢开发者），让 php-cgi 在后台运行。 RunHiddenConsole CSDN 下载地址：RunHiddenConsole，或自行百度，挺多的。 RunHiddenConsole.exe 的作用是在执行完命令行脚本后可以自动关闭 cmd 窗口，而从脚本中开启的进程不被关闭。 下载后解压，我电脑上的目录是： C:\\dev\\dev.services\\RunHiddenConsole，在这个文件夹中添加一个批处理文件：startPhpCgi.bat 123@echo offset phpHome=C:\\dev\\dev.services\\php-5.4.45-nts-Win32-VC9-x86RunHiddenConsole.exe %phpHome%\\php-cgi.exe -b 127.0.0.1:9000 -c %phpHome%\\php.ini 创建 startPhpCgi.bat 的快捷方式，将快捷方式复制到启动目录（C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp），这样，电脑打开后会自动运行。 启动目录，还有用户目录：C:\\Users\\userName\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup, 其中 userName 为用户名。 如果要停止 php-cgi ，以管理员身份运行如下命令 1taskkill /F /IM php-cgi.exe &gt; nul 建议将 nginx 安装成 windows 服务并设置为自动启动，这样一来，开机之后就可以撸代码了，而不用担心 php-cgi 和 nginx 服务是否还没有启动。 把 nginx 安装为 Windows 的一个服务，照此操作，nginx 服务默认就是随操作系统自启动的。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"nginx","slug":"windows/nginx","permalink":"https://www.lovesofttech.com/categories/windows/nginx/"},{"name":"php","slug":"windows/nginx/php","permalink":"https://www.lovesofttech.com/categories/windows/nginx/php/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"php","slug":"php","permalink":"https://www.lovesofttech.com/tags/php/"},{"name":"nginx","slug":"nginx","permalink":"https://www.lovesofttech.com/tags/nginx/"}]},{"title":"删除 Windows 服务","slug":"windows/winDeleteService","date":"2017-05-07T16:00:00.000Z","updated":"2020-09-01T02:53:13.114Z","comments":true,"path":"windows/winDeleteService.html","link":"","permalink":"https://www.lovesofttech.com/windows/winDeleteService.html","excerpt":"如题","text":"如题 今天在删除 Windows 操作系统下的 nginx 服务时，遇到一个问题，就是删除之后，在 windows service 控制面板中一直能看到 nginx 服务。1234c:\\nginx-1.12.0&gt;winsw uninstall2017-05-08 11:38:55,635 INFO - Starting ServiceWrapper in the CLI mode2017-05-08 11:38:55,958 INFO - Uninstalling the service with id 'nginx'2017-05-08 11:38:55,968 INFO - Completed. Exit code is 0 运行上述命令之后，服务里还是有 nginx 只不过是 Disabled 状态。再次运行下面的命令，提示 The specified service has been marked for deletion，汗：1234c:\\nginx-1.12.0&gt;sc delete nginx[SC] DeleteService FAILED 1072:The specified service has been marked for deletion. 这时，如果再次安装 nginx 服务，会失败：1234567891011C:\\nginx-1.12.0&gt;winsw install2017-05-08 11:40:35,487 INFO - Starting ServiceWrapper in the CLI modeService with id 'nginx' already existsTo install the service, delete the existing one or change service Id in the configuration file2017-05-08 11:40:35,769 FATAL - Unhandled exceptionSystem.Exception: Installation failure: Service with id 'nginx' already exists at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args)System.Exception: Installation failure: Service with id 'nginx' already exists at winsw.WrapperService.Run(String[] _args, ServiceDescriptor descriptor) at winsw.WrapperService.Main(String[] args) 问题原因及解决办法 导致 windows service 不能部署，也不能被删除，使用 sc delete serviceName 命令也不奏效。是因为 windows service database 缓存的原因，简单粗暴的办法就是重启操作系统。 我遇到这个问题的原因是我的 windows service 控制面板没有完全关闭，之前打开的 nginx 属性窗口还开着，又点开了另外一个服务窗口，导致 nginx 服务信息一下存在于 windows 缓存当中，关闭 windows service 控制面板，问题解决。 通常，可以尝试下面的办法解决这种问题： 查找 windows service 的 PID：运行 queryex service_name，例如： 1234567891011C:\\nginx-1.12.0&gt;sc queryex nginxSERVICE_NAME: nginx TYPE : 10 WIN32_OWN_PROCESS STATE : 1 STOPPED WIN32_EXIT_CODE : 0 (0x0) SERVICE_EXIT_CODE : 0 (0x0) CHECKPOINT : 0x0 WAIT_HINT : 0x0 PID : 0 FLAGS : 如果 PID 项不为0，则杀掉进程：taskkill /PID service_pid /f 如果 PID 为0，则很有可能遇到了跟我一样的问题，需要关闭所有 windows service 控制面板。 如何在 windows 下安装和删除 nginx 服务，请看我的另外一篇文章：把 Nginx 安装为 Windows 的一个服务 没有打开 windows service 控制面板的情况下，删除服务的提示应该是 DeleteService SUCCESS12C:\\nginx-1.12.0&gt;sc delete nginx[SC] DeleteService SUCCESS","categories":[{"name":"Windows","slug":"Windows","permalink":"https://www.lovesofttech.com/categories/Windows/"},{"name":"服务","slug":"Windows/服务","permalink":"https://www.lovesofttech.com/categories/Windows/服务/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://www.lovesofttech.com/tags/Windows/"},{"name":"服务","slug":"服务","permalink":"https://www.lovesofttech.com/tags/服务/"}]},{"title":"windwos 查看端口占用、查找进程、杀死进程的命令","slug":"windows/windowsPort","date":"2017-05-07T16:00:00.000Z","updated":"2020-09-01T02:53:13.123Z","comments":true,"path":"windows/windowsPort.html","link":"","permalink":"https://www.lovesofttech.com/windows/windowsPort.html","excerpt":"如题","text":"如题 查看所有的端口占用情况1234567C:\\&gt;netstat -anoActive Connections Proto Local Address Foreign Address State PID TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 15372 TCP 0.0.0.0:135 0.0.0.0:0 LISTENING 1140# 还有好多，这里省略... 查看指定端口的占用情况这里以 80 端口为例12C:\\&gt;netstat -aon|findstr 80 TCP 0.0.0.0:80 0.0.0.0:0 LISTENING 11880 查看 PID 对应的进程1234567# 从上面运行 netstate 命令查询到 80 端口的进程 ID 为 11880，以下查看该进程 ID 对应的程序C:\\&gt;tasklist|findstr 11880nginx.exe 11880 Console 1 6,548 K# 以下查询进程 ID 2940 是哪个程序在运行C:\\&gt;tasklist|findstr 2940java.exe 2940 Console 1 674,380 K 杀死进程123456789101112131415# nginx 占用了 80 端口，结束该进程：C:\\&gt;taskkill /f /t /im nginx.exeSUCCESS: The process with PID 11880 (child process of PID 14416) has been terminated.SUCCESS: The process with PID 14416 (child process of PID 4896) has been terminated.# 杀死 java.exe 进程C:\\&gt;taskkill /f /t /im java.exeSUCCESS: The process with PID 3772 (child process of PID 37764) has been terminated.SUCCESS: The process with PID 41376 (child process of PID 18720) has been terminated.SUCCESS: The process with PID 33892 (child process of PID 29432) has been terminated.SUCCESS: The process with PID 28732 (child process of PID 20972) has been terminated.SUCCESS: The process with PID 37764 (child process of PID 34648) has been terminated.SUCCESS: The process with PID 18720 (child process of PID 34648) has been terminated.SUCCESS: The process with PID 29432 (child process of PID 34648) has been terminated.SUCCESS: The process with PID 20972 (child process of PID 34648) has been terminated. 应用 Idea 启动时报错 解决12345C:\\Users\\Andy&gt;netstat -aon|findstr 4440 TCP 192.168.1.188:4440 220.181.76.83:80 ESTABLISHED 7352C:\\Users\\Andy&gt;tasklist|findstr 7352YoudaoDict.exe 7352 Console 1 26,096 K 手动关闭有道词典，或者运行：taskkill /f /t /im YoudaoDict.exe12345C:\\&gt;taskkill /f /t /im YoudaoDict.exeSUCCESS: The process with PID 7352 (child process of PID 23172) has been terminated.SUCCESS: The process with PID 19064 (child process of PID 23172) has been terminated.SUCCESS: The process with PID 17396 (child process of PID 23172) has been terminated.SUCCESS: The process with PID 23172 (child process of PID 8848) has been terminated.","categories":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/categories/windows/"},{"name":"port","slug":"windows/port","permalink":"https://www.lovesofttech.com/categories/windows/port/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.lovesofttech.com/tags/windows/"},{"name":"port","slug":"port","permalink":"https://www.lovesofttech.com/tags/port/"}]},{"title":"CentOS 服务器上的 MySql 服务名既不是 mysql， 也不是 mysqld","slug":"database/mysqlServiceName","date":"2017-05-04T16:00:00.000Z","updated":"2020-09-01T02:53:12.925Z","comments":true,"path":"database/mysqlServiceName.html","link":"","permalink":"https://www.lovesofttech.com/database/mysqlServiceName.html","excerpt":"公司有一台比较老的 CentOS 服务器，安装了 MySql，但 MySql 的服务名既不是 mysql， 也不是 mysqld，怎么破？","text":"公司有一台比较老的 CentOS 服务器，安装了 MySql，但 MySql 的服务名既不是 mysql， 也不是 mysqld，怎么破？1234[root@localhost /]# service mysql statusmysql: 未被识别的服务[root@localhost /]# service mysqld statusmysqld: 未被识别的服务 查找 MySql 服务名的真面目…123[root@localhost /]# cd /etc/init.d/[root@localhost init.d]# ll my*-rwxr-xr-x 1 root root 5493 2014-10-05 mysql-5.5 真面目查出来了，原来服务名是 mysql-5.5","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/categories/MySQL/"},{"name":"CentOS","slug":"MySQL/CentOS","permalink":"https://www.lovesofttech.com/categories/MySQL/CentOS/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://www.lovesofttech.com/tags/MySQL/"},{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"SecureCRT 连接 CentOS，用 sz 与 rz 命令，下载、上传文件","slug":"linux/sendOrReceiveFileBySecureCRT","date":"2017-05-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.047Z","comments":true,"path":"linux/sendOrReceiveFileBySecureCRT.html","link":"","permalink":"https://www.lovesofttech.com/linux/sendOrReceiveFileBySecureCRT.html","excerpt":"如题","text":"如题 下载、上传命令简述 下载命令：sz，其中 s 意为 send（发送），由服务器端发送文件至客户端，即为下载。 上传命令：rz， 其中的 r 意为 receive（接收），服务器从客户端接收文件，即为上传。 不论是 send 还是 receive，动作都是在服务器上发起的，知道这一点才更容易理解和记住这两个命令。 CentOS6 默认不支持这两个命令，需要安装 lrzszCentOS 如果没有安装 lrzsz 这个包，就会报 rz、sz 命令找不到，安装即可解决。1yum install -y lrzsz 下面是在一台正好未安装 lrzsz 的服务器上安装的详细情况，只要网络畅通就 OK12345678910111213141516171819202122232425262728293031323334353637383940414243444546[root@localhost ~]# yum install lrzsz -yLoaded plugins: fastestmirrorSetting up Install ProcessDetermining fastest mirrors * base: mirrors.nwsuaf.edu.cn * extras: mirrors.nwsuaf.edu.cn * updates: mirrors.nwsuaf.edu.cnbase | 3.7 kB 00:00 base/primary_db | 4.7 MB 00:06 extras | 3.4 kB 00:00 extras/primary_db | 37 kB 00:00 updates | 3.4 kB 00:00 updates/primary_db | 828 kB 00:01 Resolving Dependencies--&gt; Running transaction check---&gt; Package lrzsz.x86_64 0:0.12.20-27.1.el6 will be installed--&gt; Finished Dependency ResolutionDependencies Resolved==================================================================================================================================== Package Arch Version Repository Size====================================================================================================================================Installing: lrzsz x86_64 0.12.20-27.1.el6 base 71 kTransaction Summary====================================================================================================================================Install 1 Package(s)Total download size: 71 kInstalled size: 159 kIs this ok [y/N]: yDownloading Packages:lrzsz-0.12.20-27.1.el6.x86_64.rpm | 71 kB 00:00 Running rpm_check_debugRunning Transaction TestTransaction Test SucceededRunning Transaction Installing : lrzsz-0.12.20-27.1.el6.x86_64 1/1 Verifying : lrzsz-0.12.20-27.1.el6.x86_64 1/1 Installed: lrzsz.x86_64 0:0.12.20-27.1.el6 Complete! sz用法 下载一个文件：sz filename 下载多个文件：sz filename1 filename2 下载dir目录下的所有文件，不包含dir下的文件夹：sz dir/* 下载文件存放位置在securtCRT中设置，位于： 英文版 options-&gt;session options-&gt;X/Y/Zmodem。 中文版 选项-&gt;会话选项-&gt;X/Y/Zmodem。 下载文件存放位置设置 rz用法输入rz回车后，会出现文件选择对话框，选择需要上传文件，一次可以指定多个文件，上传到服务器的路径为当前执行 rz 命令的目录，即为当前工作目录。","categories":[{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/categories/SecureCRT/"},{"name":"CentOS","slug":"SecureCRT/CentOS","permalink":"https://www.lovesofttech.com/categories/SecureCRT/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"},{"name":"SecureCRT","slug":"SecureCRT","permalink":"https://www.lovesofttech.com/tags/SecureCRT/"}]},{"title":"MyBatis 开发中，善用通过 MBG 生成的 *Example 类","slug":"mybatis/mybatisExample","date":"2017-05-04T16:00:00.000Z","updated":"2020-09-01T02:53:13.072Z","comments":true,"path":"mybatis/mybatisExample.html","link":"","permalink":"https://www.lovesofttech.com/mybatis/mybatisExample.html","excerpt":"如题","text":"如题 能用 *ByExample 解决的问题，决不要自造轮子。 通过 MBG 生成的 mapper 代码示例： 1234567891011121314151617181920212223public interface CrmOrderMapper &#123; long countByExample(CrmOrderExample example); int deleteByExample(CrmOrderExample example); int deleteByPrimaryKey(Long orderID); int insert(CrmOrder record); int insertSelective(CrmOrder record); List&lt;CrmOrder&gt; selectByExample(CrmOrderExample example); CrmOrder selectByPrimaryKey(Long orderID); int updateByExampleSelective(@Param(\"record\") CrmOrder record, @Param(\"example\") CrmOrderExample example); int updateByExample(@Param(\"record\") CrmOrder record, @Param(\"example\") CrmOrderExample example); int updateByPrimaryKeySelective(CrmOrder record); int updateByPrimaryKey(CrmOrder record);&#125; 调用示例，重点看代码里的备注。 123456789101112131415161718192021222324//下面通过 Criteria 组织多个 and 条件，相比直接 Example.or().and*().and*() 的方式，更加灵活，可以对查询条件进行判断，如果不满足条件则不添加某个 and 条件。TradeSmsFlowStepExample tradeSmsFlowStepExample = new TradeSmsFlowStepExample();TradeSmsFlowStepExample.Criteria tradeSmsFlowStepExampleCriteria = tradeSmsFlowStepExample.createCriteria();tradeSmsFlowStepExampleCriteria.andStepTypeEqualTo(searchStepType);tradeSmsFlowStepExampleCriteria.andTidEqualTo(shopOrderSmsInfoView.getTid());tradeSmsFlowStepExampleCriteria.andShopIDEqualTo(shopOrderSmsInfoView.getShopID());List&lt;TradeSmsFlowStep&gt; tradeSmsFlowSteps = tradeSmsFlowStepMapper.selectByExample(tradeSmsFlowStepExample);//用多and表达式 or().and*().and*()ShopConfigExample shopConfigExample = new ShopConfigExample();shopConfigExample.or().andIsNotifyBalanceLessEqualTo(YesOrNoEnum.yes.getCode()).andIsNotifyBeforeExpireEqualTo(YesOrNoEnum.yes.getCode());//生成的sql语句如下：select ID, shopID, mobile, email, isNotifyBalanceLess, balanceLessValue, isNotifyBeforeExpire, beforeDaysExpire, isNotifyUrgeEffect, isNotifyTrafficLess, trafficLessValue, isNotifyNewPromotion, created, modified from crmShopConfig WHERE ( isNotifyBalanceLess = ? and isNotifyBeforeExpire = ? )//通过多个Criteria变量实现or逻辑//如上，先定义一个 Criteria 变量：tradeSmsFlowStepExampleCriteria，设置好查询条件。如果还有or的逻辑，则再定义另外一个Criteria变量tradeSmsFlowStepExampleCriteriaOr，再设置查询条件，用下面的语法，即可实现or逻辑。tradeSmsFlowStepExample.or(tradeSmsFlowStepExampleCriteriaOr);//通过多个Example.or()语句实现or逻辑ShopConfigExample shopConfigExample = new ShopConfigExample();shopConfigExample.or().andIsNotifyBalanceLessEqualTo(YesOrNoEnum.yes.getCode());shopConfigExample.or().andIsNotifyBeforeExpireEqualTo(YesOrNoEnum.yes.getCode());//生成的sql语句如下：select ID, shopID, mobile, email, isNotifyBalanceLess, balanceLessValue, isNotifyBeforeExpire, beforeDaysExpire, isNotifyUrgeEffect, isNotifyTrafficLess, trafficLessValue, isNotifyNewPromotion, created, modified from crmShopConfig WHERE ( isNotifyBalanceLess = ? ) or( isNotifyBeforeExpire = ? )","categories":[{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/categories/MyBatis/"},{"name":"java","slug":"MyBatis/java","permalink":"https://www.lovesofttech.com/categories/MyBatis/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"MyBatis","slug":"MyBatis","permalink":"https://www.lovesofttech.com/tags/MyBatis/"}]},{"title":"hexo 使用经验汇总","slug":"general/hexoExperience","date":"2017-04-25T16:00:00.000Z","updated":"2020-09-01T02:53:12.949Z","comments":true,"path":"general/hexoExperience.html","link":"","permalink":"https://www.lovesofttech.com/general/hexoExperience.html","excerpt":"如题","text":"如题 把自己制作的HTML5网页传到自己的 hexo 博客上 在网上搜索了一下，有的说加 skip_render: [p//api/*.html,p//api/**]，将html文件加入skip_render，这样，它们就不会被hexo渲染了。 上面的方法我没试，不过，还有一种更加简单粗暴的方式（亲测好使），将html文件直接放到/theme/下你的主题目录下的source文件夹中，该文件夹中的文件hexo会直接复制到public中，不做任何渲染。 执行 hexo g 报错12345678910111213141516171819202122232425INFO Start processingFATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.htmlTemplate render error: (unknown path) [Line 11, Column 430] tag name expected at Object._prettifyError (C:\\workspace\\tech\\node_modules\\_nunjucks@3.1.3@nunjucks\\src\\lib.js:36:11) at Template.render (C:\\workspace\\tech\\node_modules\\_nunjucks@3.1.3@nunjucks\\src\\environment.js:524:21) at Environment.renderString (C:\\workspace\\tech\\node_modules\\_nunjucks@3.1.3@nunjucks\\src\\environment.js:362:17) at Promise (C:\\workspace\\tech\\node_modules\\_hexo@3.7.1@hexo\\lib\\extend\\tag.js:66:9) at Promise._execute (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\debuggability.js:303:9) at Promise._resolveFromExecutor (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:483:18) at new Promise (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:79:10) at Tag.render (C:\\workspace\\tech\\node_modules\\_hexo@3.7.1@hexo\\lib\\extend\\tag.js:64:10) at Object.tagFilter [as onRenderEnd] (C:\\workspace\\tech\\node_modules\\_hexo@3.7.1@hexo\\lib\\hexo\\post.js:230:16) at Promise.then.then.result (C:\\workspace\\tech\\node_modules\\_hexo@3.7.1@hexo\\lib\\hexo\\render.js:65:19) at tryCatcher (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:512:31) at Promise._settlePromise (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:569:18) at Promise._settlePromise0 (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:614:10) at Promise._settlePromises (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\promise.js:693:18) at Async._drainQueue (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\async.js:133:16) at Async._drainQueues (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\async.js:143:10) at Immediate.Async.drainQueues [as _onImmediate] (C:\\workspace\\tech\\node_modules\\_bluebird@3.5.1@bluebird\\js\\release\\async.js:17:14) at runCallback (timers.js:794:20) at tryOnImmediate (timers.js:752:5) at processImmediate [as _immediateCallback] (timers.js:729:5) 因为有一个文件里写了正则表达式，所以，解析的时候会出错。解决办法，就是，找到写正则表达式的地方，以源码方式引用即可。 解决左侧菜单图标不显示的问题现象我用的主题是 indigo。该主题使用的图标库是 fontawesome.com，添加新菜单时，发现按原来的方式添加，有的图标能显示，有的则不能显示。 一开始怀疑使用了收费图标，但是在网站的左侧是可以选择“Free”来搜索的，所以，排除这个问题。 F12 之后，查看该网站上图标用的 css，发现与 indigo 主题使用的不一样，所以，仔细研究了一下，原来，indigo 作者在 menu.ejs 文件中给菜单图标样式添加了前缀 icon icon-lg icon-，使用时，只要写后面不一样的部分，倒是比较方便。 但是，这样带来一个问题，就是只能使用样式以 icon icon-lg icon- 开头的图标 解决为了解决这个问题，需要将这个前缀去掉，修改文件： themes\\indigo\\layout\\_partial\\menu.ejs123&lt;i class=&quot;icon icon-lg icon-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;# 改为&lt;i class=&quot;&lt;%= i %&gt;&quot;&gt;&lt;/i&gt; 然后，在原来可以正常显示的图标的菜单定义前添加前缀 icon icon-lg icon-，使用新图标时，参照官网的图标样式，把样式写全即可。 例如，我现在需要在新菜单前添加一个 react 图标，首先，从官网查看到，react 图标样式如下：1&lt;i class=\"fab fa-react\" style=\"font-size: 48px;\"&gt;&lt;/i&gt; 那么，新菜单名，应该使用 fab fa-react，不过，还要在前面添加 icon 才能对齐，最终，新菜单定义如下：123icon fab fa-react: text: react stack url: /react/index 到了这一步，还没完成，还需要引用最新样式。 引用官方最新样式为了可以随意引用 fontawesome.com 图标库，需要添加 fontawesome 最新的样式，建议直接使用在线的样式即可，这样也不用考虑字体的问题。 引用方式，参照官网，官网是这样说的：Font Awesome’s Free CDN is the quickest and easiest way to get Font Awesome on your website. 那么，我们的 indigo 主题，在哪儿引用 fontawesome 最新的样式呢？ 修改文件 themes\\indigo\\layout\\_partial\\head.ejs，在倒数第二行前面，添加：1&lt;link rel=&quot;stylesheet&quot; href=&quot;https://use.fontawesome.com/releases/v5.5.0/css/all.css&quot; integrity=&quot;sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU&quot; crossorigin=&quot;anonymous&quot;&gt; 添加之后，该行为倒数第三行。 现在，你看到的左侧菜单，就是这样修改过后的最终效果。 菜单主页链接之前是这样设置的：123icon icon-home: text: 主页 url: https://www.lovesofttech.com 这样，在发布之后，是没有问题的，但是在本地hexo s之后点击【主页】会跳转到正式域名，同样的，gitee pages，并不是正式域名，比如我的是https://uncleandychen.gitee.io/，在点击【主页】的时候，也是不希望跳转至正式域名的。为了达到这个目的，改为以下代码即可：123icon icon-home: text: 主页 url: /","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"git 在工作中的基本用法","slug":"git/gitBasicUsage","date":"2017-04-18T14:18:12.000Z","updated":"2020-09-16T02:36:28.956Z","comments":true,"path":"git/gitBasicUsage.html","link":"","permalink":"https://www.lovesofttech.com/git/gitBasicUsage.html","excerpt":"如题","text":"如题 windows 版工具下载 点击进入 Git for Windows 官网 点击进入 TortoiseGit for Windows 官网 在windows下，为不同的项目设置不同的用户名，linux下类似 用 notepad++ 编辑项目根目录下.git/config，在最后添加： 123[user] name = yourName email = yourEmail 文件夹.git是隐藏文件夹，如果看不到，需要设置显示隐藏文件夹。 添加之后，在commit和push的时候就不会串了。 git基本操作如果是 windows 环境，在项目所在文件夹下，右键-&gt;Git Bash Here，在出来的命令窗口进行后续操作。 命令 解释 git clone url 从url克隆项目。 git clone -b branchName url 从url克隆项目的分支 git status 查看当前状态。 git add -A 或者 git add . 把改变的文件放到暂缓区。 git commit 提交到本地文件库。 git commit -m ‘备注信息` 提交的同时，添加备注，这样就不会出现 vim 编辑。 git pull 在 push 前，建议先再执行 git pull 命令获取最新，如果有冲突，会提示 merge。直接 pull 其实也没问题，如果有冲突，也会提示需要 merge，只是建议先 merge 再 push。 git push 将本地修改过并且 commit 过的文件推到 git 服务器。 git branch -v 查看本地项目分支情况 git branch -r 查看远端库的分支情况 git branch -a -a 参数可以查看远程和本地分支，远程分支会用红色表示出来（如果你开了颜色支持的话） git branch –set-upstream-to=origin/dev 建立本地 dev 分支到上游（远端）仓的链接，这样代码才能提交上去 git branch –unset-upstream master 取消对master的跟踪 git branch 从 tag 创建新分支 git branch -d dev 删除本地分支 dev git push origin –delete dev 删除远端分支 dev git tag v1.0 轻量级标签。实际上就是一个保存着对应提交对象的校验和信息的文件。要创建这样的标签，一个 -a，-s 或 -m 选项都不用，直接给出标签名字即可 git tag -a v1.1 -m ‘my version 1.1’ 含附注的标签。创建标签 v1.1，用 -a （译注：取 annotated 的首字母）指定标签名字，-m 选项则指定了对应的标签说明 git fetch upstream 获取主分支的最新修改到本地 git merge upstream/master 将upstream分支修改内容 merge 到本地个人分支 git checkout -b dev 从已有的分支 master 创建新的 dev 分支，并切换至新分支 dev，相当于两个命令：git branch dev; git checkout dev; git push –set-upstream origin v2.0.0 提交新分支 v2.0.0 至远端，注意：set-upstream 前面是两个中杠字符，在网页看，不明显 git push origin v2.0.0 提交新分支至远端，经测试，与上面的命令等效，具体有什么差别，还没深入研究。 git checkout master 切换回 master 分支 git checkout dev 切换至 dev 分支 git merge dev 将 dev 分支合并到当前分支 git push origin dev 提交 dev 分支到远程仓库 git push origin newBranch 把本地创建的 newBranch 分支提交到远程仓库 git push –tags 把本地 tag 推送到远程 git fetch origin tag 获取远程 tag git fetch origin master 从远程获取最新版本到本地，不会自动merge，需要注意的是: 和push不同, fetch会自动获取远程[新加入]的分支. git remote add [shortname] [url] 添加远程仓库 git remote show [shortname] 查看远程仓库信息 git remote rename [old-name] [new-name] 重命名远程仓库 git remote rm [shortname] 删除远程仓库（解除与远程仓库的关系） 创建 tagGit 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。lightweight ：轻量级标签就像是个不会变化的分支，实际上它就是个指向特定提交对象的引用。annotated：含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证。 一般我们都建议使用含附注型的标签，以便保留相关信息；当然，如果只是临时性加注标签，或者不需要旁注额外信息，用轻量级标签也没问题。 含附注的标签创建一个含附注类型的标签非常简单，用 -a （译注：取 annotated 的首字母）指定标签名字即可而 -m 选项则指定了对应的标签说明，Git 会将此说明一同保存在标签对象中。如果没有给出该选项，Git 会启动文本编辑软件供你输入标签说明。（git 提交注释都是-m ‘XXxx’） 1234$ git tag v1.0 -m &apos;2018-06-26 1.0 版本&apos; AndyChen@AndyChen MINGW64 /c/workspace/source (master)$ git tagv1.0 由 master 创建新分支 v2.1 并提交至远端12git checkout -b v2.1git push origin v2.1 将 master 的修改同步/合并（merge）到 v2.112345git checkout mastergit pullgit checkout v2.1git merge mastergit push -u origin v2.1 git clone git clone git_仓库_url 获取全部branch内容，整体下载时间较长 &amp; 所占磁盘空间较大 git clone -b git_分支名称 git_仓库_url 根上述 1. 结果一致 git clone -b git_分支名称 –single–branch git_仓库_url 获取指定分支的代码 git clone –depth 10 git_仓库_url 只会获取最近 xx（10条提交记录的）代码，默认是master分支， 如果想要指定分支，可以结合 -b –single–branch 使用！ referenceGit 基础 - 打标签Git 分支 - 分支的新建与合并Git 分支 - 分支开发工作流 git clone 指定分支如果不指定分支，默认是 master 分支，而如果库里没有 master 这个默认分支，则会得到下面的错误信息。123456remote: Counting objects: 13978, done.remote: Compressing objects: 100% (672/672), done.remote: Total 13978 (delta 1219), reused 1566 (delta 1079), pack-reused 12201Receiving objects: 100% (13978/13978), 9.23 MiB | 1.46 MiB/s, done.Resolving deltas: 100% (9473/9473), done.warning: remote HEAD refers to nonexistent ref, unable to checkout. 这个时候，就需要指定一个存在的分支来 clone。git clone -b 分支名 仓库地址git clone -b Router https://github.com/user/project.git 提交代码时，写备注 在 git commit 之后会出现一个 vim 编辑框，按 ESC 可以退出当前编辑，然后输入 wq 回车，表示保存并退出，输入 q! 表示不保存并退出。这个 vim 编辑窗口的操作命令跟 linux 下的 vim 是一样的。 撤销 git commit 但是未 git push 的修改如果不小心 commit 了一次不需要 commit 的修改，可以对其进行撤销。先使用 git log 查看 commit 日志123456789101112131415$ git logcommit f20c593a52b21c53b9c5ad831068697ebe1b4d21Author: AndyChen &lt;1614923608@qq.com&gt;Date: Thu May 18 22:11:47 2017 +0800 testcommit 7b39f469f3751bddbca59c3eae05c3288a469c7fAuthor: AndyChen &lt;1614923608@qq.com&gt;Date: Thu May 18 22:09:54 2017 +0800 Initial commitAndyChen@AndyChen-PC MINGW64 /d/dev.workspace/myself/mytest (master)$ 找到需要回退到的那次 commit 的 hash 值，上面的例子，hash 值为 7b39f469f3751bddbca59c3eae05c3288a469c7f记住，不是错误 commit 的那次的 hash 值（上面的例子，是：f20c593a52b21c53b9c5ad831068697ebe1b4d21），而是错误 commit 之前 commit 的 hash 值，也就是你希望回退到哪次，就选哪次的 hash 值 错误 commit 那次的 hash 值是：f20c593a52b21c53b9c5ad831068697ebe1b4d21 12345$ git reset --hard 7b39f469f3751bddbca59c3eae05c3288a469c7fHEAD is now at 7b39f46 Initial commitAndyChen@AndyChen-PC MINGW64 /d/dev.workspace/myself/mytest (master)$ 执行上面的命令之后，从提示也能看出来，已经回退到“Initial commit”那个版本了，之前日志为“test”的提交被删除，相应的代码修改将会丢失。 第三方 windows 客户端工具 用过 SVN 的童鞋，估计大多数都用过小乌龟客户端 TortoiseSVN，其实小乌龟客同样有 Git 的客户端：TortoiseGit。操作跟 TortoiseSVN 基本一样，用过 TortoiseSVN 的童鞋几乎不用学就会用了，什么？没用过？从下面的下载链接下载并安装之后，你在项目文件夹点右键试试… 猛戳进入下载页面 github 上 fork 一个分支之后，如何和主分支同步github fork 一个分支后，如果过一段时间就会和主分支的差异比较大。 这样提交 pr 的时候就会冲突，这个时候我们就需要和主分支同步代码下面，以项目 https://github.com/uncleAndyChen/springBootIntegrationUEditor 为例1234git remote add upstream git@github.com:uncleAndyChen/springBootIntegrationUEditor.gitgit fetch upstreamgit merge upstream/mastergit push TortoiseGit-git did not exit cleanly (exit code 1)如果服务器有更新没有同步到本地，同时本地又有新的修改没有 commit，则在 push 本地 commit 的时候会报这个错误。解决办法，把本地所有修改 commit，然后 pull, 再 push. git clone 报错： fatal: The remote end hung up unexpectedlyreference: https://segmentfault.com/q/1010000007502362?123git repack -a -f -d --window=250 --depth=250git clone git@github.com:username/repo 报错信息：12fatal: The remote end hung up unexpectedly... 进行全局设置12git config --global http.postBuffer 1048576000#git config --global core.compression 9 # 最大压缩，会让传输文件变小 配置git的最低速度和最低速度时间 单位 秒：12git config --global http.lowSpeedLimit 0git config --global http.lowSpeedTime 999999 错误信息变成：123456remote: Enumerating objects: 692, done.Receiving objects: 28% (199/692), 19.96 MiB | 47.00 KiB/serror: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054fatal: The remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failed 主要原因是安全设置的问题：执行 git config --global http.sslVerify &quot;false&quot; 不过，以上方法都试过了，还是报下面的错误123456Cloning into &apos;comparing_images&apos;...remote: Enumerating objects: 692, done.error: RPC failed; curl 18 transfer closed with outstanding read data remainingfatal: The remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failed 网上有人说继续加大 http.postBuffer 的值，于是我再加大10倍，git config --global http.postBuffer 1048576000，这下错误又变回之前发行过的错误信息了：123456Cloning into &apos;comparing_images&apos;...remote: Enumerating objects: 692, done.error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054fatal: The remote end hung up unexpectedlyfatal: early EOFfatal: index-pack failed git无法断点续传的下载办法：git fetch gitreference:https://blog.csdn.net/Sayai/article/details/81452496 创建一个空目录，进入该目录，执行 git init12git fetch git://github.com/userName/repoName # 用http也会断，只有用git才行。如果还是断了，重复执行该命令。不过，有网友反映：再次执行git fetch还是重新下载git checkout FETCH_HEAD # 成功提取也就ok了。 中间可能碰到权限问题，需要去git上增加一个ssh的keyPlease make sure you have the correct access rights and the repository exists.命令行执行以下语句123git config --global user.name 【你的登录用户】git config --global user.email 【你的注册邮箱】ssh-keygen -t rsa -C &quot;your@email.com&quot; # 等待提示，然后输入yes 按照提示去目标的.ssh文件夹下找到id_rsa.pub文件，用记事本打开，拷贝全部内容。打开https://github.com/，登陆你的账户，进入设置，然后是SSH and GPG keys。New SSH Key 把刚刚拷贝的内容贴进去，title随便起。回到命令行中执行：ssh -T git@github.com等待提示出现后，输入yes。然后可以继续刚刚命令行的步骤了。 后续步骤等到fetch完会出现以下字样12From git://….*branch HEAD -&gt; FETCH_HEAD 如：12345678remote: Enumerating objects: 53, done.remote: Counting objects: 100% (53/53), done.remote: Compressing objects: 100% (3/3), done.remote: Total 664 (delta 50), reused 50 (delta 50), pack-reused 611Receiving objects: 100% (664/664), 74.66 MiB | 13.00 KiB/s, done.Resolving deltas: 100% (360/360), done.From git://github.com/vzat/comparing_images * branch HEAD -&gt; FETCH_HEAD 意思是把最新的数据fetch到了本地的FETCH_HEAD分支上去了然后用git checkout FETCH_HEAD切换至该分支即可。 指定分支，并仅克隆最近一次提交，以减小下载文件大小，同时交款 https 换成 git 方式1git clone -b master git://github.com/UserName/repoName --depth 1 还是会遇到中断：123456remote: Enumerating objects: 129, done.remote: Counting objects: 100% (129/129), done.remote: Compressing objects: 100% (124/124), done.fatal: The remote end hung up unexpectedlyB | 6.00 KiB/sfatal: early EOFfatal: index-pack failed 当重复执行上述命令时，还是会从头开始下载，并未断点续传。 remove remote branch?reference:https://blog.csdn.net/worn_xiao/article/details/79233983同样的指令只是少了个空格 结果却不尽相同。本意是更新远程分支，结果却是删除原有的分支12$git push origin A:B$git push origin A :B 只克隆最近一次commit以减小下载文件大小git clone https:xxx.git –depth 1depth用于指定克隆深度，为1即表示只克隆最近一次commit. git config –add core.compression -1compression 是压缩的意思，从 clone 的终端输出就知道，服务器会压缩目标文件，然后传输到客户端，客户端再解压。取值为 [-1, 9]，-1 以 zlib 为默认压缩库，0 表示不进行压缩，1..9 是压缩速度与最终获得文件大小的不同程度的权衡，数字越大，压缩越慢，当然得到的文件会越小。 git submodulegit clone –recursive 用于循环克隆git子项目 git submodule -&gt; 子项目git submodule 使用小结 克隆一个包含子仓库的仓库目录，并不会clone下子仓库的文件，只是会克隆下.gitmodule描述文件，需要进一步克隆子仓库文件。12345// 初始化本地配置文件$ git submodule init// 检出父仓库列出的commit$ git submodule update 或者使用组合指令。1$ git submodule update --init --recursive git 强制 pull123git fetch --all git reset --hard origin/mastergit pull 推送本地分支到远程新分支上面去git push origin local_branch:remote_branch这个操作，local_branch必须为你本地存在的分支，remote_branch为远程分支，如果remote_branch不存在则会自动创建分支。 操作示例：12345$ git push origin master:v2.3.1Total 0 (delta 0), reused 0 (delta 0)remote: Powered By Gitee.comTo https://gitee.com/uncleAndyChen/ant-design-pro-official.git * [new branch] master -&gt; v2.3.1 HTTP 413 curl 22 The requested URL returned error: 413 Request Entity Too Large12345678910Enumerating objects: 107, done.Counting objects: 100% (107/107), done.Delta compression using up to 16 threadsCompressing objects: 100% (102/102), done.Writing objects: 100% (102/102), 670.98 MiB | 14.64 MiB/s, done.Total 102 (delta 11), reused 0 (delta 0)error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413 Request Entity Too Largefatal: the remote end hung up unexpectedlyfatal: the remote end hung up unexpectedlyEverything up-to-date 原因：仓库的大小超过了 gitee 的限制。 解决 当然是取消大文件的提交。 如果在本地已经有大文件 commit，哪怕你在 push 时遇到错误，然后把大文件删除，再 commit，接着 push，也还是会报这个错的。 因为还是会把之前添加大文件的 commit 提交，然后再提交删除大文件的提交。 可以通过命令把之前添加大文件的 commit 删除掉，不过这个过程有一点复杂，具体脚本这里就是写了，百度一下。这里建议重新拉取项目，把除了添加大文件之外的修改同步一下再提交（commit 后 push）。 Out of memory, malloc failed (tried to allocate 1895825408 bytes) failed to push some refs当内存使用接近100%时，git push 会报错，解决方案是关掉一些应用释放内存占用再操作。1234Delta compression using up to 8 threads. Out of memory, malloc failed (tried to allocate 1895825408 bytes) failed to push some refs to &apos;https://gitee.com/uncleAndyChen/tech.git&apos; The remote end hung up unexpectedly sha1 file &apos; &apos; write error: Broken pipe colliding group is in the working tree123warning: the following paths have collided (e.g. case-sensitive pathson a case-insensitive filesystem) and only one from the samecolliding group is in the working tree: 原因是服务器上有两个目录 wechat 和 weChat，而本地的是 weChat，而 windows 文件系统对大小写不敏感，所以会有这个问题，在这个问题解决之前，修改的文件提交会失败：123414:56 Commit failed with error 0 files committed, 1 file failed to commit: improve On branch master Your branch is up to date with &apos;origin/master&apos;. 解决：以管理员身份运行Windows PowerShell执行命令：Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux这个时候会提示是否重启，输入 “Y” 回车执行重启。重启完以后，继续以管理员身份运行Windows PowerShell，开始设置目录区分大小写，比如出现问题的那个目录是 C:\\workspace\\wechat那么执行命令：fsutil.exe file setCaseSensitiveInfo C:\\workspace\\wechat 只是需要注意的是，这样的解决办法只对当前目录有效，而对其子目录并无作用。 git 查看 config 配置信息config 配置指令1git config --system/global/local 具体配置项 配置项值 如：12git config --global user.name &quot;AndyChen&quot;git config --global user.email &quot;andy@lovesofttech.com&quot; config 配置的三个级别 system global（用户级别） local（当前仓库） 设置优先级，由低到高为：system -&gt; global -&gt; local，底层配置会覆盖顶层配置。 查看系统 config1git config --system --list 查看当前用户（global）配置1git config --global --list 查看当前仓库配置信息1git config --local --list 查看具体的设置项1git config --system/global/local 具体配置项 比起设置配置项，不要后面的值即可。如查看 global user.name 和 global user.email 的设置项：12345C:\\Users\\Andy&gt;git config --global user.nameAndyChenC:\\Users\\Andy&gt;git config --global user.emailandy@lovesofttech.com error: bad signature 0x00000000在用 vs code 获取最新代码时，悲剧的事情发生了—电脑蓝屏，重启电脑后，再次获取最新，提示：error: bad signature 0x00000000123C:\\workspace\\project&gt;git pullerror: bad signature 0x00000000fatal: index file corrupt 解决在 windows 下的话，推荐用 Git Bash，好处是可以执行 unix 下的指令。到项目根目录，执行：rm -f .git/index 和 git reset123456789101112andy@AndyChen MINGW64 /c/workspace/project (master)$ rm -f .git/indexandy@AndyChen MINGW64 /c/workspace/project (master)$ git resetUnstaged changes after reset:M config/config.tsM src/pages/home/data.source.jsandy@AndyChen MINGW64 /c/workspace/project (master)$ git pullAlready up to date.","categories":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://www.lovesofttech.com/tags/git/"}]},{"title":"Hexo + gitee 免费个人博客搭建","slug":"general/hexoBlog","date":"2017-04-14T00:43:12.000Z","updated":"2020-09-01T02:53:12.947Z","comments":true,"path":"general/hexoBlog.html","link":"","permalink":"https://www.lovesofttech.com/general/hexoBlog.html","excerpt":"本文介绍 hexo 博客的安装部署、常用命令、经验，以及可能会用上的参考链接，总之，参照本文，你就可以自己搭建免费的个人博客了。","text":"本文介绍 hexo 博客的安装部署、常用命令、经验，以及可能会用上的参考链接，总之，参照本文，你就可以自己搭建免费的个人博客了。 环境准备node点击进入 Node.js 下载页面，建议下载长期维护版本，可以少踩坑。 cnpm 淘宝 NPM 镜像官网 推荐直接用以个命令安装使用，安装之后，以后的命令就可以将需要用到 npm 的地方直接用 cnpm 代替了，下载依赖的速度会快很多。1npm install -g cnpm --registry=https://registry.npm.taobao.org 安装 hexo1cnpm i hexo-cli -g 参考官网 hexo 教程初始化一个 demo官方文档 hexo 常用命令进入项目所在目录 用 hexo 命令之前，需要先下载依赖 1cnpm i 编译 1hexo g 启动本地服务，用于查看博客效果 1hexo s 部署 1hexo d 清除缓存文件 (db.json) 和已生成的静态文件 (public) 1hexo clean 主题依赖及相关设置主题用到的依赖安装12345npm install hexo-renderer-less --savenpm install hexo-generator-feed --savenpm install hexo-generator-json-content --savenpm install hexo-helper-qrcode --savenpm install hexo-deployer-git --save 开启【标签】页对应左侧菜单【标签】，如果不设置，点击会提示无法找到页面1hexo new page tags 修改 根目录/source/tags/index.md 的元数据123layout: tagscomments: false--- 开启【分类】页对应左侧菜单【分类】，如果不设置，点击会提示无法找到页面1hexo new page categories 修改 根目录/source/categories/index.md 的元数据123layout: categoriescomments: false--- 设置 博客全局设置，参见根目录下的文件：_config.yml 主题设置，参见：themes/_config.yml 利用 gitee pages 制作静态网站只需要将静态文件上传至目录 thems/source/ 即可。该目录下的文件会被当成静态资源文件直接上传，上传之后可直接访问。 遇到的问题Local hexo not found123C:\\workspace\\elsafly&gt;hexo gERROR Local hexo not found in C:\\workspace\\elsaflyERROR Try running: &apos;npm install hexo --save&apos; 删除目录 node_modules，重新下载依赖1cnpm i 经验主题左则邮箱设置主题模板设置：themes/_config.yml -&gt; email 项，如果空着，即不设置的话，左则菜单【主页】这两个字前面会有一个换行，所以，建议设置一下。 评论系统开通之后，很久都没人评价，然后自己度娘了一下几篇博文，没有搜索到，自己又没有做推广，所以我后来都关闭了。 统计一开始没加任何统计，在 2019年3月6日，添加了不蒜子的访问统计。 推广可结合自己的域名来做博客推广。 hexo seo 设置参考根目录文件：_config.yml1234567title: your titlesubtitle: your subtitledescription: your descriptionkeywords: your keywords # 该项没有默认配置，官网的配置文档也没有提到，实际上，这是需要的，不设置的话，在站长工具里查出来的值是 undefined，不利于网站被各大搜索引擎收录。author: your nameemail: your emailurl: your site url 显示摘要在文章内容添加一行1&lt;!-- more --&gt; 在该行前面的即为摘要，后面的内容，需要点击【阅读更多】进入文章页面才能看到。 如果不添加 more，要视配置文件的 excerpt_render 项（在 themes 下，主题目录下的 _config.yml 文件中定义的） - 在 excerpt_render 为 false 的情况下，则会根据配置项 excerpt_length 的值，会在主页截取前面的字符当成摘要，这种效果不是很好，不建议。 - 在 excerpt_render 为 true 的情况下，会在主页直接渲染整篇文章，也不推荐。 我的做法是，excerpt_render 设置为 true，每篇文章都添加 &lt;!-- more --&gt;，如果实在觉得标题就已经够清楚，不用再写摘要，那就写成这样（大笑的表情）：12如题&lt;!-- more --&gt; 参考Hexo + gitee 免费个人博客搭建教程 参考链接 推荐一个主题的文档 主题安装 主题配置 Node.js 安装配置 安装教程 Node.js安装包及源码下载地址 Hexo 命令行 Hexo 命令行 接入评论系统，可能会用到的链接 畅言 畅言 index 在Hexo中使用畅言评论系统 在hexo中添加畅言热评文章边栏 支持数学公式在Hexo中渲染MathJax数学公式","categories":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.lovesofttech.com/tags/hexo/"}]},{"title":"团队在开发中应该遵循的一些规则，以及部分经验总结","slug":"job/teamExperience","date":"2017-04-14T00:29:16.000Z","updated":"2020-09-01T02:53:13.011Z","comments":true,"path":"job/teamExperience.html","link":"","permalink":"https://www.lovesofttech.com/job/teamExperience.html","excerpt":"如题","text":"如题 团队是否应该使用同样的 IDE，编码效率 作为一个资深的 windows 使用者和电脑重度使用者，最关键的，是每天跟代码打交道，每天需要看代码，修改代码，同时还需要聚精会神的思考，所以，我们不要让操作键盘和鼠标影响我们思考从而降低工作效率。 那么，盲打肯定是必须的，不光盲打，而且还要快。正确的姿势是什么呢？双手放到键盘上，目视屏幕，很多操作都是通过键盘的快捷键完成，比如 windows 的日常操作，切换软件界面用 Alt+Tab，打开我的电脑用 win+E，创建新文件夹用 Ctrl+Shift+n 等等。 coding，更是要讲究高效，麻利，那么，正确使用 IDE 的姿势，少不了快捷键的熟练使用，代码自动完成这些应该都不在话下才对。比如想要输入 【System.out.println(“ something “);】，只需要输入 sout 之后，再敲 Ctrl+空格，然后会出现选择框，默认第一项就是我们想要的，只需要再敲回车就 OK 了。IDEA 更快，输入 so 然后默认第一项就是，之后回车就 OK 了。 那么，如果你跟我一样，自己最常用的是 IDEA，而团队里有成员在用 sts，时不时的有下属有问题需要你去解决，你又不能硬性的要求别人都使用 IDEA，这样因为 IDE 的不同，会非常影响交流效果，因为你去那座位上看代码，会很不习惯，往往会影响你思考甚至可能会影响到你的信心。但是如果你也用跟他同样的 IDE 的话，就好办了，你可以用你自己的电脑跟他交流，这样，打造一个你自己熟悉的跟同事一样的 IDE 环境就显得非常重要了。 说得有点多哈，其实，在一个团队里，要求都用同样的 IDE 会带来很多方便和避免很多不必要的麻烦。但是这个要求，实施起来有点难度，对于使用怪了 Eclipse 的，要求用 IDEA，对他（她）来说是一件非常痛苦的事情，所以，在我的团队里，可以选自己熟悉的，不过，我会分享使用 IDEA 的心得，如果有人愿意尝试，我很乐意帮他（她）。 编码规范 确保将tab换成4个空格 确保将文件的编码格式全部设置成:UTF-8 用eclipse，请导入群文件：eclise_code_style.xml 用idea，请导入群文件：idea_settings_code_style.jar 请仔细阅读群文件：我购美_Java编码规范（PHP参考）.docx 数据库开发规范 不可以在sql里用聚合函数。 开发时尽量用简单sql语句查数据。对数据的处理逻辑一律放到应用端（目前是java程序）。 除非不得已，不要在sql语句里进行多表关联查询。如果非要这么做，请联系项目负责人。 有关枚举的使用 代码逻辑里有用到某一字段判断的，这个字段如果有多种可能的情况，典型的例子就是状态值，如果还没有枚举，需要维护一个对应的枚举。 跟这个字段相关的代码不允许使用数字，一律要用枚举。使用方式： 12345case XIA_DAN_GUAN_HUAI_DAO_FU:// 下单关怀（到付）if (logisticsDetailTraceView.action.equals(LogisticsActionEnum.SENT_CITY.name()))stepType = TradeSmsFlowStepEnum.tbPackageArriveTheBuyerCity.getCode(); 好处1：查询代码时，ctrl+鼠标点击，能看到枚举定义的地方，同时还可以看到整个枚举定义，对于理解代码和业务逻辑有很大的帮助。 好处2：增减枚举，修改枚举对应的值时，程序的业务逻辑代码不受影响。 其它有多种可能性的代码处理，也需要通过枚举来辅助。 查看表结构说明脚本推荐使用MySQLWorkbench，去oracle官方下载最新，免费、开源、强大、官方支持。12345678910111213SELECT column_name 字段名, column_type 字段类型, is_nullable 可否为空, column_default 默认值, column_comment 说明FROM information_schema.columnsWHEREtable_name = 'tableName'AND table_schema = 'SchemaName'-- and column_name = 'is_primary'; 好记性不如烂笔头-&gt;最佳实践建议：123456/*有疑问的，【todo ****】需要很快解决的，【todo ***】不影响系统运行，不影响逻辑，优化部分，【todo **】不确定是否需要优化但逻辑正确的，【todo *】*/ 在上线前，全项目搜索需要很快解决的代码。12345 //临时测试 测试完恢复 todo *** List&lt;TopTmcMessageQueueView&gt; NeedSyncTradeMessageQueueViews =messageQueueViews;// List&lt;TopTmcMessageQueueView&gt; NeedSyncTradeMessageQueueViews = messageQueueViews.stream().// filter(o-&gt;CommonService.topicsNeedSyncTrade.contains(o.getTopicEnum())).collect(Collectors.toList()); 上面的条件不再适用的时候，将todo 删除掉 1List&lt;TopTmcMessageQueueView&gt; NeedSyncTradeMessageQueueViews = messageQueueViews.stream().filter(o-&gt;CommonService.topicsNeedSyncTrade.contains(o.getTopicEnum())).collect(Collectors.toList()); 多模块，添加pom父模块。唯一的好处是可以统一管理依赖，其它相关项目不需要管理自己的依赖项。但是弊端也挺多的，如下： 会导致依赖混乱，如某一个依赖项只有其中一个模块要用到，结果依赖到这个父模块的子模块全部都要依赖它，某一天，这个依赖不再需要了，又不敢随便删除依赖，因为怕别的子模块需要，人手多了，随着时间推移，众多依赖项都不知道哪些是多余的。 让每个模块单独管理自己的依赖，在察觉到有多余依赖时，尽管删除，只要保证这个模块能编译通过即可。 方便重用某些公共模块，别的项目只要引入这个模块即可使用，而不用管理它的依赖项。","categories":[{"name":"经验","slug":"经验","permalink":"https://www.lovesofttech.com/categories/经验/"},{"name":"job","slug":"经验/job","permalink":"https://www.lovesofttech.com/categories/经验/job/"}],"tags":[{"name":"job","slug":"job","permalink":"https://www.lovesofttech.com/tags/job/"},{"name":"经验","slug":"经验","permalink":"https://www.lovesofttech.com/tags/经验/"}]},{"title":"CRM 项目，api 部分的开发规则，仅供参考","slug":"java/apiDevelopRule","date":"2017-04-13T00:57:16.000Z","updated":"2020-09-01T02:53:12.972Z","comments":true,"path":"java/apiDevelopRule.html","link":"","permalink":"https://www.lovesofttech.com/java/apiDevelopRule.html","excerpt":"还是16年年底，开发 CRM 时设计的 api 开发规范。 配置有一点繁琐。 配置好后，就可以专注于业务逻辑。 适合中型团队多人协作。 小团队不建议这么操作。 该规范大量用到反射、接口、多态、工厂模式，新人不太容易理解。 小团队可以没有接口和反射，但是可以有、并且建议合理使用多态和工厂模式。","text":"还是16年年底，开发 CRM 时设计的 api 开发规范。 配置有一点繁琐。 配置好后，就可以专注于业务逻辑。 适合中型团队多人协作。 小团队不建议这么操作。 该规范大量用到反射、接口、多态、工厂模式，新人不太容易理解。 小团队可以没有接口和反射，但是可以有、并且建议合理使用多态和工厂模式。 一. api开发总则 遵循单一职责原则，一个类只做一件（类）事。 数据库表与业务类是 1:N 的关系。 简单业务表建议只有一个业务类，复杂业务表，建议有多个业务类。 二. 类、接口命名规范根据业务规则，首字母大写，如，针对表:crmSysApp，业务命名：SysAppService，接口、实现类、抽象类，都是在这个命名的基础上进一步命名的，规则如下。 接口，在前面加 I，如：ISysAppService。 抽象类（非必须），在前面A，如：ASysAppService。 实现类，在后面加Impl，如：SysAppServiceImpl，需要加@Service注解。 处理类，在后面加Handler，如：SysAppServiceHandler。 处理类仅仅是业务实现类供消费方（client）进行消费的桥梁，不处理具体的业务。声明业务处理对象，必须也只能用接口来声明，如：ISysAppService sysAppService，且加上@Autowired注解。 12345678910public class ShopServiceHandler extends AapiHandler&#123; @Autowired IShopService shopService; public List&lt;ShopInfoView&gt; getShopInfoView(RequestParametersView requestParametersView) &#123; return shopService.getShopInfoView(requestParametersView); &#125;&#125; 三. 开发步骤 接口。在com.maile360.crm.service.facade.api下，创建interface，参考：ISysAppService；抽象类为非必须，如果有需要，在同样的目录下创建即可。参数，统一为：RequestParametersView requestParametersView。 实现类。在com.maile360.crm.service.impl.api下，创建实现类，参考：SysAppServiceImpl 处理类。在com.maile360.crm.service.facade.handler下，创建处理类，参考：SysAppServiceHandler。处理类须 extends AapiHandler。 处理类配置。 是一个 xml 文件：提供 api 调用时的 apiMethod 值, 作用是关联 apiMethod 与接口名。 在 restful 模块的资源文件夹下，handlers 子目录下，添加对应的配置 xml 文件，文件名保持与处理类同名（便于维护和查找），如：SysAppServiceHandler.xml。 在该文件配置具体的 apiMethod（调用参数）与对应接口名。apiMethod 命名规则，需要继续往下看，看完第四项再回过头来操作。 好处：维护人员方便查找对应处理方法，并且 api 会自动由配置对应到接口，而接口会有具体的实现，接口到实现类的调用，由 spring boot 启动时根据 serviceConfig.xml 配置自动装载。具体调用哪个方法，则用到了 java 的反射。 配置处理类列表。修改 restful 模块的资源文件夹下的配置文件：serviceConfig.xml，把上面的 handler 配置到列表中。spring boot 启动时根据 serviceConfig.xml 配置自动装载各个 handler。 这里的配置，除了让 spring boot 启动时自动装载 handler 类，还有一个重要的目的是让系统根据请求的 apiMethod 自动匹配到 handler 类，然后 handler 类根据其配置的方法名自动去调用业务接口。如： 1&lt;entry key=\"crm.shop_config.get.shop.config.view\" value=\"getShopConfigView\"/&gt; 配置处理类列表 key 命名规则： crm_ + 下面第四项针对 apiMethod 命名规则中的 Y + 下划线 + 版本号。 如：crm_sys_sms_template_1.0，其中 Y = sys_sms_template, 版本号 = 1.0 处理类的 key 只用下划线分隔。 四. Handler xml 配置文件规则总则：一个 Service 对应一个 Handler，一个 Handler 对应一个 xml 配置文件，存放到模块 restful 下，resources/handlers 目录，命名规则：XServiceHandler.xml，其中 X 为对应Service的名字，如：ShopConfigServiceHandler.xml 为了讲解 xml 配置文件的 key 和 value 命名规则，需要先了解与配置文件相关的接口和处理类。 所有处理类，即 Handler 都要继承的抽象类：AApiHandler。抽象类中定义了 Map 类型的变量 methods。123456789public abstract class AApiHandler&#123; public Map&lt;String, String&gt; methods; public void setMethods(Map&lt;String, String&gt; methods) &#123; this.methods = methods; &#125;&#125; 以 ShopConfigService 为例，先看实际例子。 接口定义 IShopConfigService.java 1234567891011package com.maile360.crm.service.facade.api;import crm.model.view.RequestParametersView;import crm.model.view.out.ShopConfigView;public interface IShopConfigService&#123; int addOrUpdate(RequestParametersView requestParametersView); ShopConfigView getShopConfigView(RequestParametersView requestParametersView);&#125; 处理类实例 ShopConfigServiceHandler.java 1234567891011121314151617181920212223package com.maile360.crm.service.facade.handler;import org.springframework.beans.factory.annotation.Autowired;import com.maile360.crm.service.facade.api.IShopConfigService;import com.maile360.crm.service.facade.base.AApiHandler;import crm.model.view.RequestParametersView;import crm.model.view.out.ShopConfigView;public class ShopConfigServiceHandler extends AApiHandler&#123; @Autowired IShopConfigService shopConfigService; public int addOrUpdate(RequestParametersView requestParametersView) &#123; return shopConfigService.addOrUpdate(requestParametersView); &#125; public ShopConfigView getShopConfigView(RequestParametersView requestParametersView) &#123; return shopConfigService.getShopConfigView(requestParametersView); &#125;&#125; Handler 配置: ShopConfigServiceHandler.xml。其中 property 属性中的 methods 就是来自抽象类 AApiHandler 的 Map 类型的变量，这里的配置，spring boot 自动装载时会自动初始化。 1234567891011121314&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;beans xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.springframework.org/schema/beans\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" default-autowire=\"byName\"&gt; &lt;bean name=\"shopConfigServiceHandler\" class=\"com.maile360.crm.service.facade.handler.ShopConfigServiceHandler\"&gt; &lt;property name=\"methods\"&gt; &lt;map&gt; &lt;entry key=\"crm.shop_config.add.or.update\" value=\"addOrUpdate\"/&gt; &lt;entry key=\"crm.shop_config.get.shop.config.view\" value=\"getShopConfigView\"/&gt; &lt;/map&gt; &lt;/property&gt; &lt;/bean&gt;&lt;/beans&gt; 该处理类配置，在 serviceConfig.xml 文件中的配置如下： 12345678910111213141516&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;beans xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.springframework.org/schema/beans\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\" default-autowire=\"byName\"&gt; &lt;import resource=\"classpath:handlers/*.xml\" /&gt; &lt;import resource=\"classpath:dbSource.xml\" /&gt; &lt;bean name=\"restApiService\" class=\"com.maile360.crm.service.impl.base.RestApiServiceImpl\"&gt; &lt;property name=\"handlers\"&gt; &lt;map&gt; &lt;entry key=\"crm_shop_config_1.0\" value-ref=\"shopConfigServiceHandler\" /&gt; &lt;/map&gt; &lt;/property&gt; &lt;/bean&gt;&lt;/beans&gt; 其实，就是初始化 com.maile360.crm.service.impl.base.RestApiServiceImpl 的 handlers（Map 类型） Handler 配置文件中 key 命名规则 分三部分，这里分别用大写的 X，Y，Z 来表示，用英文的点”.”来连接，得到：X.Y.Z，其中每一部分的英语字母全部用小写。 X 为前缀，固定:crm， 即 X = crm Y 为服务名，英语字母加下划线，可以参考业务对应的表名，如上面的例子，Y = shop_config Z 为具体的业务方法名标志，最好能通过命名看出意义来，中间以”.”隔开，不限制长度，如上面的例子，Z = get.shop.config.view 将上面的 X，Y，Z，用英文的点”.”来连接，就得到 apiMethod = crm.shop_config.get.shop.config.view Handler 配置文件中 value 配置这里的 value 跟接口名对应，建议将 key 中 Z 部分的”.”去掉，再将除第一个单词之外的单词首字母大写，到得接口名。如：get.shop.config.view –&gt; getShopConfigView 对 key 的处理，从而得到对应的 Handler，再进一步就可以找到对应 Handler 的接口了 。这里说接口，其实不恰当，其实是 Handler 普通方法调用了接口而已。不过，可以理解为接口，因为 Handler 仅仅是中转调用，自身并不处理业务逻辑。 crm.shop_config.get.shop.config.view 调用下面的方法之后，requestParametersView.apiServiceName = crm.shop_config 123456private void setRequestApiServiceName(RequestParametersView requestParametersView)&#123; int endIndex = StringHelper.getCharacterPosition(requestParametersView.apiMethod, \".\", 2);// getCharacterPosition -&gt; 获取字符串中第N次出现的字符位置 没有出现N次，则返回-1 AssertUtils.isTrue(endIndex &gt; 0, ExceptionCodeEnum.notExistsService); requestParametersView.apiServiceName = requestParametersView.apiMethod.substring(0, endIndex);&#125; 然后，通过 apiServiceName 和版本号，就可以找到匹配的处理类 Handler 了。接着上面的，应该得到：crm_shop_config_1.0 1234private String generateServerKey(String apiServiceName, VersionEnum version)&#123; return apiServiceName.replace(\".\", \"_\") + \"_\" + version.getVersion();&#125; 五. 返回数据类型 不建议返回类型为Map。在返回类型是确定的情况下，比如是一个int型的数字，或者某个确定的pojo以及某个pojo的列表，则直接返回这个确定的类型。 如果返回的数据直接是数据库表的记录，则返回对应的实体即可。 如果返回的数据需要加工整合，则在 com.maile360.crm.view.out 下，创建对应的view类，类名须以View结束。如：ShopInfoView，字段属性为private，需要setter和getter。 如果返回的数据除了基本类型，还包含实体，即定义在com.maile360.crm.dal.entity下的pojo（非Example类），而crm.view项目下又无法引用这部分pojo，那么，这种情况下，需要在com.maile360.crm.dal.view包下增加返回view的pojo。参考：OrderSmsOptionByTradeView、TopTmcMessageQueueView 如果需要返回多个结果集，定义一个pojo来组装，参考上面。 六. 入参 不建议使用Map当作mapper的参数类型。入参多于两个，建议添加pojo来接收。如果在程序内部，也建议通过pojo来组装查询参数。 如果入参只有一个，比如仅为id，则可以这样获取： 1234int id = (int)requestParametersView.objApiParas.get(\"id\");//如果客户端传的是string类型，则上面的转换会报错：java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer//改为：int id = Integer.parseInt(requestParametersView.objApiParas.get(\"id\").toString()); 添加pojo来接收参数时的规则：类名须以View结束。如：ShopSearchConditionView。放在 com.maile360.crm.view.in 包下，字段属性建议直接设置为public，这样，就只需要设置setter而不需要getter。入参接收需在自己的实现类定义和初始化： 1ShopSearchConditionView shopSearchConditionView = JSONHelper.json2Object(requestParametersView.apiParas, ShopSearchConditionView.class); 七. mapper扩展 在com.maile360.crm.dal.ext下，创建相应的mapper，扩展自己需要的业务方法。不要继续com.maile360.crm.dal.mapper下的类，会引起装配冲突。 com.maile360.crm.dal.mapper、com.maile360.crm.dal.entity，这两个包下的文件，禁止修改。这两个包下的文件是自动生成的，随时可能会被替换。 八. 数据库交互方式以下三种方式均可，对于比较简单的crud，推荐基于注解的方式（下面的前两种方式），对于比较复杂的sql，建议使用更加灵活的xml配置方式。 注解方式一，参考：com.maile360.crm.dal.ext.ShopMapperExt.getShopInfoViewByAnnotated 123456789101112131415161718192021222324252627282930313233343536373839404142public class ShopSqlProviderExt&#123; public String getShopInfoViewByAnnotated(ShopSearchConditionView shopSearchConditionView) &#123; SQL sql = new SQL(); sql.SELECT(\"a.appID, a.appName, a.appCode, sp.shopName, sp.sellerNickname, sp.secretKey\"); sql.FROM(\"crmSysApp a\"); sql.INNER_JOIN(\"crmShop sp on a.appID=sp.appID\"); if (shopSearchConditionView.shopName.length() &gt; 0) &#123; shopSearchConditionView.shopName = \"%\" + shopSearchConditionView.shopName + \"%\"; sql.WHERE(\"sp.shopName like #&#123;shopName,jdbcType=VARCHAR&#125;\"); &#125; if (shopSearchConditionView.sellerNickname.length() &gt; 0) &#123; sql.WHERE(\"sp.sellerNickname = #&#123;sellerNickname,jdbcType=VARCHAR&#125;\"); &#125; if (shopSearchConditionView.shopID &gt; 0) &#123; sql.WHERE(\"sp.shopID = #&#123;shopID,jdbcType=INTEGER&#125;\"); &#125; if (shopSearchConditionView.appID &gt; 0) &#123; sql.WHERE(\"sp.appID = #&#123;appID,jdbcType=INTEGER&#125;\"); &#125; if (shopSearchConditionView.secretKey.length() &gt; 0) &#123; sql.OR(); sql.WHERE(\"sp.secretKey = #&#123;secretKey,jdbcType=VARCHAR&#125;\"); &#125; sql.ORDER_BY(\"sp.shopID\"); return sql.toString(); &#125;&#125; 注解方式二，参考：com.maile360.crm.dal.ext.ShopOrderSmsConfigSqlProviderExt 123456789101112131415161718192021222324public class ShopOrderSmsConfigSqlProviderExt&#123; public String getShopOrderSmsConfigInfo(Map&lt;String, Integer&gt; map)//入参已不推荐使用map，上面已写 &#123; String sql = \"select sost.orderSTID, sost.iconNameClose, sost.iconNameOpen, sost.smsTypeName, soss.isSwitchOn \\n\" + \"from crmSysOrderSmsType sost \\n\" + \"left join crmShopOrderSmsConfig soss on sost.orderSTID = soss.orderSTID and soss.shopID = #&#123;shopID,jdbcType=INTEGER&#125;\\n\" + \"where sost.orderSTStatus = #&#123;orderSTStatus,jdbcType=INTEGER&#125;\\n\" + \"order by sost.orderByIndex;\"; return sql; &#125; public String getFilterConditionView(Map&lt;String, Integer&gt; map)//入参已不推荐使用map，上面已写 &#123; String sql = \"select fc.filterPID, fc.filterEIDs, fc.isAll, fc.filterValueOne, fc.filterValueTwo, fp.propertyName, fp.dataTypeID\\n\" + \"from crmFilterCondition fc\\n\" + \"inner join crmSysFilterProperty fp on fc.filterPID = fp.filterPID\\n\" + \"where fc.shopID = #&#123;shopID,jdbcType=INTEGER&#125; and fc.FCStatus = 1 \" + \"and fc.bizType = #&#123;bizType,jdbcType=INTEGER&#125; \" + \"and fc.bizTypeID = #&#123;bizTypeID,jdbcType=INTEGER&#125;;\\n\"; return sql; &#125;&#125; 方式三：基于xml配置方式（与注解方式等效），参考：com.maile360.crm.dal.ext.ShopMapperExt.getShopInfoView 12345678910111213141516171819202122232425262728&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"&gt;&lt;mapper namespace=\"com.maile360.crm.dal.ext.ShopMapperExt\"&gt; &lt;select id=\"getShopInfoView\" parameterType=\"com.maile360.crm.view.in.ShopSearchConditionView\" resultType=\"com.maile360.crm.view.out.ShopInfoView\"&gt; select a.appID, a.appName, a.appCode, sp.shopName, sp.sellerNickname, sp.secretKey from crmSysApp a inner join crmShop sp on a.appID=sp.appID where 1=1 &lt;if test=\"shopName != null and shopName != ''\"&gt; and sp.shopName like CONCAT(CONCAT('%', #&#123;shopName, jdbcType=VARCHAR&#125;),'%') &lt;/if&gt; &lt;if test=\"sellerNickname != null and sellerNickname != ''\"&gt; and sp.sellerNickname = #&#123;sellerNickname,jdbcType=VARCHAR&#125; &lt;/if&gt; &lt;if test=\"shopID &gt; 0\"&gt; and sp.shopID = #&#123;shopID,jdbcType=INTEGER&#125; &lt;/if&gt; &lt;if test=\"appID &gt; 0\"&gt; and sp.appID = #&#123;appID,jdbcType=INTEGER&#125; &lt;/if&gt; &lt;if test=\"sellerNickname != null and sellerNickname != ''\"&gt; or sp.secretKey = #&#123;secretKey,jdbcType=VARCHAR&#125; &lt;/if&gt; order by sp.shopID &lt;/select&gt;&lt;/mapper&gt; 九. 分页查询示例： 1234567891011public ResponsePagingView&lt;SysApp&gt; getAppInfoAll(RequestParametersView requestParametersView)&#123; PageHelper.startPage(requestParametersView.pagingInfo.pageNum, requestParametersView.pagingInfo.pageSize); List&lt;SysApp&gt; sysAppList = sysAppMapper.selectByExample(null); ResponsePagingView responsePagingView = new ResponsePagingView(); responsePagingView.resultList = sysAppList; responsePagingView.totalRecord = ((Page&lt;?&gt;) sysAppList).getTotal(); return responsePagingView;&#125; 十. 以下为php端调用参数示例 1234567891011121314151617181920public function getAppAll()&#123; Doo::loadClass('ApiClient'); $c = new ApiClient(); $request = array(); $request['apiParas'] = array( \"id\" =&gt; 3, \"pagingInfo\" =&gt; array( \"pageNum\" =&gt; 3, \"pageSize\" =&gt; 10 ) ); $request['apiMethod'] = \"crm.app.get.all\"; $request['secretKey'] = $this-&gt;secret_key; $request['shopID'] = $this-&gt;shop_id; $resp = $c-&gt;execute($request); print_r($resp);&#125; 错误列表 实现类需要添加注解：@Service，否则不能自动扫描并注入，启动应用时会报错：1Field specifyMobileSentBatchSchedulesService in com.maile360.crm.service.facade.handler.SpecifyMobileSentBatchSchedulesServiceHandler required a bean of type &apos;com.maile360.crm.service.facade.api.ISpecifyMobileSentBatchSchedulesService&apos; that could not be found.","categories":[{"name":"开发规范","slug":"开发规范","permalink":"https://www.lovesofttech.com/categories/开发规范/"},{"name":"team","slug":"开发规范/team","permalink":"https://www.lovesofttech.com/categories/开发规范/team/"},{"name":"java","slug":"开发规范/team/java","permalink":"https://www.lovesofttech.com/categories/开发规范/team/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"team","slug":"team","permalink":"https://www.lovesofttech.com/tags/team/"},{"name":"开发规范","slug":"开发规范","permalink":"https://www.lovesofttech.com/tags/开发规范/"}]},{"title":"CentOS 系统下设置自己安装的程序开机自动启动","slug":"linux/rcLocal","date":"2017-04-12T16:00:00.000Z","updated":"2020-09-01T02:53:13.043Z","comments":true,"path":"linux/rcLocal.html","link":"","permalink":"https://www.lovesofttech.com/linux/rcLocal.html","excerpt":"如题","text":"如题 1.把启动程序的命令添加到/etc/rc.d/rc.local文件中。2.把写好的启动脚本添加到目录/etc/rc.d/init.d/，然后使用命令chkconfig设置开机启动。chkconfig 功能说明：检查，设置系统的各种服务。语法：chkconfig [–add][–del][–list][系统服务] 或 chkconfig [–level &lt;等级代号&gt;][系统服务][on/off/reset]–add 添加服务–del 删除服务–list 查看各服务启动状态比如我们设置自启动mysql：1234567891011121314151617#将mysql启动脚本放入所有脚本运行目录/etc/rc.d/init.d中cp /lamp/mysql-5.0.41/support-files/mysql.server /etc/rc.d/init.d/mysqld#改变权限chown root.root /etc/rc.d/init.d/mysqld#所有用户都可以执行，单只有root可以修改chmod 755 /etc/rc.d/init.d/mysqld#将mysqld 放入linux启动管理体系中chkconfig --add mysqld#查看全部服务在各运行级状态chkconfig --list mysqld#只要运行级别3启动，其他都关闭chkconfig --levels 245 mysqld off 例如：我们把httpd的脚本写好后放进/etc/rc.d/init.d/目录，使用如下命令即设置好了开机启动。12chkconfig --add httpdchkconfig httpd on 3.把启动程序的命令添加到/etc/rc.d/rc.sysinit 文件中 （centOS 7 不适用?）脚本/etc/rc.d/rc.sysinit，完成系统服务程序启动，如系统环境变量设置、设置系统时钟、加载字体、检查加载文件系统、生成系统启动信息日志文件等比如我们设置自启动apache：1echo \"/usr/local/apache2/bin/apachectl start\" &gt;&gt; /etc/rc.d/rc.sysinit","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://www.lovesofttech.com/tags/CentOS/"}]},{"title":"关于 Spring Boot，以及学习 Spring Boot 的一个 Demo","slug":"java/aboutSpring","date":"2017-03-09T16:00:00.000Z","updated":"2020-09-01T02:53:12.971Z","comments":true,"path":"java/aboutSpring.html","link":"","permalink":"https://www.lovesofttech.com/java/aboutSpring.html","excerpt":"如题","text":"如题 先来一个 helo world，找点成就感这个建议直接官网查看Quick Start，这里就不啰嗦了。 官方demo，spring-petclinic 技术点 Actuator thymeleaf data-jpa webjars wro 我的修改版本，更贴近实际项目spring 官方例子-&gt;宠物医院，数据库改成 MySQL，数据库连接池改成 druid 创建 spring starter 初始化项目的三种方式通过 IntelliJ IDEA 创建如果你不是 Eclipse 的铁粉，强烈推荐使用 IntelliJ IDEA 作为 Java IDE，至于如何免费激活，请度娘，或者联系我，当然，不差钱的童鞋，建议支持正版。 切入正题，按照下面的步骤操作：File-&gt;New-Project…-&gt;Spring Initializer-&gt;选jdk版本，建议选1.8，其余保持默认-&gt;Next，根据实际情况修改，作为练习的话，保持默认即可-&gt;Next，如下图，可看到左边有菜单，选择其中某项之后，右边会有相关依赖项可选。 IDEA创建spring starter项目 通过 Eclipse 创建强烈推荐喜欢 Eclipse 的童鞋直接下载 Spring Tool Suite，这是一个基于 Eclipse 的 spring 定制 IDE。作为演示，直接用的 Spring Tool Suite。按照下面的步骤操作：File-&gt;New Spring Starter Poject-&gt;根据实际情况修改，作为练习的话，保持默认即可-&gt;Next STS创建spring starter项目 通过官网创建 官网创建spring starter项目，可通过搜索依赖项来添加依赖，建议点开 Switch to the full version 官网创建spring starter项目，点 Switch to the full version 之后，可直接点选 关于 spring boot 的一些“废话” 需要做 Web 页面，如果纠结该选哪个模板引擎，那么，我的建议是：如果你没有特别熟悉的，同时公司也没有特别要求的话，选 Thymeleaf。Spring 官方对 Thymeleaf 有很好的支持，而且一直在更新。这个模板引擎在美工或前端开发时，可以直接以 Html 的方式查看效果而不需要 Java 容器，即便代码包含后端数据元素也不影响，更多介绍，请度娘。Thymeleaf， 你值得拥有…^_^ Spring Boot 的诞生，是为了解决这样的问题：在之前的 web 项目开发中，spring 框架大量使用。但随着项目“体积”的增大，各个方面的配置文件充斥着整个项目，造成项目的开发、管理和维护成为一件头痛的事。 Spring Boot 充分利用了 JavaConfig 的配置模式以及“约定优于配置”的理念，能够极大的简化基于 Spring MVC 的 Web 应用和 REST 服务开发。Spring4 倡导微服务架构. 为了简化依赖图，Spring Boot 的功能是模块化的，通过导入 Spring Boot 所谓的“starter”模块，可以将许多的依赖添加到工程之中。为了更容易地管理依赖版本和使用默认配置，框架提供了一个 parent POM，工程可以继承它。 Spring Boot 内建了一些聚合模块，通常称为“启动者”。这些启动模块中是一些类库的已知的、良好的、具备互操作性的版本的组合，这些类库能够为应用程序提供某些方面的功能。Spring Boot 能够通过应用程序的配置对这些类库的进行设置，这也为整个开发周期中带来了约定胜于配置的便利性。 作为一个微服务框架，Spring Boot 的很大一部分价值在于它能够无缝地为基于 Maven 和 Gradle 的项目提供各种构建工具。通过使用 Spring Boot 插件，就能够利用该框架的能力，将项目打包为一个轻量级的、可运行的部署包，而除此之外几乎不需要进行任何额外的配置。 我们可以很快地重写 Spring Boot 的默认配置。默认情况下，应用的配置可以使用 Java 属性文件来进行定义，这个文件名为 application.properties 并且位于应用的 classpath 根目录下。不过，一种更好的方式是使用 YAML 配置，它提供了结构化以及嵌套的配置。在应用的运行时类路径之中包含 snakeyaml 之后，你的工程就可以在 application.yml 文件中直接定义配置了。 restful，微服务架构 在企业级基础设施领域，微服务是一种越来越流行的应用架构，因为它能够实现快速开发、更小的代码库、企业级集成以及模块化部署。 URI（统一资源定位符），每一个资源的地址或独一无二的识别符。 资源：网络上的一个实体，或者说是网络上的一个具体信息。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。你可以用一个URI来访问。 资源”是一种信息实体，它可以有多种外在表现形式。我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）。 REST（英文：Representational State Transfer，简称REST），满足这些约束条件和原则的应用程序或设计就是 RESTful。 RESTful：一种软件架构风格，设计风格而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。 使用各种技术栈实现 Restful api REST 并不是一种具体的技术，也不是一种具体的规范，REST 是一种内涵非常丰富的架构风格。 在 Fielding 的这篇名为 Architectural Styles and the Design of Network-based Software Architectures 的博士论文（中文版名为《架构风格与基于网络的软件架构设计》）中，提出了一整套基于网络的软件（即所谓的“分布式应用”）的设计方法，值得所有分布式应用的开发者仔细阅读、深入体会。 URIs, URLs, and URNs 首先，URI，是uniform resource identifier，统一资源标识符，用来唯一的标识一个资源。而 URL 是 uniform resource locator，统一资源定位器，它是一种具体的 URI，即 URL 可以用来标识一个资源，而且还指明了如何 locate 这个资源。而 URN，uniform resource name，统一资源命名，是通过名字来标识资源，比如 mailto:java-net@java.sun.com。也就是说，URI 是以一种抽象的，高层次概念定义统一资源标识，而 URL 和 URN 则是具体的资源标识的方式。URL 和 URN都是一种 URI。 Swagger 一款RESTFUL接口的文档在线自动生成+功能测试功能软件。 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。Swagger 让部署管理和使用功能强大的API从未如此简单。 端点 Spring Boot Actuator Spring Boot Reference Guide spring boot 监控 /health /env /beans /dump /info /metrics /mappings /trace spring boot admin https://github.com/codecentric/spring-boot-admin Json view安装这个插件之后，在浏览器中查看 Json 数据将更加方便，推荐使用。https://jsonview.com/https://addons.mozilla.org/en-US/firefox/addon/jsonview/","categories":[{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/categories/spring/"},{"name":"java","slug":"spring/java","permalink":"https://www.lovesofttech.com/categories/spring/java/"}],"tags":[{"name":"java","slug":"java","permalink":"https://www.lovesofttech.com/tags/java/"},{"name":"spring","slug":"spring","permalink":"https://www.lovesofttech.com/tags/spring/"}]}]}